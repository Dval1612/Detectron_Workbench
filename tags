!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	tests/test_registry.py	/^class A:$/;"	c
ACTIVATIONS_MODE	detectron2/utils/analysis.py	/^ACTIVATIONS_MODE = "activations"$/;"	v
ADE20K_SEM_SEG_CATEGORIES	detectron2/data/datasets/builtin_meta.py	/^ADE20K_SEM_SEG_CATEGORIES = [$/;"	v
ALL	projects/DensePose/densepose/data/video/frame_selector.py	/^    ALL      = "all"$/;"	v	class:FrameSelectionStrategy
AMPTrainer	detectron2/engine/train_loop.py	/^class AMPTrainer(SimpleTrainer):$/;"	c
ANCHOR_GENERATOR_REGISTRY	detectron2/modeling/anchor_generator.py	/^ANCHOR_GENERATOR_REGISTRY = Registry("ANCHOR_GENERATOR")$/;"	v
ASPP	detectron2/layers/aspp.py	/^class ASPP(nn.Module):$/;"	c
ASPP	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^class ASPP(nn.Module):$/;"	c
ASPPConv	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^class ASPPConv(nn.Sequential):$/;"	c
ASPPPooling	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^class ASPPPooling(nn.Sequential):$/;"	c
Action	projects/DensePose/apply_net.py	/^class Action:$/;"	c
Action	projects/DensePose/query_db.py	/^class Action:$/;"	c
AdamW	configs/common/optim.py	/^AdamW = L(torch.optim.AdamW)($/;"	v
Albumentations	detectron2/data/transforms/augmentation_impl.py	/^class Albumentations(Augmentation):$/;"	c
AlbumentationsTransform	detectron2/data/transforms/transform.py	/^class AlbumentationsTransform(Transform):$/;"	c
AllEntrySelector	projects/DensePose/densepose/utils/dbhelper.py	/^class AllEntrySelector(EntrySelector):$/;"	c
AnnotationsAccumulator	projects/DensePose/densepose/modeling/losses/utils.py	/^class AnnotationsAccumulator(ABC):$/;"	c
AnyNet	detectron2/modeling/backbone/regnet.py	/^class AnyNet(Backbone):$/;"	c
AnyStage	detectron2/modeling/backbone/regnet.py	/^class AnyStage(nn.Module):$/;"	c
AspectRatioGroupedDataset	detectron2/data/common.py	/^class AspectRatioGroupedDataset(data.IterableDataset):$/;"	c
AsyncPredictor	demo/predictor.py	/^class AsyncPredictor:$/;"	c
Attention	detectron2/modeling/backbone/vit.py	/^class Attention(nn.Module):$/;"	c
AugInput	detectron2/data/transforms/augmentation.py	/^class AugInput:$/;"	c
Augmentation	detectron2/data/transforms/augmentation.py	/^class Augmentation:$/;"	c
AugmentationList	detectron2/data/transforms/augmentation.py	/^class AugmentationList(Augmentation):$/;"	c
AutogradProfiler	detectron2/engine/hooks.py	/^class AutogradProfiler(TorchProfiler):$/;"	c
B	tests/test_registry.py	/^    class B:$/;"	c	class:A
BACKBONE_REGISTRY	detectron2/modeling/backbone/build.py	/^BACKBONE_REGISTRY = Registry("BACKBONE")$/;"	v
BASE_DATASETS	projects/DensePose/densepose/data/datasets/coco.py	/^BASE_DATASETS = [$/;"	v
BATCH_COUNT	projects/DensePose/densepose/data/combined_loader.py	/^    BATCH_COUNT = 100$/;"	v	class:CombinedDataLoader
BBoxIOUTracker	detectron2/tracking/bbox_iou_tracker.py	/^class BBoxIOUTracker(BaseTracker):$/;"	c
BN_MOMENTUM	projects/DensePose/densepose/modeling/hrnet.py	/^BN_MOMENTUM = 0.1$/;"	v
BYTES_PER_FLOAT	detectron2/layers/mask_ops.py	/^BYTES_PER_FLOAT = 4$/;"	v
Backbone	detectron2/modeling/backbone/backbone.py	/^class Backbone(nn.Module, metaclass=ABCMeta):$/;"	c
BaseConverter	projects/DensePose/densepose/converters/base.py	/^class BaseConverter:$/;"	c
BaseHungarianTracker	detectron2/tracking/hungarian_tracker.py	/^class BaseHungarianTracker(BaseTracker):$/;"	c
BaseKeypointRCNNHead	detectron2/modeling/roi_heads/keypoint_head.py	/^class BaseKeypointRCNNHead(nn.Module):$/;"	c
BaseMaskRCNNHead	detectron2/modeling/roi_heads/mask_head.py	/^class BaseMaskRCNNHead(nn.Module):$/;"	c
BaseTracker	detectron2/tracking/base_tracker.py	/^class BaseTracker:$/;"	c
BasicBlock	detectron2/modeling/backbone/resnet.py	/^class BasicBlock(CNNBlockBase):$/;"	c
BasicBlock	projects/DensePose/densepose/modeling/hrnet.py	/^class BasicBlock(nn.Module):$/;"	c
BasicLayer	detectron2/modeling/backbone/swin.py	/^class BasicLayer(nn.Module):$/;"	c
BasicStem	detectron2/modeling/backbone/resnet.py	/^class BasicStem(CNNBlockBase):$/;"	c
BasicTransform	detectron2/modeling/backbone/regnet.py	/^class BasicTransform(nn.Module):$/;"	c
BatchNorm2d	detectron2/layers/wrappers.py	/^BatchNorm2d = torch.nn.BatchNorm2d$/;"	v
BatchNormBatchStat	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead_batch_stats.py	/^class BatchNormBatchStat(BatchNorm2d):$/;"	c
BestCheckpointer	detectron2/engine/hooks.py	/^class BestCheckpointer(HookBase):$/;"	c
BilinearInterpolation	detectron2/export/shared.py	/^def BilinearInterpolation(tensor_in, up_scale):$/;"	f
BilinearInterpolationHelper	projects/DensePose/densepose/modeling/losses/utils.py	/^class BilinearInterpolationHelper:$/;"	c
BitMasks	detectron2/structures/masks.py	/^class BitMasks:$/;"	c
Block	detectron2/modeling/backbone/vit.py	/^class Block(nn.Module):$/;"	c
BootstrapDatasetFactoryCatalog	projects/DensePose/densepose/data/build.py	/^BootstrapDatasetFactoryCatalog = _BootstrapDatasetFactoryCatalog()$/;"	v
Bottleneck	projects/DensePose/densepose/modeling/hrnet.py	/^class Bottleneck(nn.Module):$/;"	c
BottleneckBlock	detectron2/modeling/backbone/resnet.py	/^class BottleneckBlock(CNNBlockBase):$/;"	c
BottleneckTransform	detectron2/modeling/backbone/regnet.py	/^class BottleneckTransform(nn.Module):$/;"	c
BoundingBoxExtractor	projects/DensePose/densepose/vis/extractor.py	/^class BoundingBoxExtractor:$/;"	c
BoundingBoxVisualizer	projects/DensePose/densepose/vis/bounding_box.py	/^class BoundingBoxVisualizer:$/;"	c
Box2BoxTransform	detectron2/modeling/box_regression.py	/^class Box2BoxTransform:$/;"	c
Box2BoxTransformLinear	detectron2/modeling/box_regression.py	/^class Box2BoxTransformLinear:$/;"	c
Box2BoxTransformRotated	detectron2/modeling/box_regression.py	/^class Box2BoxTransformRotated:$/;"	c
BoxMode	detectron2/structures/boxes.py	/^class BoxMode(IntEnum):$/;"	c
Boxes	detectron2/structures/boxes.py	/^class Boxes:$/;"	c
Boxes	projects/DensePose/densepose/vis/base.py	/^Boxes = torch.Tensor$/;"	v
BufferList	detectron2/modeling/anchor_generator.py	/^class BufferList(nn.Module):$/;"	c
C2_DATASET_COCO	detectron2/checkpoint/catalog.py	/^    C2_DATASET_COCO = "coco_2014_train%3Acoco_2014_valminusminival"$/;"	v	class:ModelCatalog
C2_DATASET_COCO_KEYPOINTS	detectron2/checkpoint/catalog.py	/^    C2_DATASET_COCO_KEYPOINTS = "keypoints_coco_2014_train%3Akeypoints_coco_2014_valminusminival"$/;"	v	class:ModelCatalog
C2_DETECTRON_MODELS	detectron2/checkpoint/catalog.py	/^    C2_DETECTRON_MODELS = {$/;"	v	class:ModelCatalog
C2_DETECTRON_PATH_FORMAT	detectron2/checkpoint/catalog.py	/^    C2_DETECTRON_PATH_FORMAT = ($/;"	v	class:ModelCatalog
C2_IMAGENET_MODELS	detectron2/checkpoint/catalog.py	/^    C2_IMAGENET_MODELS = {$/;"	v	class:ModelCatalog
CHIMPNSEE_DATASET_NAME	projects/DensePose/densepose/data/datasets/chimpnsee.py	/^CHIMPNSEE_DATASET_NAME = "chimpnsee"$/;"	v
CITYSCAPES_CATEGORIES	detectron2/data/datasets/builtin_meta.py	/^CITYSCAPES_CATEGORIES = [$/;"	v
CLASS_NAMES	detectron2/data/datasets/pascal_voc.py	/^CLASS_NAMES = ($/;"	v
CNNBlockBase	detectron2/layers/blocks.py	/^class CNNBlockBase(nn.Module):$/;"	c
COCOEvaluator	detectron2/evaluation/coco_evaluation.py	/^class COCOEvaluator(DatasetEvaluator):$/;"	c
COCOPanopticEvaluator	detectron2/evaluation/panoptic_evaluation.py	/^class COCOPanopticEvaluator(DatasetEvaluator):$/;"	c
COCO_CATEGORIES	detectron2/data/datasets/builtin_meta.py	/^COCO_CATEGORIES = [$/;"	v
COCO_DATASET_DATA	projects/DensePose/tests/test_dataset_loaded_annotations.py	/^    COCO_DATASET_DATA = {$/;"	v	class:TestDatasetLoadedAnnotations
COCO_PERSON_KEYPOINT_FLIP_MAP	detectron2/data/datasets/builtin_meta.py	/^COCO_PERSON_KEYPOINT_FLIP_MAP = ($/;"	v
COCO_PERSON_KEYPOINT_NAMES	detectron2/data/datasets/builtin_meta.py	/^COCO_PERSON_KEYPOINT_NAMES = ($/;"	v
COCO_SYNSET_CATEGORIES	datasets/prepare_cocofied_lvis.py	/^COCO_SYNSET_CATEGORIES = [$/;"	v
COCOevalMaxDets	detectron2/evaluation/coco_evaluation.py	/^class COCOevalMaxDets(COCOeval):$/;"	c
COCOeval_opt	detectron2/evaluation/coco_evaluation.py	/^    COCOeval_opt = COCOeval$/;"	v
COCOeval_opt	detectron2/evaluation/fast_eval_api.py	/^class COCOeval_opt(COCOeval):$/;"	c
CONFIG_PATH	projects/DensePose/tests/test_model_e2e.py	/^    CONFIG_PATH = ""$/;"	v	class:ModelE2ETest
CONFIG_PATH	projects/DensePose/tests/test_model_e2e.py	/^    CONFIG_PATH = "densepose_rcnn_R_101_FPN_s1x.yaml"$/;"	v	class:DensePoseRCNNE2ETest
CONFIG_PATH	tests/modeling/test_model_e2e.py	/^    CONFIG_PATH = "COCO-Detection\/fcos_R_50_FPN_1x.py"$/;"	v	class:FCOSE2ETest
CONFIG_PATH	tests/modeling/test_model_e2e.py	/^    CONFIG_PATH = "COCO-Detection\/retinanet_R_50_FPN_1x.yaml"$/;"	v	class:RetinaNetE2ETest
CONFIG_PATH	tests/modeling/test_model_e2e.py	/^    CONFIG_PATH = "COCO-InstanceSegmentation\/mask_rcnn_R_50_FPN_1x.yaml"$/;"	v	class:MaskRCNNE2ETest
CONFIG_PATH	tests/modeling/test_model_e2e.py	/^    CONFIG_PATH = "Misc\/semantic_R_50_FPN_1x.yaml"$/;"	v	class:SemSegE2ETest
CONFIG_PATH_TO_URL_SUFFIX	detectron2/model_zoo/model_zoo.py	/^    CONFIG_PATH_TO_URL_SUFFIX = {$/;"	v	class:_ModelZooUrls
CUDA_SUFFIX	dev/packaging/gen_install_table.py	/^CUDA_SUFFIX = {$/;"	v
Caffe2Boxes	detectron2/export/c10.py	/^class Caffe2Boxes(Boxes):$/;"	c
Caffe2Compatible	detectron2/export/c10.py	/^class Caffe2Compatible:$/;"	c
Caffe2CompatibleConverter	detectron2/export/caffe2_patch.py	/^class Caffe2CompatibleConverter:$/;"	c
Caffe2FastRCNNOutputsInference	detectron2/export/c10.py	/^class Caffe2FastRCNNOutputsInference:$/;"	c
Caffe2GeneralizedRCNN	detectron2/export/caffe2_modeling.py	/^class Caffe2GeneralizedRCNN(Caffe2MetaArch):$/;"	c
Caffe2KeypointRCNNInference	detectron2/export/c10.py	/^class Caffe2KeypointRCNNInference:$/;"	c
Caffe2MaskRCNNInference	detectron2/export/c10.py	/^class Caffe2MaskRCNNInference:$/;"	c
Caffe2MetaArch	detectron2/export/caffe2_modeling.py	/^class Caffe2MetaArch(Caffe2Compatible, torch.nn.Module):$/;"	c
Caffe2Model	detectron2/export/api.py	/^class Caffe2Model(nn.Module):$/;"	c
Caffe2ROIPooler	detectron2/export/c10.py	/^class Caffe2ROIPooler(Caffe2Compatible, poolers.ROIPooler):$/;"	c
Caffe2RPN	detectron2/export/c10.py	/^class Caffe2RPN(Caffe2Compatible, rpn.RPN):$/;"	c
Caffe2RetinaNet	detectron2/export/caffe2_modeling.py	/^class Caffe2RetinaNet(Caffe2MetaArch):$/;"	c
Caffe2Tracer	detectron2/export/api.py	/^class Caffe2Tracer:$/;"	c
CallbackHook	detectron2/engine/hooks.py	/^class CallbackHook(HookBase):$/;"	c
CascadeROIHeads	detectron2/modeling/roi_heads/cascade_rcnn.py	/^class CascadeROIHeads(StandardROIHeads):$/;"	c
CfgNode	detectron2/config/config.py	/^class CfgNode(_CfgNode):$/;"	c
ChartBasedAnnotationsAccumulator	projects/DensePose/densepose/modeling/losses/utils.py	/^class ChartBasedAnnotationsAccumulator(AnnotationsAccumulator):$/;"	c
CityscapesEvaluator	detectron2/evaluation/cityscapes_evaluation.py	/^class CityscapesEvaluator(DatasetEvaluator):$/;"	c
CityscapesInstanceEvaluator	detectron2/evaluation/cityscapes_evaluation.py	/^class CityscapesInstanceEvaluator(CityscapesEvaluator):$/;"	c
CityscapesSemSegEvaluator	detectron2/evaluation/cityscapes_evaluation.py	/^class CityscapesSemSegEvaluator(CityscapesEvaluator):$/;"	c
ClassificationAcc	configs/Misc/torchvision_imagenet_R_50.py	/^class ClassificationAcc(DatasetEvaluator):$/;"	c
ClassificationNet	configs/Misc/torchvision_imagenet_R_50.py	/^class ClassificationNet(nn.Module):$/;"	c
CocoDatasetInfo	projects/DensePose/densepose/data/datasets/coco.py	/^class CocoDatasetInfo:$/;"	c
ColorAugSSDTransform	projects/PointRend/point_rend/color_augmentation.py	/^class ColorAugSSDTransform(Transform):$/;"	c
ColorMode	detectron2/utils/visualizer.py	/^class ColorMode(Enum):$/;"	c
ColorTransform	detectron2/data/transforms/transform.py	/^class ColorTransform(Transform):$/;"	c
CombinedDataLoader	projects/DensePose/densepose/data/combined_loader.py	/^class CombinedDataLoader:$/;"	c
CommonMetricPrinter	detectron2/utils/events.py	/^class CommonMetricPrinter(EventWriter):$/;"	c
CompoundExtractor	projects/DensePose/densepose/vis/extractor.py	/^class CompoundExtractor:$/;"	c
CompoundVisualizer	projects/DensePose/densepose/vis/base.py	/^class CompoundVisualizer:$/;"	c
Conv2d	detectron2/layers/wrappers.py	/^class Conv2d(torch.nn.Conv2d):$/;"	c
ConvFCHead	projects/PointRend/point_rend/mask_head.py	/^class ConvFCHead(nn.Module):$/;"	c
ConvTranspose2d	detectron2/layers/wrappers.py	/^ConvTranspose2d = torch.nn.ConvTranspose2d$/;"	v
ConverterV1	detectron2/config/compat.py	/^class ConverterV1(_RenameConverter):$/;"	c
ConverterV2	detectron2/config/compat.py	/^class ConverterV2(_RenameConverter):$/;"	c
CseAnnotationsAccumulator	projects/DensePose/densepose/modeling/losses/embed_utils.py	/^class CseAnnotationsAccumulator(AnnotationsAccumulator):$/;"	c
CustomPathManagerHandler	tests/test_checkpoint.py	/^            class CustomPathManagerHandler(PathHandler):$/;"	c	function:TestCheckpointer.test_custom_path_manager_handler
CycleBatchNormList	detectron2/layers/batch_norm.py	/^class CycleBatchNormList(nn.ModuleList):$/;"	c
DATASETS	projects/DensePose/densepose/data/datasets/coco.py	/^DATASETS = [$/;"	v
DATASETS	projects/DensePose/densepose/data/datasets/lvis.py	/^DATASETS = [$/;"	v
DEFAULT_DATASETS_ROOT	projects/DensePose/densepose/data/datasets/builtin.py	/^DEFAULT_DATASETS_ROOT = "datasets"$/;"	v
DEFAULT_MODEL_CHECKPOINT_PREFIX	projects/DensePose/densepose/modeling/cse/embedder.py	/^    DEFAULT_MODEL_CHECKPOINT_PREFIX = "roi_heads.embedder."$/;"	v	class:Embedder
DEFAULT_TIMEOUT	detectron2/engine/launch.py	/^DEFAULT_TIMEOUT = timedelta(minutes=30)$/;"	v
DENSEPOSE_ALL_POSSIBLE_KEYS	projects/DensePose/densepose/data/datasets/coco.py	/^DENSEPOSE_ALL_POSSIBLE_KEYS = set($/;"	v
DENSEPOSE_CSE_KEYS_WITHOUT_MASK	projects/DensePose/densepose/data/datasets/coco.py	/^DENSEPOSE_CSE_KEYS_WITHOUT_MASK = ["dp_x", "dp_y", "dp_vertex", "ref_model"]$/;"	v
DENSEPOSE_IUV_KEYS_WITHOUT_MASK	projects/DensePose/densepose/data/datasets/coco.py	/^DENSEPOSE_IUV_KEYS_WITHOUT_MASK = ["dp_x", "dp_y", "dp_I", "dp_U", "dp_V"]$/;"	v
DENSEPOSE_LOSS_REGISTRY	projects/DensePose/densepose/modeling/losses/registry.py	/^DENSEPOSE_LOSS_REGISTRY = Registry("DENSEPOSE_LOSS")$/;"	v
DENSEPOSE_MASK_KEY	projects/DensePose/densepose/data/datasets/coco.py	/^DENSEPOSE_MASK_KEY = "dp_masks"$/;"	v
DENSEPOSE_MESHES_DIR	projects/DensePose/densepose/data/meshes/builtin.py	/^DENSEPOSE_MESHES_DIR = "https:\/\/dl.fbaipublicfiles.com\/densepose\/meshes\/"$/;"	v
DENSEPOSE_METADATA_URL_PREFIX	projects/DensePose/densepose/data/datasets/coco.py	/^DENSEPOSE_METADATA_URL_PREFIX = "https:\/\/dl.fbaipublicfiles.com\/densepose\/data\/"$/;"	v
DENSEPOSE_PREDICTOR_REGISTRY	projects/DensePose/densepose/modeling/predictors/registry.py	/^DENSEPOSE_PREDICTOR_REGISTRY = Registry("DENSEPOSE_PREDICTOR")$/;"	v
DEPLOY	docs/conf.py	/^DEPLOY = os.environ.get("READTHEDOCS") == "True"$/;"	v
DOC_BUILDING	detectron2/utils/env.py	/^DOC_BUILDING = os.getenv("_DOC_BUILDING", False)  # set in docs\/conf.py$/;"	v
DS	tests/data/test_dataset.py	/^        class DS(torch.utils.data.IterableDataset):$/;"	c	function:TestMapDataset.test_iter_style
DataForMaskLoss	projects/DensePose/densepose/modeling/losses/mask.py	/^class DataForMaskLoss:$/;"	c
DataLoaderBenchmark	detectron2/data/benchmark.py	/^class DataLoaderBenchmark:$/;"	c
DataModule	tools/lightning_train_net.py	/^class DataModule(LightningDataModule):$/;"	c
DatasetCatalog	detectron2/data/catalog.py	/^DatasetCatalog = _DatasetCatalog()$/;"	v
DatasetEvaluator	detectron2/evaluation/evaluator.py	/^class DatasetEvaluator:$/;"	c
DatasetEvaluators	detectron2/evaluation/evaluator.py	/^class DatasetEvaluators(DatasetEvaluator):$/;"	c
DatasetFromList	detectron2/data/common.py	/^class DatasetFromList(data.Dataset):$/;"	c
DatasetMapper	detectron2/data/dataset_mapper.py	/^class DatasetMapper:$/;"	c
DatasetMapper	projects/DensePose/densepose/data/dataset_mapper.py	/^class DatasetMapper:$/;"	c
DatasetMapperTTA	detectron2/modeling/test_time_augmentation.py	/^class DatasetMapperTTA:$/;"	c
DatasetType	projects/DensePose/densepose/data/datasets/dataset_type.py	/^class DatasetType(Enum):$/;"	c
Decoder	projects/DensePose/densepose/modeling/roi_heads/roi_head.py	/^class Decoder(nn.Module):$/;"	c
DeepLabCE	projects/DeepLab/deeplab/loss.py	/^class DeepLabCE(nn.Module):$/;"	c
DeepLabStem	projects/DeepLab/deeplab/resnet.py	/^class DeepLabStem(CNNBlockBase):$/;"	c
DeepLabV3Head	projects/DeepLab/deeplab/semantic_seg.py	/^class DeepLabV3Head(nn.Module):$/;"	c
DeepLabV3PlusHead	projects/DeepLab/deeplab/semantic_seg.py	/^class DeepLabV3PlusHead(nn.Module):$/;"	c
DefaultAnchorGenerator	detectron2/modeling/anchor_generator.py	/^class DefaultAnchorGenerator(nn.Module):$/;"	c
DefaultPredictor	detectron2/engine/defaults.py	/^class DefaultPredictor:$/;"	c
DefaultTrainer	detectron2/engine/defaults.py	/^class DefaultTrainer(TrainerBase):$/;"	c
DeformBottleneckBlock	detectron2/modeling/backbone/resnet.py	/^class DeformBottleneckBlock(CNNBlockBase):$/;"	c
DeformConv	detectron2/layers/deform_conv.py	/^    DeformConv = create_dummy_class("DeformConv", *_args)$/;"	v
DeformConv	detectron2/layers/deform_conv.py	/^class DeformConv(nn.Module):$/;"	c
DeformableTest	tests/layers/test_deformable.py	/^class DeformableTest(unittest.TestCase):$/;"	c
DenseDetector	detectron2/modeling/meta_arch/dense_detector.py	/^class DenseDetector(nn.Module):$/;"	c
DensePoseBaseSampler	projects/DensePose/densepose/data/samplers/densepose_base.py	/^class DensePoseBaseSampler:$/;"	c
DensePoseCOCOEvaluator	projects/DensePose/densepose/evaluation/evaluator.py	/^class DensePoseCOCOEvaluator(DatasetEvaluator):$/;"	c
DensePoseCSEBaseSampler	projects/DensePose/densepose/data/samplers/densepose_cse_base.py	/^class DensePoseCSEBaseSampler(DensePoseBaseSampler):$/;"	c
DensePoseCSEConfidenceBasedSampler	projects/DensePose/densepose/data/samplers/densepose_cse_confidence_based.py	/^class DensePoseCSEConfidenceBasedSampler(DensePoseCSEBaseSampler):$/;"	c
DensePoseCSEUniformSampler	projects/DensePose/densepose/data/samplers/densepose_cse_uniform.py	/^class DensePoseCSEUniformSampler(DensePoseCSEBaseSampler, DensePoseUniformSampler):$/;"	c
DensePoseChartConfidencePredictorMixin	projects/DensePose/densepose/modeling/predictors/chart_confidence.py	/^class DensePoseChartConfidencePredictorMixin:$/;"	c
DensePoseChartLoss	projects/DensePose/densepose/modeling/losses/chart.py	/^class DensePoseChartLoss:$/;"	c
DensePoseChartPredictor	projects/DensePose/densepose/modeling/predictors/chart.py	/^class DensePoseChartPredictor(nn.Module):$/;"	c
DensePoseChartPredictorOutput	projects/DensePose/densepose/structures/chart.py	/^class DensePoseChartPredictorOutput:$/;"	c
DensePoseChartResult	projects/DensePose/densepose/structures/chart_result.py	/^class DensePoseChartResult:$/;"	c
DensePoseChartResultCompressed	projects/DensePose/densepose/structures/chart_result.py	/^class DensePoseChartResultCompressed:$/;"	c
DensePoseChartResultQuantized	projects/DensePose/densepose/structures/chart_result.py	/^class DensePoseChartResultQuantized:$/;"	c
DensePoseChartResultWithConfidences	projects/DensePose/densepose/structures/chart_result.py	/^class DensePoseChartResultWithConfidences:$/;"	c
DensePoseChartResultsWithConfidences	projects/DensePose/densepose/vis/extractor.py	/^DensePoseChartResultsWithConfidences = List[DensePoseChartResultWithConfidences]$/;"	v
DensePoseChartWithConfidenceLoss	projects/DensePose/densepose/modeling/losses/chart_with_confidences.py	/^class DensePoseChartWithConfidenceLoss(DensePoseChartLoss):$/;"	c
DensePoseChartWithConfidencePredictor	projects/DensePose/densepose/modeling/predictors/chart_with_confidence.py	/^):$/;"	c
DensePoseCheckpointer	projects/DensePose/densepose/modeling/densepose_checkpoint.py	/^class DensePoseCheckpointer(DetectionCheckpointer):$/;"	c
DensePoseCocoEval	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^class DensePoseCocoEval:$/;"	c
DensePoseConfidenceBasedSampler	projects/DensePose/densepose/data/samplers/densepose_confidence_based.py	/^class DensePoseConfidenceBasedSampler(DensePoseBaseSampler):$/;"	c
DensePoseConfidenceModelConfig	projects/DensePose/densepose/modeling/confidence.py	/^class DensePoseConfidenceModelConfig:$/;"	c
DensePoseCseLoss	projects/DensePose/densepose/modeling/losses/cse.py	/^class DensePoseCseLoss:$/;"	c
DensePoseDataCoarseSegmentationVisualizer	projects/DensePose/densepose/vis/densepose_data_points.py	/^class DensePoseDataCoarseSegmentationVisualizer:$/;"	c
DensePoseDataFilter	projects/DensePose/densepose/modeling/filter.py	/^class DensePoseDataFilter:$/;"	c
DensePoseDataMode	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^class DensePoseDataMode(str, Enum):$/;"	c
DensePoseDataPointsIVisualizer	projects/DensePose/densepose/vis/densepose_data_points.py	/^class DensePoseDataPointsIVisualizer(DensePoseDataPointsVisualizer):$/;"	c
DensePoseDataPointsUVisualizer	projects/DensePose/densepose/vis/densepose_data_points.py	/^class DensePoseDataPointsUVisualizer(DensePoseDataPointsVisualizer):$/;"	c
DensePoseDataPointsVVisualizer	projects/DensePose/densepose/vis/densepose_data_points.py	/^class DensePoseDataPointsVVisualizer(DensePoseDataPointsVisualizer):$/;"	c
DensePoseDataPointsVisualizer	projects/DensePose/densepose/vis/densepose_data_points.py	/^class DensePoseDataPointsVisualizer:$/;"	c
DensePoseDataRelative	projects/DensePose/densepose/structures/data_relative.py	/^class DensePoseDataRelative:$/;"	c
DensePoseDatasetMapperTTA	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^class DensePoseDatasetMapperTTA(DatasetMapperTTA):$/;"	c
DensePoseDeepLabHead	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^class DensePoseDeepLabHead(nn.Module):$/;"	c
DensePoseEmbeddingConfidencePredictorMixin	projects/DensePose/densepose/modeling/predictors/cse_confidence.py	/^class DensePoseEmbeddingConfidencePredictorMixin:$/;"	c
DensePoseEmbeddingPredictor	projects/DensePose/densepose/modeling/predictors/cse.py	/^class DensePoseEmbeddingPredictor(nn.Module):$/;"	c
DensePoseEmbeddingPredictorOutput	projects/DensePose/densepose/structures/cse.py	/^class DensePoseEmbeddingPredictorOutput:$/;"	c
DensePoseEmbeddingWithConfidencePredictor	projects/DensePose/densepose/modeling/predictors/cse_with_confidence.py	/^):$/;"	c
DensePoseEvalMode	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^class DensePoseEvalMode(str, Enum):$/;"	c
DensePoseGeneralizedRCNNWithTTA	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^class DensePoseGeneralizedRCNNWithTTA(GeneralizedRCNNWithTTA):$/;"	c
DensePoseList	projects/DensePose/densepose/structures/list.py	/^class DensePoseList:$/;"	c
DensePoseMaskedColormapResultsVisualizer	projects/DensePose/densepose/vis/densepose_results.py	/^class DensePoseMaskedColormapResultsVisualizer(DensePoseResultsVisualizer):$/;"	c
DensePoseOutputsExtractor	projects/DensePose/densepose/vis/extractor.py	/^class DensePoseOutputsExtractor:$/;"	c
DensePoseOutputsFineSegmentationVisualizer	projects/DensePose/densepose/vis/densepose_outputs_iuv.py	/^class DensePoseOutputsFineSegmentationVisualizer(DensePoseOutputsVisualizer):$/;"	c
DensePoseOutputsTextureVisualizer	projects/DensePose/densepose/vis/densepose_outputs_vertex.py	/^class DensePoseOutputsTextureVisualizer(DensePoseOutputsVertexVisualizer):$/;"	c
DensePoseOutputsUVisualizer	projects/DensePose/densepose/vis/densepose_outputs_iuv.py	/^class DensePoseOutputsUVisualizer(DensePoseOutputsVisualizer):$/;"	c
DensePoseOutputsVVisualizer	projects/DensePose/densepose/vis/densepose_outputs_iuv.py	/^class DensePoseOutputsVVisualizer(DensePoseOutputsVisualizer):$/;"	c
DensePoseOutputsVertexVisualizer	projects/DensePose/densepose/vis/densepose_outputs_vertex.py	/^class DensePoseOutputsVertexVisualizer:$/;"	c
DensePoseOutputsVisualizer	projects/DensePose/densepose/vis/densepose_outputs_iuv.py	/^class DensePoseOutputsVisualizer:$/;"	c
DensePoseRCNNE2ETest	projects/DensePose/tests/test_model_e2e.py	/^class DensePoseRCNNE2ETest(ModelE2ETest):$/;"	c
DensePoseROIHeads	projects/DensePose/densepose/modeling/roi_heads/roi_head.py	/^class DensePoseROIHeads(StandardROIHeads):$/;"	c
DensePoseResultExtractor	projects/DensePose/densepose/vis/extractor.py	/^class DensePoseResultExtractor:$/;"	c
DensePoseResultsContourVisualizer	projects/DensePose/densepose/vis/densepose_results.py	/^    DensePoseResultsContourVisualizer = DensePoseResultsCustomContourVisualizer$/;"	v
DensePoseResultsContourVisualizer	projects/DensePose/densepose/vis/densepose_results.py	/^    DensePoseResultsContourVisualizer = DensePoseResultsMplContourVisualizer$/;"	v	class:DensePoseResultsCustomContourVisualizer
DensePoseResultsCustomContourVisualizer	projects/DensePose/densepose/vis/densepose_results.py	/^class DensePoseResultsCustomContourVisualizer(DensePoseResultsVisualizer):$/;"	c
DensePoseResultsFineSegmentationVisualizer	projects/DensePose/densepose/vis/densepose_results.py	/^class DensePoseResultsFineSegmentationVisualizer(DensePoseMaskedColormapResultsVisualizer):$/;"	c
DensePoseResultsMplContourVisualizer	projects/DensePose/densepose/vis/densepose_results.py	/^class DensePoseResultsMplContourVisualizer(DensePoseResultsVisualizer):$/;"	c
DensePoseResultsUVisualizer	projects/DensePose/densepose/vis/densepose_results.py	/^class DensePoseResultsUVisualizer(DensePoseMaskedColormapResultsVisualizer):$/;"	c
DensePoseResultsVVisualizer	projects/DensePose/densepose/vis/densepose_results.py	/^class DensePoseResultsVVisualizer(DensePoseMaskedColormapResultsVisualizer):$/;"	c
DensePoseResultsVisualizer	projects/DensePose/densepose/vis/densepose_results.py	/^class DensePoseResultsVisualizer:$/;"	c
DensePoseResultsVisualizerWithTexture	projects/DensePose/densepose/vis/densepose_results_textures.py	/^class DensePoseResultsVisualizerWithTexture(DensePoseResultsVisualizer):$/;"	c
DensePoseSegmConfidenceConfig	projects/DensePose/densepose/modeling/confidence.py	/^class DensePoseSegmConfidenceConfig:$/;"	c
DensePoseTransformData	projects/DensePose/densepose/structures/transform_data.py	/^class DensePoseTransformData:$/;"	c
DensePoseUVConfidenceConfig	projects/DensePose/densepose/modeling/confidence.py	/^class DensePoseUVConfidenceConfig:$/;"	c
DensePoseUVConfidenceType	projects/DensePose/densepose/modeling/confidence.py	/^class DensePoseUVConfidenceType(Enum):$/;"	c
DensePoseUniformSampler	projects/DensePose/densepose/data/samplers/densepose_uniform.py	/^class DensePoseUniformSampler(DensePoseBaseSampler):$/;"	c
DensePoseV1ConvXHead	projects/DensePose/densepose/modeling/roi_heads/v1convx.py	/^class DensePoseV1ConvXHead(nn.Module):$/;"	c
DepthwiseSeparableConv2d	detectron2/layers/blocks.py	/^class DepthwiseSeparableConv2d(nn.Module):$/;"	c
DetectionCheckpointer	detectron2/checkpoint/detection_checkpoint.py	/^class DetectionCheckpointer(Checkpointer):$/;"	c
Detectron2COCOEvaluatorAdapter	projects/DensePose/densepose/evaluation/d2_evaluator_adapter.py	/^class Detectron2COCOEvaluatorAdapter(COCOEvaluator):$/;"	c
Detectron2Handler	detectron2/utils/file_io.py	/^class Detectron2Handler(PathHandler):$/;"	c
DiGraph	detectron2/export/shared.py	/^class DiGraph:$/;"	c
DictSchema	detectron2/export/flatten.py	/^class DictSchema(ListSchema):$/;"	c
DumpAction	projects/DensePose/apply_net.py	/^class DumpAction(InferenceAction):$/;"	c
Embedder	projects/DensePose/densepose/modeling/cse/embedder.py	/^class Embedder(nn.Module):$/;"	c
EmbedderType	projects/DensePose/densepose/modeling/cse/embedder.py	/^class EmbedderType(Enum):$/;"	c
EmbeddingLoss	projects/DensePose/densepose/modeling/losses/embed.py	/^class EmbeddingLoss:$/;"	c
EntrySelector	projects/DensePose/densepose/utils/dbhelper.py	/^class EntrySelector:$/;"	c
EntrywiseAction	projects/DensePose/query_db.py	/^class EntrywiseAction(Action):$/;"	c
EvalHook	detectron2/engine/hooks.py	/^class EvalHook(HookBase):$/;"	c
EventStorage	detectron2/utils/events.py	/^class EventStorage:$/;"	c
EventWriter	detectron2/utils/events.py	/^class EventWriter:$/;"	c
ExtentTransform	detectron2/data/transforms/transform.py	/^class ExtentTransform(Transform):$/;"	c
FCOS	detectron2/modeling/meta_arch/fcos.py	/^class FCOS(DenseDetector):$/;"	c
FCOSE2ETest	tests/modeling/test_model_e2e.py	/^class FCOSE2ETest(InstanceModelE2ETest, unittest.TestCase):$/;"	c
FCOSHead	detectron2/modeling/meta_arch/fcos.py	/^class FCOSHead(RetinaNetHead):$/;"	c
FIRST_K	projects/DensePose/densepose/data/video/frame_selector.py	/^    FIRST_K  = "first_k"$/;"	v	class:FrameSelectionStrategy
FLOPS_MODE	detectron2/utils/analysis.py	/^FLOPS_MODE = "flops"$/;"	v
FPN	detectron2/modeling/backbone/fpn.py	/^class FPN(Backbone):$/;"	c
FastRCNNConvFCHead	detectron2/modeling/roi_heads/box_head.py	/^class FastRCNNConvFCHead(nn.Sequential):$/;"	c
FastRCNNOutputLayers	detectron2/modeling/roi_heads/fast_rcnn.py	/^class FastRCNNOutputLayers(nn.Module):$/;"	c
FastRCNNTest	tests/modeling/test_fast_rcnn.py	/^class FastRCNNTest(unittest.TestCase):$/;"	c
FasterRCNNTest	tests/test_model_analysis.py	/^class FasterRCNNTest(unittest.TestCase):$/;"	c
FieldEntrySelector	projects/DensePose/densepose/utils/dbhelper.py	/^class FieldEntrySelector(EntrySelector):$/;"	c
FirstKFramesSelector	projects/DensePose/densepose/data/video/frame_selector.py	/^class FirstKFramesSelector(Callable):  # pyre-ignore[39]$/;"	c
FixedSizeCrop	detectron2/data/transforms/augmentation_impl.py	/^class FixedSizeCrop(Augmentation):$/;"	c
FlopCountAnalysis	detectron2/utils/analysis.py	/^class FlopCountAnalysis(fvcore.nn.FlopCountAnalysis):$/;"	c
FrameList	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^FrameList = List[av.frame.Frame]  # pyre-ignore[16]$/;"	v
FrameSelectionStrategy	projects/DensePose/densepose/data/video/frame_selector.py	/^class FrameSelectionStrategy(Enum):$/;"	c
FrameSelector	projects/DensePose/densepose/data/video/frame_selector.py	/^FrameSelector = TCallable[[FrameTsList], FrameTsList]$/;"	v
FrameTransform	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^FrameTransform = Callable[[torch.Tensor], torch.Tensor]$/;"	v
FrameTsList	projects/DensePose/densepose/data/video/frame_selector.py	/^FrameTsList = List[int]$/;"	v
FrozenBatchNorm2d	detectron2/layers/batch_norm.py	/^class FrozenBatchNorm2d(nn.Module):$/;"	c
GPS	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    GPS = "gps"$/;"	v	class:DensePoseEvalMode
GPSM	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    GPSM = "gpsm"$/;"	v	class:DensePoseEvalMode
GPU_MEM_LIMIT	detectron2/layers/mask_ops.py	/^GPU_MEM_LIMIT = 1024**3  # 1 GB memory limit$/;"	v
GeneralizedRCNN	detectron2/modeling/meta_arch/rcnn.py	/^class GeneralizedRCNN(nn.Module):$/;"	c
GeneralizedRCNNWithTTA	detectron2/modeling/test_time_augmentation.py	/^class GeneralizedRCNNWithTTA(nn.Module):$/;"	c
GenericMask	detectron2/utils/visualizer.py	/^class GenericMask:$/;"	c
GenericMixin	detectron2/export/caffe2_patch.py	/^class GenericMixin:$/;"	c
GithubURLDomain	docs/conf.py	/^class GithubURLDomain(Domain):$/;"	c
GradientClipType	detectron2/solver/build.py	/^class GradientClipType(Enum):$/;"	c
GroupedBatchSampler	detectron2/data/samplers/grouped_batch_sampler.py	/^class GroupedBatchSampler(BatchSampler):$/;"	c
HAS_MMDET	tests/modeling/test_mmdet.py	/^    HAS_MMDET = False$/;"	v
HAS_MMDET	tests/modeling/test_mmdet.py	/^    HAS_MMDET = True$/;"	v
HAS_TORCH	docs/conf.py	/^    HAS_TORCH = False$/;"	v	class:GithubURLDomain
HAS_TORCH	docs/conf.py	/^    HAS_TORCH = True$/;"	v
HFlipConverter	projects/DensePose/densepose/converters/hflip.py	/^class HFlipConverter(BaseConverter):$/;"	c
HFlip_rotated_box	detectron2/data/transforms/transform.py	/^def HFlip_rotated_box(transform, rotated_boxes):$/;"	f
HRFPN	projects/DensePose/densepose/modeling/hrfpn.py	/^class HRFPN(Backbone):$/;"	c
HighResolutionModule	projects/DensePose/densepose/modeling/hrnet.py	/^class HighResolutionModule(nn.Module):$/;"	c
HookBase	detectron2/engine/train_loop.py	/^class HookBase:$/;"	c
IIDIsotropicGaussianUVLoss	projects/DensePose/densepose/modeling/losses/chart_with_confidences.py	/^class IIDIsotropicGaussianUVLoss(nn.Module):$/;"	c
IID_ISO	projects/DensePose/densepose/modeling/confidence.py	/^    IID_ISO     = "iid_iso"$/;"	v	class:DensePoseUVConfidenceType
IMAGE	detectron2/utils/visualizer.py	/^    IMAGE = 0$/;"	v	class:ColorMode
IMAGE_BW	detectron2/utils/visualizer.py	/^    IMAGE_BW = 2$/;"	v	class:ColorMode
INDEP_ANISO	projects/DensePose/densepose/modeling/confidence.py	/^    INDEP_ANISO = "indep_aniso"$/;"	v	class:DensePoseUVConfidenceType
INS_EMBED_BRANCHES_REGISTRY	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^INS_EMBED_BRANCHES_REGISTRY = Registry("INS_EMBED_BRANCHES")$/;"	v
IOU	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    IOU = "iou"$/;"	v	class:DensePoseEvalMode
IOUWeightedHungarianBBoxIOUTracker	detectron2/tracking/iou_weighted_hungarian_bbox_iou_tracker.py	/^class IOUWeightedHungarianBBoxIOUTracker(VanillaHungarianBBoxIOUTracker):$/;"	c
IUV_DT	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    IUV_DT = "iuvdt"$/;"	v	class:DensePoseDataMode
IUV_GT	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    IUV_GT = "iuvgt"$/;"	v	class:DensePoseDataMode
I_DT_UV_0	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    I_DT_UV_0 = "idtuv0"$/;"	v	class:DensePoseDataMode
I_GT_UV_0	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    I_GT_UV_0 = "igtuv0"$/;"	v	class:DensePoseDataMode
I_GT_UV_DT	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    I_GT_UV_DT = "igtuvdt"$/;"	v	class:DensePoseDataMode
I_KEY	projects/DensePose/densepose/structures/data_relative.py	/^    I_KEY = "dp_I"$/;"	v	class:DensePoseDataRelative
IdentitySchema	detectron2/export/flatten.py	/^class IdentitySchema(Schema):$/;"	c
IllegalGraphTransformError	detectron2/export/shared.py	/^class IllegalGraphTransformError(ValueError):$/;"	c
Image	projects/DensePose/densepose/vis/base.py	/^Image = np.ndarray$/;"	v
ImageList	detectron2/structures/image_list.py	/^class ImageList:$/;"	c
ImageListDataset	projects/DensePose/densepose/data/image_list_dataset.py	/^class ImageListDataset(Dataset):$/;"	c
ImageResizeTransform	projects/DensePose/densepose/data/transform/image.py	/^class ImageResizeTransform:$/;"	c
ImageSizeType	projects/DensePose/densepose/converters/to_mask.py	/^ImageSizeType = Tuple[int, int]$/;"	v
ImageTransform	projects/DensePose/densepose/data/image_list_dataset.py	/^ImageTransform = Callable[[torch.Tensor], torch.Tensor]$/;"	v
ImplicitPointHead	projects/PointRend/point_rend/point_head.py	/^class ImplicitPointHead(nn.Module):$/;"	c
ImplicitPointRendMaskHead	projects/PointRend/point_rend/mask_head.py	/^class ImplicitPointRendMaskHead(PointRendMaskHead):$/;"	c
ImplicitPointRendPointSupHead	projects/PointSup/point_sup/mask_head.py	/^class ImplicitPointRendPointSupHead(ImplicitPointRendMaskHead):$/;"	c
IndepAnisotropicGaussianUVLoss	projects/DensePose/densepose/modeling/losses/chart_with_confidences.py	/^class IndepAnisotropicGaussianUVLoss(nn.Module):$/;"	c
InferenceAction	projects/DensePose/apply_net.py	/^class InferenceAction(Action):$/;"	c
InferenceBasedLoader	projects/DensePose/densepose/data/inference_based_loader.py	/^class InferenceBasedLoader:$/;"	c
InferenceSampler	detectron2/data/samplers/distributed_sampler.py	/^class InferenceSampler(Sampler):$/;"	c
Instance	projects/DensePose/densepose/data/build.py	/^Instance = Dict[str, Any]$/;"	v
InstanceModelE2ETest	tests/modeling/test_model_e2e.py	/^class InstanceModelE2ETest:$/;"	c
InstancePredicate	projects/DensePose/densepose/data/build.py	/^InstancePredicate = Callable[[Instance], bool]$/;"	v
Instances	detectron2/structures/instances.py	/^class Instances:$/;"	c
InstancesList	detectron2/export/c10.py	/^class InstancesList:$/;"	c
InstancesSchema	detectron2/export/flatten.py	/^class InstancesSchema(DictSchema):$/;"	c
IntTupleBox	projects/DensePose/densepose/converters/base.py	/^IntTupleBox = Tuple[int, int, int, int]$/;"	v
IterationTimer	detectron2/engine/hooks.py	/^class IterationTimer(HookBase):$/;"	c
JSONWriter	detectron2/utils/events.py	/^class JSONWriter(EventWriter):$/;"	c
KEYPOINT_CONNECTION_RULES	detectron2/data/datasets/builtin_meta.py	/^KEYPOINT_CONNECTION_RULES = [$/;"	v
KRCNNConvDeconvUpsampleHead	detectron2/modeling/roi_heads/keypoint_head.py	/^class KRCNNConvDeconvUpsampleHead(BaseKeypointRCNNHead, nn.Sequential):$/;"	c
Keypoints	detectron2/structures/keypoints.py	/^class Keypoints:$/;"	c
LARGE_COST_VALUE	detectron2/tracking/utils.py	/^LARGE_COST_VALUE = 100000$/;"	v
LAST_K	projects/DensePose/densepose/data/video/frame_selector.py	/^    LAST_K   = "last_k"$/;"	v	class:FrameSelectionStrategy
LINKED_DOC	docs/conf.py	/^    LINKED_DOC = ["tutorials\/install", "tutorials\/getting_started"]$/;"	v	class:GithubURLDomain
LOGGER_NAME	projects/DensePose/apply_net.py	/^LOGGER_NAME = "apply_net"$/;"	v
LOGGER_NAME	projects/DensePose/query_db.py	/^LOGGER_NAME = "query_db"$/;"	v
LRMultiplier	detectron2/solver/lr_scheduler.py	/^class LRMultiplier(LRScheduler):$/;"	c
LRScheduler	detectron2/engine/hooks.py	/^class LRScheduler(HookBase):$/;"	c
LVISEvaluator	detectron2/evaluation/lvis_evaluation.py	/^class LVISEvaluator(DatasetEvaluator):$/;"	c
LVIS_CATEGORIES	detectron2/data/datasets/lvis_v0_5_categories.py	/^LVIS_CATEGORIES = [{'frequency': 'r', 'id': 1, 'synset': 'acorn.n.01', 'synonyms': ['acorn'], 'def': 'nut from an oak tree', 'name': 'acorn'}, {'frequency': 'c', 'id': 2, 'synset': 'aerosol.n.02', 'synonyms': ['aerosol_can', 'spray_can'], 'def': 'a dispenser that holds a substance under pressure', 'name': 'aerosol_can'}, {'frequency': 'f', 'id': 3, 'synset': 'air_conditioner.n.01', 'synonyms': ['air_conditioner'], 'def': 'a machine that keeps air cool and dry', 'name': 'air_conditioner'}, {'frequency': 'f', 'id': 4, 'synset': 'airplane.n.01', 'synonyms': ['airplane', 'aeroplane'], 'def': 'an aircraft that has a fixed wing and is powered by propellers or jets', 'name': 'airplane'}, {'frequency': 'c', 'id': 5, 'synset': 'alarm_clock.n.01', 'synonyms': ['alarm_clock'], 'def': 'a clock that wakes a sleeper at some preset time', 'name': 'alarm_clock'}, {'frequency': 'c', 'id': 6, 'synset': 'alcohol.n.01', 'synonyms': ['alcohol', 'alcoholic_beverage'], 'def': 'a liquor or brew containing alcohol as the active agent', 'name': 'alcohol'}, {'frequency': 'r', 'id': 7, 'synset': 'alligator.n.02', 'synonyms': ['alligator', 'gator'], 'def': 'amphibious reptiles related to crocodiles but with shorter broader snouts', 'name': 'alligator'}, {'frequency': 'c', 'id': 8, 'synset': 'almond.n.02', 'synonyms': ['almond'], 'def': 'oval-shaped edible seed of the almond tree', 'name': 'almond'}, {'frequency': 'c', 'id': 9, 'synset': 'ambulance.n.01', 'synonyms': ['ambulance'], 'def': 'a vehicle that takes people to and from hospitals', 'name': 'ambulance'}, {'frequency': 'r', 'id': 10, 'synset': 'amplifier.n.01', 'synonyms': ['amplifier'], 'def': 'electronic equipment that increases strength of signals', 'name': 'amplifier'}, {'frequency': 'c', 'id': 11, 'synset': 'anklet.n.03', 'synonyms': ['anklet', 'ankle_bracelet'], 'def': 'an ornament worn around the ankle', 'name': 'anklet'}, {'frequency': 'f', 'id': 12, 'synset': 'antenna.n.01', 'synonyms': ['antenna', 'aerial', 'transmitting_aerial'], 'def': 'an electrical device that sends or receives radio or television signals', 'name': 'antenna'}, {'frequency': 'f', 'id': 13, 'synset': 'apple.n.01', 'synonyms': ['apple'], 'def': 'fruit with red or yellow or green skin and sweet to tart crisp whitish flesh', 'name': 'apple'}, {'frequency': 'r', 'id': 14, 'synset': 'apple_juice.n.01', 'synonyms': ['apple_juice'], 'def': 'the juice of apples', 'name': 'apple_juice'}, {'frequency': 'r', 'id': 15, 'synset': 'applesauce.n.01', 'synonyms': ['applesauce'], 'def': 'puree of stewed apples usually sweetened and spiced', 'name': 'applesauce'}, {'frequency': 'r', 'id': 16, 'synset': 'apricot.n.02', 'synonyms': ['apricot'], 'def': 'downy yellow to rosy-colored fruit resembling a small peach', 'name': 'apricot'}, {'frequency': 'f', 'id': 17, 'synset': 'apron.n.01', 'synonyms': ['apron'], 'def': 'a garment of cloth that is tied about the waist and worn to protect clothing', 'name': 'apron'}, {'frequency': 'c', 'id': 18, 'synset': 'aquarium.n.01', 'synonyms': ['aquarium', 'fish_tank'], 'def': 'a tank\/pool\/bowl filled with water for keeping live fish and underwater animals', 'name': 'aquarium'}, {'frequency': 'c', 'id': 19, 'synset': 'armband.n.02', 'synonyms': ['armband'], 'def': 'a band worn around the upper arm', 'name': 'armband'}, {'frequency': 'f', 'id': 20, 'synset': 'armchair.n.01', 'synonyms': ['armchair'], 'def': 'chair with a support on each side for arms', 'name': 'armchair'}, {'frequency': 'r', 'id': 21, 'synset': 'armoire.n.01', 'synonyms': ['armoire'], 'def': 'a large wardrobe or cabinet', 'name': 'armoire'}, {'frequency': 'r', 'id': 22, 'synset': 'armor.n.01', 'synonyms': ['armor', 'armour'], 'def': 'protective covering made of metal and used in combat', 'name': 'armor'}, {'frequency': 'c', 'id': 23, 'synset': 'artichoke.n.02', 'synonyms': ['artichoke'], 'def': 'a thistlelike flower head with edible fleshy leaves and heart', 'name': 'artichoke'}, {'frequency': 'f', 'id': 24, 'synset': 'ashcan.n.01', 'synonyms': ['trash_can', 'garbage_can', 'wastebin', 'dustbin', 'trash_barrel', 'trash_bin'], 'def': 'a bin that holds rubbish until it is collected', 'name': 'trash_can'}, {'frequency': 'c', 'id': 25, 'synset': 'ashtray.n.01', 'synonyms': ['ashtray'], 'def': "a receptacle for the ash from smokers' cigars or cigarettes", 'name': 'ashtray'}, {'frequency': 'c', 'id': 26, 'synset': 'asparagus.n.02', 'synonyms': ['asparagus'], 'def': 'edible young shoots of the asparagus plant', 'name': 'asparagus'}, {'frequency': 'c', 'id': 27, 'synset': 'atomizer.n.01', 'synonyms': ['atomizer', 'atomiser', 'spray', 'sprayer', 'nebulizer', 'nebuliser'], 'def': 'a dispenser that turns a liquid (such as perfume) into a fine mist', 'name': 'atomizer'}, {'frequency': 'c', 'id': 28, 'synset': 'avocado.n.01', 'synonyms': ['avocado'], 'def': 'a pear-shaped fruit with green or blackish skin and rich yellowish pulp enclosing a single large seed', 'name': 'avocado'}, {'frequency': 'c', 'id': 29, 'synset': 'award.n.02', 'synonyms': ['award', 'accolade'], 'def': 'a tangible symbol signifying approval or distinction', 'name': 'award'}, {'frequency': 'f', 'id': 30, 'synset': 'awning.n.01', 'synonyms': ['awning'], 'def': 'a canopy made of canvas to shelter people or things from rain or sun', 'name': 'awning'}, {'frequency': 'r', 'id': 31, 'synset': 'ax.n.01', 'synonyms': ['ax', 'axe'], 'def': 'an edge tool with a heavy bladed head mounted across a handle', 'name': 'ax'}, {'frequency': 'f', 'id': 32, 'synset': 'baby_buggy.n.01', 'synonyms': ['baby_buggy', 'baby_carriage', 'perambulator', 'pram', 'stroller'], 'def': 'a small vehicle with four wheels in which a baby or child is pushed around', 'name': 'baby_buggy'}, {'frequency': 'c', 'id': 33, 'synset': 'backboard.n.01', 'synonyms': ['basketball_backboard'], 'def': 'a raised vertical board with basket attached; used to play basketball', 'name': 'basketball_backboard'}, {'frequency': 'f', 'id': 34, 'synset': 'backpack.n.01', 'synonyms': ['backpack', 'knapsack', 'packsack', 'rucksack', 'haversack'], 'def': 'a bag carried by a strap on your back or shoulder', 'name': 'backpack'}, {'frequency': 'f', 'id': 35, 'synset': 'bag.n.04', 'synonyms': ['handbag', 'purse', 'pocketbook'], 'def': 'a container used for carrying money and small personal items or accessories', 'name': 'handbag'}, {'frequency': 'f', 'id': 36, 'synset': 'bag.n.06', 'synonyms': ['suitcase', 'baggage', 'luggage'], 'def': 'cases used to carry belongings when traveling', 'name': 'suitcase'}, {'frequency': 'c', 'id': 37, 'synset': 'bagel.n.01', 'synonyms': ['bagel', 'beigel'], 'def': 'glazed yeast-raised doughnut-shaped roll with hard crust', 'name': 'bagel'}, {'frequency': 'r', 'id': 38, 'synset': 'bagpipe.n.01', 'synonyms': ['bagpipe'], 'def': 'a tubular wind instrument; the player blows air into a bag and squeezes it out', 'name': 'bagpipe'}, {'frequency': 'r', 'id': 39, 'synset': 'baguet.n.01', 'synonyms': ['baguet', 'baguette'], 'def': 'narrow French stick loaf', 'name': 'baguet'}, {'frequency': 'r', 'id': 40, 'synset': 'bait.n.02', 'synonyms': ['bait', 'lure'], 'def': 'something used to lure fish or other animals into danger so they can be trapped or killed', 'name': 'bait'}, {'frequency': 'f', 'id': 41, 'synset': 'ball.n.06', 'synonyms': ['ball'], 'def': 'a spherical object used as a plaything', 'name': 'ball'}, {'frequency': 'r', 'id': 42, 'synset': 'ballet_skirt.n.01', 'synonyms': ['ballet_skirt', 'tutu'], 'def': 'very short skirt worn by ballerinas', 'name': 'ballet_skirt'}, {'frequency': 'f', 'id': 43, 'synset': 'balloon.n.01', 'synonyms': ['balloon'], 'def': 'large tough nonrigid bag filled with gas or heated air', 'name': 'balloon'}, {'frequency': 'c', 'id': 44, 'synset': 'bamboo.n.02', 'synonyms': ['bamboo'], 'def': 'woody tropical grass having hollow woody stems', 'name': 'bamboo'}, {'frequency': 'f', 'id': 45, 'synset': 'banana.n.02', 'synonyms': ['banana'], 'def': 'elongated crescent-shaped yellow fruit with soft sweet flesh', 'name': 'banana'}, {'frequency': 'r', 'id': 46, 'synset': 'band_aid.n.01', 'synonyms': ['Band_Aid'], 'def': 'trade name for an adhesive bandage to cover small cuts or blisters', 'name': 'Band_Aid'}, {'frequency': 'c', 'id': 47, 'synset': 'bandage.n.01', 'synonyms': ['bandage'], 'def': 'a piece of soft material that covers and protects an injured part of the body', 'name': 'bandage'}, {'frequency': 'c', 'id': 48, 'synset': 'bandanna.n.01', 'synonyms': ['bandanna', 'bandana'], 'def': 'large and brightly colored handkerchief; often used as a neckerchief', 'name': 'bandanna'}, {'frequency': 'r', 'id': 49, 'synset': 'banjo.n.01', 'synonyms': ['banjo'], 'def': 'a stringed instrument of the guitar family with a long neck and circular body', 'name': 'banjo'}, {'frequency': 'f', 'id': 50, 'synset': 'banner.n.01', 'synonyms': ['banner', 'streamer'], 'def': 'long strip of cloth or paper used for decoration or advertising', 'name': 'banner'}, {'frequency': 'r', 'id': 51, 'synset': 'barbell.n.01', 'synonyms': ['barbell'], 'def': 'a bar to which heavy discs are attached at each end; used in weightlifting', 'name': 'barbell'}, {'frequency': 'r', 'id': 52, 'synset': 'barge.n.01', 'synonyms': ['barge'], 'def': 'a flatbottom boat for carrying heavy loads (especially on canals)', 'name': 'barge'}, {'frequency': 'f', 'id': 53, 'synset': 'barrel.n.02', 'synonyms': ['barrel', 'cask'], 'def': 'a cylindrical container that holds liquids', 'name': 'barrel'}, {'frequency': 'c', 'id': 54, 'synset': 'barrette.n.01', 'synonyms': ['barrette'], 'def': "a pin for holding women's hair in place", 'name': 'barrette'}, {'frequency': 'c', 'id': 55, 'synset': 'barrow.n.03', 'synonyms': ['barrow', 'garden_cart', 'lawn_cart', 'wheelbarrow'], 'def': 'a cart for carrying small loads; has handles and one or more wheels', 'name': 'barrow'}, {'frequency': 'f', 'id': 56, 'synset': 'base.n.03', 'synonyms': ['baseball_base'], 'def': 'a place that the runner must touch before scoring', 'name': 'baseball_base'}, {'frequency': 'f', 'id': 57, 'synset': 'baseball.n.02', 'synonyms': ['baseball'], 'def': 'a ball used in playing baseball', 'name': 'baseball'}, {'frequency': 'f', 'id': 58, 'synset': 'baseball_bat.n.01', 'synonyms': ['baseball_bat'], 'def': 'an implement used in baseball by the batter', 'name': 'baseball_bat'}, {'frequency': 'f', 'id': 59, 'synset': 'baseball_cap.n.01', 'synonyms': ['baseball_cap', 'jockey_cap', 'golf_cap'], 'def': 'a cap with a bill', 'name': 'baseball_cap'}, {'frequency': 'f', 'id': 60, 'synset': 'baseball_glove.n.01', 'synonyms': ['baseball_glove', 'baseball_mitt'], 'def': 'the handwear used by fielders in playing baseball', 'name': 'baseball_glove'}, {'frequency': 'f', 'id': 61, 'synset': 'basket.n.01', 'synonyms': ['basket', 'handbasket'], 'def': 'a container that is usually woven and has handles', 'name': 'basket'}, {'frequency': 'c', 'id': 62, 'synset': 'basket.n.03', 'synonyms': ['basketball_hoop'], 'def': 'metal hoop supporting a net through which players try to throw the basketball', 'name': 'basketball_hoop'}, {'frequency': 'c', 'id': 63, 'synset': 'basketball.n.02', 'synonyms': ['basketball'], 'def': 'an inflated ball used in playing basketball', 'name': 'basketball'}, {'frequency': 'r', 'id': 64, 'synset': 'bass_horn.n.01', 'synonyms': ['bass_horn', 'sousaphone', 'tuba'], 'def': 'the lowest brass wind instrument', 'name': 'bass_horn'}, {'frequency': 'r', 'id': 65, 'synset': 'bat.n.01', 'synonyms': ['bat_(animal)'], 'def': 'nocturnal mouselike mammal with forelimbs modified to form membranous wings', 'name': 'bat_(animal)'}, {'frequency': 'f', 'id': 66, 'synset': 'bath_mat.n.01', 'synonyms': ['bath_mat'], 'def': 'a heavy towel or mat to stand on while drying yourself after a bath', 'name': 'bath_mat'}, {'frequency': 'f', 'id': 67, 'synset': 'bath_towel.n.01', 'synonyms': ['bath_towel'], 'def': 'a large towel; to dry yourself after a bath', 'name': 'bath_towel'}, {'frequency': 'c', 'id': 68, 'synset': 'bathrobe.n.01', 'synonyms': ['bathrobe'], 'def': 'a loose-fitting robe of towelling; worn after a bath or swim', 'name': 'bathrobe'}, {'frequency': 'f', 'id': 69, 'synset': 'bathtub.n.01', 'synonyms': ['bathtub', 'bathing_tub'], 'def': 'a large open container that you fill with water and use to wash the body', 'name': 'bathtub'}, {'frequency': 'r', 'id': 70, 'synset': 'batter.n.02', 'synonyms': ['batter_(food)'], 'def': 'a liquid or semiliquid mixture, as of flour, eggs, and milk, used in cooking', 'name': 'batter_(food)'}, {'frequency': 'c', 'id': 71, 'synset': 'battery.n.02', 'synonyms': ['battery'], 'def': 'a portable device that produces electricity', 'name': 'battery'}, {'frequency': 'r', 'id': 72, 'synset': 'beach_ball.n.01', 'synonyms': ['beachball'], 'def': 'large and light ball; for play at the seaside', 'name': 'beachball'}, {'frequency': 'c', 'id': 73, 'synset': 'bead.n.01', 'synonyms': ['bead'], 'def': 'a small ball with a hole through the middle used for ornamentation, jewellery, etc.', 'name': 'bead'}, {'frequency': 'r', 'id': 74, 'synset': 'beaker.n.01', 'synonyms': ['beaker'], 'def': 'a flatbottomed jar made of glass or plastic; used for chemistry', 'name': 'beaker'}, {'frequency': 'c', 'id': 75, 'synset': 'bean_curd.n.01', 'synonyms': ['bean_curd', 'tofu'], 'def': 'cheeselike food made of curdled soybean milk', 'name': 'bean_curd'}, {'frequency': 'c', 'id': 76, 'synset': 'beanbag.n.01', 'synonyms': ['beanbag'], 'def': 'a bag filled with dried beans or similar items; used in games or to sit on', 'name': 'beanbag'}, {'frequency': 'f', 'id': 77, 'synset': 'beanie.n.01', 'synonyms': ['beanie', 'beany'], 'def': 'a small skullcap; formerly worn by schoolboys and college freshmen', 'name': 'beanie'}, {'frequency': 'f', 'id': 78, 'synset': 'bear.n.01', 'synonyms': ['bear'], 'def': 'large carnivorous or omnivorous mammals with shaggy coats and claws', 'name': 'bear'}, {'frequency': 'f', 'id': 79, 'synset': 'bed.n.01', 'synonyms': ['bed'], 'def': 'a piece of furniture that provides a place to sleep', 'name': 'bed'}, {'frequency': 'c', 'id': 80, 'synset': 'bedspread.n.01', 'synonyms': ['bedspread', 'bedcover', 'bed_covering', 'counterpane', 'spread'], 'def': 'decorative cover for a bed', 'name': 'bedspread'}, {'frequency': 'f', 'id': 81, 'synset': 'beef.n.01', 'synonyms': ['cow'], 'def': 'cattle that are reared for their meat', 'name': 'cow'}, {'frequency': 'c', 'id': 82, 'synset': 'beef.n.02', 'synonyms': ['beef_(food)', 'boeuf_(food)'], 'def': 'meat from an adult domestic bovine', 'name': 'beef_(food)'}, {'frequency': 'r', 'id': 83, 'synset': 'beeper.n.01', 'synonyms': ['beeper', 'pager'], 'def': 'an device that beeps when the person carrying it is being paged', 'name': 'beeper'}, {'frequency': 'f', 'id': 84, 'synset': 'beer_bottle.n.01', 'synonyms': ['beer_bottle'], 'def': 'a bottle that holds beer', 'name': 'beer_bottle'}, {'frequency': 'c', 'id': 85, 'synset': 'beer_can.n.01', 'synonyms': ['beer_can'], 'def': 'a can that holds beer', 'name': 'beer_can'}, {'frequency': 'r', 'id': 86, 'synset': 'beetle.n.01', 'synonyms': ['beetle'], 'def': 'insect with hard wing covers', 'name': 'beetle'}, {'frequency': 'f', 'id': 87, 'synset': 'bell.n.01', 'synonyms': ['bell'], 'def': 'a hollow device made of metal that makes a ringing sound when struck', 'name': 'bell'}, {'frequency': 'f', 'id': 88, 'synset': 'bell_pepper.n.02', 'synonyms': ['bell_pepper', 'capsicum'], 'def': 'large bell-shaped sweet pepper in green or red or yellow or orange or black varieties', 'name': 'bell_pepper'}, {'frequency': 'f', 'id': 89, 'synset': 'belt.n.02', 'synonyms': ['belt'], 'def': 'a band to tie or buckle around the body (usually at the waist)', 'name': 'belt'}, {'frequency': 'f', 'id': 90, 'synset': 'belt_buckle.n.01', 'synonyms': ['belt_buckle'], 'def': 'the buckle used to fasten a belt', 'name': 'belt_buckle'}, {'frequency': 'f', 'id': 91, 'synset': 'bench.n.01', 'synonyms': ['bench'], 'def': 'a long seat for more than one person', 'name': 'bench'}, {'frequency': 'c', 'id': 92, 'synset': 'beret.n.01', 'synonyms': ['beret'], 'def': 'a cap with no brim or bill; made of soft cloth', 'name': 'beret'}, {'frequency': 'c', 'id': 93, 'synset': 'bib.n.02', 'synonyms': ['bib'], 'def': 'a napkin tied under the chin of a child while eating', 'name': 'bib'}, {'frequency': 'r', 'id': 94, 'synset': 'bible.n.01', 'synonyms': ['Bible'], 'def': 'the sacred writings of the Christian religions', 'name': 'Bible'}, {'frequency': 'f', 'id': 95, 'synset': 'bicycle.n.01', 'synonyms': ['bicycle', 'bike_(bicycle)'], 'def': 'a wheeled vehicle that has two wheels and is moved by foot pedals', 'name': 'bicycle'}, {'frequency': 'f', 'id': 96, 'synset': 'bill.n.09', 'synonyms': ['visor', 'vizor'], 'def': 'a brim that projects to the front to shade the eyes', 'name': 'visor'}, {'frequency': 'c', 'id': 97, 'synset': 'binder.n.03', 'synonyms': ['binder', 'ring-binder'], 'def': 'holds loose papers or magazines', 'name': 'binder'}, {'frequency': 'c', 'id': 98, 'synset': 'binoculars.n.01', 'synonyms': ['binoculars', 'field_glasses', 'opera_glasses'], 'def': 'an optical instrument designed for simultaneous use by both eyes', 'name': 'binoculars'}, {'frequency': 'f', 'id': 99, 'synset': 'bird.n.01', 'synonyms': ['bird'], 'def': 'animal characterized by feathers and wings', 'name': 'bird'}, {'frequency': 'r', 'id': 100, 'synset': 'bird_feeder.n.01', 'synonyms': ['birdfeeder'], 'def': 'an outdoor device that supplies food for wild birds', 'name': 'birdfeeder'}, {'frequency': 'r', 'id': 101, 'synset': 'birdbath.n.01', 'synonyms': ['birdbath'], 'def': 'an ornamental basin (usually in a garden) for birds to bathe in', 'name': 'birdbath'}, {'frequency': 'c', 'id': 102, 'synset': 'birdcage.n.01', 'synonyms': ['birdcage'], 'def': 'a cage in which a bird can be kept', 'name': 'birdcage'}, {'frequency': 'c', 'id': 103, 'synset': 'birdhouse.n.01', 'synonyms': ['birdhouse'], 'def': 'a shelter for birds', 'name': 'birdhouse'}, {'frequency': 'f', 'id': 104, 'synset': 'birthday_cake.n.01', 'synonyms': ['birthday_cake'], 'def': 'decorated cake served at a birthday party', 'name': 'birthday_cake'}, {'frequency': 'r', 'id': 105, 'synset': 'birthday_card.n.01', 'synonyms': ['birthday_card'], 'def': 'a card expressing a birthday greeting', 'name': 'birthday_card'}, {'frequency': 'r', 'id': 106, 'synset': 'biscuit.n.01', 'synonyms': ['biscuit_(bread)'], 'def': 'small round bread leavened with baking-powder or soda', 'name': 'biscuit_(bread)'}, {'frequency': 'r', 'id': 107, 'synset': 'black_flag.n.01', 'synonyms': ['pirate_flag'], 'def': 'a flag usually bearing a white skull and crossbones on a black background', 'name': 'pirate_flag'}, {'frequency': 'c', 'id': 108, 'synset': 'black_sheep.n.02', 'synonyms': ['black_sheep'], 'def': 'sheep with a black coat', 'name': 'black_sheep'}, {'frequency': 'c', 'id': 109, 'synset': 'blackboard.n.01', 'synonyms': ['blackboard', 'chalkboard'], 'def': 'sheet of slate; for writing with chalk', 'name': 'blackboard'}, {'frequency': 'f', 'id': 110, 'synset': 'blanket.n.01', 'synonyms': ['blanket'], 'def': 'bedding that keeps a person warm in bed', 'name': 'blanket'}, {'frequency': 'c', 'id': 111, 'synset': 'blazer.n.01', 'synonyms': ['blazer', 'sport_jacket', 'sport_coat', 'sports_jacket', 'sports_coat'], 'def': 'lightweight jacket; often striped in the colors of a club or school', 'name': 'blazer'}, {'frequency': 'f', 'id': 112, 'synset': 'blender.n.01', 'synonyms': ['blender', 'liquidizer', 'liquidiser'], 'def': 'an electrically powered mixer that mix or chop or liquefy foods', 'name': 'blender'}, {'frequency': 'r', 'id': 113, 'synset': 'blimp.n.02', 'synonyms': ['blimp'], 'def': 'a small nonrigid airship used for observation or as a barrage balloon', 'name': 'blimp'}, {'frequency': 'c', 'id': 114, 'synset': 'blinker.n.01', 'synonyms': ['blinker', 'flasher'], 'def': 'a light that flashes on and off; used as a signal or to send messages', 'name': 'blinker'}, {'frequency': 'c', 'id': 115, 'synset': 'blueberry.n.02', 'synonyms': ['blueberry'], 'def': 'sweet edible dark-blue berries of blueberry plants', 'name': 'blueberry'}, {'frequency': 'r', 'id': 116, 'synset': 'boar.n.02', 'synonyms': ['boar'], 'def': 'an uncastrated male hog', 'name': 'boar'}, {'frequency': 'r', 'id': 117, 'synset': 'board.n.09', 'synonyms': ['gameboard'], 'def': 'a flat portable surface (usually rectangular) designed for board games', 'name': 'gameboard'}, {'frequency': 'f', 'id': 118, 'synset': 'boat.n.01', 'synonyms': ['boat', 'ship_(boat)'], 'def': 'a vessel for travel on water', 'name': 'boat'}, {'frequency': 'c', 'id': 119, 'synset': 'bobbin.n.01', 'synonyms': ['bobbin', 'spool', 'reel'], 'def': 'a thing around which thread\/tape\/film or other flexible materials can be wound', 'name': 'bobbin'}, {'frequency': 'r', 'id': 120, 'synset': 'bobby_pin.n.01', 'synonyms': ['bobby_pin', 'hairgrip'], 'def': 'a flat wire hairpin used to hold bobbed hair in place', 'name': 'bobby_pin'}, {'frequency': 'c', 'id': 121, 'synset': 'boiled_egg.n.01', 'synonyms': ['boiled_egg', 'coddled_egg'], 'def': 'egg cooked briefly in the shell in gently boiling water', 'name': 'boiled_egg'}, {'frequency': 'r', 'id': 122, 'synset': 'bolo_tie.n.01', 'synonyms': ['bolo_tie', 'bolo', 'bola_tie', 'bola'], 'def': 'a cord fastened around the neck with an ornamental clasp and worn as a necktie', 'name': 'bolo_tie'}, {'frequency': 'c', 'id': 123, 'synset': 'bolt.n.03', 'synonyms': ['deadbolt'], 'def': 'the part of a lock that is engaged or withdrawn with a key', 'name': 'deadbolt'}, {'frequency': 'f', 'id': 124, 'synset': 'bolt.n.06', 'synonyms': ['bolt'], 'def': 'a screw that screws into a nut to form a fastener', 'name': 'bolt'}, {'frequency': 'r', 'id': 125, 'synset': 'bonnet.n.01', 'synonyms': ['bonnet'], 'def': 'a hat tied under the chin', 'name': 'bonnet'}, {'frequency': 'f', 'id': 126, 'synset': 'book.n.01', 'synonyms': ['book'], 'def': 'a written work or composition that has been published', 'name': 'book'}, {'frequency': 'r', 'id': 127, 'synset': 'book_bag.n.01', 'synonyms': ['book_bag'], 'def': 'a bag in which students carry their books', 'name': 'book_bag'}, {'frequency': 'c', 'id': 128, 'synset': 'bookcase.n.01', 'synonyms': ['bookcase'], 'def': 'a piece of furniture with shelves for storing books', 'name': 'bookcase'}, {'frequency': 'c', 'id': 129, 'synset': 'booklet.n.01', 'synonyms': ['booklet', 'brochure', 'leaflet', 'pamphlet'], 'def': 'a small book usually having a paper cover', 'name': 'booklet'}, {'frequency': 'r', 'id': 130, 'synset': 'bookmark.n.01', 'synonyms': ['bookmark', 'bookmarker'], 'def': 'a marker (a piece of paper or ribbon) placed between the pages of a book', 'name': 'bookmark'}, {'frequency': 'r', 'id': 131, 'synset': 'boom.n.04', 'synonyms': ['boom_microphone', 'microphone_boom'], 'def': 'a pole carrying an overhead microphone projected over a film or tv set', 'name': 'boom_microphone'}, {'frequency': 'f', 'id': 132, 'synset': 'boot.n.01', 'synonyms': ['boot'], 'def': 'footwear that covers the whole foot and lower leg', 'name': 'boot'}, {'frequency': 'f', 'id': 133, 'synset': 'bottle.n.01', 'synonyms': ['bottle'], 'def': 'a glass or plastic vessel used for storing drinks or other liquids', 'name': 'bottle'}, {'frequency': 'c', 'id': 134, 'synset': 'bottle_opener.n.01', 'synonyms': ['bottle_opener'], 'def': 'an opener for removing caps or corks from bottles', 'name': 'bottle_opener'}, {'frequency': 'c', 'id': 135, 'synset': 'bouquet.n.01', 'synonyms': ['bouquet'], 'def': 'an arrangement of flowers that is usually given as a present', 'name': 'bouquet'}, {'frequency': 'r', 'id': 136, 'synset': 'bow.n.04', 'synonyms': ['bow_(weapon)'], 'def': 'a weapon for shooting arrows', 'name': 'bow_(weapon)'}, {'frequency': 'f', 'id': 137, 'synset': 'bow.n.08', 'synonyms': ['bow_(decorative_ribbons)'], 'def': 'a decorative interlacing of ribbons', 'name': 'bow_(decorative_ribbons)'}, {'frequency': 'f', 'id': 138, 'synset': 'bow_tie.n.01', 'synonyms': ['bow-tie', 'bowtie'], 'def': "a man's tie that ties in a bow", 'name': 'bow-tie'}, {'frequency': 'f', 'id': 139, 'synset': 'bowl.n.03', 'synonyms': ['bowl'], 'def': 'a dish that is round and open at the top for serving foods', 'name': 'bowl'}, {'frequency': 'r', 'id': 140, 'synset': 'bowl.n.08', 'synonyms': ['pipe_bowl'], 'def': 'a small round container that is open at the top for holding tobacco', 'name': 'pipe_bowl'}, {'frequency': 'c', 'id': 141, 'synset': 'bowler_hat.n.01', 'synonyms': ['bowler_hat', 'bowler', 'derby_hat', 'derby', 'plug_hat'], 'def': 'a felt hat that is round and hard with a narrow brim', 'name': 'bowler_hat'}, {'frequency': 'r', 'id': 142, 'synset': 'bowling_ball.n.01', 'synonyms': ['bowling_ball'], 'def': 'a large ball with finger holes used in the sport of bowling', 'name': 'bowling_ball'}, {'frequency': 'r', 'id': 143, 'synset': 'bowling_pin.n.01', 'synonyms': ['bowling_pin'], 'def': 'a club-shaped wooden object used in bowling', 'name': 'bowling_pin'}, {'frequency': 'r', 'id': 144, 'synset': 'boxing_glove.n.01', 'synonyms': ['boxing_glove'], 'def': 'large glove coverings the fists of a fighter worn for the sport of boxing', 'name': 'boxing_glove'}, {'frequency': 'c', 'id': 145, 'synset': 'brace.n.06', 'synonyms': ['suspenders'], 'def': 'elastic straps that hold trousers up (usually used in the plural)', 'name': 'suspenders'}, {'frequency': 'f', 'id': 146, 'synset': 'bracelet.n.02', 'synonyms': ['bracelet', 'bangle'], 'def': 'jewelry worn around the wrist for decoration', 'name': 'bracelet'}, {'frequency': 'r', 'id': 147, 'synset': 'brass.n.07', 'synonyms': ['brass_plaque'], 'def': 'a memorial made of brass', 'name': 'brass_plaque'}, {'frequency': 'c', 'id': 148, 'synset': 'brassiere.n.01', 'synonyms': ['brassiere', 'bra', 'bandeau'], 'def': 'an undergarment worn by women to support their breasts', 'name': 'brassiere'}, {'frequency': 'c', 'id': 149, 'synset': 'bread-bin.n.01', 'synonyms': ['bread-bin', 'breadbox'], 'def': 'a container used to keep bread or cake in', 'name': 'bread-bin'}, {'frequency': 'r', 'id': 150, 'synset': 'breechcloth.n.01', 'synonyms': ['breechcloth', 'breechclout', 'loincloth'], 'def': 'a garment that provides covering for the loins', 'name': 'breechcloth'}, {'frequency': 'c', 'id': 151, 'synset': 'bridal_gown.n.01', 'synonyms': ['bridal_gown', 'wedding_gown', 'wedding_dress'], 'def': 'a gown worn by the bride at a wedding', 'name': 'bridal_gown'}, {'frequency': 'c', 'id': 152, 'synset': 'briefcase.n.01', 'synonyms': ['briefcase'], 'def': 'a case with a handle; for carrying papers or files or books', 'name': 'briefcase'}, {'frequency': 'c', 'id': 153, 'synset': 'bristle_brush.n.01', 'synonyms': ['bristle_brush'], 'def': 'a brush that is made with the short stiff hairs of an animal or plant', 'name': 'bristle_brush'}, {'frequency': 'f', 'id': 154, 'synset': 'broccoli.n.01', 'synonyms': ['broccoli'], 'def': 'plant with dense clusters of tight green flower buds', 'name': 'broccoli'}, {'frequency': 'r', 'id': 155, 'synset': 'brooch.n.01', 'synonyms': ['broach'], 'def': 'a decorative pin worn by women', 'name': 'broach'}, {'frequency': 'c', 'id': 156, 'synset': 'broom.n.01', 'synonyms': ['broom'], 'def': 'bundle of straws or twigs attached to a long handle; used for cleaning', 'name': 'broom'}, {'frequency': 'c', 'id': 157, 'synset': 'brownie.n.03', 'synonyms': ['brownie'], 'def': 'square or bar of very rich chocolate cake usually with nuts', 'name': 'brownie'}, {'frequency': 'c', 'id': 158, 'synset': 'brussels_sprouts.n.01', 'synonyms': ['brussels_sprouts'], 'def': 'the small edible cabbage-like buds growing along a stalk', 'name': 'brussels_sprouts'}, {'frequency': 'r', 'id': 159, 'synset': 'bubble_gum.n.01', 'synonyms': ['bubble_gum'], 'def': 'a kind of chewing gum that can be blown into bubbles', 'name': 'bubble_gum'}, {'frequency': 'f', 'id': 160, 'synset': 'bucket.n.01', 'synonyms': ['bucket', 'pail'], 'def': 'a roughly cylindrical vessel that is open at the top', 'name': 'bucket'}, {'frequency': 'r', 'id': 161, 'synset': 'buggy.n.01', 'synonyms': ['horse_buggy'], 'def': 'a small lightweight carriage; drawn by a single horse', 'name': 'horse_buggy'}, {'frequency': 'c', 'id': 162, 'synset': 'bull.n.11', 'synonyms': ['bull'], 'def': 'mature male cow', 'name': 'bull'}, {'frequency': 'r', 'id': 163, 'synset': 'bulldog.n.01', 'synonyms': ['bulldog'], 'def': 'a thickset short-haired dog with a large head and strong undershot lower jaw', 'name': 'bulldog'}, {'frequency': 'r', 'id': 164, 'synset': 'bulldozer.n.01', 'synonyms': ['bulldozer', 'dozer'], 'def': 'large powerful tractor; a large blade in front flattens areas of ground', 'name': 'bulldozer'}, {'frequency': 'c', 'id': 165, 'synset': 'bullet_train.n.01', 'synonyms': ['bullet_train'], 'def': 'a high-speed passenger train', 'name': 'bullet_train'}, {'frequency': 'c', 'id': 166, 'synset': 'bulletin_board.n.02', 'synonyms': ['bulletin_board', 'notice_board'], 'def': 'a board that hangs on a wall; displays announcements', 'name': 'bulletin_board'}, {'frequency': 'r', 'id': 167, 'synset': 'bulletproof_vest.n.01', 'synonyms': ['bulletproof_vest'], 'def': 'a vest capable of resisting the impact of a bullet', 'name': 'bulletproof_vest'}, {'frequency': 'c', 'id': 168, 'synset': 'bullhorn.n.01', 'synonyms': ['bullhorn', 'megaphone'], 'def': 'a portable loudspeaker with built-in microphone and amplifier', 'name': 'bullhorn'}, {'frequency': 'r', 'id': 169, 'synset': 'bully_beef.n.01', 'synonyms': ['corned_beef', 'corn_beef'], 'def': 'beef cured or pickled in brine', 'name': 'corned_beef'}, {'frequency': 'f', 'id': 170, 'synset': 'bun.n.01', 'synonyms': ['bun', 'roll'], 'def': 'small rounded bread either plain or sweet', 'name': 'bun'}, {'frequency': 'c', 'id': 171, 'synset': 'bunk_bed.n.01', 'synonyms': ['bunk_bed'], 'def': 'beds built one above the other', 'name': 'bunk_bed'}, {'frequency': 'f', 'id': 172, 'synset': 'buoy.n.01', 'synonyms': ['buoy'], 'def': 'a float attached by rope to the seabed to mark channels in a harbor or underwater hazards', 'name': 'buoy'}, {'frequency': 'r', 'id': 173, 'synset': 'burrito.n.01', 'synonyms': ['burrito'], 'def': 'a flour tortilla folded around a filling', 'name': 'burrito'}, {'frequency': 'f', 'id': 174, 'synset': 'bus.n.01', 'synonyms': ['bus_(vehicle)', 'autobus', 'charabanc', 'double-decker', 'motorbus', 'motorcoach'], 'def': 'a vehicle carrying many passengers; used for public transport', 'name': 'bus_(vehicle)'}, {'frequency': 'c', 'id': 175, 'synset': 'business_card.n.01', 'synonyms': ['business_card'], 'def': "a card on which are printed the person's name and business affiliation", 'name': 'business_card'}, {'frequency': 'c', 'id': 176, 'synset': 'butcher_knife.n.01', 'synonyms': ['butcher_knife'], 'def': 'a large sharp knife for cutting or trimming meat', 'name': 'butcher_knife'}, {'frequency': 'c', 'id': 177, 'synset': 'butter.n.01', 'synonyms': ['butter'], 'def': 'an edible emulsion of fat globules made by churning milk or cream; for cooking and table use', 'name': 'butter'}, {'frequency': 'c', 'id': 178, 'synset': 'butterfly.n.01', 'synonyms': ['butterfly'], 'def': 'insect typically having a slender body with knobbed antennae and broad colorful wings', 'name': 'butterfly'}, {'frequency': 'f', 'id': 179, 'synset': 'button.n.01', 'synonyms': ['button'], 'def': 'a round fastener sewn to shirts and coats etc to fit through buttonholes', 'name': 'button'}, {'frequency': 'f', 'id': 180, 'synset': 'cab.n.03', 'synonyms': ['cab_(taxi)', 'taxi', 'taxicab'], 'def': 'a car that takes passengers where they want to go in exchange for money', 'name': 'cab_(taxi)'}, {'frequency': 'r', 'id': 181, 'synset': 'cabana.n.01', 'synonyms': ['cabana'], 'def': 'a small tent used as a dressing room beside the sea or a swimming pool', 'name': 'cabana'}, {'frequency': 'r', 'id': 182, 'synset': 'cabin_car.n.01', 'synonyms': ['cabin_car', 'caboose'], 'def': 'a car on a freight train for use of the train crew; usually the last car on the train', 'name': 'cabin_car'}, {'frequency': 'f', 'id': 183, 'synset': 'cabinet.n.01', 'synonyms': ['cabinet'], 'def': 'a piece of furniture resembling a cupboard with doors and shelves and drawers', 'name': 'cabinet'}, {'frequency': 'r', 'id': 184, 'synset': 'cabinet.n.03', 'synonyms': ['locker', 'storage_locker'], 'def': 'a storage compartment for clothes and valuables; usually it has a lock', 'name': 'locker'}, {'frequency': 'f', 'id': 185, 'synset': 'cake.n.03', 'synonyms': ['cake'], 'def': 'baked goods made from or based on a mixture of flour, sugar, eggs, and fat', 'name': 'cake'}, {'frequency': 'c', 'id': 186, 'synset': 'calculator.n.02', 'synonyms': ['calculator'], 'def': 'a small machine that is used for mathematical calculations', 'name': 'calculator'}, {'frequency': 'f', 'id': 187, 'synset': 'calendar.n.02', 'synonyms': ['calendar'], 'def': 'a list or register of events (appointments\/social events\/court cases, etc)', 'name': 'calendar'}, {'frequency': 'c', 'id': 188, 'synset': 'calf.n.01', 'synonyms': ['calf'], 'def': 'young of domestic cattle', 'name': 'calf'}, {'frequency': 'c', 'id': 189, 'synset': 'camcorder.n.01', 'synonyms': ['camcorder'], 'def': 'a portable television camera and videocassette recorder', 'name': 'camcorder'}, {'frequency': 'c', 'id': 190, 'synset': 'camel.n.01', 'synonyms': ['camel'], 'def': 'cud-chewing mammal used as a draft or saddle animal in desert regions', 'name': 'camel'}, {'frequency': 'f', 'id': 191, 'synset': 'camera.n.01', 'synonyms': ['camera'], 'def': 'equipment for taking photographs', 'name': 'camera'}, {'frequency': 'c', 'id': 192, 'synset': 'camera_lens.n.01', 'synonyms': ['camera_lens'], 'def': 'a lens that focuses the image in a camera', 'name': 'camera_lens'}, {'frequency': 'c', 'id': 193, 'synset': 'camper.n.02', 'synonyms': ['camper_(vehicle)', 'camping_bus', 'motor_home'], 'def': 'a recreational vehicle equipped for camping out while traveling', 'name': 'camper_(vehicle)'}, {'frequency': 'f', 'id': 194, 'synset': 'can.n.01', 'synonyms': ['can', 'tin_can'], 'def': 'airtight sealed metal container for food or drink or paint etc.', 'name': 'can'}, {'frequency': 'c', 'id': 195, 'synset': 'can_opener.n.01', 'synonyms': ['can_opener', 'tin_opener'], 'def': 'a device for cutting cans open', 'name': 'can_opener'}, {'frequency': 'r', 'id': 196, 'synset': 'candelabrum.n.01', 'synonyms': ['candelabrum', 'candelabra'], 'def': 'branched candlestick; ornamental; has several lights', 'name': 'candelabrum'}, {'frequency': 'f', 'id': 197, 'synset': 'candle.n.01', 'synonyms': ['candle', 'candlestick'], 'def': 'stick of wax with a wick in the middle', 'name': 'candle'}, {'frequency': 'f', 'id': 198, 'synset': 'candlestick.n.01', 'synonyms': ['candle_holder'], 'def': 'a holder with sockets for candles', 'name': 'candle_holder'}, {'frequency': 'r', 'id': 199, 'synset': 'candy_bar.n.01', 'synonyms': ['candy_bar'], 'def': 'a candy shaped as a bar', 'name': 'candy_bar'}, {'frequency': 'c', 'id': 200, 'synset': 'candy_cane.n.01', 'synonyms': ['candy_cane'], 'def': 'a hard candy in the shape of a rod (usually with stripes)', 'name': 'candy_cane'}, {'frequency': 'c', 'id': 201, 'synset': 'cane.n.01', 'synonyms': ['walking_cane'], 'def': 'a stick that people can lean on to help them walk', 'name': 'walking_cane'}, {'frequency': 'c', 'id': 202, 'synset': 'canister.n.02', 'synonyms': ['canister', 'cannister'], 'def': 'metal container for storing dry foods such as tea or flour', 'name': 'canister'}, {'frequency': 'r', 'id': 203, 'synset': 'cannon.n.02', 'synonyms': ['cannon'], 'def': 'heavy gun fired from a tank', 'name': 'cannon'}, {'frequency': 'c', 'id': 204, 'synset': 'canoe.n.01', 'synonyms': ['canoe'], 'def': 'small and light boat; pointed at both ends; propelled with a paddle', 'name': 'canoe'}, {'frequency': 'r', 'id': 205, 'synset': 'cantaloup.n.02', 'synonyms': ['cantaloup', 'cantaloupe'], 'def': 'the fruit of a cantaloup vine; small to medium-sized melon with yellowish flesh', 'name': 'cantaloup'}, {'frequency': 'r', 'id': 206, 'synset': 'canteen.n.01', 'synonyms': ['canteen'], 'def': 'a flask for carrying water; used by soldiers or travelers', 'name': 'canteen'}, {'frequency': 'c', 'id': 207, 'synset': 'cap.n.01', 'synonyms': ['cap_(headwear)'], 'def': 'a tight-fitting headwear', 'name': 'cap_(headwear)'}, {'frequency': 'f', 'id': 208, 'synset': 'cap.n.02', 'synonyms': ['bottle_cap', 'cap_(container_lid)'], 'def': 'a top (as for a bottle)', 'name': 'bottle_cap'}, {'frequency': 'r', 'id': 209, 'synset': 'cape.n.02', 'synonyms': ['cape'], 'def': 'a sleeveless garment like a cloak but shorter', 'name': 'cape'}, {'frequency': 'c', 'id': 210, 'synset': 'cappuccino.n.01', 'synonyms': ['cappuccino', 'coffee_cappuccino'], 'def': 'equal parts of espresso and steamed milk', 'name': 'cappuccino'}, {'frequency': 'f', 'id': 211, 'synset': 'car.n.01', 'synonyms': ['car_(automobile)', 'auto_(automobile)', 'automobile'], 'def': 'a motor vehicle with four wheels', 'name': 'car_(automobile)'}, {'frequency': 'f', 'id': 212, 'synset': 'car.n.02', 'synonyms': ['railcar_(part_of_a_train)', 'railway_car_(part_of_a_train)', 'railroad_car_(part_of_a_train)'], 'def': 'a wheeled vehicle adapted to the rails of railroad', 'name': 'railcar_(part_of_a_train)'}, {'frequency': 'r', 'id': 213, 'synset': 'car.n.04', 'synonyms': ['elevator_car'], 'def': 'where passengers ride up and down', 'name': 'elevator_car'}, {'frequency': 'r', 'id': 214, 'synset': 'car_battery.n.01', 'synonyms': ['car_battery', 'automobile_battery'], 'def': 'a battery in a motor vehicle', 'name': 'car_battery'}, {'frequency': 'c', 'id': 215, 'synset': 'card.n.02', 'synonyms': ['identity_card'], 'def': 'a card certifying the identity of the bearer', 'name': 'identity_card'}, {'frequency': 'c', 'id': 216, 'synset': 'card.n.03', 'synonyms': ['card'], 'def': 'a rectangular piece of paper used to send messages (e.g. greetings or pictures)', 'name': 'card'}, {'frequency': 'r', 'id': 217, 'synset': 'cardigan.n.01', 'synonyms': ['cardigan'], 'def': 'knitted jacket that is fastened up the front with buttons or a zipper', 'name': 'cardigan'}, {'frequency': 'r', 'id': 218, 'synset': 'cargo_ship.n.01', 'synonyms': ['cargo_ship', 'cargo_vessel'], 'def': 'a ship designed to carry cargo', 'name': 'cargo_ship'}, {'frequency': 'r', 'id': 219, 'synset': 'carnation.n.01', 'synonyms': ['carnation'], 'def': 'plant with pink to purple-red spice-scented usually double flowers', 'name': 'carnation'}, {'frequency': 'c', 'id': 220, 'synset': 'carriage.n.02', 'synonyms': ['horse_carriage'], 'def': 'a vehicle with wheels drawn by one or more horses', 'name': 'horse_carriage'}, {'frequency': 'f', 'id': 221, 'synset': 'carrot.n.01', 'synonyms': ['carrot'], 'def': 'deep orange edible root of the cultivated carrot plant', 'name': 'carrot'}, {'frequency': 'c', 'id': 222, 'synset': 'carryall.n.01', 'synonyms': ['tote_bag'], 'def': 'a capacious bag or basket', 'name': 'tote_bag'}, {'frequency': 'c', 'id': 223, 'synset': 'cart.n.01', 'synonyms': ['cart'], 'def': 'a heavy open wagon usually having two wheels and drawn by an animal', 'name': 'cart'}, {'frequency': 'c', 'id': 224, 'synset': 'carton.n.02', 'synonyms': ['carton'], 'def': 'a box made of cardboard; opens by flaps on top', 'name': 'carton'}, {'frequency': 'c', 'id': 225, 'synset': 'cash_register.n.01', 'synonyms': ['cash_register', 'register_(for_cash_transactions)'], 'def': 'a cashbox with an adding machine to register transactions', 'name': 'cash_register'}, {'frequency': 'r', 'id': 226, 'synset': 'casserole.n.01', 'synonyms': ['casserole'], 'def': 'food cooked and served in a casserole', 'name': 'casserole'}, {'frequency': 'r', 'id': 227, 'synset': 'cassette.n.01', 'synonyms': ['cassette'], 'def': 'a container that holds a magnetic tape used for recording or playing sound or video', 'name': 'cassette'}, {'frequency': 'c', 'id': 228, 'synset': 'cast.n.05', 'synonyms': ['cast', 'plaster_cast', 'plaster_bandage'], 'def': 'bandage consisting of a firm covering that immobilizes broken bones while they heal', 'name': 'cast'}, {'frequency': 'f', 'id': 229, 'synset': 'cat.n.01', 'synonyms': ['cat'], 'def': 'a domestic house cat', 'name': 'cat'}, {'frequency': 'c', 'id': 230, 'synset': 'cauliflower.n.02', 'synonyms': ['cauliflower'], 'def': 'edible compact head of white undeveloped flowers', 'name': 'cauliflower'}, {'frequency': 'r', 'id': 231, 'synset': 'caviar.n.01', 'synonyms': ['caviar', 'caviare'], 'def': "salted roe of sturgeon or other large fish; usually served as an hors d'oeuvre", 'name': 'caviar'}, {'frequency': 'c', 'id': 232, 'synset': 'cayenne.n.02', 'synonyms': ['cayenne_(spice)', 'cayenne_pepper_(spice)', 'red_pepper_(spice)'], 'def': 'ground pods and seeds of pungent red peppers of the genus Capsicum', 'name': 'cayenne_(spice)'}, {'frequency': 'c', 'id': 233, 'synset': 'cd_player.n.01', 'synonyms': ['CD_player'], 'def': 'electronic equipment for playing compact discs (CDs)', 'name': 'CD_player'}, {'frequency': 'c', 'id': 234, 'synset': 'celery.n.01', 'synonyms': ['celery'], 'def': 'widely cultivated herb with aromatic leaf stalks that are eaten raw or cooked', 'name': 'celery'}, {'frequency': 'f', 'id': 235, 'synset': 'cellular_telephone.n.01', 'synonyms': ['cellular_telephone', 'cellular_phone', 'cellphone', 'mobile_phone', 'smart_phone'], 'def': 'a hand-held mobile telephone', 'name': 'cellular_telephone'}, {'frequency': 'r', 'id': 236, 'synset': 'chain_mail.n.01', 'synonyms': ['chain_mail', 'ring_mail', 'chain_armor', 'chain_armour', 'ring_armor', 'ring_armour'], 'def': '(Middle Ages) flexible armor made of interlinked metal rings', 'name': 'chain_mail'}, {'frequency': 'f', 'id': 237, 'synset': 'chair.n.01', 'synonyms': ['chair'], 'def': 'a seat for one person, with a support for the back', 'name': 'chair'}, {'frequency': 'r', 'id': 238, 'synset': 'chaise_longue.n.01', 'synonyms': ['chaise_longue', 'chaise', 'daybed'], 'def': 'a long chair; for reclining', 'name': 'chaise_longue'}, {'frequency': 'r', 'id': 239, 'synset': 'champagne.n.01', 'synonyms': ['champagne'], 'def': 'a white sparkling wine produced in Champagne or resembling that produced there', 'name': 'champagne'}, {'frequency': 'f', 'id': 240, 'synset': 'chandelier.n.01', 'synonyms': ['chandelier'], 'def': 'branched lighting fixture; often ornate; hangs from the ceiling', 'name': 'chandelier'}, {'frequency': 'r', 'id': 241, 'synset': 'chap.n.04', 'synonyms': ['chap'], 'def': 'leather leggings without a seat; worn over trousers by cowboys to protect their legs', 'name': 'chap'}, {'frequency': 'r', 'id': 242, 'synset': 'checkbook.n.01', 'synonyms': ['checkbook', 'chequebook'], 'def': 'a book issued to holders of checking accounts', 'name': 'checkbook'}, {'frequency': 'r', 'id': 243, 'synset': 'checkerboard.n.01', 'synonyms': ['checkerboard'], 'def': 'a board having 64 squares of two alternating colors', 'name': 'checkerboard'}, {'frequency': 'c', 'id': 244, 'synset': 'cherry.n.03', 'synonyms': ['cherry'], 'def': 'a red fruit with a single hard stone', 'name': 'cherry'}, {'frequency': 'r', 'id': 245, 'synset': 'chessboard.n.01', 'synonyms': ['chessboard'], 'def': 'a checkerboard used to play chess', 'name': 'chessboard'}, {'frequency': 'r', 'id': 246, 'synset': 'chest_of_drawers.n.01', 'synonyms': ['chest_of_drawers_(furniture)', 'bureau_(furniture)', 'chest_(furniture)'], 'def': 'furniture with drawers for keeping clothes', 'name': 'chest_of_drawers_(furniture)'}, {'frequency': 'c', 'id': 247, 'synset': 'chicken.n.02', 'synonyms': ['chicken_(animal)'], 'def': 'a domestic fowl bred for flesh or eggs', 'name': 'chicken_(animal)'}, {'frequency': 'c', 'id': 248, 'synset': 'chicken_wire.n.01', 'synonyms': ['chicken_wire'], 'def': 'a galvanized wire network with a hexagonal mesh; used to build fences', 'name': 'chicken_wire'}, {'frequency': 'r', 'id': 249, 'synset': 'chickpea.n.01', 'synonyms': ['chickpea', 'garbanzo'], 'def': 'the seed of the chickpea plant; usually dried', 'name': 'chickpea'}, {'frequency': 'r', 'id': 250, 'synset': 'chihuahua.n.03', 'synonyms': ['Chihuahua'], 'def': 'an old breed of tiny short-haired dog with protruding eyes from Mexico', 'name': 'Chihuahua'}, {'frequency': 'r', 'id': 251, 'synset': 'chili.n.02', 'synonyms': ['chili_(vegetable)', 'chili_pepper_(vegetable)', 'chilli_(vegetable)', 'chilly_(vegetable)', 'chile_(vegetable)'], 'def': 'very hot and finely tapering pepper of special pungency', 'name': 'chili_(vegetable)'}, {'frequency': 'r', 'id': 252, 'synset': 'chime.n.01', 'synonyms': ['chime', 'gong'], 'def': 'an instrument consisting of a set of bells that are struck with a hammer', 'name': 'chime'}, {'frequency': 'r', 'id': 253, 'synset': 'chinaware.n.01', 'synonyms': ['chinaware'], 'def': 'dishware made of high quality porcelain', 'name': 'chinaware'}, {'frequency': 'c', 'id': 254, 'synset': 'chip.n.04', 'synonyms': ['crisp_(potato_chip)', 'potato_chip'], 'def': 'a thin crisp slice of potato fried in deep fat', 'name': 'crisp_(potato_chip)'}, {'frequency': 'r', 'id': 255, 'synset': 'chip.n.06', 'synonyms': ['poker_chip'], 'def': 'a small disk-shaped counter used to represent money when gambling', 'name': 'poker_chip'}, {'frequency': 'c', 'id': 256, 'synset': 'chocolate_bar.n.01', 'synonyms': ['chocolate_bar'], 'def': 'a bar of chocolate candy', 'name': 'chocolate_bar'}, {'frequency': 'c', 'id': 257, 'synset': 'chocolate_cake.n.01', 'synonyms': ['chocolate_cake'], 'def': 'cake containing chocolate', 'name': 'chocolate_cake'}, {'frequency': 'r', 'id': 258, 'synset': 'chocolate_milk.n.01', 'synonyms': ['chocolate_milk'], 'def': 'milk flavored with chocolate syrup', 'name': 'chocolate_milk'}, {'frequency': 'r', 'id': 259, 'synset': 'chocolate_mousse.n.01', 'synonyms': ['chocolate_mousse'], 'def': 'dessert mousse made with chocolate', 'name': 'chocolate_mousse'}, {'frequency': 'f', 'id': 260, 'synset': 'choker.n.03', 'synonyms': ['choker', 'collar', 'neckband'], 'def': 'necklace that fits tightly around the neck', 'name': 'choker'}, {'frequency': 'f', 'id': 261, 'synset': 'chopping_board.n.01', 'synonyms': ['chopping_board', 'cutting_board', 'chopping_block'], 'def': 'a wooden board where meats or vegetables can be cut', 'name': 'chopping_board'}, {'frequency': 'c', 'id': 262, 'synset': 'chopstick.n.01', 'synonyms': ['chopstick'], 'def': 'one of a pair of slender sticks used as oriental tableware to eat food with', 'name': 'chopstick'}, {'frequency': 'f', 'id': 263, 'synset': 'christmas_tree.n.05', 'synonyms': ['Christmas_tree'], 'def': 'an ornamented evergreen used as a Christmas decoration', 'name': 'Christmas_tree'}, {'frequency': 'c', 'id': 264, 'synset': 'chute.n.02', 'synonyms': ['slide'], 'def': 'sloping channel through which things can descend', 'name': 'slide'}, {'frequency': 'r', 'id': 265, 'synset': 'cider.n.01', 'synonyms': ['cider', 'cyder'], 'def': 'a beverage made from juice pressed from apples', 'name': 'cider'}, {'frequency': 'r', 'id': 266, 'synset': 'cigar_box.n.01', 'synonyms': ['cigar_box'], 'def': 'a box for holding cigars', 'name': 'cigar_box'}, {'frequency': 'c', 'id': 267, 'synset': 'cigarette.n.01', 'synonyms': ['cigarette'], 'def': 'finely ground tobacco wrapped in paper; for smoking', 'name': 'cigarette'}, {'frequency': 'c', 'id': 268, 'synset': 'cigarette_case.n.01', 'synonyms': ['cigarette_case', 'cigarette_pack'], 'def': 'a small flat case for holding cigarettes', 'name': 'cigarette_case'}, {'frequency': 'f', 'id': 269, 'synset': 'cistern.n.02', 'synonyms': ['cistern', 'water_tank'], 'def': 'a tank that holds the water used to flush a toilet', 'name': 'cistern'}, {'frequency': 'r', 'id': 270, 'synset': 'clarinet.n.01', 'synonyms': ['clarinet'], 'def': 'a single-reed instrument with a straight tube', 'name': 'clarinet'}, {'frequency': 'r', 'id': 271, 'synset': 'clasp.n.01', 'synonyms': ['clasp'], 'def': 'a fastener (as a buckle or hook) that is used to hold two things together', 'name': 'clasp'}, {'frequency': 'c', 'id': 272, 'synset': 'cleansing_agent.n.01', 'synonyms': ['cleansing_agent', 'cleanser', 'cleaner'], 'def': 'a preparation used in cleaning something', 'name': 'cleansing_agent'}, {'frequency': 'r', 'id': 273, 'synset': 'clementine.n.01', 'synonyms': ['clementine'], 'def': 'a variety of mandarin orange', 'name': 'clementine'}, {'frequency': 'c', 'id': 274, 'synset': 'clip.n.03', 'synonyms': ['clip'], 'def': 'any of various small fasteners used to hold loose articles together', 'name': 'clip'}, {'frequency': 'c', 'id': 275, 'synset': 'clipboard.n.01', 'synonyms': ['clipboard'], 'def': 'a small writing board with a clip at the top for holding papers', 'name': 'clipboard'}, {'frequency': 'f', 'id': 276, 'synset': 'clock.n.01', 'synonyms': ['clock', 'timepiece', 'timekeeper'], 'def': 'a timepiece that shows the time of day', 'name': 'clock'}, {'frequency': 'f', 'id': 277, 'synset': 'clock_tower.n.01', 'synonyms': ['clock_tower'], 'def': 'a tower with a large clock visible high up on an outside face', 'name': 'clock_tower'}, {'frequency': 'c', 'id': 278, 'synset': 'clothes_hamper.n.01', 'synonyms': ['clothes_hamper', 'laundry_basket', 'clothes_basket'], 'def': 'a hamper that holds dirty clothes to be washed or wet clothes to be dried', 'name': 'clothes_hamper'}, {'frequency': 'c', 'id': 279, 'synset': 'clothespin.n.01', 'synonyms': ['clothespin', 'clothes_peg'], 'def': 'wood or plastic fastener; for holding clothes on a clothesline', 'name': 'clothespin'}, {'frequency': 'r', 'id': 280, 'synset': 'clutch_bag.n.01', 'synonyms': ['clutch_bag'], 'def': "a woman's strapless purse that is carried in the hand", 'name': 'clutch_bag'}, {'frequency': 'f', 'id': 281, 'synset': 'coaster.n.03', 'synonyms': ['coaster'], 'def': 'a covering (plate or mat) that protects the surface of a table', 'name': 'coaster'}, {'frequency': 'f', 'id': 282, 'synset': 'coat.n.01', 'synonyms': ['coat'], 'def': 'an outer garment that has sleeves and covers the body from shoulder down', 'name': 'coat'}, {'frequency': 'c', 'id': 283, 'synset': 'coat_hanger.n.01', 'synonyms': ['coat_hanger', 'clothes_hanger', 'dress_hanger'], 'def': "a hanger that is shaped like a person's shoulders", 'name': 'coat_hanger'}, {'frequency': 'r', 'id': 284, 'synset': 'coatrack.n.01', 'synonyms': ['coatrack', 'hatrack'], 'def': 'a rack with hooks for temporarily holding coats and hats', 'name': 'coatrack'}, {'frequency': 'c', 'id': 285, 'synset': 'cock.n.04', 'synonyms': ['cock', 'rooster'], 'def': 'adult male chicken', 'name': 'cock'}, {'frequency': 'c', 'id': 286, 'synset': 'coconut.n.02', 'synonyms': ['coconut', 'cocoanut'], 'def': 'large hard-shelled brown oval nut with a fibrous husk', 'name': 'coconut'}, {'frequency': 'r', 'id': 287, 'synset': 'coffee_filter.n.01', 'synonyms': ['coffee_filter'], 'def': 'filter (usually of paper) that passes the coffee and retains the coffee grounds', 'name': 'coffee_filter'}, {'frequency': 'f', 'id': 288, 'synset': 'coffee_maker.n.01', 'synonyms': ['coffee_maker', 'coffee_machine'], 'def': 'a kitchen appliance for brewing coffee automatically', 'name': 'coffee_maker'}, {'frequency': 'f', 'id': 289, 'synset': 'coffee_table.n.01', 'synonyms': ['coffee_table', 'cocktail_table'], 'def': 'low table where magazines can be placed and coffee or cocktails are served', 'name': 'coffee_table'}, {'frequency': 'c', 'id': 290, 'synset': 'coffeepot.n.01', 'synonyms': ['coffeepot'], 'def': 'tall pot in which coffee is brewed', 'name': 'coffeepot'}, {'frequency': 'r', 'id': 291, 'synset': 'coil.n.05', 'synonyms': ['coil'], 'def': 'tubing that is wound in a spiral', 'name': 'coil'}, {'frequency': 'c', 'id': 292, 'synset': 'coin.n.01', 'synonyms': ['coin'], 'def': 'a flat metal piece (usually a disc) used as money', 'name': 'coin'}, {'frequency': 'r', 'id': 293, 'synset': 'colander.n.01', 'synonyms': ['colander', 'cullender'], 'def': 'bowl-shaped strainer; used to wash or drain foods', 'name': 'colander'}, {'frequency': 'c', 'id': 294, 'synset': 'coleslaw.n.01', 'synonyms': ['coleslaw', 'slaw'], 'def': 'basically shredded cabbage', 'name': 'coleslaw'}, {'frequency': 'r', 'id': 295, 'synset': 'coloring_material.n.01', 'synonyms': ['coloring_material', 'colouring_material'], 'def': 'any material used for its color', 'name': 'coloring_material'}, {'frequency': 'r', 'id': 296, 'synset': 'combination_lock.n.01', 'synonyms': ['combination_lock'], 'def': 'lock that can be opened only by turning dials in a special sequence', 'name': 'combination_lock'}, {'frequency': 'c', 'id': 297, 'synset': 'comforter.n.04', 'synonyms': ['pacifier', 'teething_ring'], 'def': 'device used for an infant to suck or bite on', 'name': 'pacifier'}, {'frequency': 'r', 'id': 298, 'synset': 'comic_book.n.01', 'synonyms': ['comic_book'], 'def': 'a magazine devoted to comic strips', 'name': 'comic_book'}, {'frequency': 'f', 'id': 299, 'synset': 'computer_keyboard.n.01', 'synonyms': ['computer_keyboard', 'keyboard_(computer)'], 'def': 'a keyboard that is a data input device for computers', 'name': 'computer_keyboard'}, {'frequency': 'r', 'id': 300, 'synset': 'concrete_mixer.n.01', 'synonyms': ['concrete_mixer', 'cement_mixer'], 'def': 'a machine with a large revolving drum in which cement\/concrete is mixed', 'name': 'concrete_mixer'}, {'frequency': 'f', 'id': 301, 'synset': 'cone.n.01', 'synonyms': ['cone', 'traffic_cone'], 'def': 'a cone-shaped object used to direct traffic', 'name': 'cone'}, {'frequency': 'f', 'id': 302, 'synset': 'control.n.09', 'synonyms': ['control', 'controller'], 'def': 'a mechanism that controls the operation of a machine', 'name': 'control'}, {'frequency': 'r', 'id': 303, 'synset': 'convertible.n.01', 'synonyms': ['convertible_(automobile)'], 'def': 'a car that has top that can be folded or removed', 'name': 'convertible_(automobile)'}, {'frequency': 'r', 'id': 304, 'synset': 'convertible.n.03', 'synonyms': ['sofa_bed'], 'def': 'a sofa that can be converted into a bed', 'name': 'sofa_bed'}, {'frequency': 'c', 'id': 305, 'synset': 'cookie.n.01', 'synonyms': ['cookie', 'cooky', 'biscuit_(cookie)'], 'def': "any of various small flat sweet cakes (`biscuit' is the British term)", 'name': 'cookie'}, {'frequency': 'r', 'id': 306, 'synset': 'cookie_jar.n.01', 'synonyms': ['cookie_jar', 'cooky_jar'], 'def': 'a jar in which cookies are kept (and sometimes money is hidden)', 'name': 'cookie_jar'}, {'frequency': 'r', 'id': 307, 'synset': 'cooking_utensil.n.01', 'synonyms': ['cooking_utensil'], 'def': 'a kitchen utensil made of material that does not melt easily; used for cooking', 'name': 'cooking_utensil'}, {'frequency': 'f', 'id': 308, 'synset': 'cooler.n.01', 'synonyms': ['cooler_(for_food)', 'ice_chest'], 'def': 'an insulated box for storing food often with ice', 'name': 'cooler_(for_food)'}, {'frequency': 'c', 'id': 309, 'synset': 'cork.n.04', 'synonyms': ['cork_(bottle_plug)', 'bottle_cork'], 'def': 'the plug in the mouth of a bottle (especially a wine bottle)', 'name': 'cork_(bottle_plug)'}, {'frequency': 'r', 'id': 310, 'synset': 'corkboard.n.01', 'synonyms': ['corkboard'], 'def': 'a sheet consisting of cork granules', 'name': 'corkboard'}, {'frequency': 'r', 'id': 311, 'synset': 'corkscrew.n.01', 'synonyms': ['corkscrew', 'bottle_screw'], 'def': 'a bottle opener that pulls corks', 'name': 'corkscrew'}, {'frequency': 'c', 'id': 312, 'synset': 'corn.n.03', 'synonyms': ['edible_corn', 'corn', 'maize'], 'def': 'ears of corn that can be prepared and served for human food', 'name': 'edible_corn'}, {'frequency': 'r', 'id': 313, 'synset': 'cornbread.n.01', 'synonyms': ['cornbread'], 'def': 'bread made primarily of cornmeal', 'name': 'cornbread'}, {'frequency': 'c', 'id': 314, 'synset': 'cornet.n.01', 'synonyms': ['cornet', 'horn', 'trumpet'], 'def': 'a brass musical instrument with a narrow tube and a flared bell and many valves', 'name': 'cornet'}, {'frequency': 'c', 'id': 315, 'synset': 'cornice.n.01', 'synonyms': ['cornice', 'valance', 'valance_board', 'pelmet'], 'def': 'a decorative framework to conceal curtain fixtures at the top of a window casing', 'name': 'cornice'}, {'frequency': 'r', 'id': 316, 'synset': 'cornmeal.n.01', 'synonyms': ['cornmeal'], 'def': 'coarsely ground corn', 'name': 'cornmeal'}, {'frequency': 'r', 'id': 317, 'synset': 'corset.n.01', 'synonyms': ['corset', 'girdle'], 'def': "a woman's close-fitting foundation garment", 'name': 'corset'}, {'frequency': 'r', 'id': 318, 'synset': 'cos.n.02', 'synonyms': ['romaine_lettuce'], 'def': 'lettuce with long dark-green leaves in a loosely packed elongated head', 'name': 'romaine_lettuce'}, {'frequency': 'c', 'id': 319, 'synset': 'costume.n.04', 'synonyms': ['costume'], 'def': 'the attire characteristic of a country or a time or a social class', 'name': 'costume'}, {'frequency': 'r', 'id': 320, 'synset': 'cougar.n.01', 'synonyms': ['cougar', 'puma', 'catamount', 'mountain_lion', 'panther'], 'def': 'large American feline resembling a lion', 'name': 'cougar'}, {'frequency': 'r', 'id': 321, 'synset': 'coverall.n.01', 'synonyms': ['coverall'], 'def': 'a loose-fitting protective garment that is worn over other clothing', 'name': 'coverall'}, {'frequency': 'r', 'id': 322, 'synset': 'cowbell.n.01', 'synonyms': ['cowbell'], 'def': 'a bell hung around the neck of cow so that the cow can be easily located', 'name': 'cowbell'}, {'frequency': 'f', 'id': 323, 'synset': 'cowboy_hat.n.01', 'synonyms': ['cowboy_hat', 'ten-gallon_hat'], 'def': 'a hat with a wide brim and a soft crown; worn by American ranch hands', 'name': 'cowboy_hat'}, {'frequency': 'r', 'id': 324, 'synset': 'crab.n.01', 'synonyms': ['crab_(animal)'], 'def': 'decapod having eyes on short stalks and a broad flattened shell and pincers', 'name': 'crab_(animal)'}, {'frequency': 'c', 'id': 325, 'synset': 'cracker.n.01', 'synonyms': ['cracker'], 'def': 'a thin crisp wafer', 'name': 'cracker'}, {'frequency': 'r', 'id': 326, 'synset': 'crape.n.01', 'synonyms': ['crape', 'crepe', 'French_pancake'], 'def': 'small very thin pancake', 'name': 'crape'}, {'frequency': 'f', 'id': 327, 'synset': 'crate.n.01', 'synonyms': ['crate'], 'def': 'a rugged box (usually made of wood); used for shipping', 'name': 'crate'}, {'frequency': 'r', 'id': 328, 'synset': 'crayon.n.01', 'synonyms': ['crayon', 'wax_crayon'], 'def': 'writing or drawing implement made of a colored stick of composition wax', 'name': 'crayon'}, {'frequency': 'r', 'id': 329, 'synset': 'cream_pitcher.n.01', 'synonyms': ['cream_pitcher'], 'def': 'a small pitcher for serving cream', 'name': 'cream_pitcher'}, {'frequency': 'r', 'id': 330, 'synset': 'credit_card.n.01', 'synonyms': ['credit_card', 'charge_card', 'debit_card'], 'def': 'a card, usually plastic, used to pay for goods and services', 'name': 'credit_card'}, {'frequency': 'c', 'id': 331, 'synset': 'crescent_roll.n.01', 'synonyms': ['crescent_roll', 'croissant'], 'def': 'very rich flaky crescent-shaped roll', 'name': 'crescent_roll'}, {'frequency': 'c', 'id': 332, 'synset': 'crib.n.01', 'synonyms': ['crib', 'cot'], 'def': 'baby bed with high sides made of slats', 'name': 'crib'}, {'frequency': 'c', 'id': 333, 'synset': 'crock.n.03', 'synonyms': ['crock_pot', 'earthenware_jar'], 'def': 'an earthen jar (made of baked clay)', 'name': 'crock_pot'}, {'frequency': 'f', 'id': 334, 'synset': 'crossbar.n.01', 'synonyms': ['crossbar'], 'def': 'a horizontal bar that goes across something', 'name': 'crossbar'}, {'frequency': 'r', 'id': 335, 'synset': 'crouton.n.01', 'synonyms': ['crouton'], 'def': 'a small piece of toasted or fried bread; served in soup or salads', 'name': 'crouton'}, {'frequency': 'r', 'id': 336, 'synset': 'crow.n.01', 'synonyms': ['crow'], 'def': 'black birds having a raucous call', 'name': 'crow'}, {'frequency': 'c', 'id': 337, 'synset': 'crown.n.04', 'synonyms': ['crown'], 'def': 'an ornamental jeweled headdress signifying sovereignty', 'name': 'crown'}, {'frequency': 'c', 'id': 338, 'synset': 'crucifix.n.01', 'synonyms': ['crucifix'], 'def': 'representation of the cross on which Jesus died', 'name': 'crucifix'}, {'frequency': 'c', 'id': 339, 'synset': 'cruise_ship.n.01', 'synonyms': ['cruise_ship', 'cruise_liner'], 'def': 'a passenger ship used commercially for pleasure cruises', 'name': 'cruise_ship'}, {'frequency': 'c', 'id': 340, 'synset': 'cruiser.n.01', 'synonyms': ['police_cruiser', 'patrol_car', 'police_car', 'squad_car'], 'def': 'a car in which policemen cruise the streets', 'name': 'police_cruiser'}, {'frequency': 'c', 'id': 341, 'synset': 'crumb.n.03', 'synonyms': ['crumb'], 'def': 'small piece of e.g. bread or cake', 'name': 'crumb'}, {'frequency': 'r', 'id': 342, 'synset': 'crutch.n.01', 'synonyms': ['crutch'], 'def': 'a wooden or metal staff that fits under the armpit and reaches to the ground', 'name': 'crutch'}, {'frequency': 'c', 'id': 343, 'synset': 'cub.n.03', 'synonyms': ['cub_(animal)'], 'def': 'the young of certain carnivorous mammals such as the bear or wolf or lion', 'name': 'cub_(animal)'}, {'frequency': 'r', 'id': 344, 'synset': 'cube.n.05', 'synonyms': ['cube', 'square_block'], 'def': 'a block in the (approximate) shape of a cube', 'name': 'cube'}, {'frequency': 'f', 'id': 345, 'synset': 'cucumber.n.02', 'synonyms': ['cucumber', 'cuke'], 'def': 'cylindrical green fruit with thin green rind and white flesh eaten as a vegetable', 'name': 'cucumber'}, {'frequency': 'c', 'id': 346, 'synset': 'cufflink.n.01', 'synonyms': ['cufflink'], 'def': 'jewelry consisting of linked buttons used to fasten the cuffs of a shirt', 'name': 'cufflink'}, {'frequency': 'f', 'id': 347, 'synset': 'cup.n.01', 'synonyms': ['cup'], 'def': 'a small open container usually used for drinking; usually has a handle', 'name': 'cup'}, {'frequency': 'c', 'id': 348, 'synset': 'cup.n.08', 'synonyms': ['trophy_cup'], 'def': 'a metal vessel with handles that is awarded as a trophy to a competition winner', 'name': 'trophy_cup'}, {'frequency': 'c', 'id': 349, 'synset': 'cupcake.n.01', 'synonyms': ['cupcake'], 'def': 'small cake baked in a muffin tin', 'name': 'cupcake'}, {'frequency': 'r', 'id': 350, 'synset': 'curler.n.01', 'synonyms': ['hair_curler', 'hair_roller', 'hair_crimper'], 'def': 'a cylindrical tube around which the hair is wound to curl it', 'name': 'hair_curler'}, {'frequency': 'r', 'id': 351, 'synset': 'curling_iron.n.01', 'synonyms': ['curling_iron'], 'def': 'a cylindrical home appliance that heats hair that has been curled around it', 'name': 'curling_iron'}, {'frequency': 'f', 'id': 352, 'synset': 'curtain.n.01', 'synonyms': ['curtain', 'drapery'], 'def': 'hanging cloth used as a blind (especially for a window)', 'name': 'curtain'}, {'frequency': 'f', 'id': 353, 'synset': 'cushion.n.03', 'synonyms': ['cushion'], 'def': 'a soft bag filled with air or padding such as feathers or foam rubber', 'name': 'cushion'}, {'frequency': 'r', 'id': 354, 'synset': 'custard.n.01', 'synonyms': ['custard'], 'def': 'sweetened mixture of milk and eggs baked or boiled or frozen', 'name': 'custard'}, {'frequency': 'c', 'id': 355, 'synset': 'cutter.n.06', 'synonyms': ['cutting_tool'], 'def': 'a cutting implement; a tool for cutting', 'name': 'cutting_tool'}, {'frequency': 'r', 'id': 356, 'synset': 'cylinder.n.04', 'synonyms': ['cylinder'], 'def': 'a cylindrical container', 'name': 'cylinder'}, {'frequency': 'r', 'id': 357, 'synset': 'cymbal.n.01', 'synonyms': ['cymbal'], 'def': 'a percussion instrument consisting of a concave brass disk', 'name': 'cymbal'}, {'frequency': 'r', 'id': 358, 'synset': 'dachshund.n.01', 'synonyms': ['dachshund', 'dachsie', 'badger_dog'], 'def': 'small long-bodied short-legged breed of dog having a short sleek coat and long drooping ears', 'name': 'dachshund'}, {'frequency': 'r', 'id': 359, 'synset': 'dagger.n.01', 'synonyms': ['dagger'], 'def': 'a short knife with a pointed blade used for piercing or stabbing', 'name': 'dagger'}, {'frequency': 'r', 'id': 360, 'synset': 'dartboard.n.01', 'synonyms': ['dartboard'], 'def': 'a circular board of wood or cork used as the target in the game of darts', 'name': 'dartboard'}, {'frequency': 'r', 'id': 361, 'synset': 'date.n.08', 'synonyms': ['date_(fruit)'], 'def': 'sweet edible fruit of the date palm with a single long woody seed', 'name': 'date_(fruit)'}, {'frequency': 'f', 'id': 362, 'synset': 'deck_chair.n.01', 'synonyms': ['deck_chair', 'beach_chair'], 'def': 'a folding chair for use outdoors; a wooden frame supports a length of canvas', 'name': 'deck_chair'}, {'frequency': 'c', 'id': 363, 'synset': 'deer.n.01', 'synonyms': ['deer', 'cervid'], 'def': "distinguished from Bovidae by the male's having solid deciduous antlers", 'name': 'deer'}, {'frequency': 'c', 'id': 364, 'synset': 'dental_floss.n.01', 'synonyms': ['dental_floss', 'floss'], 'def': 'a soft thread for cleaning the spaces between the teeth', 'name': 'dental_floss'}, {'frequency': 'f', 'id': 365, 'synset': 'desk.n.01', 'synonyms': ['desk'], 'def': 'a piece of furniture with a writing surface and usually drawers or other compartments', 'name': 'desk'}, {'frequency': 'r', 'id': 366, 'synset': 'detergent.n.01', 'synonyms': ['detergent'], 'def': 'a surface-active chemical widely used in industry and laundering', 'name': 'detergent'}, {'frequency': 'c', 'id': 367, 'synset': 'diaper.n.01', 'synonyms': ['diaper'], 'def': 'garment consisting of a folded cloth drawn up between the legs and fastened at the waist', 'name': 'diaper'}, {'frequency': 'r', 'id': 368, 'synset': 'diary.n.01', 'synonyms': ['diary', 'journal'], 'def': 'a daily written record of (usually personal) experiences and observations', 'name': 'diary'}, {'frequency': 'r', 'id': 369, 'synset': 'die.n.01', 'synonyms': ['die', 'dice'], 'def': 'a small cube with 1 to 6 spots on the six faces; used in gambling', 'name': 'die'}, {'frequency': 'r', 'id': 370, 'synset': 'dinghy.n.01', 'synonyms': ['dinghy', 'dory', 'rowboat'], 'def': 'a small boat of shallow draft with seats and oars with which it is propelled', 'name': 'dinghy'}, {'frequency': 'f', 'id': 371, 'synset': 'dining_table.n.01', 'synonyms': ['dining_table'], 'def': 'a table at which meals are served', 'name': 'dining_table'}, {'frequency': 'r', 'id': 372, 'synset': 'dinner_jacket.n.01', 'synonyms': ['tux', 'tuxedo'], 'def': 'semiformal evening dress for men', 'name': 'tux'}, {'frequency': 'c', 'id': 373, 'synset': 'dish.n.01', 'synonyms': ['dish'], 'def': 'a piece of dishware normally used as a container for holding or serving food', 'name': 'dish'}, {'frequency': 'c', 'id': 374, 'synset': 'dish.n.05', 'synonyms': ['dish_antenna'], 'def': 'directional antenna consisting of a parabolic reflector', 'name': 'dish_antenna'}, {'frequency': 'c', 'id': 375, 'synset': 'dishrag.n.01', 'synonyms': ['dishrag', 'dishcloth'], 'def': 'a cloth for washing dishes', 'name': 'dishrag'}, {'frequency': 'c', 'id': 376, 'synset': 'dishtowel.n.01', 'synonyms': ['dishtowel', 'tea_towel'], 'def': 'a towel for drying dishes', 'name': 'dishtowel'}, {'frequency': 'f', 'id': 377, 'synset': 'dishwasher.n.01', 'synonyms': ['dishwasher', 'dishwashing_machine'], 'def': 'a machine for washing dishes', 'name': 'dishwasher'}, {'frequency': 'r', 'id': 378, 'synset': 'dishwasher_detergent.n.01', 'synonyms': ['dishwasher_detergent', 'dishwashing_detergent', 'dishwashing_liquid'], 'def': 'a low-sudsing detergent designed for use in dishwashers', 'name': 'dishwasher_detergent'}, {'frequency': 'r', 'id': 379, 'synset': 'diskette.n.01', 'synonyms': ['diskette', 'floppy', 'floppy_disk'], 'def': 'a small plastic magnetic disk enclosed in a stiff envelope used to store data', 'name': 'diskette'}, {'frequency': 'c', 'id': 380, 'synset': 'dispenser.n.01', 'synonyms': ['dispenser'], 'def': 'a container so designed that the contents can be used in prescribed amounts', 'name': 'dispenser'}, {'frequency': 'c', 'id': 381, 'synset': 'dixie_cup.n.01', 'synonyms': ['Dixie_cup', 'paper_cup'], 'def': 'a disposable cup made of paper; for holding drinks', 'name': 'Dixie_cup'}, {'frequency': 'f', 'id': 382, 'synset': 'dog.n.01', 'synonyms': ['dog'], 'def': 'a common domesticated dog', 'name': 'dog'}, {'frequency': 'f', 'id': 383, 'synset': 'dog_collar.n.01', 'synonyms': ['dog_collar'], 'def': 'a collar for a dog', 'name': 'dog_collar'}, {'frequency': 'c', 'id': 384, 'synset': 'doll.n.01', 'synonyms': ['doll'], 'def': 'a toy replica of a HUMAN (NOT AN ANIMAL)', 'name': 'doll'}, {'frequency': 'r', 'id': 385, 'synset': 'dollar.n.02', 'synonyms': ['dollar', 'dollar_bill', 'one_dollar_bill'], 'def': 'a piece of paper money worth one dollar', 'name': 'dollar'}, {'frequency': 'r', 'id': 386, 'synset': 'dolphin.n.02', 'synonyms': ['dolphin'], 'def': 'any of various small toothed whales with a beaklike snout; larger than porpoises', 'name': 'dolphin'}, {'frequency': 'c', 'id': 387, 'synset': 'domestic_ass.n.01', 'synonyms': ['domestic_ass', 'donkey'], 'def': 'domestic beast of burden descended from the African wild ass; patient but stubborn', 'name': 'domestic_ass'}, {'frequency': 'r', 'id': 388, 'synset': 'domino.n.03', 'synonyms': ['eye_mask'], 'def': 'a mask covering the upper part of the face but with holes for the eyes', 'name': 'eye_mask'}, {'frequency': 'r', 'id': 389, 'synset': 'doorbell.n.01', 'synonyms': ['doorbell', 'buzzer'], 'def': 'a button at an outer door that gives a ringing or buzzing signal when pushed', 'name': 'doorbell'}, {'frequency': 'f', 'id': 390, 'synset': 'doorknob.n.01', 'synonyms': ['doorknob', 'doorhandle'], 'def': "a knob used to open a door (often called `doorhandle' in Great Britain)", 'name': 'doorknob'}, {'frequency': 'c', 'id': 391, 'synset': 'doormat.n.02', 'synonyms': ['doormat', 'welcome_mat'], 'def': 'a mat placed outside an exterior door for wiping the shoes before entering', 'name': 'doormat'}, {'frequency': 'f', 'id': 392, 'synset': 'doughnut.n.02', 'synonyms': ['doughnut', 'donut'], 'def': 'a small ring-shaped friedcake', 'name': 'doughnut'}, {'frequency': 'r', 'id': 393, 'synset': 'dove.n.01', 'synonyms': ['dove'], 'def': 'any of numerous small pigeons', 'name': 'dove'}, {'frequency': 'r', 'id': 394, 'synset': 'dragonfly.n.01', 'synonyms': ['dragonfly'], 'def': 'slender-bodied non-stinging insect having iridescent wings that are outspread at rest', 'name': 'dragonfly'}, {'frequency': 'f', 'id': 395, 'synset': 'drawer.n.01', 'synonyms': ['drawer'], 'def': 'a boxlike container in a piece of furniture; made so as to slide in and out', 'name': 'drawer'}, {'frequency': 'c', 'id': 396, 'synset': 'drawers.n.01', 'synonyms': ['underdrawers', 'boxers', 'boxershorts'], 'def': 'underpants worn by men', 'name': 'underdrawers'}, {'frequency': 'f', 'id': 397, 'synset': 'dress.n.01', 'synonyms': ['dress', 'frock'], 'def': 'a one-piece garment for a woman; has skirt and bodice', 'name': 'dress'}, {'frequency': 'c', 'id': 398, 'synset': 'dress_hat.n.01', 'synonyms': ['dress_hat', 'high_hat', 'opera_hat', 'silk_hat', 'top_hat'], 'def': "a man's hat with a tall crown; usually covered with silk or with beaver fur", 'name': 'dress_hat'}, {'frequency': 'c', 'id': 399, 'synset': 'dress_suit.n.01', 'synonyms': ['dress_suit'], 'def': 'formalwear consisting of full evening dress for men', 'name': 'dress_suit'}, {'frequency': 'c', 'id': 400, 'synset': 'dresser.n.05', 'synonyms': ['dresser'], 'def': 'a cabinet with shelves', 'name': 'dresser'}, {'frequency': 'c', 'id': 401, 'synset': 'drill.n.01', 'synonyms': ['drill'], 'def': 'a tool with a sharp rotating point for making holes in hard materials', 'name': 'drill'}, {'frequency': 'r', 'id': 402, 'synset': 'drinking_fountain.n.01', 'synonyms': ['drinking_fountain'], 'def': 'a public fountain to provide a jet of drinking water', 'name': 'drinking_fountain'}, {'frequency': 'r', 'id': 403, 'synset': 'drone.n.04', 'synonyms': ['drone'], 'def': 'an aircraft without a pilot that is operated by remote control', 'name': 'drone'}, {'frequency': 'r', 'id': 404, 'synset': 'dropper.n.01', 'synonyms': ['dropper', 'eye_dropper'], 'def': 'pipet consisting of a small tube with a vacuum bulb at one end for drawing liquid in and releasing it a drop at a time', 'name': 'dropper'}, {'frequency': 'c', 'id': 405, 'synset': 'drum.n.01', 'synonyms': ['drum_(musical_instrument)'], 'def': 'a musical percussion instrument; usually consists of a hollow cylinder with a membrane stretched across each end', 'name': 'drum_(musical_instrument)'}, {'frequency': 'r', 'id': 406, 'synset': 'drumstick.n.02', 'synonyms': ['drumstick'], 'def': 'a stick used for playing a drum', 'name': 'drumstick'}, {'frequency': 'f', 'id': 407, 'synset': 'duck.n.01', 'synonyms': ['duck'], 'def': 'small web-footed broad-billed swimming bird', 'name': 'duck'}, {'frequency': 'r', 'id': 408, 'synset': 'duckling.n.02', 'synonyms': ['duckling'], 'def': 'young duck', 'name': 'duckling'}, {'frequency': 'c', 'id': 409, 'synset': 'duct_tape.n.01', 'synonyms': ['duct_tape'], 'def': 'a wide silvery adhesive tape', 'name': 'duct_tape'}, {'frequency': 'f', 'id': 410, 'synset': 'duffel_bag.n.01', 'synonyms': ['duffel_bag', 'duffle_bag', 'duffel', 'duffle'], 'def': 'a large cylindrical bag of heavy cloth', 'name': 'duffel_bag'}, {'frequency': 'r', 'id': 411, 'synset': 'dumbbell.n.01', 'synonyms': ['dumbbell'], 'def': 'an exercising weight with two ball-like ends connected by a short handle', 'name': 'dumbbell'}, {'frequency': 'c', 'id': 412, 'synset': 'dumpster.n.01', 'synonyms': ['dumpster'], 'def': 'a container designed to receive and transport and dump waste', 'name': 'dumpster'}, {'frequency': 'r', 'id': 413, 'synset': 'dustpan.n.02', 'synonyms': ['dustpan'], 'def': 'a short-handled receptacle into which dust can be swept', 'name': 'dustpan'}, {'frequency': 'r', 'id': 414, 'synset': 'dutch_oven.n.02', 'synonyms': ['Dutch_oven'], 'def': 'iron or earthenware cooking pot; used for stews', 'name': 'Dutch_oven'}, {'frequency': 'c', 'id': 415, 'synset': 'eagle.n.01', 'synonyms': ['eagle'], 'def': 'large birds of prey noted for their broad wings and strong soaring flight', 'name': 'eagle'}, {'frequency': 'f', 'id': 416, 'synset': 'earphone.n.01', 'synonyms': ['earphone', 'earpiece', 'headphone'], 'def': 'device for listening to audio that is held over or inserted into the ear', 'name': 'earphone'}, {'frequency': 'r', 'id': 417, 'synset': 'earplug.n.01', 'synonyms': ['earplug'], 'def': 'a soft plug that is inserted into the ear canal to block sound', 'name': 'earplug'}, {'frequency': 'f', 'id': 418, 'synset': 'earring.n.01', 'synonyms': ['earring'], 'def': 'jewelry to ornament the ear', 'name': 'earring'}, {'frequency': 'c', 'id': 419, 'synset': 'easel.n.01', 'synonyms': ['easel'], 'def': "an upright tripod for displaying something (usually an artist's canvas)", 'name': 'easel'}, {'frequency': 'r', 'id': 420, 'synset': 'eclair.n.01', 'synonyms': ['eclair'], 'def': 'oblong cream puff', 'name': 'eclair'}, {'frequency': 'r', 'id': 421, 'synset': 'eel.n.01', 'synonyms': ['eel'], 'def': 'an elongate fish with fatty flesh', 'name': 'eel'}, {'frequency': 'f', 'id': 422, 'synset': 'egg.n.02', 'synonyms': ['egg', 'eggs'], 'def': 'oval reproductive body of a fowl (especially a hen) used as food', 'name': 'egg'}, {'frequency': 'r', 'id': 423, 'synset': 'egg_roll.n.01', 'synonyms': ['egg_roll', 'spring_roll'], 'def': 'minced vegetables and meat wrapped in a pancake and fried', 'name': 'egg_roll'}, {'frequency': 'c', 'id': 424, 'synset': 'egg_yolk.n.01', 'synonyms': ['egg_yolk', 'yolk_(egg)'], 'def': 'the yellow spherical part of an egg', 'name': 'egg_yolk'}, {'frequency': 'c', 'id': 425, 'synset': 'eggbeater.n.02', 'synonyms': ['eggbeater', 'eggwhisk'], 'def': 'a mixer for beating eggs or whipping cream', 'name': 'eggbeater'}, {'frequency': 'c', 'id': 426, 'synset': 'eggplant.n.01', 'synonyms': ['eggplant', 'aubergine'], 'def': 'egg-shaped vegetable having a shiny skin typically dark purple', 'name': 'eggplant'}, {'frequency': 'r', 'id': 427, 'synset': 'electric_chair.n.01', 'synonyms': ['electric_chair'], 'def': 'a chair-shaped instrument of execution by electrocution', 'name': 'electric_chair'}, {'frequency': 'f', 'id': 428, 'synset': 'electric_refrigerator.n.01', 'synonyms': ['refrigerator'], 'def': 'a refrigerator in which the coolant is pumped around by an electric motor', 'name': 'refrigerator'}, {'frequency': 'f', 'id': 429, 'synset': 'elephant.n.01', 'synonyms': ['elephant'], 'def': 'a common elephant', 'name': 'elephant'}, {'frequency': 'r', 'id': 430, 'synset': 'elk.n.01', 'synonyms': ['elk', 'moose'], 'def': 'large northern deer with enormous flattened antlers in the male', 'name': 'elk'}, {'frequency': 'c', 'id': 431, 'synset': 'envelope.n.01', 'synonyms': ['envelope'], 'def': 'a flat (usually rectangular) container for a letter, thin package, etc.', 'name': 'envelope'}, {'frequency': 'c', 'id': 432, 'synset': 'eraser.n.01', 'synonyms': ['eraser'], 'def': 'an implement used to erase something', 'name': 'eraser'}, {'frequency': 'r', 'id': 433, 'synset': 'escargot.n.01', 'synonyms': ['escargot'], 'def': 'edible snail usually served in the shell with a sauce of melted butter and garlic', 'name': 'escargot'}, {'frequency': 'r', 'id': 434, 'synset': 'eyepatch.n.01', 'synonyms': ['eyepatch'], 'def': 'a protective cloth covering for an injured eye', 'name': 'eyepatch'}, {'frequency': 'r', 'id': 435, 'synset': 'falcon.n.01', 'synonyms': ['falcon'], 'def': 'birds of prey having long pointed powerful wings adapted for swift flight', 'name': 'falcon'}, {'frequency': 'f', 'id': 436, 'synset': 'fan.n.01', 'synonyms': ['fan'], 'def': 'a device for creating a current of air by movement of a surface or surfaces', 'name': 'fan'}, {'frequency': 'f', 'id': 437, 'synset': 'faucet.n.01', 'synonyms': ['faucet', 'spigot', 'tap'], 'def': 'a regulator for controlling the flow of a liquid from a reservoir', 'name': 'faucet'}, {'frequency': 'r', 'id': 438, 'synset': 'fedora.n.01', 'synonyms': ['fedora'], 'def': 'a hat made of felt with a creased crown', 'name': 'fedora'}, {'frequency': 'r', 'id': 439, 'synset': 'ferret.n.02', 'synonyms': ['ferret'], 'def': 'domesticated albino variety of the European polecat bred for hunting rats and rabbits', 'name': 'ferret'}, {'frequency': 'c', 'id': 440, 'synset': 'ferris_wheel.n.01', 'synonyms': ['Ferris_wheel'], 'def': 'a large wheel with suspended seats that remain upright as the wheel rotates', 'name': 'Ferris_wheel'}, {'frequency': 'r', 'id': 441, 'synset': 'ferry.n.01', 'synonyms': ['ferry', 'ferryboat'], 'def': 'a boat that transports people or vehicles across a body of water and operates on a regular schedule', 'name': 'ferry'}, {'frequency': 'r', 'id': 442, 'synset': 'fig.n.04', 'synonyms': ['fig_(fruit)'], 'def': 'fleshy sweet pear-shaped yellowish or purple fruit eaten fresh or preserved or dried', 'name': 'fig_(fruit)'}, {'frequency': 'c', 'id': 443, 'synset': 'fighter.n.02', 'synonyms': ['fighter_jet', 'fighter_aircraft', 'attack_aircraft'], 'def': 'a high-speed military or naval airplane designed to destroy enemy targets', 'name': 'fighter_jet'}, {'frequency': 'f', 'id': 444, 'synset': 'figurine.n.01', 'synonyms': ['figurine'], 'def': 'a small carved or molded figure', 'name': 'figurine'}, {'frequency': 'c', 'id': 445, 'synset': 'file.n.03', 'synonyms': ['file_cabinet', 'filing_cabinet'], 'def': 'office furniture consisting of a container for keeping papers in order', 'name': 'file_cabinet'}, {'frequency': 'r', 'id': 446, 'synset': 'file.n.04', 'synonyms': ['file_(tool)'], 'def': 'a steel hand tool with small sharp teeth on some or all of its surfaces; used for smoothing wood or metal', 'name': 'file_(tool)'}, {'frequency': 'f', 'id': 447, 'synset': 'fire_alarm.n.02', 'synonyms': ['fire_alarm', 'smoke_alarm'], 'def': 'an alarm that is tripped off by fire or smoke', 'name': 'fire_alarm'}, {'frequency': 'c', 'id': 448, 'synset': 'fire_engine.n.01', 'synonyms': ['fire_engine', 'fire_truck'], 'def': 'large trucks that carry firefighters and equipment to the site of a fire', 'name': 'fire_engine'}, {'frequency': 'c', 'id': 449, 'synset': 'fire_extinguisher.n.01', 'synonyms': ['fire_extinguisher', 'extinguisher'], 'def': 'a manually operated device for extinguishing small fires', 'name': 'fire_extinguisher'}, {'frequency': 'c', 'id': 450, 'synset': 'fire_hose.n.01', 'synonyms': ['fire_hose'], 'def': 'a large hose that carries water from a fire hydrant to the site of the fire', 'name': 'fire_hose'}, {'frequency': 'f', 'id': 451, 'synset': 'fireplace.n.01', 'synonyms': ['fireplace'], 'def': 'an open recess in a wall at the base of a chimney where a fire can be built', 'name': 'fireplace'}, {'frequency': 'f', 'id': 452, 'synset': 'fireplug.n.01', 'synonyms': ['fireplug', 'fire_hydrant', 'hydrant'], 'def': 'an upright hydrant for drawing water to use in fighting a fire', 'name': 'fireplug'}, {'frequency': 'c', 'id': 453, 'synset': 'fish.n.01', 'synonyms': ['fish'], 'def': 'any of various mostly cold-blooded aquatic vertebrates usually having scales and breathing through gills', 'name': 'fish'}, {'frequency': 'r', 'id': 454, 'synset': 'fish.n.02', 'synonyms': ['fish_(food)'], 'def': 'the flesh of fish used as food', 'name': 'fish_(food)'}, {'frequency': 'r', 'id': 455, 'synset': 'fishbowl.n.02', 'synonyms': ['fishbowl', 'goldfish_bowl'], 'def': 'a transparent bowl in which small fish are kept', 'name': 'fishbowl'}, {'frequency': 'r', 'id': 456, 'synset': 'fishing_boat.n.01', 'synonyms': ['fishing_boat', 'fishing_vessel'], 'def': 'a vessel for fishing', 'name': 'fishing_boat'}, {'frequency': 'c', 'id': 457, 'synset': 'fishing_rod.n.01', 'synonyms': ['fishing_rod', 'fishing_pole'], 'def': 'a rod that is used in fishing to extend the fishing line', 'name': 'fishing_rod'}, {'frequency': 'f', 'id': 458, 'synset': 'flag.n.01', 'synonyms': ['flag'], 'def': 'emblem usually consisting of a rectangular piece of cloth of distinctive design (do not include pole)', 'name': 'flag'}, {'frequency': 'f', 'id': 459, 'synset': 'flagpole.n.02', 'synonyms': ['flagpole', 'flagstaff'], 'def': 'a tall staff or pole on which a flag is raised', 'name': 'flagpole'}, {'frequency': 'c', 'id': 460, 'synset': 'flamingo.n.01', 'synonyms': ['flamingo'], 'def': 'large pink web-footed bird with down-bent bill', 'name': 'flamingo'}, {'frequency': 'c', 'id': 461, 'synset': 'flannel.n.01', 'synonyms': ['flannel'], 'def': 'a soft light woolen fabric; used for clothing', 'name': 'flannel'}, {'frequency': 'r', 'id': 462, 'synset': 'flash.n.10', 'synonyms': ['flash', 'flashbulb'], 'def': 'a lamp for providing momentary light to take a photograph', 'name': 'flash'}, {'frequency': 'c', 'id': 463, 'synset': 'flashlight.n.01', 'synonyms': ['flashlight', 'torch'], 'def': 'a small portable battery-powered electric lamp', 'name': 'flashlight'}, {'frequency': 'r', 'id': 464, 'synset': 'fleece.n.03', 'synonyms': ['fleece'], 'def': 'a soft bulky fabric with deep pile; used chiefly for clothing', 'name': 'fleece'}, {'frequency': 'f', 'id': 465, 'synset': 'flip-flop.n.02', 'synonyms': ['flip-flop_(sandal)'], 'def': 'a backless sandal held to the foot by a thong between two toes', 'name': 'flip-flop_(sandal)'}, {'frequency': 'c', 'id': 466, 'synset': 'flipper.n.01', 'synonyms': ['flipper_(footwear)', 'fin_(footwear)'], 'def': 'a shoe to aid a person in swimming', 'name': 'flipper_(footwear)'}, {'frequency': 'f', 'id': 467, 'synset': 'flower_arrangement.n.01', 'synonyms': ['flower_arrangement', 'floral_arrangement'], 'def': 'a decorative arrangement of flowers', 'name': 'flower_arrangement'}, {'frequency': 'c', 'id': 468, 'synset': 'flute.n.02', 'synonyms': ['flute_glass', 'champagne_flute'], 'def': 'a tall narrow wineglass', 'name': 'flute_glass'}, {'frequency': 'r', 'id': 469, 'synset': 'foal.n.01', 'synonyms': ['foal'], 'def': 'a young horse', 'name': 'foal'}, {'frequency': 'c', 'id': 470, 'synset': 'folding_chair.n.01', 'synonyms': ['folding_chair'], 'def': 'a chair that can be folded flat for storage', 'name': 'folding_chair'}, {'frequency': 'c', 'id': 471, 'synset': 'food_processor.n.01', 'synonyms': ['food_processor'], 'def': 'a kitchen appliance for shredding, blending, chopping, or slicing food', 'name': 'food_processor'}, {'frequency': 'c', 'id': 472, 'synset': 'football.n.02', 'synonyms': ['football_(American)'], 'def': 'the inflated oblong ball used in playing American football', 'name': 'football_(American)'}, {'frequency': 'r', 'id': 473, 'synset': 'football_helmet.n.01', 'synonyms': ['football_helmet'], 'def': 'a padded helmet with a face mask to protect the head of football players', 'name': 'football_helmet'}, {'frequency': 'c', 'id': 474, 'synset': 'footstool.n.01', 'synonyms': ['footstool', 'footrest'], 'def': 'a low seat or a stool to rest the feet of a seated person', 'name': 'footstool'}, {'frequency': 'f', 'id': 475, 'synset': 'fork.n.01', 'synonyms': ['fork'], 'def': 'cutlery used for serving and eating food', 'name': 'fork'}, {'frequency': 'r', 'id': 476, 'synset': 'forklift.n.01', 'synonyms': ['forklift'], 'def': 'an industrial vehicle with a power operated fork in front that can be inserted under loads to lift and move them', 'name': 'forklift'}, {'frequency': 'r', 'id': 477, 'synset': 'freight_car.n.01', 'synonyms': ['freight_car'], 'def': 'a railway car that carries freight', 'name': 'freight_car'}, {'frequency': 'r', 'id': 478, 'synset': 'french_toast.n.01', 'synonyms': ['French_toast'], 'def': 'bread slice dipped in egg and milk and fried', 'name': 'French_toast'}, {'frequency': 'c', 'id': 479, 'synset': 'freshener.n.01', 'synonyms': ['freshener', 'air_freshener'], 'def': 'anything that freshens', 'name': 'freshener'}, {'frequency': 'f', 'id': 480, 'synset': 'frisbee.n.01', 'synonyms': ['frisbee'], 'def': 'a light, plastic disk propelled with a flip of the wrist for recreation or competition', 'name': 'frisbee'}, {'frequency': 'c', 'id': 481, 'synset': 'frog.n.01', 'synonyms': ['frog', 'toad', 'toad_frog'], 'def': 'a tailless stout-bodied amphibians with long hind limbs for leaping', 'name': 'frog'}, {'frequency': 'c', 'id': 482, 'synset': 'fruit_juice.n.01', 'synonyms': ['fruit_juice'], 'def': 'drink produced by squeezing or crushing fruit', 'name': 'fruit_juice'}, {'frequency': 'r', 'id': 483, 'synset': 'fruit_salad.n.01', 'synonyms': ['fruit_salad'], 'def': 'salad composed of fruits', 'name': 'fruit_salad'}, {'frequency': 'c', 'id': 484, 'synset': 'frying_pan.n.01', 'synonyms': ['frying_pan', 'frypan', 'skillet'], 'def': 'a pan used for frying foods', 'name': 'frying_pan'}, {'frequency': 'r', 'id': 485, 'synset': 'fudge.n.01', 'synonyms': ['fudge'], 'def': 'soft creamy candy', 'name': 'fudge'}, {'frequency': 'r', 'id': 486, 'synset': 'funnel.n.02', 'synonyms': ['funnel'], 'def': 'a cone-shaped utensil used to channel a substance into a container with a small mouth', 'name': 'funnel'}, {'frequency': 'c', 'id': 487, 'synset': 'futon.n.01', 'synonyms': ['futon'], 'def': 'a pad that is used for sleeping on the floor or on a raised frame', 'name': 'futon'}, {'frequency': 'r', 'id': 488, 'synset': 'gag.n.02', 'synonyms': ['gag', 'muzzle'], 'def': "restraint put into a person's mouth to prevent speaking or shouting", 'name': 'gag'}, {'frequency': 'r', 'id': 489, 'synset': 'garbage.n.03', 'synonyms': ['garbage'], 'def': 'a receptacle where waste can be discarded', 'name': 'garbage'}, {'frequency': 'c', 'id': 490, 'synset': 'garbage_truck.n.01', 'synonyms': ['garbage_truck'], 'def': 'a truck for collecting domestic refuse', 'name': 'garbage_truck'}, {'frequency': 'c', 'id': 491, 'synset': 'garden_hose.n.01', 'synonyms': ['garden_hose'], 'def': 'a hose used for watering a lawn or garden', 'name': 'garden_hose'}, {'frequency': 'c', 'id': 492, 'synset': 'gargle.n.01', 'synonyms': ['gargle', 'mouthwash'], 'def': 'a medicated solution used for gargling and rinsing the mouth', 'name': 'gargle'}, {'frequency': 'r', 'id': 493, 'synset': 'gargoyle.n.02', 'synonyms': ['gargoyle'], 'def': 'an ornament consisting of a grotesquely carved figure of a person or animal', 'name': 'gargoyle'}, {'frequency': 'c', 'id': 494, 'synset': 'garlic.n.02', 'synonyms': ['garlic', 'ail'], 'def': 'aromatic bulb used as seasoning', 'name': 'garlic'}, {'frequency': 'r', 'id': 495, 'synset': 'gasmask.n.01', 'synonyms': ['gasmask', 'respirator', 'gas_helmet'], 'def': 'a protective face mask with a filter', 'name': 'gasmask'}, {'frequency': 'r', 'id': 496, 'synset': 'gazelle.n.01', 'synonyms': ['gazelle'], 'def': 'small swift graceful antelope of Africa and Asia having lustrous eyes', 'name': 'gazelle'}, {'frequency': 'c', 'id': 497, 'synset': 'gelatin.n.02', 'synonyms': ['gelatin', 'jelly'], 'def': 'an edible jelly made with gelatin and used as a dessert or salad base or a coating for foods', 'name': 'gelatin'}, {'frequency': 'r', 'id': 498, 'synset': 'gem.n.02', 'synonyms': ['gemstone'], 'def': 'a crystalline rock that can be cut and polished for jewelry', 'name': 'gemstone'}, {'frequency': 'c', 'id': 499, 'synset': 'giant_panda.n.01', 'synonyms': ['giant_panda', 'panda', 'panda_bear'], 'def': 'large black-and-white herbivorous mammal of bamboo forests of China and Tibet', 'name': 'giant_panda'}, {'frequency': 'c', 'id': 500, 'synset': 'gift_wrap.n.01', 'synonyms': ['gift_wrap'], 'def': 'attractive wrapping paper suitable for wrapping gifts', 'name': 'gift_wrap'}, {'frequency': 'c', 'id': 501, 'synset': 'ginger.n.03', 'synonyms': ['ginger', 'gingerroot'], 'def': 'the root of the common ginger plant; used fresh as a seasoning', 'name': 'ginger'}, {'frequency': 'f', 'id': 502, 'synset': 'giraffe.n.01', 'synonyms': ['giraffe'], 'def': 'tall animal having a spotted coat and small horns and very long neck and legs', 'name': 'giraffe'}, {'frequency': 'c', 'id': 503, 'synset': 'girdle.n.02', 'synonyms': ['cincture', 'sash', 'waistband', 'waistcloth'], 'def': 'a band of material around the waist that strengthens a skirt or trousers', 'name': 'cincture'}, {'frequency': 'f', 'id': 504, 'synset': 'glass.n.02', 'synonyms': ['glass_(drink_container)', 'drinking_glass'], 'def': 'a container for holding liquids while drinking', 'name': 'glass_(drink_container)'}, {'frequency': 'c', 'id': 505, 'synset': 'globe.n.03', 'synonyms': ['globe'], 'def': 'a sphere on which a map (especially of the earth) is represented', 'name': 'globe'}, {'frequency': 'f', 'id': 506, 'synset': 'glove.n.02', 'synonyms': ['glove'], 'def': 'handwear covering the hand', 'name': 'glove'}, {'frequency': 'c', 'id': 507, 'synset': 'goat.n.01', 'synonyms': ['goat'], 'def': 'a common goat', 'name': 'goat'}, {'frequency': 'f', 'id': 508, 'synset': 'goggles.n.01', 'synonyms': ['goggles'], 'def': 'tight-fitting spectacles worn to protect the eyes', 'name': 'goggles'}, {'frequency': 'r', 'id': 509, 'synset': 'goldfish.n.01', 'synonyms': ['goldfish'], 'def': 'small golden or orange-red freshwater fishes used as pond or aquarium pets', 'name': 'goldfish'}, {'frequency': 'r', 'id': 510, 'synset': 'golf_club.n.02', 'synonyms': ['golf_club', 'golf-club'], 'def': 'golf equipment used by a golfer to hit a golf ball', 'name': 'golf_club'}, {'frequency': 'c', 'id': 511, 'synset': 'golfcart.n.01', 'synonyms': ['golfcart'], 'def': 'a small motor vehicle in which golfers can ride between shots', 'name': 'golfcart'}, {'frequency': 'r', 'id': 512, 'synset': 'gondola.n.02', 'synonyms': ['gondola_(boat)'], 'def': 'long narrow flat-bottomed boat propelled by sculling; traditionally used on canals of Venice', 'name': 'gondola_(boat)'}, {'frequency': 'c', 'id': 513, 'synset': 'goose.n.01', 'synonyms': ['goose'], 'def': 'loud, web-footed long-necked aquatic birds usually larger than ducks', 'name': 'goose'}, {'frequency': 'r', 'id': 514, 'synset': 'gorilla.n.01', 'synonyms': ['gorilla'], 'def': 'largest ape', 'name': 'gorilla'}, {'frequency': 'r', 'id': 515, 'synset': 'gourd.n.02', 'synonyms': ['gourd'], 'def': 'any of numerous inedible fruits with hard rinds', 'name': 'gourd'}, {'frequency': 'r', 'id': 516, 'synset': 'gown.n.04', 'synonyms': ['surgical_gown', 'scrubs_(surgical_clothing)'], 'def': 'protective garment worn by surgeons during operations', 'name': 'surgical_gown'}, {'frequency': 'f', 'id': 517, 'synset': 'grape.n.01', 'synonyms': ['grape'], 'def': 'any of various juicy fruit with green or purple skins; grow in clusters', 'name': 'grape'}, {'frequency': 'r', 'id': 518, 'synset': 'grasshopper.n.01', 'synonyms': ['grasshopper'], 'def': 'plant-eating insect with hind legs adapted for leaping', 'name': 'grasshopper'}, {'frequency': 'c', 'id': 519, 'synset': 'grater.n.01', 'synonyms': ['grater'], 'def': 'utensil with sharp perforations for shredding foods (as vegetables or cheese)', 'name': 'grater'}, {'frequency': 'c', 'id': 520, 'synset': 'gravestone.n.01', 'synonyms': ['gravestone', 'headstone', 'tombstone'], 'def': 'a stone that is used to mark a grave', 'name': 'gravestone'}, {'frequency': 'r', 'id': 521, 'synset': 'gravy_boat.n.01', 'synonyms': ['gravy_boat', 'gravy_holder'], 'def': 'a dish (often boat-shaped) for serving gravy or sauce', 'name': 'gravy_boat'}, {'frequency': 'c', 'id': 522, 'synset': 'green_bean.n.02', 'synonyms': ['green_bean'], 'def': 'a common bean plant cultivated for its slender green edible pods', 'name': 'green_bean'}, {'frequency': 'c', 'id': 523, 'synset': 'green_onion.n.01', 'synonyms': ['green_onion', 'spring_onion', 'scallion'], 'def': 'a young onion before the bulb has enlarged', 'name': 'green_onion'}, {'frequency': 'r', 'id': 524, 'synset': 'griddle.n.01', 'synonyms': ['griddle'], 'def': 'cooking utensil consisting of a flat heated surface on which food is cooked', 'name': 'griddle'}, {'frequency': 'r', 'id': 525, 'synset': 'grillroom.n.01', 'synonyms': ['grillroom', 'grill_(restaurant)'], 'def': 'a restaurant where food is cooked on a grill', 'name': 'grillroom'}, {'frequency': 'r', 'id': 526, 'synset': 'grinder.n.04', 'synonyms': ['grinder_(tool)'], 'def': 'a machine tool that polishes metal', 'name': 'grinder_(tool)'}, {'frequency': 'r', 'id': 527, 'synset': 'grits.n.01', 'synonyms': ['grits', 'hominy_grits'], 'def': 'coarsely ground corn boiled as a breakfast dish', 'name': 'grits'}, {'frequency': 'c', 'id': 528, 'synset': 'grizzly.n.01', 'synonyms': ['grizzly', 'grizzly_bear'], 'def': 'powerful brownish-yellow bear of the uplands of western North America', 'name': 'grizzly'}, {'frequency': 'c', 'id': 529, 'synset': 'grocery_bag.n.01', 'synonyms': ['grocery_bag'], 'def': "a sack for holding customer's groceries", 'name': 'grocery_bag'}, {'frequency': 'r', 'id': 530, 'synset': 'guacamole.n.01', 'synonyms': ['guacamole'], 'def': 'a dip made of mashed avocado mixed with chopped onions and other seasonings', 'name': 'guacamole'}, {'frequency': 'f', 'id': 531, 'synset': 'guitar.n.01', 'synonyms': ['guitar'], 'def': 'a stringed instrument usually having six strings; played by strumming or plucking', 'name': 'guitar'}, {'frequency': 'c', 'id': 532, 'synset': 'gull.n.02', 'synonyms': ['gull', 'seagull'], 'def': 'mostly white aquatic bird having long pointed wings and short legs', 'name': 'gull'}, {'frequency': 'c', 'id': 533, 'synset': 'gun.n.01', 'synonyms': ['gun'], 'def': 'a weapon that discharges a bullet at high velocity from a metal tube', 'name': 'gun'}, {'frequency': 'r', 'id': 534, 'synset': 'hair_spray.n.01', 'synonyms': ['hair_spray'], 'def': 'substance sprayed on the hair to hold it in place', 'name': 'hair_spray'}, {'frequency': 'c', 'id': 535, 'synset': 'hairbrush.n.01', 'synonyms': ['hairbrush'], 'def': "a brush used to groom a person's hair", 'name': 'hairbrush'}, {'frequency': 'c', 'id': 536, 'synset': 'hairnet.n.01', 'synonyms': ['hairnet'], 'def': 'a small net that someone wears over their hair to keep it in place', 'name': 'hairnet'}, {'frequency': 'c', 'id': 537, 'synset': 'hairpin.n.01', 'synonyms': ['hairpin'], 'def': "a double pronged pin used to hold women's hair in place", 'name': 'hairpin'}, {'frequency': 'f', 'id': 538, 'synset': 'ham.n.01', 'synonyms': ['ham', 'jambon', 'gammon'], 'def': 'meat cut from the thigh of a hog (usually smoked)', 'name': 'ham'}, {'frequency': 'c', 'id': 539, 'synset': 'hamburger.n.01', 'synonyms': ['hamburger', 'beefburger', 'burger'], 'def': 'a sandwich consisting of a patty of minced beef served on a bun', 'name': 'hamburger'}, {'frequency': 'c', 'id': 540, 'synset': 'hammer.n.02', 'synonyms': ['hammer'], 'def': 'a hand tool with a heavy head and a handle; used to deliver an impulsive force by striking', 'name': 'hammer'}, {'frequency': 'r', 'id': 541, 'synset': 'hammock.n.02', 'synonyms': ['hammock'], 'def': 'a hanging bed of canvas or rope netting (usually suspended between two trees)', 'name': 'hammock'}, {'frequency': 'r', 'id': 542, 'synset': 'hamper.n.02', 'synonyms': ['hamper'], 'def': 'a basket usually with a cover', 'name': 'hamper'}, {'frequency': 'r', 'id': 543, 'synset': 'hamster.n.01', 'synonyms': ['hamster'], 'def': 'short-tailed burrowing rodent with large cheek pouches', 'name': 'hamster'}, {'frequency': 'c', 'id': 544, 'synset': 'hand_blower.n.01', 'synonyms': ['hair_dryer'], 'def': 'a hand-held electric blower that can blow warm air onto the hair', 'name': 'hair_dryer'}, {'frequency': 'r', 'id': 545, 'synset': 'hand_glass.n.01', 'synonyms': ['hand_glass', 'hand_mirror'], 'def': 'a mirror intended to be held in the hand', 'name': 'hand_glass'}, {'frequency': 'f', 'id': 546, 'synset': 'hand_towel.n.01', 'synonyms': ['hand_towel', 'face_towel'], 'def': 'a small towel used to dry the hands or face', 'name': 'hand_towel'}, {'frequency': 'c', 'id': 547, 'synset': 'handcart.n.01', 'synonyms': ['handcart', 'pushcart', 'hand_truck'], 'def': 'wheeled vehicle that can be pushed by a person', 'name': 'handcart'}, {'frequency': 'r', 'id': 548, 'synset': 'handcuff.n.01', 'synonyms': ['handcuff'], 'def': 'shackle that consists of a metal loop that can be locked around the wrist', 'name': 'handcuff'}, {'frequency': 'c', 'id': 549, 'synset': 'handkerchief.n.01', 'synonyms': ['handkerchief'], 'def': 'a square piece of cloth used for wiping the eyes or nose or as a costume accessory', 'name': 'handkerchief'}, {'frequency': 'f', 'id': 550, 'synset': 'handle.n.01', 'synonyms': ['handle', 'grip', 'handgrip'], 'def': 'the appendage to an object that is designed to be held in order to use or move it', 'name': 'handle'}, {'frequency': 'r', 'id': 551, 'synset': 'handsaw.n.01', 'synonyms': ['handsaw', "carpenter's_saw"], 'def': 'a saw used with one hand for cutting wood', 'name': 'handsaw'}, {'frequency': 'r', 'id': 552, 'synset': 'hardback.n.01', 'synonyms': ['hardback_book', 'hardcover_book'], 'def': 'a book with cardboard or cloth or leather covers', 'name': 'hardback_book'}, {'frequency': 'r', 'id': 553, 'synset': 'harmonium.n.01', 'synonyms': ['harmonium', 'organ_(musical_instrument)', 'reed_organ_(musical_instrument)'], 'def': 'a free-reed instrument in which air is forced through the reeds by bellows', 'name': 'harmonium'}, {'frequency': 'f', 'id': 554, 'synset': 'hat.n.01', 'synonyms': ['hat'], 'def': 'headwear that protects the head from bad weather, sun, or worn for fashion', 'name': 'hat'}, {'frequency': 'r', 'id': 555, 'synset': 'hatbox.n.01', 'synonyms': ['hatbox'], 'def': 'a round piece of luggage for carrying hats', 'name': 'hatbox'}, {'frequency': 'r', 'id': 556, 'synset': 'hatch.n.03', 'synonyms': ['hatch'], 'def': 'a movable barrier covering a hatchway', 'name': 'hatch'}, {'frequency': 'c', 'id': 557, 'synset': 'head_covering.n.01', 'synonyms': ['veil'], 'def': 'a garment that covers the head and face', 'name': 'veil'}, {'frequency': 'f', 'id': 558, 'synset': 'headband.n.01', 'synonyms': ['headband'], 'def': 'a band worn around or over the head', 'name': 'headband'}, {'frequency': 'f', 'id': 559, 'synset': 'headboard.n.01', 'synonyms': ['headboard'], 'def': 'a vertical board or panel forming the head of a bedstead', 'name': 'headboard'}, {'frequency': 'f', 'id': 560, 'synset': 'headlight.n.01', 'synonyms': ['headlight', 'headlamp'], 'def': 'a powerful light with reflector; attached to the front of an automobile or locomotive', 'name': 'headlight'}, {'frequency': 'c', 'id': 561, 'synset': 'headscarf.n.01', 'synonyms': ['headscarf'], 'def': 'a kerchief worn over the head and tied under the chin', 'name': 'headscarf'}, {'frequency': 'r', 'id': 562, 'synset': 'headset.n.01', 'synonyms': ['headset'], 'def': 'receiver consisting of a pair of headphones', 'name': 'headset'}, {'frequency': 'c', 'id': 563, 'synset': 'headstall.n.01', 'synonyms': ['headstall_(for_horses)', 'headpiece_(for_horses)'], 'def': "the band that is the part of a bridle that fits around a horse's head", 'name': 'headstall_(for_horses)'}, {'frequency': 'r', 'id': 564, 'synset': 'hearing_aid.n.02', 'synonyms': ['hearing_aid'], 'def': 'an acoustic device used to direct sound to the ear of a hearing-impaired person', 'name': 'hearing_aid'}, {'frequency': 'c', 'id': 565, 'synset': 'heart.n.02', 'synonyms': ['heart'], 'def': 'a muscular organ; its contractions move the blood through the body', 'name': 'heart'}, {'frequency': 'c', 'id': 566, 'synset': 'heater.n.01', 'synonyms': ['heater', 'warmer'], 'def': 'device that heats water or supplies warmth to a room', 'name': 'heater'}, {'frequency': 'c', 'id': 567, 'synset': 'helicopter.n.01', 'synonyms': ['helicopter'], 'def': 'an aircraft without wings that obtains its lift from the rotation of overhead blades', 'name': 'helicopter'}, {'frequency': 'f', 'id': 568, 'synset': 'helmet.n.02', 'synonyms': ['helmet'], 'def': 'a protective headgear made of hard material to resist blows', 'name': 'helmet'}, {'frequency': 'r', 'id': 569, 'synset': 'heron.n.02', 'synonyms': ['heron'], 'def': 'grey or white wading bird with long neck and long legs and (usually) long bill', 'name': 'heron'}, {'frequency': 'c', 'id': 570, 'synset': 'highchair.n.01', 'synonyms': ['highchair', 'feeding_chair'], 'def': 'a chair for feeding a very young child', 'name': 'highchair'}, {'frequency': 'f', 'id': 571, 'synset': 'hinge.n.01', 'synonyms': ['hinge'], 'def': 'a joint that holds two parts together so that one can swing relative to the other', 'name': 'hinge'}, {'frequency': 'r', 'id': 572, 'synset': 'hippopotamus.n.01', 'synonyms': ['hippopotamus'], 'def': 'massive thick-skinned animal living in or around rivers of tropical Africa', 'name': 'hippopotamus'}, {'frequency': 'r', 'id': 573, 'synset': 'hockey_stick.n.01', 'synonyms': ['hockey_stick'], 'def': 'sports implement consisting of a stick used by hockey players to move the puck', 'name': 'hockey_stick'}, {'frequency': 'c', 'id': 574, 'synset': 'hog.n.03', 'synonyms': ['hog', 'pig'], 'def': 'domestic swine', 'name': 'hog'}, {'frequency': 'f', 'id': 575, 'synset': 'home_plate.n.01', 'synonyms': ['home_plate_(baseball)', 'home_base_(baseball)'], 'def': '(baseball) a rubber slab where the batter stands; it must be touched by a base runner in order to score', 'name': 'home_plate_(baseball)'}, {'frequency': 'c', 'id': 576, 'synset': 'honey.n.01', 'synonyms': ['honey'], 'def': 'a sweet yellow liquid produced by bees', 'name': 'honey'}, {'frequency': 'f', 'id': 577, 'synset': 'hood.n.06', 'synonyms': ['fume_hood', 'exhaust_hood'], 'def': 'metal covering leading to a vent that exhausts smoke or fumes', 'name': 'fume_hood'}, {'frequency': 'f', 'id': 578, 'synset': 'hook.n.05', 'synonyms': ['hook'], 'def': 'a curved or bent implement for suspending or pulling something', 'name': 'hook'}, {'frequency': 'f', 'id': 579, 'synset': 'horse.n.01', 'synonyms': ['horse'], 'def': 'a common horse', 'name': 'horse'}, {'frequency': 'f', 'id': 580, 'synset': 'hose.n.03', 'synonyms': ['hose', 'hosepipe'], 'def': 'a flexible pipe for conveying a liquid or gas', 'name': 'hose'}, {'frequency': 'r', 'id': 581, 'synset': 'hot-air_balloon.n.01', 'synonyms': ['hot-air_balloon'], 'def': 'balloon for travel through the air in a basket suspended below a large bag of heated air', 'name': 'hot-air_balloon'}, {'frequency': 'r', 'id': 582, 'synset': 'hot_plate.n.01', 'synonyms': ['hotplate'], 'def': 'a portable electric appliance for heating or cooking or keeping food warm', 'name': 'hotplate'}, {'frequency': 'c', 'id': 583, 'synset': 'hot_sauce.n.01', 'synonyms': ['hot_sauce'], 'def': 'a pungent peppery sauce', 'name': 'hot_sauce'}, {'frequency': 'r', 'id': 584, 'synset': 'hourglass.n.01', 'synonyms': ['hourglass'], 'def': 'a sandglass timer that runs for sixty minutes', 'name': 'hourglass'}, {'frequency': 'r', 'id': 585, 'synset': 'houseboat.n.01', 'synonyms': ['houseboat'], 'def': 'a barge that is designed and equipped for use as a dwelling', 'name': 'houseboat'}, {'frequency': 'r', 'id': 586, 'synset': 'hummingbird.n.01', 'synonyms': ['hummingbird'], 'def': 'tiny American bird having brilliant iridescent plumage and long slender bills', 'name': 'hummingbird'}, {'frequency': 'r', 'id': 587, 'synset': 'hummus.n.01', 'synonyms': ['hummus', 'humus', 'hommos', 'hoummos', 'humous'], 'def': 'a thick spread made from mashed chickpeas', 'name': 'hummus'}, {'frequency': 'c', 'id': 588, 'synset': 'ice_bear.n.01', 'synonyms': ['polar_bear'], 'def': 'white bear of Arctic regions', 'name': 'polar_bear'}, {'frequency': 'c', 'id': 589, 'synset': 'ice_cream.n.01', 'synonyms': ['icecream'], 'def': 'frozen dessert containing cream and sugar and flavoring', 'name': 'icecream'}, {'frequency': 'r', 'id': 590, 'synset': 'ice_lolly.n.01', 'synonyms': ['popsicle'], 'def': 'ice cream or water ice on a small wooden stick', 'name': 'popsicle'}, {'frequency': 'c', 'id': 591, 'synset': 'ice_maker.n.01', 'synonyms': ['ice_maker'], 'def': 'an appliance included in some electric refrigerators for making ice cubes', 'name': 'ice_maker'}, {'frequency': 'r', 'id': 592, 'synset': 'ice_pack.n.01', 'synonyms': ['ice_pack', 'ice_bag'], 'def': 'a waterproof bag filled with ice: applied to the body (especially the head) to cool or reduce swelling', 'name': 'ice_pack'}, {'frequency': 'r', 'id': 593, 'synset': 'ice_skate.n.01', 'synonyms': ['ice_skate'], 'def': 'skate consisting of a boot with a steel blade fitted to the sole', 'name': 'ice_skate'}, {'frequency': 'r', 'id': 594, 'synset': 'ice_tea.n.01', 'synonyms': ['ice_tea', 'iced_tea'], 'def': 'strong tea served over ice', 'name': 'ice_tea'}, {'frequency': 'c', 'id': 595, 'synset': 'igniter.n.01', 'synonyms': ['igniter', 'ignitor', 'lighter'], 'def': 'a substance or device used to start a fire', 'name': 'igniter'}, {'frequency': 'r', 'id': 596, 'synset': 'incense.n.01', 'synonyms': ['incense'], 'def': 'a substance that produces a fragrant odor when burned', 'name': 'incense'}, {'frequency': 'r', 'id': 597, 'synset': 'inhaler.n.01', 'synonyms': ['inhaler', 'inhalator'], 'def': 'a dispenser that produces a chemical vapor to be inhaled through mouth or nose', 'name': 'inhaler'}, {'frequency': 'c', 'id': 598, 'synset': 'ipod.n.01', 'synonyms': ['iPod'], 'def': 'a pocket-sized device used to play music files', 'name': 'iPod'}, {'frequency': 'c', 'id': 599, 'synset': 'iron.n.04', 'synonyms': ['iron_(for_clothing)', 'smoothing_iron_(for_clothing)'], 'def': 'home appliance consisting of a flat metal base that is heated and used to smooth cloth', 'name': 'iron_(for_clothing)'}, {'frequency': 'r', 'id': 600, 'synset': 'ironing_board.n.01', 'synonyms': ['ironing_board'], 'def': 'narrow padded board on collapsible supports; used for ironing clothes', 'name': 'ironing_board'}, {'frequency': 'f', 'id': 601, 'synset': 'jacket.n.01', 'synonyms': ['jacket'], 'def': 'a waist-length coat', 'name': 'jacket'}, {'frequency': 'r', 'id': 602, 'synset': 'jam.n.01', 'synonyms': ['jam'], 'def': 'preserve of crushed fruit', 'name': 'jam'}, {'frequency': 'f', 'id': 603, 'synset': 'jean.n.01', 'synonyms': ['jean', 'blue_jean', 'denim'], 'def': '(usually plural) close-fitting trousers of heavy denim for manual work or casual wear', 'name': 'jean'}, {'frequency': 'c', 'id': 604, 'synset': 'jeep.n.01', 'synonyms': ['jeep', 'landrover'], 'def': 'a car suitable for traveling over rough terrain', 'name': 'jeep'}, {'frequency': 'r', 'id': 605, 'synset': 'jelly_bean.n.01', 'synonyms': ['jelly_bean', 'jelly_egg'], 'def': 'sugar-glazed jellied candy', 'name': 'jelly_bean'}, {'frequency': 'f', 'id': 606, 'synset': 'jersey.n.03', 'synonyms': ['jersey', 'T-shirt', 'tee_shirt'], 'def': 'a close-fitting pullover shirt', 'name': 'jersey'}, {'frequency': 'c', 'id': 607, 'synset': 'jet.n.01', 'synonyms': ['jet_plane', 'jet-propelled_plane'], 'def': 'an airplane powered by one or more jet engines', 'name': 'jet_plane'}, {'frequency': 'c', 'id': 608, 'synset': 'jewelry.n.01', 'synonyms': ['jewelry', 'jewellery'], 'def': 'an adornment (as a bracelet or ring or necklace) made of precious metals and set with gems (or imitation gems)', 'name': 'jewelry'}, {'frequency': 'r', 'id': 609, 'synset': 'joystick.n.02', 'synonyms': ['joystick'], 'def': 'a control device for computers consisting of a vertical handle that can move freely in two directions', 'name': 'joystick'}, {'frequency': 'r', 'id': 610, 'synset': 'jump_suit.n.01', 'synonyms': ['jumpsuit'], 'def': "one-piece garment fashioned after a parachutist's uniform", 'name': 'jumpsuit'}, {'frequency': 'c', 'id': 611, 'synset': 'kayak.n.01', 'synonyms': ['kayak'], 'def': 'a small canoe consisting of a light frame made watertight with animal skins', 'name': 'kayak'}, {'frequency': 'r', 'id': 612, 'synset': 'keg.n.02', 'synonyms': ['keg'], 'def': 'small cask or barrel', 'name': 'keg'}, {'frequency': 'r', 'id': 613, 'synset': 'kennel.n.01', 'synonyms': ['kennel', 'doghouse'], 'def': 'outbuilding that serves as a shelter for a dog', 'name': 'kennel'}, {'frequency': 'c', 'id': 614, 'synset': 'kettle.n.01', 'synonyms': ['kettle', 'boiler'], 'def': 'a metal pot for stewing or boiling; usually has a lid', 'name': 'kettle'}, {'frequency': 'f', 'id': 615, 'synset': 'key.n.01', 'synonyms': ['key'], 'def': 'metal instrument used to unlock a lock', 'name': 'key'}, {'frequency': 'r', 'id': 616, 'synset': 'keycard.n.01', 'synonyms': ['keycard'], 'def': 'a plastic card used to gain access typically to a door', 'name': 'keycard'}, {'frequency': 'r', 'id': 617, 'synset': 'kilt.n.01', 'synonyms': ['kilt'], 'def': 'a knee-length pleated tartan skirt worn by men as part of the traditional dress in the Highlands of northern Scotland', 'name': 'kilt'}, {'frequency': 'c', 'id': 618, 'synset': 'kimono.n.01', 'synonyms': ['kimono'], 'def': 'a loose robe; imitated from robes originally worn by Japanese', 'name': 'kimono'}, {'frequency': 'f', 'id': 619, 'synset': 'kitchen_sink.n.01', 'synonyms': ['kitchen_sink'], 'def': 'a sink in a kitchen', 'name': 'kitchen_sink'}, {'frequency': 'c', 'id': 620, 'synset': 'kitchen_table.n.01', 'synonyms': ['kitchen_table'], 'def': 'a table in the kitchen', 'name': 'kitchen_table'}, {'frequency': 'f', 'id': 621, 'synset': 'kite.n.03', 'synonyms': ['kite'], 'def': 'plaything consisting of a light frame covered with tissue paper; flown in wind at end of a string', 'name': 'kite'}, {'frequency': 'c', 'id': 622, 'synset': 'kitten.n.01', 'synonyms': ['kitten', 'kitty'], 'def': 'young domestic cat', 'name': 'kitten'}, {'frequency': 'c', 'id': 623, 'synset': 'kiwi.n.03', 'synonyms': ['kiwi_fruit'], 'def': 'fuzzy brown egg-shaped fruit with slightly tart green flesh', 'name': 'kiwi_fruit'}, {'frequency': 'f', 'id': 624, 'synset': 'knee_pad.n.01', 'synonyms': ['knee_pad'], 'def': 'protective garment consisting of a pad worn by football or baseball or hockey players', 'name': 'knee_pad'}, {'frequency': 'f', 'id': 625, 'synset': 'knife.n.01', 'synonyms': ['knife'], 'def': 'tool with a blade and point used as a cutting instrument', 'name': 'knife'}, {'frequency': 'r', 'id': 626, 'synset': 'knight.n.02', 'synonyms': ['knight_(chess_piece)', 'horse_(chess_piece)'], 'def': 'a chess game piece shaped to resemble the head of a horse', 'name': 'knight_(chess_piece)'}, {'frequency': 'r', 'id': 627, 'synset': 'knitting_needle.n.01', 'synonyms': ['knitting_needle'], 'def': 'needle consisting of a slender rod with pointed ends; usually used in pairs', 'name': 'knitting_needle'}, {'frequency': 'f', 'id': 628, 'synset': 'knob.n.02', 'synonyms': ['knob'], 'def': 'a round handle often found on a door', 'name': 'knob'}, {'frequency': 'r', 'id': 629, 'synset': 'knocker.n.05', 'synonyms': ['knocker_(on_a_door)', 'doorknocker'], 'def': 'a device (usually metal and ornamental) attached by a hinge to a door', 'name': 'knocker_(on_a_door)'}, {'frequency': 'r', 'id': 630, 'synset': 'koala.n.01', 'synonyms': ['koala', 'koala_bear'], 'def': 'sluggish tailless Australian marsupial with grey furry ears and coat', 'name': 'koala'}, {'frequency': 'r', 'id': 631, 'synset': 'lab_coat.n.01', 'synonyms': ['lab_coat', 'laboratory_coat'], 'def': 'a light coat worn to protect clothing from substances used while working in a laboratory', 'name': 'lab_coat'}, {'frequency': 'f', 'id': 632, 'synset': 'ladder.n.01', 'synonyms': ['ladder'], 'def': 'steps consisting of two parallel members connected by rungs', 'name': 'ladder'}, {'frequency': 'c', 'id': 633, 'synset': 'ladle.n.01', 'synonyms': ['ladle'], 'def': 'a spoon-shaped vessel with a long handle frequently used to transfer liquids', 'name': 'ladle'}, {'frequency': 'r', 'id': 634, 'synset': 'ladybug.n.01', 'synonyms': ['ladybug', 'ladybeetle', 'ladybird_beetle'], 'def': 'small round bright-colored and spotted beetle, typically red and black', 'name': 'ladybug'}, {'frequency': 'c', 'id': 635, 'synset': 'lamb.n.01', 'synonyms': ['lamb_(animal)'], 'def': 'young sheep', 'name': 'lamb_(animal)'}, {'frequency': 'r', 'id': 636, 'synset': 'lamb_chop.n.01', 'synonyms': ['lamb-chop', 'lambchop'], 'def': 'chop cut from a lamb', 'name': 'lamb-chop'}, {'frequency': 'f', 'id': 637, 'synset': 'lamp.n.02', 'synonyms': ['lamp'], 'def': 'a piece of furniture holding one or more electric light bulbs', 'name': 'lamp'}, {'frequency': 'f', 'id': 638, 'synset': 'lamppost.n.01', 'synonyms': ['lamppost'], 'def': 'a metal post supporting an outdoor lamp (such as a streetlight)', 'name': 'lamppost'}, {'frequency': 'f', 'id': 639, 'synset': 'lampshade.n.01', 'synonyms': ['lampshade'], 'def': 'a protective ornamental shade used to screen a light bulb from direct view', 'name': 'lampshade'}, {'frequency': 'c', 'id': 640, 'synset': 'lantern.n.01', 'synonyms': ['lantern'], 'def': 'light in a transparent protective case', 'name': 'lantern'}, {'frequency': 'f', 'id': 641, 'synset': 'lanyard.n.02', 'synonyms': ['lanyard', 'laniard'], 'def': 'a cord worn around the neck to hold a knife or whistle, etc.', 'name': 'lanyard'}, {'frequency': 'f', 'id': 642, 'synset': 'laptop.n.01', 'synonyms': ['laptop_computer', 'notebook_computer'], 'def': 'a portable computer small enough to use in your lap', 'name': 'laptop_computer'}, {'frequency': 'r', 'id': 643, 'synset': 'lasagna.n.01', 'synonyms': ['lasagna', 'lasagne'], 'def': 'baked dish of layers of lasagna pasta with sauce and cheese and meat or vegetables', 'name': 'lasagna'}, {'frequency': 'c', 'id': 644, 'synset': 'latch.n.02', 'synonyms': ['latch'], 'def': 'a bar that can be lowered or slid into a groove to fasten a door or gate', 'name': 'latch'}, {'frequency': 'r', 'id': 645, 'synset': 'lawn_mower.n.01', 'synonyms': ['lawn_mower'], 'def': 'garden tool for mowing grass on lawns', 'name': 'lawn_mower'}, {'frequency': 'r', 'id': 646, 'synset': 'leather.n.01', 'synonyms': ['leather'], 'def': 'an animal skin made smooth and flexible by removing the hair and then tanning', 'name': 'leather'}, {'frequency': 'c', 'id': 647, 'synset': 'legging.n.01', 'synonyms': ['legging_(clothing)', 'leging_(clothing)', 'leg_covering'], 'def': 'a garment covering the leg (usually extending from the knee to the ankle)', 'name': 'legging_(clothing)'}, {'frequency': 'c', 'id': 648, 'synset': 'lego.n.01', 'synonyms': ['Lego', 'Lego_set'], 'def': "a child's plastic construction set for making models from blocks", 'name': 'Lego'}, {'frequency': 'f', 'id': 649, 'synset': 'lemon.n.01', 'synonyms': ['lemon'], 'def': 'yellow oval fruit with juicy acidic flesh', 'name': 'lemon'}, {'frequency': 'r', 'id': 650, 'synset': 'lemonade.n.01', 'synonyms': ['lemonade'], 'def': 'sweetened beverage of diluted lemon juice', 'name': 'lemonade'}, {'frequency': 'f', 'id': 651, 'synset': 'lettuce.n.02', 'synonyms': ['lettuce'], 'def': 'leafy plant commonly eaten in salad or on sandwiches', 'name': 'lettuce'}, {'frequency': 'f', 'id': 652, 'synset': 'license_plate.n.01', 'synonyms': ['license_plate', 'numberplate'], 'def': "a plate mounted on the front and back of car and bearing the car's registration number", 'name': 'license_plate'}, {'frequency': 'f', 'id': 653, 'synset': 'life_buoy.n.01', 'synonyms': ['life_buoy', 'lifesaver', 'life_belt', 'life_ring'], 'def': 'a ring-shaped life preserver used to prevent drowning (NOT a life-jacket or vest)', 'name': 'life_buoy'}, {'frequency': 'f', 'id': 654, 'synset': 'life_jacket.n.01', 'synonyms': ['life_jacket', 'life_vest'], 'def': 'life preserver consisting of a sleeveless jacket of buoyant or inflatable design', 'name': 'life_jacket'}, {'frequency': 'f', 'id': 655, 'synset': 'light_bulb.n.01', 'synonyms': ['lightbulb'], 'def': 'glass bulb or tube shaped electric device that emits light (DO NOT MARK LAMPS AS A WHOLE)', 'name': 'lightbulb'}, {'frequency': 'r', 'id': 656, 'synset': 'lightning_rod.n.02', 'synonyms': ['lightning_rod', 'lightning_conductor'], 'def': 'a metallic conductor that is attached to a high point and leads to the ground', 'name': 'lightning_rod'}, {'frequency': 'c', 'id': 657, 'synset': 'lime.n.06', 'synonyms': ['lime'], 'def': 'the green acidic fruit of any of various lime trees', 'name': 'lime'}, {'frequency': 'r', 'id': 658, 'synset': 'limousine.n.01', 'synonyms': ['limousine'], 'def': 'long luxurious car; usually driven by a chauffeur', 'name': 'limousine'}, {'frequency': 'r', 'id': 659, 'synset': 'linen.n.02', 'synonyms': ['linen_paper'], 'def': 'a high-quality paper made of linen fibers or with a linen finish', 'name': 'linen_paper'}, {'frequency': 'c', 'id': 660, 'synset': 'lion.n.01', 'synonyms': ['lion'], 'def': 'large gregarious predatory cat of Africa and India', 'name': 'lion'}, {'frequency': 'c', 'id': 661, 'synset': 'lip_balm.n.01', 'synonyms': ['lip_balm'], 'def': 'a balm applied to the lips', 'name': 'lip_balm'}, {'frequency': 'c', 'id': 662, 'synset': 'lipstick.n.01', 'synonyms': ['lipstick', 'lip_rouge'], 'def': 'makeup that is used to color the lips', 'name': 'lipstick'}, {'frequency': 'r', 'id': 663, 'synset': 'liquor.n.01', 'synonyms': ['liquor', 'spirits', 'hard_liquor', 'liqueur', 'cordial'], 'def': 'an alcoholic beverage that is distilled rather than fermented', 'name': 'liquor'}, {'frequency': 'r', 'id': 664, 'synset': 'lizard.n.01', 'synonyms': ['lizard'], 'def': 'a reptile with usually two pairs of legs and a tapering tail', 'name': 'lizard'}, {'frequency': 'r', 'id': 665, 'synset': 'loafer.n.02', 'synonyms': ['Loafer_(type_of_shoe)'], 'def': 'a low leather step-in shoe', 'name': 'Loafer_(type_of_shoe)'}, {'frequency': 'f', 'id': 666, 'synset': 'log.n.01', 'synonyms': ['log'], 'def': 'a segment of the trunk of a tree when stripped of branches', 'name': 'log'}, {'frequency': 'c', 'id': 667, 'synset': 'lollipop.n.02', 'synonyms': ['lollipop'], 'def': 'hard candy on a stick', 'name': 'lollipop'}, {'frequency': 'c', 'id': 668, 'synset': 'lotion.n.01', 'synonyms': ['lotion'], 'def': 'any of various cosmetic preparations that are applied to the skin', 'name': 'lotion'}, {'frequency': 'f', 'id': 669, 'synset': 'loudspeaker.n.01', 'synonyms': ['speaker_(stero_equipment)'], 'def': 'electronic device that produces sound often as part of a stereo system', 'name': 'speaker_(stero_equipment)'}, {'frequency': 'c', 'id': 670, 'synset': 'love_seat.n.01', 'synonyms': ['loveseat'], 'def': 'small sofa that seats two people', 'name': 'loveseat'}, {'frequency': 'r', 'id': 671, 'synset': 'machine_gun.n.01', 'synonyms': ['machine_gun'], 'def': 'a rapidly firing automatic gun', 'name': 'machine_gun'}, {'frequency': 'f', 'id': 672, 'synset': 'magazine.n.02', 'synonyms': ['magazine'], 'def': 'a paperback periodic publication', 'name': 'magazine'}, {'frequency': 'f', 'id': 673, 'synset': 'magnet.n.01', 'synonyms': ['magnet'], 'def': 'a device that attracts iron and produces a magnetic field', 'name': 'magnet'}, {'frequency': 'r', 'id': 674, 'synset': 'mail_slot.n.01', 'synonyms': ['mail_slot'], 'def': 'a slot (usually in a door) through which mail can be delivered', 'name': 'mail_slot'}, {'frequency': 'c', 'id': 675, 'synset': 'mailbox.n.01', 'synonyms': ['mailbox_(at_home)', 'letter_box_(at_home)'], 'def': 'a private box for delivery of mail', 'name': 'mailbox_(at_home)'}, {'frequency': 'r', 'id': 676, 'synset': 'mallet.n.01', 'synonyms': ['mallet'], 'def': 'a sports implement with a long handle and a hammer-like head used to hit a ball', 'name': 'mallet'}, {'frequency': 'r', 'id': 677, 'synset': 'mammoth.n.01', 'synonyms': ['mammoth'], 'def': 'any of numerous extinct elephants widely distributed in the Pleistocene', 'name': 'mammoth'}, {'frequency': 'c', 'id': 678, 'synset': 'mandarin.n.05', 'synonyms': ['mandarin_orange'], 'def': 'a somewhat flat reddish-orange loose skinned citrus of China', 'name': 'mandarin_orange'}, {'frequency': 'c', 'id': 679, 'synset': 'manger.n.01', 'synonyms': ['manger', 'trough'], 'def': 'a container (usually in a barn or stable) from which cattle or horses feed', 'name': 'manger'}, {'frequency': 'f', 'id': 680, 'synset': 'manhole.n.01', 'synonyms': ['manhole'], 'def': 'a hole (usually with a flush cover) through which a person can gain access to an underground structure', 'name': 'manhole'}, {'frequency': 'c', 'id': 681, 'synset': 'map.n.01', 'synonyms': ['map'], 'def': "a diagrammatic representation of the earth's surface (or part of it)", 'name': 'map'}, {'frequency': 'c', 'id': 682, 'synset': 'marker.n.03', 'synonyms': ['marker'], 'def': 'a writing implement for making a mark', 'name': 'marker'}, {'frequency': 'r', 'id': 683, 'synset': 'martini.n.01', 'synonyms': ['martini'], 'def': 'a cocktail made of gin (or vodka) with dry vermouth', 'name': 'martini'}, {'frequency': 'r', 'id': 684, 'synset': 'mascot.n.01', 'synonyms': ['mascot'], 'def': 'a person or animal that is adopted by a team or other group as a symbolic figure', 'name': 'mascot'}, {'frequency': 'c', 'id': 685, 'synset': 'mashed_potato.n.01', 'synonyms': ['mashed_potato'], 'def': 'potato that has been peeled and boiled and then mashed', 'name': 'mashed_potato'}, {'frequency': 'r', 'id': 686, 'synset': 'masher.n.02', 'synonyms': ['masher'], 'def': 'a kitchen utensil used for mashing (e.g. potatoes)', 'name': 'masher'}, {'frequency': 'f', 'id': 687, 'synset': 'mask.n.04', 'synonyms': ['mask', 'facemask'], 'def': 'a protective covering worn over the face', 'name': 'mask'}, {'frequency': 'f', 'id': 688, 'synset': 'mast.n.01', 'synonyms': ['mast'], 'def': 'a vertical spar for supporting sails', 'name': 'mast'}, {'frequency': 'c', 'id': 689, 'synset': 'mat.n.03', 'synonyms': ['mat_(gym_equipment)', 'gym_mat'], 'def': 'sports equipment consisting of a piece of thick padding on the floor for gymnastics', 'name': 'mat_(gym_equipment)'}, {'frequency': 'r', 'id': 690, 'synset': 'matchbox.n.01', 'synonyms': ['matchbox'], 'def': 'a box for holding matches', 'name': 'matchbox'}, {'frequency': 'f', 'id': 691, 'synset': 'mattress.n.01', 'synonyms': ['mattress'], 'def': 'a thick pad filled with resilient material used as a bed or part of a bed', 'name': 'mattress'}, {'frequency': 'c', 'id': 692, 'synset': 'measuring_cup.n.01', 'synonyms': ['measuring_cup'], 'def': 'graduated cup used to measure liquid or granular ingredients', 'name': 'measuring_cup'}, {'frequency': 'c', 'id': 693, 'synset': 'measuring_stick.n.01', 'synonyms': ['measuring_stick', 'ruler_(measuring_stick)', 'measuring_rod'], 'def': 'measuring instrument having a sequence of marks at regular intervals', 'name': 'measuring_stick'}, {'frequency': 'c', 'id': 694, 'synset': 'meatball.n.01', 'synonyms': ['meatball'], 'def': 'ground meat formed into a ball and fried or simmered in broth', 'name': 'meatball'}, {'frequency': 'c', 'id': 695, 'synset': 'medicine.n.02', 'synonyms': ['medicine'], 'def': 'something that treats or prevents or alleviates the symptoms of disease', 'name': 'medicine'}, {'frequency': 'r', 'id': 696, 'synset': 'melon.n.01', 'synonyms': ['melon'], 'def': 'fruit of the gourd family having a hard rind and sweet juicy flesh', 'name': 'melon'}, {'frequency': 'f', 'id': 697, 'synset': 'microphone.n.01', 'synonyms': ['microphone'], 'def': 'device for converting sound waves into electrical energy', 'name': 'microphone'}, {'frequency': 'r', 'id': 698, 'synset': 'microscope.n.01', 'synonyms': ['microscope'], 'def': 'magnifier of the image of small objects', 'name': 'microscope'}, {'frequency': 'f', 'id': 699, 'synset': 'microwave.n.02', 'synonyms': ['microwave_oven'], 'def': 'kitchen appliance that cooks food by passing an electromagnetic wave through it', 'name': 'microwave_oven'}, {'frequency': 'r', 'id': 700, 'synset': 'milestone.n.01', 'synonyms': ['milestone', 'milepost'], 'def': 'stone post at side of a road to show distances', 'name': 'milestone'}, {'frequency': 'c', 'id': 701, 'synset': 'milk.n.01', 'synonyms': ['milk'], 'def': 'a white nutritious liquid secreted by mammals and used as food by human beings', 'name': 'milk'}, {'frequency': 'f', 'id': 702, 'synset': 'minivan.n.01', 'synonyms': ['minivan'], 'def': 'a small box-shaped passenger van', 'name': 'minivan'}, {'frequency': 'r', 'id': 703, 'synset': 'mint.n.05', 'synonyms': ['mint_candy'], 'def': 'a candy that is flavored with a mint oil', 'name': 'mint_candy'}, {'frequency': 'f', 'id': 704, 'synset': 'mirror.n.01', 'synonyms': ['mirror'], 'def': 'polished surface that forms images by reflecting light', 'name': 'mirror'}, {'frequency': 'c', 'id': 705, 'synset': 'mitten.n.01', 'synonyms': ['mitten'], 'def': 'glove that encases the thumb separately and the other four fingers together', 'name': 'mitten'}, {'frequency': 'c', 'id': 706, 'synset': 'mixer.n.04', 'synonyms': ['mixer_(kitchen_tool)', 'stand_mixer'], 'def': 'a kitchen utensil that is used for mixing foods', 'name': 'mixer_(kitchen_tool)'}, {'frequency': 'c', 'id': 707, 'synset': 'money.n.03', 'synonyms': ['money'], 'def': 'the official currency issued by a government or national bank', 'name': 'money'}, {'frequency': 'f', 'id': 708, 'synset': 'monitor.n.04', 'synonyms': ['monitor_(computer_equipment) computer_monitor'], 'def': 'a computer monitor', 'name': 'monitor_(computer_equipment) computer_monitor'}, {'frequency': 'c', 'id': 709, 'synset': 'monkey.n.01', 'synonyms': ['monkey'], 'def': 'any of various long-tailed primates', 'name': 'monkey'}, {'frequency': 'f', 'id': 710, 'synset': 'motor.n.01', 'synonyms': ['motor'], 'def': 'machine that converts other forms of energy into mechanical energy and so imparts motion', 'name': 'motor'}, {'frequency': 'f', 'id': 711, 'synset': 'motor_scooter.n.01', 'synonyms': ['motor_scooter', 'scooter'], 'def': 'a wheeled vehicle with small wheels and a low-powered engine', 'name': 'motor_scooter'}, {'frequency': 'r', 'id': 712, 'synset': 'motor_vehicle.n.01', 'synonyms': ['motor_vehicle', 'automotive_vehicle'], 'def': 'a self-propelled wheeled vehicle that does not run on rails', 'name': 'motor_vehicle'}, {'frequency': 'r', 'id': 713, 'synset': 'motorboat.n.01', 'synonyms': ['motorboat', 'powerboat'], 'def': 'a boat propelled by an internal-combustion engine', 'name': 'motorboat'}, {'frequency': 'f', 'id': 714, 'synset': 'motorcycle.n.01', 'synonyms': ['motorcycle'], 'def': 'a motor vehicle with two wheels and a strong frame', 'name': 'motorcycle'}, {'frequency': 'f', 'id': 715, 'synset': 'mound.n.01', 'synonyms': ['mound_(baseball)', "pitcher's_mound"], 'def': '(baseball) the slight elevation on which the pitcher stands', 'name': 'mound_(baseball)'}, {'frequency': 'r', 'id': 716, 'synset': 'mouse.n.01', 'synonyms': ['mouse_(animal_rodent)'], 'def': 'a small rodent with pointed snouts and small ears on elongated bodies with slender usually hairless tails', 'name': 'mouse_(animal_rodent)'}, {'frequency': 'f', 'id': 717, 'synset': 'mouse.n.04', 'synonyms': ['mouse_(computer_equipment)', 'computer_mouse'], 'def': 'a computer input device that controls an on-screen pointer', 'name': 'mouse_(computer_equipment)'}, {'frequency': 'f', 'id': 718, 'synset': 'mousepad.n.01', 'synonyms': ['mousepad'], 'def': 'a small portable pad that provides an operating surface for a computer mouse', 'name': 'mousepad'}, {'frequency': 'c', 'id': 719, 'synset': 'muffin.n.01', 'synonyms': ['muffin'], 'def': 'a sweet quick bread baked in a cup-shaped pan', 'name': 'muffin'}, {'frequency': 'f', 'id': 720, 'synset': 'mug.n.04', 'synonyms': ['mug'], 'def': 'with handle and usually cylindrical', 'name': 'mug'}, {'frequency': 'f', 'id': 721, 'synset': 'mushroom.n.02', 'synonyms': ['mushroom'], 'def': 'a common mushroom', 'name': 'mushroom'}, {'frequency': 'r', 'id': 722, 'synset': 'music_stool.n.01', 'synonyms': ['music_stool', 'piano_stool'], 'def': 'a stool for piano players; usually adjustable in height', 'name': 'music_stool'}, {'frequency': 'r', 'id': 723, 'synset': 'musical_instrument.n.01', 'synonyms': ['musical_instrument', 'instrument_(musical)'], 'def': 'any of various devices or contrivances that can be used to produce musical tones or sounds', 'name': 'musical_instrument'}, {'frequency': 'r', 'id': 724, 'synset': 'nailfile.n.01', 'synonyms': ['nailfile'], 'def': 'a small flat file for shaping the nails', 'name': 'nailfile'}, {'frequency': 'r', 'id': 725, 'synset': 'nameplate.n.01', 'synonyms': ['nameplate'], 'def': 'a plate bearing a name', 'name': 'nameplate'}, {'frequency': 'f', 'id': 726, 'synset': 'napkin.n.01', 'synonyms': ['napkin', 'table_napkin', 'serviette'], 'def': 'a small piece of table linen or paper that is used to wipe the mouth and to cover the lap in order to protect clothing', 'name': 'napkin'}, {'frequency': 'r', 'id': 727, 'synset': 'neckerchief.n.01', 'synonyms': ['neckerchief'], 'def': 'a kerchief worn around the neck', 'name': 'neckerchief'}, {'frequency': 'f', 'id': 728, 'synset': 'necklace.n.01', 'synonyms': ['necklace'], 'def': 'jewelry consisting of a cord or chain (often bearing gems) worn about the neck as an ornament', 'name': 'necklace'}, {'frequency': 'f', 'id': 729, 'synset': 'necktie.n.01', 'synonyms': ['necktie', 'tie_(necktie)'], 'def': 'neckwear consisting of a long narrow piece of material worn under a collar and tied in knot at the front', 'name': 'necktie'}, {'frequency': 'r', 'id': 730, 'synset': 'needle.n.03', 'synonyms': ['needle'], 'def': 'a sharp pointed implement (usually metal)', 'name': 'needle'}, {'frequency': 'c', 'id': 731, 'synset': 'nest.n.01', 'synonyms': ['nest'], 'def': 'a structure in which animals lay eggs or give birth to their young', 'name': 'nest'}, {'frequency': 'r', 'id': 732, 'synset': 'newsstand.n.01', 'synonyms': ['newsstand'], 'def': 'a stall where newspapers and other periodicals are sold', 'name': 'newsstand'}, {'frequency': 'c', 'id': 733, 'synset': 'nightwear.n.01', 'synonyms': ['nightshirt', 'nightwear', 'sleepwear', 'nightclothes'], 'def': 'garments designed to be worn in bed', 'name': 'nightshirt'}, {'frequency': 'r', 'id': 734, 'synset': 'nosebag.n.01', 'synonyms': ['nosebag_(for_animals)', 'feedbag'], 'def': 'a canvas bag that is used to feed an animal (such as a horse); covers the muzzle and fastens at the top of the head', 'name': 'nosebag_(for_animals)'}, {'frequency': 'r', 'id': 735, 'synset': 'noseband.n.01', 'synonyms': ['noseband_(for_animals)', 'nosepiece_(for_animals)'], 'def': "a strap that is the part of a bridle that goes over the animal's nose", 'name': 'noseband_(for_animals)'}, {'frequency': 'f', 'id': 736, 'synset': 'notebook.n.01', 'synonyms': ['notebook'], 'def': 'a book with blank pages for recording notes or memoranda', 'name': 'notebook'}, {'frequency': 'c', 'id': 737, 'synset': 'notepad.n.01', 'synonyms': ['notepad'], 'def': 'a pad of paper for keeping notes', 'name': 'notepad'}, {'frequency': 'c', 'id': 738, 'synset': 'nut.n.03', 'synonyms': ['nut'], 'def': 'a small metal block (usually square or hexagonal) with internal screw thread to be fitted onto a bolt', 'name': 'nut'}, {'frequency': 'r', 'id': 739, 'synset': 'nutcracker.n.01', 'synonyms': ['nutcracker'], 'def': 'a hand tool used to crack nuts open', 'name': 'nutcracker'}, {'frequency': 'c', 'id': 740, 'synset': 'oar.n.01', 'synonyms': ['oar'], 'def': 'an implement used to propel or steer a boat', 'name': 'oar'}, {'frequency': 'r', 'id': 741, 'synset': 'octopus.n.01', 'synonyms': ['octopus_(food)'], 'def': 'tentacles of octopus prepared as food', 'name': 'octopus_(food)'}, {'frequency': 'r', 'id': 742, 'synset': 'octopus.n.02', 'synonyms': ['octopus_(animal)'], 'def': 'bottom-living cephalopod having a soft oval body with eight long tentacles', 'name': 'octopus_(animal)'}, {'frequency': 'c', 'id': 743, 'synset': 'oil_lamp.n.01', 'synonyms': ['oil_lamp', 'kerosene_lamp', 'kerosine_lamp'], 'def': 'a lamp that burns oil (as kerosine) for light', 'name': 'oil_lamp'}, {'frequency': 'c', 'id': 744, 'synset': 'olive_oil.n.01', 'synonyms': ['olive_oil'], 'def': 'oil from olives', 'name': 'olive_oil'}, {'frequency': 'r', 'id': 745, 'synset': 'omelet.n.01', 'synonyms': ['omelet', 'omelette'], 'def': 'beaten eggs cooked until just set; may be folded around e.g. ham or cheese or jelly', 'name': 'omelet'}, {'frequency': 'f', 'id': 746, 'synset': 'onion.n.01', 'synonyms': ['onion'], 'def': 'the bulb of an onion plant', 'name': 'onion'}, {'frequency': 'f', 'id': 747, 'synset': 'orange.n.01', 'synonyms': ['orange_(fruit)'], 'def': 'orange (FRUIT of an orange tree)', 'name': 'orange_(fruit)'}, {'frequency': 'c', 'id': 748, 'synset': 'orange_juice.n.01', 'synonyms': ['orange_juice'], 'def': 'bottled or freshly squeezed juice of oranges', 'name': 'orange_juice'}, {'frequency': 'r', 'id': 749, 'synset': 'oregano.n.01', 'synonyms': ['oregano', 'marjoram'], 'def': 'aromatic Eurasian perennial herb used in cooking and baking', 'name': 'oregano'}, {'frequency': 'c', 'id': 750, 'synset': 'ostrich.n.02', 'synonyms': ['ostrich'], 'def': 'fast-running African flightless bird with two-toed feet; largest living bird', 'name': 'ostrich'}, {'frequency': 'c', 'id': 751, 'synset': 'ottoman.n.03', 'synonyms': ['ottoman', 'pouf', 'pouffe', 'hassock'], 'def': 'thick cushion used as a seat', 'name': 'ottoman'}, {'frequency': 'c', 'id': 752, 'synset': 'overall.n.01', 'synonyms': ['overalls_(clothing)'], 'def': 'work clothing consisting of denim trousers usually with a bib and shoulder straps', 'name': 'overalls_(clothing)'}, {'frequency': 'c', 'id': 753, 'synset': 'owl.n.01', 'synonyms': ['owl'], 'def': 'nocturnal bird of prey with hawk-like beak and claws and large head with front-facing eyes', 'name': 'owl'}, {'frequency': 'c', 'id': 754, 'synset': 'packet.n.03', 'synonyms': ['packet'], 'def': 'a small package or bundle', 'name': 'packet'}, {'frequency': 'r', 'id': 755, 'synset': 'pad.n.03', 'synonyms': ['inkpad', 'inking_pad', 'stamp_pad'], 'def': 'absorbent material saturated with ink used to transfer ink evenly to a rubber stamp', 'name': 'inkpad'}, {'frequency': 'c', 'id': 756, 'synset': 'pad.n.04', 'synonyms': ['pad'], 'def': 'a flat mass of soft material used for protection, stuffing, or comfort', 'name': 'pad'}, {'frequency': 'c', 'id': 757, 'synset': 'paddle.n.04', 'synonyms': ['paddle', 'boat_paddle'], 'def': 'a short light oar used without an oarlock to propel a canoe or small boat', 'name': 'paddle'}, {'frequency': 'c', 'id': 758, 'synset': 'padlock.n.01', 'synonyms': ['padlock'], 'def': 'a detachable, portable lock', 'name': 'padlock'}, {'frequency': 'r', 'id': 759, 'synset': 'paintbox.n.01', 'synonyms': ['paintbox'], 'def': "a box containing a collection of cubes or tubes of artists' paint", 'name': 'paintbox'}, {'frequency': 'c', 'id': 760, 'synset': 'paintbrush.n.01', 'synonyms': ['paintbrush'], 'def': 'a brush used as an applicator to apply paint', 'name': 'paintbrush'}, {'frequency': 'f', 'id': 761, 'synset': 'painting.n.01', 'synonyms': ['painting'], 'def': 'graphic art consisting of an artistic composition made by applying paints to a surface', 'name': 'painting'}, {'frequency': 'c', 'id': 762, 'synset': 'pajama.n.02', 'synonyms': ['pajamas', 'pyjamas'], 'def': 'loose-fitting nightclothes worn for sleeping or lounging', 'name': 'pajamas'}, {'frequency': 'c', 'id': 763, 'synset': 'palette.n.02', 'synonyms': ['palette', 'pallet'], 'def': 'board that provides a flat surface on which artists mix paints and the range of colors used', 'name': 'palette'}, {'frequency': 'f', 'id': 764, 'synset': 'pan.n.01', 'synonyms': ['pan_(for_cooking)', 'cooking_pan'], 'def': 'cooking utensil consisting of a wide metal vessel', 'name': 'pan_(for_cooking)'}, {'frequency': 'r', 'id': 765, 'synset': 'pan.n.03', 'synonyms': ['pan_(metal_container)'], 'def': 'shallow container made of metal', 'name': 'pan_(metal_container)'}, {'frequency': 'c', 'id': 766, 'synset': 'pancake.n.01', 'synonyms': ['pancake'], 'def': 'a flat cake of thin batter fried on both sides on a griddle', 'name': 'pancake'}, {'frequency': 'r', 'id': 767, 'synset': 'pantyhose.n.01', 'synonyms': ['pantyhose'], 'def': "a woman's tights consisting of underpants and stockings", 'name': 'pantyhose'}, {'frequency': 'r', 'id': 768, 'synset': 'papaya.n.02', 'synonyms': ['papaya'], 'def': 'large oval melon-like tropical fruit with yellowish flesh', 'name': 'papaya'}, {'frequency': 'r', 'id': 769, 'synset': 'paper_clip.n.01', 'synonyms': ['paperclip'], 'def': 'a wire or plastic clip for holding sheets of paper together', 'name': 'paperclip'}, {'frequency': 'f', 'id': 770, 'synset': 'paper_plate.n.01', 'synonyms': ['paper_plate'], 'def': 'a disposable plate made of cardboard', 'name': 'paper_plate'}, {'frequency': 'f', 'id': 771, 'synset': 'paper_towel.n.01', 'synonyms': ['paper_towel'], 'def': 'a disposable towel made of absorbent paper', 'name': 'paper_towel'}, {'frequency': 'r', 'id': 772, 'synset': 'paperback_book.n.01', 'synonyms': ['paperback_book', 'paper-back_book', 'softback_book', 'soft-cover_book'], 'def': 'a book with paper covers', 'name': 'paperback_book'}, {'frequency': 'r', 'id': 773, 'synset': 'paperweight.n.01', 'synonyms': ['paperweight'], 'def': 'a weight used to hold down a stack of papers', 'name': 'paperweight'}, {'frequency': 'c', 'id': 774, 'synset': 'parachute.n.01', 'synonyms': ['parachute'], 'def': 'rescue equipment consisting of a device that fills with air and retards your fall', 'name': 'parachute'}, {'frequency': 'r', 'id': 775, 'synset': 'parakeet.n.01', 'synonyms': ['parakeet', 'parrakeet', 'parroket', 'paraquet', 'paroquet', 'parroquet'], 'def': 'any of numerous small slender long-tailed parrots', 'name': 'parakeet'}, {'frequency': 'c', 'id': 776, 'synset': 'parasail.n.01', 'synonyms': ['parasail_(sports)'], 'def': 'parachute that will lift a person up into the air when it is towed by a motorboat or a car', 'name': 'parasail_(sports)'}, {'frequency': 'r', 'id': 777, 'synset': 'parchment.n.01', 'synonyms': ['parchment'], 'def': 'a superior paper resembling sheepskin', 'name': 'parchment'}, {'frequency': 'r', 'id': 778, 'synset': 'parka.n.01', 'synonyms': ['parka', 'anorak'], 'def': "a kind of heavy jacket (`windcheater' is a British term)", 'name': 'parka'}, {'frequency': 'f', 'id': 779, 'synset': 'parking_meter.n.01', 'synonyms': ['parking_meter'], 'def': 'a coin-operated timer located next to a parking space', 'name': 'parking_meter'}, {'frequency': 'c', 'id': 780, 'synset': 'parrot.n.01', 'synonyms': ['parrot'], 'def': 'usually brightly colored tropical birds with short hooked beaks and the ability to mimic sounds', 'name': 'parrot'}, {'frequency': 'c', 'id': 781, 'synset': 'passenger_car.n.01', 'synonyms': ['passenger_car_(part_of_a_train)', 'coach_(part_of_a_train)'], 'def': 'a railcar where passengers ride', 'name': 'passenger_car_(part_of_a_train)'}, {'frequency': 'r', 'id': 782, 'synset': 'passenger_ship.n.01', 'synonyms': ['passenger_ship'], 'def': 'a ship built to carry passengers', 'name': 'passenger_ship'}, {'frequency': 'r', 'id': 783, 'synset': 'passport.n.02', 'synonyms': ['passport'], 'def': 'a document issued by a country to a citizen allowing that person to travel abroad and re-enter the home country', 'name': 'passport'}, {'frequency': 'f', 'id': 784, 'synset': 'pastry.n.02', 'synonyms': ['pastry'], 'def': 'any of various baked foods made of dough or batter', 'name': 'pastry'}, {'frequency': 'r', 'id': 785, 'synset': 'patty.n.01', 'synonyms': ['patty_(food)'], 'def': 'small flat mass of chopped food', 'name': 'patty_(food)'}, {'frequency': 'c', 'id': 786, 'synset': 'pea.n.01', 'synonyms': ['pea_(food)'], 'def': 'seed of a pea plant used for food', 'name': 'pea_(food)'}, {'frequency': 'c', 'id': 787, 'synset': 'peach.n.03', 'synonyms': ['peach'], 'def': 'downy juicy fruit with sweet yellowish or whitish flesh', 'name': 'peach'}, {'frequency': 'c', 'id': 788, 'synset': 'peanut_butter.n.01', 'synonyms': ['peanut_butter'], 'def': 'a spread made from ground peanuts', 'name': 'peanut_butter'}, {'frequency': 'c', 'id': 789, 'synset': 'pear.n.01', 'synonyms': ['pear'], 'def': 'sweet juicy gritty-textured fruit available in many varieties', 'name': 'pear'}, {'frequency': 'r', 'id': 790, 'synset': 'peeler.n.03', 'synonyms': ['peeler_(tool_for_fruit_and_vegetables)'], 'def': 'a device for peeling vegetables or fruits', 'name': 'peeler_(tool_for_fruit_and_vegetables)'}, {'frequency': 'r', 'id': 791, 'synset': 'pegboard.n.01', 'synonyms': ['pegboard'], 'def': 'a board perforated with regularly spaced holes into which pegs can be fitted', 'name': 'pegboard'}, {'frequency': 'c', 'id': 792, 'synset': 'pelican.n.01', 'synonyms': ['pelican'], 'def': 'large long-winged warm-water seabird having a large bill with a distensible pouch for fish', 'name': 'pelican'}, {'frequency': 'f', 'id': 793, 'synset': 'pen.n.01', 'synonyms': ['pen'], 'def': 'a writing implement with a point from which ink flows', 'name': 'pen'}, {'frequency': 'c', 'id': 794, 'synset': 'pencil.n.01', 'synonyms': ['pencil'], 'def': 'a thin cylindrical pointed writing implement made of wood and graphite', 'name': 'pencil'}, {'frequency': 'r', 'id': 795, 'synset': 'pencil_box.n.01', 'synonyms': ['pencil_box', 'pencil_case'], 'def': 'a box for holding pencils', 'name': 'pencil_box'}, {'frequency': 'r', 'id': 796, 'synset': 'pencil_sharpener.n.01', 'synonyms': ['pencil_sharpener'], 'def': 'a rotary implement for sharpening the point on pencils', 'name': 'pencil_sharpener'}, {'frequency': 'r', 'id': 797, 'synset': 'pendulum.n.01', 'synonyms': ['pendulum'], 'def': 'an apparatus consisting of an object mounted so that it swings freely under the influence of gravity', 'name': 'pendulum'}, {'frequency': 'c', 'id': 798, 'synset': 'penguin.n.01', 'synonyms': ['penguin'], 'def': 'short-legged flightless birds of cold southern regions having webbed feet and wings modified as flippers', 'name': 'penguin'}, {'frequency': 'r', 'id': 799, 'synset': 'pennant.n.02', 'synonyms': ['pennant'], 'def': 'a flag longer than it is wide (and often tapering)', 'name': 'pennant'}, {'frequency': 'r', 'id': 800, 'synset': 'penny.n.02', 'synonyms': ['penny_(coin)'], 'def': 'a coin worth one-hundredth of the value of the basic unit', 'name': 'penny_(coin)'}, {'frequency': 'c', 'id': 801, 'synset': 'pepper.n.03', 'synonyms': ['pepper', 'peppercorn'], 'def': 'pungent seasoning from the berry of the common pepper plant; whole or ground', 'name': 'pepper'}, {'frequency': 'c', 'id': 802, 'synset': 'pepper_mill.n.01', 'synonyms': ['pepper_mill', 'pepper_grinder'], 'def': 'a mill for grinding pepper', 'name': 'pepper_mill'}, {'frequency': 'c', 'id': 803, 'synset': 'perfume.n.02', 'synonyms': ['perfume'], 'def': 'a toiletry that emits and diffuses a fragrant odor', 'name': 'perfume'}, {'frequency': 'r', 'id': 804, 'synset': 'persimmon.n.02', 'synonyms': ['persimmon'], 'def': 'orange fruit resembling a plum; edible when fully ripe', 'name': 'persimmon'}, {'frequency': 'f', 'id': 805, 'synset': 'person.n.01', 'synonyms': ['baby', 'child', 'boy', 'girl', 'man', 'woman', 'person', 'human'], 'def': 'a human being', 'name': 'baby'}, {'frequency': 'r', 'id': 806, 'synset': 'pet.n.01', 'synonyms': ['pet'], 'def': 'a domesticated animal kept for companionship or amusement', 'name': 'pet'}, {'frequency': 'r', 'id': 807, 'synset': 'petfood.n.01', 'synonyms': ['petfood', 'pet-food'], 'def': 'food prepared for animal pets', 'name': 'petfood'}, {'frequency': 'r', 'id': 808, 'synset': 'pew.n.01', 'synonyms': ['pew_(church_bench)', 'church_bench'], 'def': 'long bench with backs; used in church by the congregation', 'name': 'pew_(church_bench)'}, {'frequency': 'r', 'id': 809, 'synset': 'phonebook.n.01', 'synonyms': ['phonebook', 'telephone_book', 'telephone_directory'], 'def': 'a directory containing an alphabetical list of telephone subscribers and their telephone numbers', 'name': 'phonebook'}, {'frequency': 'c', 'id': 810, 'synset': 'phonograph_record.n.01', 'synonyms': ['phonograph_record', 'phonograph_recording', 'record_(phonograph_recording)'], 'def': 'sound recording consisting of a typically black disk with a continuous groove', 'name': 'phonograph_record'}, {'frequency': 'c', 'id': 811, 'synset': 'piano.n.01', 'synonyms': ['piano'], 'def': 'a keyboard instrument that is played by depressing keys that cause hammers to strike tuned strings and produce sounds', 'name': 'piano'}, {'frequency': 'f', 'id': 812, 'synset': 'pickle.n.01', 'synonyms': ['pickle'], 'def': 'vegetables (especially cucumbers) preserved in brine or vinegar', 'name': 'pickle'}, {'frequency': 'f', 'id': 813, 'synset': 'pickup.n.01', 'synonyms': ['pickup_truck'], 'def': 'a light truck with an open body and low sides and a tailboard', 'name': 'pickup_truck'}, {'frequency': 'c', 'id': 814, 'synset': 'pie.n.01', 'synonyms': ['pie'], 'def': 'dish baked in pastry-lined pan often with a pastry top', 'name': 'pie'}, {'frequency': 'c', 'id': 815, 'synset': 'pigeon.n.01', 'synonyms': ['pigeon'], 'def': 'wild and domesticated birds having a heavy body and short legs', 'name': 'pigeon'}, {'frequency': 'r', 'id': 816, 'synset': 'piggy_bank.n.01', 'synonyms': ['piggy_bank', 'penny_bank'], 'def': "a child's coin bank (often shaped like a pig)", 'name': 'piggy_bank'}, {'frequency': 'f', 'id': 817, 'synset': 'pillow.n.01', 'synonyms': ['pillow'], 'def': 'a cushion to support the head of a sleeping person', 'name': 'pillow'}, {'frequency': 'r', 'id': 818, 'synset': 'pin.n.09', 'synonyms': ['pin_(non_jewelry)'], 'def': 'a small slender (often pointed) piece of wood or metal used to support or fasten or attach things', 'name': 'pin_(non_jewelry)'}, {'frequency': 'f', 'id': 819, 'synset': 'pineapple.n.02', 'synonyms': ['pineapple'], 'def': 'large sweet fleshy tropical fruit with a tuft of stiff leaves', 'name': 'pineapple'}, {'frequency': 'c', 'id': 820, 'synset': 'pinecone.n.01', 'synonyms': ['pinecone'], 'def': 'the seed-producing cone of a pine tree', 'name': 'pinecone'}, {'frequency': 'r', 'id': 821, 'synset': 'ping-pong_ball.n.01', 'synonyms': ['ping-pong_ball'], 'def': 'light hollow ball used in playing table tennis', 'name': 'ping-pong_ball'}, {'frequency': 'r', 'id': 822, 'synset': 'pinwheel.n.03', 'synonyms': ['pinwheel'], 'def': 'a toy consisting of vanes of colored paper or plastic that is pinned to a stick and spins when it is pointed into the wind', 'name': 'pinwheel'}, {'frequency': 'r', 'id': 823, 'synset': 'pipe.n.01', 'synonyms': ['tobacco_pipe'], 'def': 'a tube with a small bowl at one end; used for smoking tobacco', 'name': 'tobacco_pipe'}, {'frequency': 'f', 'id': 824, 'synset': 'pipe.n.02', 'synonyms': ['pipe', 'piping'], 'def': 'a long tube made of metal or plastic that is used to carry water or oil or gas etc.', 'name': 'pipe'}, {'frequency': 'r', 'id': 825, 'synset': 'pistol.n.01', 'synonyms': ['pistol', 'handgun'], 'def': 'a firearm that is held and fired with one hand', 'name': 'pistol'}, {'frequency': 'r', 'id': 826, 'synset': 'pita.n.01', 'synonyms': ['pita_(bread)', 'pocket_bread'], 'def': 'usually small round bread that can open into a pocket for filling', 'name': 'pita_(bread)'}, {'frequency': 'f', 'id': 827, 'synset': 'pitcher.n.02', 'synonyms': ['pitcher_(vessel_for_liquid)', 'ewer'], 'def': 'an open vessel with a handle and a spout for pouring', 'name': 'pitcher_(vessel_for_liquid)'}, {'frequency': 'r', 'id': 828, 'synset': 'pitchfork.n.01', 'synonyms': ['pitchfork'], 'def': 'a long-handled hand tool with sharp widely spaced prongs for lifting and pitching hay', 'name': 'pitchfork'}, {'frequency': 'f', 'id': 829, 'synset': 'pizza.n.01', 'synonyms': ['pizza'], 'def': 'Italian open pie made of thin bread dough spread with a spiced mixture of e.g. tomato sauce and cheese', 'name': 'pizza'}, {'frequency': 'f', 'id': 830, 'synset': 'place_mat.n.01', 'synonyms': ['place_mat'], 'def': 'a mat placed on a table for an individual place setting', 'name': 'place_mat'}, {'frequency': 'f', 'id': 831, 'synset': 'plate.n.04', 'synonyms': ['plate'], 'def': 'dish on which food is served or from which food is eaten', 'name': 'plate'}, {'frequency': 'c', 'id': 832, 'synset': 'platter.n.01', 'synonyms': ['platter'], 'def': 'a large shallow dish used for serving food', 'name': 'platter'}, {'frequency': 'r', 'id': 833, 'synset': 'playing_card.n.01', 'synonyms': ['playing_card'], 'def': 'one of a pack of cards that are used to play card games', 'name': 'playing_card'}, {'frequency': 'r', 'id': 834, 'synset': 'playpen.n.01', 'synonyms': ['playpen'], 'def': 'a portable enclosure in which babies may be left to play', 'name': 'playpen'}, {'frequency': 'c', 'id': 835, 'synset': 'pliers.n.01', 'synonyms': ['pliers', 'plyers'], 'def': 'a gripping hand tool with two hinged arms and (usually) serrated jaws', 'name': 'pliers'}, {'frequency': 'r', 'id': 836, 'synset': 'plow.n.01', 'synonyms': ['plow_(farm_equipment)', 'plough_(farm_equipment)'], 'def': 'a farm tool having one or more heavy blades to break the soil and cut a furrow prior to sowing', 'name': 'plow_(farm_equipment)'}, {'frequency': 'r', 'id': 837, 'synset': 'pocket_watch.n.01', 'synonyms': ['pocket_watch'], 'def': 'a watch that is carried in a small watch pocket', 'name': 'pocket_watch'}, {'frequency': 'c', 'id': 838, 'synset': 'pocketknife.n.01', 'synonyms': ['pocketknife'], 'def': 'a knife with a blade that folds into the handle; suitable for carrying in the pocket', 'name': 'pocketknife'}, {'frequency': 'c', 'id': 839, 'synset': 'poker.n.01', 'synonyms': ['poker_(fire_stirring_tool)', 'stove_poker', 'fire_hook'], 'def': 'fire iron consisting of a metal rod with a handle; used to stir a fire', 'name': 'poker_(fire_stirring_tool)'}, {'frequency': 'f', 'id': 840, 'synset': 'pole.n.01', 'synonyms': ['pole', 'post'], 'def': 'a long (usually round) rod of wood or metal or plastic', 'name': 'pole'}, {'frequency': 'r', 'id': 841, 'synset': 'police_van.n.01', 'synonyms': ['police_van', 'police_wagon', 'paddy_wagon', 'patrol_wagon'], 'def': 'van used by police to transport prisoners', 'name': 'police_van'}, {'frequency': 'f', 'id': 842, 'synset': 'polo_shirt.n.01', 'synonyms': ['polo_shirt', 'sport_shirt'], 'def': 'a shirt with short sleeves designed for comfort and casual wear', 'name': 'polo_shirt'}, {'frequency': 'r', 'id': 843, 'synset': 'poncho.n.01', 'synonyms': ['poncho'], 'def': 'a blanket-like cloak with a hole in the center for the head', 'name': 'poncho'}, {'frequency': 'c', 'id': 844, 'synset': 'pony.n.05', 'synonyms': ['pony'], 'def': 'any of various breeds of small gentle horses usually less than five feet high at the shoulder', 'name': 'pony'}, {'frequency': 'r', 'id': 845, 'synset': 'pool_table.n.01', 'synonyms': ['pool_table', 'billiard_table', 'snooker_table'], 'def': 'game equipment consisting of a heavy table on which pool is played', 'name': 'pool_table'}, {'frequency': 'f', 'id': 846, 'synset': 'pop.n.02', 'synonyms': ['pop_(soda)', 'soda_(pop)', 'tonic', 'soft_drink'], 'def': 'a sweet drink containing carbonated water and flavoring', 'name': 'pop_(soda)'}, {'frequency': 'r', 'id': 847, 'synset': 'portrait.n.02', 'synonyms': ['portrait', 'portrayal'], 'def': 'any likeness of a person, in any medium', 'name': 'portrait'}, {'frequency': 'c', 'id': 848, 'synset': 'postbox.n.01', 'synonyms': ['postbox_(public)', 'mailbox_(public)'], 'def': 'public box for deposit of mail', 'name': 'postbox_(public)'}, {'frequency': 'c', 'id': 849, 'synset': 'postcard.n.01', 'synonyms': ['postcard', 'postal_card', 'mailing-card'], 'def': 'a card for sending messages by post without an envelope', 'name': 'postcard'}, {'frequency': 'f', 'id': 850, 'synset': 'poster.n.01', 'synonyms': ['poster', 'placard'], 'def': 'a sign posted in a public place as an advertisement', 'name': 'poster'}, {'frequency': 'f', 'id': 851, 'synset': 'pot.n.01', 'synonyms': ['pot'], 'def': 'metal or earthenware cooking vessel that is usually round and deep; often has a handle and lid', 'name': 'pot'}, {'frequency': 'f', 'id': 852, 'synset': 'pot.n.04', 'synonyms': ['flowerpot'], 'def': 'a container in which plants are cultivated', 'name': 'flowerpot'}, {'frequency': 'f', 'id': 853, 'synset': 'potato.n.01', 'synonyms': ['potato'], 'def': 'an edible tuber native to South America', 'name': 'potato'}, {'frequency': 'c', 'id': 854, 'synset': 'potholder.n.01', 'synonyms': ['potholder'], 'def': 'an insulated pad for holding hot pots', 'name': 'potholder'}, {'frequency': 'c', 'id': 855, 'synset': 'pottery.n.01', 'synonyms': ['pottery', 'clayware'], 'def': 'ceramic ware made from clay and baked in a kiln', 'name': 'pottery'}, {'frequency': 'c', 'id': 856, 'synset': 'pouch.n.01', 'synonyms': ['pouch'], 'def': 'a small or medium size container for holding or carrying things', 'name': 'pouch'}, {'frequency': 'r', 'id': 857, 'synset': 'power_shovel.n.01', 'synonyms': ['power_shovel', 'excavator', 'digger'], 'def': 'a machine for excavating', 'name': 'power_shovel'}, {'frequency': 'c', 'id': 858, 'synset': 'prawn.n.01', 'synonyms': ['prawn', 'shrimp'], 'def': 'any of various edible decapod crustaceans', 'name': 'prawn'}, {'frequency': 'f', 'id': 859, 'synset': 'printer.n.03', 'synonyms': ['printer', 'printing_machine'], 'def': 'a machine that prints', 'name': 'printer'}, {'frequency': 'c', 'id': 860, 'synset': 'projectile.n.01', 'synonyms': ['projectile_(weapon)', 'missile'], 'def': 'a weapon that is forcibly thrown or projected at a targets', 'name': 'projectile_(weapon)'}, {'frequency': 'c', 'id': 861, 'synset': 'projector.n.02', 'synonyms': ['projector'], 'def': 'an optical instrument that projects an enlarged image onto a screen', 'name': 'projector'}, {'frequency': 'f', 'id': 862, 'synset': 'propeller.n.01', 'synonyms': ['propeller', 'propellor'], 'def': 'a mechanical device that rotates to push against air or water', 'name': 'propeller'}, {'frequency': 'r', 'id': 863, 'synset': 'prune.n.01', 'synonyms': ['prune'], 'def': 'dried plum', 'name': 'prune'}, {'frequency': 'r', 'id': 864, 'synset': 'pudding.n.01', 'synonyms': ['pudding'], 'def': 'any of various soft thick unsweetened baked dishes', 'name': 'pudding'}, {'frequency': 'r', 'id': 865, 'synset': 'puffer.n.02', 'synonyms': ['puffer_(fish)', 'pufferfish', 'blowfish', 'globefish'], 'def': 'fishes whose elongated spiny body can inflate itself with water or air to form a globe', 'name': 'puffer_(fish)'}, {'frequency': 'r', 'id': 866, 'synset': 'puffin.n.01', 'synonyms': ['puffin'], 'def': 'seabirds having short necks and brightly colored compressed bills', 'name': 'puffin'}, {'frequency': 'r', 'id': 867, 'synset': 'pug.n.01', 'synonyms': ['pug-dog'], 'def': 'small compact smooth-coated breed of Asiatic origin having a tightly curled tail and broad flat wrinkled muzzle', 'name': 'pug-dog'}, {'frequency': 'c', 'id': 868, 'synset': 'pumpkin.n.02', 'synonyms': ['pumpkin'], 'def': 'usually large pulpy deep-yellow round fruit of the squash family maturing in late summer or early autumn', 'name': 'pumpkin'}, {'frequency': 'r', 'id': 869, 'synset': 'punch.n.03', 'synonyms': ['puncher'], 'def': 'a tool for making holes or indentations', 'name': 'puncher'}, {'frequency': 'r', 'id': 870, 'synset': 'puppet.n.01', 'synonyms': ['puppet', 'marionette'], 'def': 'a small figure of a person operated from above with strings by a puppeteer', 'name': 'puppet'}, {'frequency': 'r', 'id': 871, 'synset': 'puppy.n.01', 'synonyms': ['puppy'], 'def': 'a young dog', 'name': 'puppy'}, {'frequency': 'r', 'id': 872, 'synset': 'quesadilla.n.01', 'synonyms': ['quesadilla'], 'def': 'a tortilla that is filled with cheese and heated', 'name': 'quesadilla'}, {'frequency': 'r', 'id': 873, 'synset': 'quiche.n.02', 'synonyms': ['quiche'], 'def': 'a tart filled with rich unsweetened custard; often contains other ingredients (as cheese or ham or seafood or vegetables)', 'name': 'quiche'}, {'frequency': 'f', 'id': 874, 'synset': 'quilt.n.01', 'synonyms': ['quilt', 'comforter'], 'def': 'bedding made of two layers of cloth filled with stuffing and stitched together', 'name': 'quilt'}, {'frequency': 'c', 'id': 875, 'synset': 'rabbit.n.01', 'synonyms': ['rabbit'], 'def': 'any of various burrowing animals of the family Leporidae having long ears and short tails', 'name': 'rabbit'}, {'frequency': 'r', 'id': 876, 'synset': 'racer.n.02', 'synonyms': ['race_car', 'racing_car'], 'def': 'a fast car that competes in races', 'name': 'race_car'}, {'frequency': 'c', 'id': 877, 'synset': 'racket.n.04', 'synonyms': ['racket', 'racquet'], 'def': 'a sports implement used to strike a ball in various games', 'name': 'racket'}, {'frequency': 'r', 'id': 878, 'synset': 'radar.n.01', 'synonyms': ['radar'], 'def': 'measuring instrument in which the echo of a pulse of microwave radiation is used to detect and locate distant objects', 'name': 'radar'}, {'frequency': 'c', 'id': 879, 'synset': 'radiator.n.03', 'synonyms': ['radiator'], 'def': 'a mechanism consisting of a metal honeycomb through which hot fluids circulate', 'name': 'radiator'}, {'frequency': 'c', 'id': 880, 'synset': 'radio_receiver.n.01', 'synonyms': ['radio_receiver', 'radio_set', 'radio', 'tuner_(radio)'], 'def': 'an electronic receiver that detects and demodulates and amplifies transmitted radio signals', 'name': 'radio_receiver'}, {'frequency': 'c', 'id': 881, 'synset': 'radish.n.03', 'synonyms': ['radish', 'daikon'], 'def': 'pungent edible root of any of various cultivated radish plants', 'name': 'radish'}, {'frequency': 'c', 'id': 882, 'synset': 'raft.n.01', 'synonyms': ['raft'], 'def': 'a flat float (usually made of logs or planks) that can be used for transport or as a platform for swimmers', 'name': 'raft'}, {'frequency': 'r', 'id': 883, 'synset': 'rag_doll.n.01', 'synonyms': ['rag_doll'], 'def': 'a cloth doll that is stuffed and (usually) painted', 'name': 'rag_doll'}, {'frequency': 'c', 'id': 884, 'synset': 'raincoat.n.01', 'synonyms': ['raincoat', 'waterproof_jacket'], 'def': 'a water-resistant coat', 'name': 'raincoat'}, {'frequency': 'c', 'id': 885, 'synset': 'ram.n.05', 'synonyms': ['ram_(animal)'], 'def': 'uncastrated adult male sheep', 'name': 'ram_(animal)'}, {'frequency': 'c', 'id': 886, 'synset': 'raspberry.n.02', 'synonyms': ['raspberry'], 'def': 'red or black edible aggregate berries usually smaller than the related blackberries', 'name': 'raspberry'}, {'frequency': 'r', 'id': 887, 'synset': 'rat.n.01', 'synonyms': ['rat'], 'def': 'any of various long-tailed rodents similar to but larger than a mouse', 'name': 'rat'}, {'frequency': 'c', 'id': 888, 'synset': 'razorblade.n.01', 'synonyms': ['razorblade'], 'def': 'a blade that has very sharp edge', 'name': 'razorblade'}, {'frequency': 'c', 'id': 889, 'synset': 'reamer.n.01', 'synonyms': ['reamer_(juicer)', 'juicer', 'juice_reamer'], 'def': 'a squeezer with a conical ridged center that is used for squeezing juice from citrus fruit', 'name': 'reamer_(juicer)'}, {'frequency': 'f', 'id': 890, 'synset': 'rearview_mirror.n.01', 'synonyms': ['rearview_mirror'], 'def': 'car mirror that reflects the view out of the rear window', 'name': 'rearview_mirror'}, {'frequency': 'c', 'id': 891, 'synset': 'receipt.n.02', 'synonyms': ['receipt'], 'def': 'an acknowledgment (usually tangible) that payment has been made', 'name': 'receipt'}, {'frequency': 'c', 'id': 892, 'synset': 'recliner.n.01', 'synonyms': ['recliner', 'reclining_chair', 'lounger_(chair)'], 'def': 'an armchair whose back can be lowered and foot can be raised to allow the sitter to recline in it', 'name': 'recliner'}, {'frequency': 'r', 'id': 893, 'synset': 'record_player.n.01', 'synonyms': ['record_player', 'phonograph_(record_player)', 'turntable'], 'def': 'machine in which rotating records cause a stylus to vibrate and the vibrations are amplified acoustically or electronically', 'name': 'record_player'}, {'frequency': 'r', 'id': 894, 'synset': 'red_cabbage.n.02', 'synonyms': ['red_cabbage'], 'def': 'compact head of purplish-red leaves', 'name': 'red_cabbage'}, {'frequency': 'f', 'id': 895, 'synset': 'reflector.n.01', 'synonyms': ['reflector'], 'def': 'device that reflects light, radiation, etc.', 'name': 'reflector'}, {'frequency': 'f', 'id': 896, 'synset': 'remote_control.n.01', 'synonyms': ['remote_control'], 'def': 'a device that can be used to control a machine or apparatus from a distance', 'name': 'remote_control'}, {'frequency': 'c', 'id': 897, 'synset': 'rhinoceros.n.01', 'synonyms': ['rhinoceros'], 'def': 'massive powerful herbivorous odd-toed ungulate of southeast Asia and Africa having very thick skin and one or two horns on the snout', 'name': 'rhinoceros'}, {'frequency': 'r', 'id': 898, 'synset': 'rib.n.03', 'synonyms': ['rib_(food)'], 'def': 'cut of meat including one or more ribs', 'name': 'rib_(food)'}, {'frequency': 'r', 'id': 899, 'synset': 'rifle.n.01', 'synonyms': ['rifle'], 'def': 'a shoulder firearm with a long barrel', 'name': 'rifle'}, {'frequency': 'f', 'id': 900, 'synset': 'ring.n.08', 'synonyms': ['ring'], 'def': 'jewelry consisting of a circlet of precious metal (often set with jewels) worn on the finger', 'name': 'ring'}, {'frequency': 'r', 'id': 901, 'synset': 'river_boat.n.01', 'synonyms': ['river_boat'], 'def': 'a boat used on rivers or to ply a river', 'name': 'river_boat'}, {'frequency': 'r', 'id': 902, 'synset': 'road_map.n.02', 'synonyms': ['road_map'], 'def': '(NOT A ROAD) a MAP showing roads (for automobile travel)', 'name': 'road_map'}, {'frequency': 'c', 'id': 903, 'synset': 'robe.n.01', 'synonyms': ['robe'], 'def': 'any loose flowing garment', 'name': 'robe'}, {'frequency': 'c', 'id': 904, 'synset': 'rocking_chair.n.01', 'synonyms': ['rocking_chair'], 'def': 'a chair mounted on rockers', 'name': 'rocking_chair'}, {'frequency': 'r', 'id': 905, 'synset': 'roller_skate.n.01', 'synonyms': ['roller_skate'], 'def': 'a shoe with pairs of rollers (small hard wheels) fixed to the sole', 'name': 'roller_skate'}, {'frequency': 'r', 'id': 906, 'synset': 'rollerblade.n.01', 'synonyms': ['Rollerblade'], 'def': 'an in-line variant of a roller skate', 'name': 'Rollerblade'}, {'frequency': 'c', 'id': 907, 'synset': 'rolling_pin.n.01', 'synonyms': ['rolling_pin'], 'def': 'utensil consisting of a cylinder (usually of wood) with a handle at each end; used to roll out dough', 'name': 'rolling_pin'}, {'frequency': 'r', 'id': 908, 'synset': 'root_beer.n.01', 'synonyms': ['root_beer'], 'def': 'carbonated drink containing extracts of roots and herbs', 'name': 'root_beer'}, {'frequency': 'c', 'id': 909, 'synset': 'router.n.02', 'synonyms': ['router_(computer_equipment)'], 'def': 'a device that forwards data packets between computer networks', 'name': 'router_(computer_equipment)'}, {'frequency': 'f', 'id': 910, 'synset': 'rubber_band.n.01', 'synonyms': ['rubber_band', 'elastic_band'], 'def': 'a narrow band of elastic rubber used to hold things (such as papers) together', 'name': 'rubber_band'}, {'frequency': 'c', 'id': 911, 'synset': 'runner.n.08', 'synonyms': ['runner_(carpet)'], 'def': 'a long narrow carpet', 'name': 'runner_(carpet)'}, {'frequency': 'f', 'id': 912, 'synset': 'sack.n.01', 'synonyms': ['plastic_bag', 'paper_bag'], 'def': "a bag made of paper or plastic for holding customer's purchases", 'name': 'plastic_bag'}, {'frequency': 'f', 'id': 913, 'synset': 'saddle.n.01', 'synonyms': ['saddle_(on_an_animal)'], 'def': 'a seat for the rider of a horse or camel', 'name': 'saddle_(on_an_animal)'}, {'frequency': 'f', 'id': 914, 'synset': 'saddle_blanket.n.01', 'synonyms': ['saddle_blanket', 'saddlecloth', 'horse_blanket'], 'def': 'stable gear consisting of a blanket placed under the saddle', 'name': 'saddle_blanket'}, {'frequency': 'c', 'id': 915, 'synset': 'saddlebag.n.01', 'synonyms': ['saddlebag'], 'def': 'a large bag (or pair of bags) hung over a saddle', 'name': 'saddlebag'}, {'frequency': 'r', 'id': 916, 'synset': 'safety_pin.n.01', 'synonyms': ['safety_pin'], 'def': 'a pin in the form of a clasp; has a guard so the point of the pin will not stick the user', 'name': 'safety_pin'}, {'frequency': 'c', 'id': 917, 'synset': 'sail.n.01', 'synonyms': ['sail'], 'def': 'a large piece of fabric by means of which wind is used to propel a sailing vessel', 'name': 'sail'}, {'frequency': 'c', 'id': 918, 'synset': 'salad.n.01', 'synonyms': ['salad'], 'def': 'food mixtures either arranged on a plate or tossed and served with a moist dressing; usually consisting of or including greens', 'name': 'salad'}, {'frequency': 'r', 'id': 919, 'synset': 'salad_plate.n.01', 'synonyms': ['salad_plate', 'salad_bowl'], 'def': 'a plate or bowl for individual servings of salad', 'name': 'salad_plate'}, {'frequency': 'r', 'id': 920, 'synset': 'salami.n.01', 'synonyms': ['salami'], 'def': 'highly seasoned fatty sausage of pork and beef usually dried', 'name': 'salami'}, {'frequency': 'r', 'id': 921, 'synset': 'salmon.n.01', 'synonyms': ['salmon_(fish)'], 'def': 'any of various large food and game fishes of northern waters', 'name': 'salmon_(fish)'}, {'frequency': 'r', 'id': 922, 'synset': 'salmon.n.03', 'synonyms': ['salmon_(food)'], 'def': 'flesh of any of various marine or freshwater fish of the family Salmonidae', 'name': 'salmon_(food)'}, {'frequency': 'r', 'id': 923, 'synset': 'salsa.n.01', 'synonyms': ['salsa'], 'def': 'spicy sauce of tomatoes and onions and chili peppers to accompany Mexican foods', 'name': 'salsa'}, {'frequency': 'f', 'id': 924, 'synset': 'saltshaker.n.01', 'synonyms': ['saltshaker'], 'def': 'a shaker with a perforated top for sprinkling salt', 'name': 'saltshaker'}, {'frequency': 'f', 'id': 925, 'synset': 'sandal.n.01', 'synonyms': ['sandal_(type_of_shoe)'], 'def': 'a shoe consisting of a sole fastened by straps to the foot', 'name': 'sandal_(type_of_shoe)'}, {'frequency': 'f', 'id': 926, 'synset': 'sandwich.n.01', 'synonyms': ['sandwich'], 'def': 'two (or more) slices of bread with a filling between them', 'name': 'sandwich'}, {'frequency': 'r', 'id': 927, 'synset': 'satchel.n.01', 'synonyms': ['satchel'], 'def': 'luggage consisting of a small case with a flat bottom and (usually) a shoulder strap', 'name': 'satchel'}, {'frequency': 'r', 'id': 928, 'synset': 'saucepan.n.01', 'synonyms': ['saucepan'], 'def': 'a deep pan with a handle; used for stewing or boiling', 'name': 'saucepan'}, {'frequency': 'f', 'id': 929, 'synset': 'saucer.n.02', 'synonyms': ['saucer'], 'def': 'a small shallow dish for holding a cup at the table', 'name': 'saucer'}, {'frequency': 'f', 'id': 930, 'synset': 'sausage.n.01', 'synonyms': ['sausage'], 'def': 'highly seasoned minced meat stuffed in casings', 'name': 'sausage'}, {'frequency': 'r', 'id': 931, 'synset': 'sawhorse.n.01', 'synonyms': ['sawhorse', 'sawbuck'], 'def': 'a framework for holding wood that is being sawed', 'name': 'sawhorse'}, {'frequency': 'r', 'id': 932, 'synset': 'sax.n.02', 'synonyms': ['saxophone'], 'def': "a wind instrument with a `J'-shaped form typically made of brass", 'name': 'saxophone'}, {'frequency': 'f', 'id': 933, 'synset': 'scale.n.07', 'synonyms': ['scale_(measuring_instrument)'], 'def': 'a measuring instrument for weighing; shows amount of mass', 'name': 'scale_(measuring_instrument)'}, {'frequency': 'r', 'id': 934, 'synset': 'scarecrow.n.01', 'synonyms': ['scarecrow', 'strawman'], 'def': 'an effigy in the shape of a man to frighten birds away from seeds', 'name': 'scarecrow'}, {'frequency': 'f', 'id': 935, 'synset': 'scarf.n.01', 'synonyms': ['scarf'], 'def': 'a garment worn around the head or neck or shoulders for warmth or decoration', 'name': 'scarf'}, {'frequency': 'c', 'id': 936, 'synset': 'school_bus.n.01', 'synonyms': ['school_bus'], 'def': 'a bus used to transport children to or from school', 'name': 'school_bus'}, {'frequency': 'f', 'id': 937, 'synset': 'scissors.n.01', 'synonyms': ['scissors'], 'def': 'a tool having two crossed pivoting blades with looped handles', 'name': 'scissors'}, {'frequency': 'c', 'id': 938, 'synset': 'scoreboard.n.01', 'synonyms': ['scoreboard'], 'def': 'a large board for displaying the score of a contest (and some other information)', 'name': 'scoreboard'}, {'frequency': 'c', 'id': 939, 'synset': 'scrambled_eggs.n.01', 'synonyms': ['scrambled_eggs'], 'def': 'eggs beaten and cooked to a soft firm consistency while stirring', 'name': 'scrambled_eggs'}, {'frequency': 'r', 'id': 940, 'synset': 'scraper.n.01', 'synonyms': ['scraper'], 'def': 'any of various hand tools for scraping', 'name': 'scraper'}, {'frequency': 'r', 'id': 941, 'synset': 'scratcher.n.03', 'synonyms': ['scratcher'], 'def': 'a device used for scratching', 'name': 'scratcher'}, {'frequency': 'c', 'id': 942, 'synset': 'screwdriver.n.01', 'synonyms': ['screwdriver'], 'def': 'a hand tool for driving screws; has a tip that fits into the head of a screw', 'name': 'screwdriver'}, {'frequency': 'c', 'id': 943, 'synset': 'scrub_brush.n.01', 'synonyms': ['scrubbing_brush'], 'def': 'a brush with short stiff bristles for heavy cleaning', 'name': 'scrubbing_brush'}, {'frequency': 'c', 'id': 944, 'synset': 'sculpture.n.01', 'synonyms': ['sculpture'], 'def': 'a three-dimensional work of art', 'name': 'sculpture'}, {'frequency': 'r', 'id': 945, 'synset': 'seabird.n.01', 'synonyms': ['seabird', 'seafowl'], 'def': 'a bird that frequents coastal waters and the open ocean: gulls; pelicans; gannets; cormorants; albatrosses; petrels; etc.', 'name': 'seabird'}, {'frequency': 'r', 'id': 946, 'synset': 'seahorse.n.02', 'synonyms': ['seahorse'], 'def': 'small fish with horse-like heads bent sharply downward and curled tails', 'name': 'seahorse'}, {'frequency': 'r', 'id': 947, 'synset': 'seaplane.n.01', 'synonyms': ['seaplane', 'hydroplane'], 'def': 'an airplane that can land on or take off from water', 'name': 'seaplane'}, {'frequency': 'c', 'id': 948, 'synset': 'seashell.n.01', 'synonyms': ['seashell'], 'def': 'the shell of a marine organism', 'name': 'seashell'}, {'frequency': 'r', 'id': 949, 'synset': 'seedling.n.01', 'synonyms': ['seedling'], 'def': 'young plant or tree grown from a seed', 'name': 'seedling'}, {'frequency': 'c', 'id': 950, 'synset': 'serving_dish.n.01', 'synonyms': ['serving_dish'], 'def': 'a dish used for serving food', 'name': 'serving_dish'}, {'frequency': 'r', 'id': 951, 'synset': 'sewing_machine.n.01', 'synonyms': ['sewing_machine'], 'def': 'a textile machine used as a home appliance for sewing', 'name': 'sewing_machine'}, {'frequency': 'r', 'id': 952, 'synset': 'shaker.n.03', 'synonyms': ['shaker'], 'def': 'a container in which something can be shaken', 'name': 'shaker'}, {'frequency': 'c', 'id': 953, 'synset': 'shampoo.n.01', 'synonyms': ['shampoo'], 'def': 'cleansing agent consisting of soaps or detergents used for washing the hair', 'name': 'shampoo'}, {'frequency': 'r', 'id': 954, 'synset': 'shark.n.01', 'synonyms': ['shark'], 'def': 'typically large carnivorous fishes with sharpe teeth', 'name': 'shark'}, {'frequency': 'r', 'id': 955, 'synset': 'sharpener.n.01', 'synonyms': ['sharpener'], 'def': 'any implement that is used to make something (an edge or a point) sharper', 'name': 'sharpener'}, {'frequency': 'r', 'id': 956, 'synset': 'sharpie.n.03', 'synonyms': ['Sharpie'], 'def': 'a pen with indelible ink that will write on any surface', 'name': 'Sharpie'}, {'frequency': 'r', 'id': 957, 'synset': 'shaver.n.03', 'synonyms': ['shaver_(electric)', 'electric_shaver', 'electric_razor'], 'def': 'a razor powered by an electric motor', 'name': 'shaver_(electric)'}, {'frequency': 'c', 'id': 958, 'synset': 'shaving_cream.n.01', 'synonyms': ['shaving_cream', 'shaving_soap'], 'def': 'toiletry consisting that forms a rich lather for softening the beard before shaving', 'name': 'shaving_cream'}, {'frequency': 'r', 'id': 959, 'synset': 'shawl.n.01', 'synonyms': ['shawl'], 'def': 'cloak consisting of an oblong piece of cloth used to cover the head and shoulders', 'name': 'shawl'}, {'frequency': 'r', 'id': 960, 'synset': 'shears.n.01', 'synonyms': ['shears'], 'def': 'large scissors with strong blades', 'name': 'shears'}, {'frequency': 'f', 'id': 961, 'synset': 'sheep.n.01', 'synonyms': ['sheep'], 'def': 'woolly usually horned ruminant mammal related to the goat', 'name': 'sheep'}, {'frequency': 'r', 'id': 962, 'synset': 'shepherd_dog.n.01', 'synonyms': ['shepherd_dog', 'sheepdog'], 'def': 'any of various usually long-haired breeds of dog reared to herd and guard sheep', 'name': 'shepherd_dog'}, {'frequency': 'r', 'id': 963, 'synset': 'sherbert.n.01', 'synonyms': ['sherbert', 'sherbet'], 'def': 'a frozen dessert made primarily of fruit juice and sugar', 'name': 'sherbert'}, {'frequency': 'r', 'id': 964, 'synset': 'shield.n.02', 'synonyms': ['shield'], 'def': 'armor carried on the arm to intercept blows', 'name': 'shield'}, {'frequency': 'f', 'id': 965, 'synset': 'shirt.n.01', 'synonyms': ['shirt'], 'def': 'a garment worn on the upper half of the body', 'name': 'shirt'}, {'frequency': 'f', 'id': 966, 'synset': 'shoe.n.01', 'synonyms': ['shoe', 'sneaker_(type_of_shoe)', 'tennis_shoe'], 'def': 'common footwear covering the foot', 'name': 'shoe'}, {'frequency': 'c', 'id': 967, 'synset': 'shopping_bag.n.01', 'synonyms': ['shopping_bag'], 'def': 'a bag made of plastic or strong paper (often with handles); used to transport goods after shopping', 'name': 'shopping_bag'}, {'frequency': 'c', 'id': 968, 'synset': 'shopping_cart.n.01', 'synonyms': ['shopping_cart'], 'def': 'a handcart that holds groceries or other goods while shopping', 'name': 'shopping_cart'}, {'frequency': 'f', 'id': 969, 'synset': 'short_pants.n.01', 'synonyms': ['short_pants', 'shorts_(clothing)', 'trunks_(clothing)'], 'def': 'trousers that end at or above the knee', 'name': 'short_pants'}, {'frequency': 'r', 'id': 970, 'synset': 'shot_glass.n.01', 'synonyms': ['shot_glass'], 'def': 'a small glass adequate to hold a single swallow of whiskey', 'name': 'shot_glass'}, {'frequency': 'c', 'id': 971, 'synset': 'shoulder_bag.n.01', 'synonyms': ['shoulder_bag'], 'def': 'a large handbag that can be carried by a strap looped over the shoulder', 'name': 'shoulder_bag'}, {'frequency': 'c', 'id': 972, 'synset': 'shovel.n.01', 'synonyms': ['shovel'], 'def': 'a hand tool for lifting loose material such as snow, dirt, etc.', 'name': 'shovel'}, {'frequency': 'f', 'id': 973, 'synset': 'shower.n.01', 'synonyms': ['shower_head'], 'def': 'a plumbing fixture that sprays water over you', 'name': 'shower_head'}, {'frequency': 'f', 'id': 974, 'synset': 'shower_curtain.n.01', 'synonyms': ['shower_curtain'], 'def': 'a curtain that keeps water from splashing out of the shower area', 'name': 'shower_curtain'}, {'frequency': 'r', 'id': 975, 'synset': 'shredder.n.01', 'synonyms': ['shredder_(for_paper)'], 'def': 'a device that shreds documents', 'name': 'shredder_(for_paper)'}, {'frequency': 'r', 'id': 976, 'synset': 'sieve.n.01', 'synonyms': ['sieve', 'screen_(sieve)'], 'def': 'a strainer for separating lumps from powdered material or grading particles', 'name': 'sieve'}, {'frequency': 'f', 'id': 977, 'synset': 'signboard.n.01', 'synonyms': ['signboard'], 'def': 'structure displaying a board on which advertisements can be posted', 'name': 'signboard'}, {'frequency': 'c', 'id': 978, 'synset': 'silo.n.01', 'synonyms': ['silo'], 'def': 'a cylindrical tower used for storing goods', 'name': 'silo'}, {'frequency': 'f', 'id': 979, 'synset': 'sink.n.01', 'synonyms': ['sink'], 'def': 'plumbing fixture consisting of a water basin fixed to a wall or floor and having a drainpipe', 'name': 'sink'}, {'frequency': 'f', 'id': 980, 'synset': 'skateboard.n.01', 'synonyms': ['skateboard'], 'def': 'a board with wheels that is ridden in a standing or crouching position and propelled by foot', 'name': 'skateboard'}, {'frequency': 'c', 'id': 981, 'synset': 'skewer.n.01', 'synonyms': ['skewer'], 'def': 'a long pin for holding meat in position while it is being roasted', 'name': 'skewer'}, {'frequency': 'f', 'id': 982, 'synset': 'ski.n.01', 'synonyms': ['ski'], 'def': 'sports equipment for skiing on snow', 'name': 'ski'}, {'frequency': 'f', 'id': 983, 'synset': 'ski_boot.n.01', 'synonyms': ['ski_boot'], 'def': 'a stiff boot that is fastened to a ski with a ski binding', 'name': 'ski_boot'}, {'frequency': 'f', 'id': 984, 'synset': 'ski_parka.n.01', 'synonyms': ['ski_parka', 'ski_jacket'], 'def': 'a parka to be worn while skiing', 'name': 'ski_parka'}, {'frequency': 'f', 'id': 985, 'synset': 'ski_pole.n.01', 'synonyms': ['ski_pole'], 'def': 'a pole with metal points used as an aid in skiing', 'name': 'ski_pole'}, {'frequency': 'f', 'id': 986, 'synset': 'skirt.n.02', 'synonyms': ['skirt'], 'def': 'a garment hanging from the waist; worn mainly by girls and women', 'name': 'skirt'}, {'frequency': 'c', 'id': 987, 'synset': 'sled.n.01', 'synonyms': ['sled', 'sledge', 'sleigh'], 'def': 'a vehicle or flat object for transportation over snow by sliding or pulled by dogs, etc.', 'name': 'sled'}, {'frequency': 'c', 'id': 988, 'synset': 'sleeping_bag.n.01', 'synonyms': ['sleeping_bag'], 'def': 'large padded bag designed to be slept in outdoors', 'name': 'sleeping_bag'}, {'frequency': 'r', 'id': 989, 'synset': 'sling.n.05', 'synonyms': ['sling_(bandage)', 'triangular_bandage'], 'def': 'bandage to support an injured forearm; slung over the shoulder or neck', 'name': 'sling_(bandage)'}, {'frequency': 'c', 'id': 990, 'synset': 'slipper.n.01', 'synonyms': ['slipper_(footwear)', 'carpet_slipper_(footwear)'], 'def': 'low footwear that can be slipped on and off easily; usually worn indoors', 'name': 'slipper_(footwear)'}, {'frequency': 'r', 'id': 991, 'synset': 'smoothie.n.02', 'synonyms': ['smoothie'], 'def': 'a thick smooth drink consisting of fresh fruit pureed with ice cream or yoghurt or milk', 'name': 'smoothie'}, {'frequency': 'r', 'id': 992, 'synset': 'snake.n.01', 'synonyms': ['snake', 'serpent'], 'def': 'limbless scaly elongate reptile; some are venomous', 'name': 'snake'}, {'frequency': 'f', 'id': 993, 'synset': 'snowboard.n.01', 'synonyms': ['snowboard'], 'def': 'a board that resembles a broad ski or a small surfboard; used in a standing position to slide down snow-covered slopes', 'name': 'snowboard'}, {'frequency': 'c', 'id': 994, 'synset': 'snowman.n.01', 'synonyms': ['snowman'], 'def': 'a figure of a person made of packed snow', 'name': 'snowman'}, {'frequency': 'c', 'id': 995, 'synset': 'snowmobile.n.01', 'synonyms': ['snowmobile'], 'def': 'tracked vehicle for travel on snow having skis in front', 'name': 'snowmobile'}, {'frequency': 'f', 'id': 996, 'synset': 'soap.n.01', 'synonyms': ['soap'], 'def': 'a cleansing agent made from the salts of vegetable or animal fats', 'name': 'soap'}, {'frequency': 'f', 'id': 997, 'synset': 'soccer_ball.n.01', 'synonyms': ['soccer_ball'], 'def': "an inflated ball used in playing soccer (called `football' outside of the United States)", 'name': 'soccer_ball'}, {'frequency': 'f', 'id': 998, 'synset': 'sock.n.01', 'synonyms': ['sock'], 'def': 'cloth covering for the foot; worn inside the shoe; reaches to between the ankle and the knee', 'name': 'sock'}, {'frequency': 'r', 'id': 999, 'synset': 'soda_fountain.n.02', 'synonyms': ['soda_fountain'], 'def': 'an apparatus for dispensing soda water', 'name': 'soda_fountain'}, {'frequency': 'r', 'id': 1000, 'synset': 'soda_water.n.01', 'synonyms': ['carbonated_water', 'club_soda', 'seltzer', 'sparkling_water'], 'def': 'effervescent beverage artificially charged with carbon dioxide', 'name': 'carbonated_water'}, {'frequency': 'f', 'id': 1001, 'synset': 'sofa.n.01', 'synonyms': ['sofa', 'couch', 'lounge'], 'def': 'an upholstered seat for more than one person', 'name': 'sofa'}, {'frequency': 'r', 'id': 1002, 'synset': 'softball.n.01', 'synonyms': ['softball'], 'def': 'ball used in playing softball', 'name': 'softball'}, {'frequency': 'c', 'id': 1003, 'synset': 'solar_array.n.01', 'synonyms': ['solar_array', 'solar_battery', 'solar_panel'], 'def': 'electrical device consisting of a large array of connected solar cells', 'name': 'solar_array'}, {'frequency': 'r', 'id': 1004, 'synset': 'sombrero.n.02', 'synonyms': ['sombrero'], 'def': 'a straw hat with a tall crown and broad brim; worn in American southwest and in Mexico', 'name': 'sombrero'}, {'frequency': 'c', 'id': 1005, 'synset': 'soup.n.01', 'synonyms': ['soup'], 'def': 'liquid food especially of meat or fish or vegetable stock often containing pieces of solid food', 'name': 'soup'}, {'frequency': 'r', 'id': 1006, 'synset': 'soup_bowl.n.01', 'synonyms': ['soup_bowl'], 'def': 'a bowl for serving soup', 'name': 'soup_bowl'}, {'frequency': 'c', 'id': 1007, 'synset': 'soupspoon.n.01', 'synonyms': ['soupspoon'], 'def': 'a spoon with a rounded bowl for eating soup', 'name': 'soupspoon'}, {'frequency': 'c', 'id': 1008, 'synset': 'sour_cream.n.01', 'synonyms': ['sour_cream', 'soured_cream'], 'def': 'soured light cream', 'name': 'sour_cream'}, {'frequency': 'r', 'id': 1009, 'synset': 'soya_milk.n.01', 'synonyms': ['soya_milk', 'soybean_milk', 'soymilk'], 'def': 'a milk substitute containing soybean flour and water; used in some infant formulas and in making tofu', 'name': 'soya_milk'}, {'frequency': 'r', 'id': 1010, 'synset': 'space_shuttle.n.01', 'synonyms': ['space_shuttle'], 'def': "a reusable spacecraft with wings for a controlled descent through the Earth's atmosphere", 'name': 'space_shuttle'}, {'frequency': 'r', 'id': 1011, 'synset': 'sparkler.n.02', 'synonyms': ['sparkler_(fireworks)'], 'def': 'a firework that burns slowly and throws out a shower of sparks', 'name': 'sparkler_(fireworks)'}, {'frequency': 'f', 'id': 1012, 'synset': 'spatula.n.02', 'synonyms': ['spatula'], 'def': 'a hand tool with a thin flexible blade used to mix or spread soft substances', 'name': 'spatula'}, {'frequency': 'r', 'id': 1013, 'synset': 'spear.n.01', 'synonyms': ['spear', 'lance'], 'def': 'a long pointed rod used as a tool or weapon', 'name': 'spear'}, {'frequency': 'f', 'id': 1014, 'synset': 'spectacles.n.01', 'synonyms': ['spectacles', 'specs', 'eyeglasses', 'glasses'], 'def': 'optical instrument consisting of a frame that holds a pair of lenses for correcting defective vision', 'name': 'spectacles'}, {'frequency': 'c', 'id': 1015, 'synset': 'spice_rack.n.01', 'synonyms': ['spice_rack'], 'def': 'a rack for displaying containers filled with spices', 'name': 'spice_rack'}, {'frequency': 'r', 'id': 1016, 'synset': 'spider.n.01', 'synonyms': ['spider'], 'def': 'predatory arachnid with eight legs, two poison fangs, two feelers, and usually two silk-spinning organs at the back end of the body', 'name': 'spider'}, {'frequency': 'c', 'id': 1017, 'synset': 'sponge.n.01', 'synonyms': ['sponge'], 'def': 'a porous mass usable to absorb water typically used for cleaning', 'name': 'sponge'}, {'frequency': 'f', 'id': 1018, 'synset': 'spoon.n.01', 'synonyms': ['spoon'], 'def': 'a piece of cutlery with a shallow bowl-shaped container and a handle', 'name': 'spoon'}, {'frequency': 'c', 'id': 1019, 'synset': 'sportswear.n.01', 'synonyms': ['sportswear', 'athletic_wear', 'activewear'], 'def': 'attire worn for sport or for casual wear', 'name': 'sportswear'}, {'frequency': 'c', 'id': 1020, 'synset': 'spotlight.n.02', 'synonyms': ['spotlight'], 'def': 'a lamp that produces a strong beam of light to illuminate a restricted area; used to focus attention of a stage performer', 'name': 'spotlight'}, {'frequency': 'r', 'id': 1021, 'synset': 'squirrel.n.01', 'synonyms': ['squirrel'], 'def': 'a kind of arboreal rodent having a long bushy tail', 'name': 'squirrel'}, {'frequency': 'c', 'id': 1022, 'synset': 'stapler.n.01', 'synonyms': ['stapler_(stapling_machine)'], 'def': 'a machine that inserts staples into sheets of paper in order to fasten them together', 'name': 'stapler_(stapling_machine)'}, {'frequency': 'r', 'id': 1023, 'synset': 'starfish.n.01', 'synonyms': ['starfish', 'sea_star'], 'def': 'echinoderms characterized by five arms extending from a central disk', 'name': 'starfish'}, {'frequency': 'f', 'id': 1024, 'synset': 'statue.n.01', 'synonyms': ['statue_(sculpture)'], 'def': 'a sculpture representing a human or animal', 'name': 'statue_(sculpture)'}, {'frequency': 'c', 'id': 1025, 'synset': 'steak.n.01', 'synonyms': ['steak_(food)'], 'def': 'a slice of meat cut from the fleshy part of an animal or large fish', 'name': 'steak_(food)'}, {'frequency': 'r', 'id': 1026, 'synset': 'steak_knife.n.01', 'synonyms': ['steak_knife'], 'def': 'a sharp table knife used in eating steak', 'name': 'steak_knife'}, {'frequency': 'r', 'id': 1027, 'synset': 'steamer.n.02', 'synonyms': ['steamer_(kitchen_appliance)'], 'def': 'a cooking utensil that can be used to cook food by steaming it', 'name': 'steamer_(kitchen_appliance)'}, {'frequency': 'f', 'id': 1028, 'synset': 'steering_wheel.n.01', 'synonyms': ['steering_wheel'], 'def': 'a handwheel that is used for steering', 'name': 'steering_wheel'}, {'frequency': 'r', 'id': 1029, 'synset': 'stencil.n.01', 'synonyms': ['stencil'], 'def': 'a sheet of material (metal, plastic, etc.) that has been perforated with a pattern; ink or paint can pass through the perforations to create the printed pattern on the surface below', 'name': 'stencil'}, {'frequency': 'r', 'id': 1030, 'synset': 'step_ladder.n.01', 'synonyms': ['stepladder'], 'def': 'a folding portable ladder hinged at the top', 'name': 'stepladder'}, {'frequency': 'c', 'id': 1031, 'synset': 'step_stool.n.01', 'synonyms': ['step_stool'], 'def': 'a stool that has one or two steps that fold under the seat', 'name': 'step_stool'}, {'frequency': 'c', 'id': 1032, 'synset': 'stereo.n.01', 'synonyms': ['stereo_(sound_system)'], 'def': 'electronic device for playing audio', 'name': 'stereo_(sound_system)'}, {'frequency': 'r', 'id': 1033, 'synset': 'stew.n.02', 'synonyms': ['stew'], 'def': 'food prepared by stewing especially meat or fish with vegetables', 'name': 'stew'}, {'frequency': 'r', 'id': 1034, 'synset': 'stirrer.n.02', 'synonyms': ['stirrer'], 'def': 'an implement used for stirring', 'name': 'stirrer'}, {'frequency': 'f', 'id': 1035, 'synset': 'stirrup.n.01', 'synonyms': ['stirrup'], 'def': "support consisting of metal loops into which rider's feet go", 'name': 'stirrup'}, {'frequency': 'c', 'id': 1036, 'synset': 'stocking.n.01', 'synonyms': ['stockings_(leg_wear)'], 'def': 'close-fitting hosiery to cover the foot and leg; come in matched pairs', 'name': 'stockings_(leg_wear)'}, {'frequency': 'f', 'id': 1037, 'synset': 'stool.n.01', 'synonyms': ['stool'], 'def': 'a simple seat without a back or arms', 'name': 'stool'}, {'frequency': 'f', 'id': 1038, 'synset': 'stop_sign.n.01', 'synonyms': ['stop_sign'], 'def': 'a traffic sign to notify drivers that they must come to a complete stop', 'name': 'stop_sign'}, {'frequency': 'f', 'id': 1039, 'synset': 'stoplight.n.01', 'synonyms': ['brake_light'], 'def': 'a red light on the rear of a motor vehicle that signals when the brakes are applied', 'name': 'brake_light'}, {'frequency': 'f', 'id': 1040, 'synset': 'stove.n.01', 'synonyms': ['stove', 'kitchen_stove', 'range_(kitchen_appliance)', 'kitchen_range', 'cooking_stove'], 'def': 'a kitchen appliance used for cooking food', 'name': 'stove'}, {'frequency': 'c', 'id': 1041, 'synset': 'strainer.n.01', 'synonyms': ['strainer'], 'def': 'a filter to retain larger pieces while smaller pieces and liquids pass through', 'name': 'strainer'}, {'frequency': 'f', 'id': 1042, 'synset': 'strap.n.01', 'synonyms': ['strap'], 'def': 'an elongated strip of material for binding things together or holding', 'name': 'strap'}, {'frequency': 'f', 'id': 1043, 'synset': 'straw.n.04', 'synonyms': ['straw_(for_drinking)', 'drinking_straw'], 'def': 'a thin paper or plastic tube used to suck liquids into the mouth', 'name': 'straw_(for_drinking)'}, {'frequency': 'f', 'id': 1044, 'synset': 'strawberry.n.01', 'synonyms': ['strawberry'], 'def': 'sweet fleshy red fruit', 'name': 'strawberry'}, {'frequency': 'f', 'id': 1045, 'synset': 'street_sign.n.01', 'synonyms': ['street_sign'], 'def': 'a sign visible from the street', 'name': 'street_sign'}, {'frequency': 'f', 'id': 1046, 'synset': 'streetlight.n.01', 'synonyms': ['streetlight', 'street_lamp'], 'def': 'a lamp supported on a lamppost; for illuminating a street', 'name': 'streetlight'}, {'frequency': 'r', 'id': 1047, 'synset': 'string_cheese.n.01', 'synonyms': ['string_cheese'], 'def': 'cheese formed in long strings twisted together', 'name': 'string_cheese'}, {'frequency': 'r', 'id': 1048, 'synset': 'stylus.n.02', 'synonyms': ['stylus'], 'def': 'a pointed tool for writing or drawing or engraving', 'name': 'stylus'}, {'frequency': 'r', 'id': 1049, 'synset': 'subwoofer.n.01', 'synonyms': ['subwoofer'], 'def': 'a loudspeaker that is designed to reproduce very low bass frequencies', 'name': 'subwoofer'}, {'frequency': 'r', 'id': 1050, 'synset': 'sugar_bowl.n.01', 'synonyms': ['sugar_bowl'], 'def': 'a dish in which sugar is served', 'name': 'sugar_bowl'}, {'frequency': 'r', 'id': 1051, 'synset': 'sugarcane.n.01', 'synonyms': ['sugarcane_(plant)'], 'def': 'juicy canes whose sap is a source of molasses and commercial sugar; fresh canes are sometimes chewed for the juice', 'name': 'sugarcane_(plant)'}, {'frequency': 'c', 'id': 1052, 'synset': 'suit.n.01', 'synonyms': ['suit_(clothing)'], 'def': 'a set of garments (usually including a jacket and trousers or skirt) for outerwear all of the same fabric and color', 'name': 'suit_(clothing)'}, {'frequency': 'c', 'id': 1053, 'synset': 'sunflower.n.01', 'synonyms': ['sunflower'], 'def': 'any plant of the genus Helianthus having large flower heads with dark disk florets and showy yellow rays', 'name': 'sunflower'}, {'frequency': 'f', 'id': 1054, 'synset': 'sunglasses.n.01', 'synonyms': ['sunglasses'], 'def': 'spectacles that are darkened or polarized to protect the eyes from the glare of the sun', 'name': 'sunglasses'}, {'frequency': 'c', 'id': 1055, 'synset': 'sunhat.n.01', 'synonyms': ['sunhat'], 'def': 'a hat with a broad brim that protects the face from direct exposure to the sun', 'name': 'sunhat'}, {'frequency': 'r', 'id': 1056, 'synset': 'sunscreen.n.01', 'synonyms': ['sunscreen', 'sunblock'], 'def': 'a cream spread on the skin; contains a chemical to filter out ultraviolet light and so protect from sunburn', 'name': 'sunscreen'}, {'frequency': 'f', 'id': 1057, 'synset': 'surfboard.n.01', 'synonyms': ['surfboard'], 'def': 'a narrow buoyant board for riding surf', 'name': 'surfboard'}, {'frequency': 'c', 'id': 1058, 'synset': 'sushi.n.01', 'synonyms': ['sushi'], 'def': 'rice (with raw fish) wrapped in seaweed', 'name': 'sushi'}, {'frequency': 'c', 'id': 1059, 'synset': 'swab.n.02', 'synonyms': ['mop'], 'def': 'cleaning implement consisting of absorbent material fastened to a handle; for cleaning floors', 'name': 'mop'}, {'frequency': 'c', 'id': 1060, 'synset': 'sweat_pants.n.01', 'synonyms': ['sweat_pants'], 'def': 'loose-fitting trousers with elastic cuffs; worn by athletes', 'name': 'sweat_pants'}, {'frequency': 'c', 'id': 1061, 'synset': 'sweatband.n.02', 'synonyms': ['sweatband'], 'def': 'a band of material tied around the forehead or wrist to absorb sweat', 'name': 'sweatband'}, {'frequency': 'f', 'id': 1062, 'synset': 'sweater.n.01', 'synonyms': ['sweater'], 'def': 'a crocheted or knitted garment covering the upper part of the body', 'name': 'sweater'}, {'frequency': 'f', 'id': 1063, 'synset': 'sweatshirt.n.01', 'synonyms': ['sweatshirt'], 'def': 'cotton knit pullover with long sleeves worn during athletic activity', 'name': 'sweatshirt'}, {'frequency': 'c', 'id': 1064, 'synset': 'sweet_potato.n.02', 'synonyms': ['sweet_potato'], 'def': 'the edible tuberous root of the sweet potato vine', 'name': 'sweet_potato'}, {'frequency': 'f', 'id': 1065, 'synset': 'swimsuit.n.01', 'synonyms': ['swimsuit', 'swimwear', 'bathing_suit', 'swimming_costume', 'bathing_costume', 'swimming_trunks', 'bathing_trunks'], 'def': 'garment worn for swimming', 'name': 'swimsuit'}, {'frequency': 'c', 'id': 1066, 'synset': 'sword.n.01', 'synonyms': ['sword'], 'def': 'a cutting or thrusting weapon that has a long metal blade', 'name': 'sword'}, {'frequency': 'r', 'id': 1067, 'synset': 'syringe.n.01', 'synonyms': ['syringe'], 'def': 'a medical instrument used to inject or withdraw fluids', 'name': 'syringe'}, {'frequency': 'r', 'id': 1068, 'synset': 'tabasco.n.02', 'synonyms': ['Tabasco_sauce'], 'def': 'very spicy sauce (trade name Tabasco) made from fully-aged red peppers', 'name': 'Tabasco_sauce'}, {'frequency': 'r', 'id': 1069, 'synset': 'table-tennis_table.n.01', 'synonyms': ['table-tennis_table', 'ping-pong_table'], 'def': 'a table used for playing table tennis', 'name': 'table-tennis_table'}, {'frequency': 'f', 'id': 1070, 'synset': 'table.n.02', 'synonyms': ['table'], 'def': 'a piece of furniture having a smooth flat top that is usually supported by one or more vertical legs', 'name': 'table'}, {'frequency': 'c', 'id': 1071, 'synset': 'table_lamp.n.01', 'synonyms': ['table_lamp'], 'def': 'a lamp that sits on a table', 'name': 'table_lamp'}, {'frequency': 'f', 'id': 1072, 'synset': 'tablecloth.n.01', 'synonyms': ['tablecloth'], 'def': 'a covering spread over a dining table', 'name': 'tablecloth'}, {'frequency': 'r', 'id': 1073, 'synset': 'tachometer.n.01', 'synonyms': ['tachometer'], 'def': 'measuring instrument for indicating speed of rotation', 'name': 'tachometer'}, {'frequency': 'r', 'id': 1074, 'synset': 'taco.n.02', 'synonyms': ['taco'], 'def': 'a small tortilla cupped around a filling', 'name': 'taco'}, {'frequency': 'f', 'id': 1075, 'synset': 'tag.n.02', 'synonyms': ['tag'], 'def': 'a label associated with something for the purpose of identification or information', 'name': 'tag'}, {'frequency': 'f', 'id': 1076, 'synset': 'taillight.n.01', 'synonyms': ['taillight', 'rear_light'], 'def': 'lamp (usually red) mounted at the rear of a motor vehicle', 'name': 'taillight'}, {'frequency': 'r', 'id': 1077, 'synset': 'tambourine.n.01', 'synonyms': ['tambourine'], 'def': 'a shallow drum with a single drumhead and with metallic disks in the sides', 'name': 'tambourine'}, {'frequency': 'r', 'id': 1078, 'synset': 'tank.n.01', 'synonyms': ['army_tank', 'armored_combat_vehicle', 'armoured_combat_vehicle'], 'def': 'an enclosed armored military vehicle; has a cannon and moves on caterpillar treads', 'name': 'army_tank'}, {'frequency': 'c', 'id': 1079, 'synset': 'tank.n.02', 'synonyms': ['tank_(storage_vessel)', 'storage_tank'], 'def': 'a large (usually metallic) vessel for holding gases or liquids', 'name': 'tank_(storage_vessel)'}, {'frequency': 'f', 'id': 1080, 'synset': 'tank_top.n.01', 'synonyms': ['tank_top_(clothing)'], 'def': 'a tight-fitting sleeveless shirt with wide shoulder straps and low neck and no front opening', 'name': 'tank_top_(clothing)'}, {'frequency': 'c', 'id': 1081, 'synset': 'tape.n.01', 'synonyms': ['tape_(sticky_cloth_or_paper)'], 'def': 'a long thin piece of cloth or paper as used for binding or fastening', 'name': 'tape_(sticky_cloth_or_paper)'}, {'frequency': 'c', 'id': 1082, 'synset': 'tape.n.04', 'synonyms': ['tape_measure', 'measuring_tape'], 'def': 'measuring instrument consisting of a narrow strip (cloth or metal) marked in inches or centimeters and used for measuring lengths', 'name': 'tape_measure'}, {'frequency': 'c', 'id': 1083, 'synset': 'tapestry.n.02', 'synonyms': ['tapestry'], 'def': 'a heavy textile with a woven design; used for curtains and upholstery', 'name': 'tapestry'}, {'frequency': 'f', 'id': 1084, 'synset': 'tarpaulin.n.01', 'synonyms': ['tarp'], 'def': 'waterproofed canvas', 'name': 'tarp'}, {'frequency': 'c', 'id': 1085, 'synset': 'tartan.n.01', 'synonyms': ['tartan', 'plaid'], 'def': 'a cloth having a crisscross design', 'name': 'tartan'}, {'frequency': 'c', 'id': 1086, 'synset': 'tassel.n.01', 'synonyms': ['tassel'], 'def': 'adornment consisting of a bunch of cords fastened at one end', 'name': 'tassel'}, {'frequency': 'r', 'id': 1087, 'synset': 'tea_bag.n.01', 'synonyms': ['tea_bag'], 'def': 'a measured amount of tea in a bag for an individual serving of tea', 'name': 'tea_bag'}, {'frequency': 'c', 'id': 1088, 'synset': 'teacup.n.02', 'synonyms': ['teacup'], 'def': 'a cup from which tea is drunk', 'name': 'teacup'}, {'frequency': 'c', 'id': 1089, 'synset': 'teakettle.n.01', 'synonyms': ['teakettle'], 'def': 'kettle for boiling water to make tea', 'name': 'teakettle'}, {'frequency': 'c', 'id': 1090, 'synset': 'teapot.n.01', 'synonyms': ['teapot'], 'def': 'pot for brewing tea; usually has a spout and handle', 'name': 'teapot'}, {'frequency': 'f', 'id': 1091, 'synset': 'teddy.n.01', 'synonyms': ['teddy_bear'], 'def': "plaything consisting of a child's toy bear (usually plush and stuffed with soft materials)", 'name': 'teddy_bear'}, {'frequency': 'f', 'id': 1092, 'synset': 'telephone.n.01', 'synonyms': ['telephone', 'phone', 'telephone_set'], 'def': 'electronic device for communicating by voice over long distances', 'name': 'telephone'}, {'frequency': 'c', 'id': 1093, 'synset': 'telephone_booth.n.01', 'synonyms': ['telephone_booth', 'phone_booth', 'call_box', 'telephone_box', 'telephone_kiosk'], 'def': 'booth for using a telephone', 'name': 'telephone_booth'}, {'frequency': 'f', 'id': 1094, 'synset': 'telephone_pole.n.01', 'synonyms': ['telephone_pole', 'telegraph_pole', 'telegraph_post'], 'def': 'tall pole supporting telephone wires', 'name': 'telephone_pole'}, {'frequency': 'r', 'id': 1095, 'synset': 'telephoto_lens.n.01', 'synonyms': ['telephoto_lens', 'zoom_lens'], 'def': 'a camera lens that magnifies the image', 'name': 'telephoto_lens'}, {'frequency': 'c', 'id': 1096, 'synset': 'television_camera.n.01', 'synonyms': ['television_camera', 'tv_camera'], 'def': 'television equipment for capturing and recording video', 'name': 'television_camera'}, {'frequency': 'f', 'id': 1097, 'synset': 'television_receiver.n.01', 'synonyms': ['television_set', 'tv', 'tv_set'], 'def': 'an electronic device that receives television signals and displays them on a screen', 'name': 'television_set'}, {'frequency': 'f', 'id': 1098, 'synset': 'tennis_ball.n.01', 'synonyms': ['tennis_ball'], 'def': 'ball about the size of a fist used in playing tennis', 'name': 'tennis_ball'}, {'frequency': 'f', 'id': 1099, 'synset': 'tennis_racket.n.01', 'synonyms': ['tennis_racket'], 'def': 'a racket used to play tennis', 'name': 'tennis_racket'}, {'frequency': 'r', 'id': 1100, 'synset': 'tequila.n.01', 'synonyms': ['tequila'], 'def': 'Mexican liquor made from fermented juices of an agave plant', 'name': 'tequila'}, {'frequency': 'c', 'id': 1101, 'synset': 'thermometer.n.01', 'synonyms': ['thermometer'], 'def': 'measuring instrument for measuring temperature', 'name': 'thermometer'}, {'frequency': 'c', 'id': 1102, 'synset': 'thermos.n.01', 'synonyms': ['thermos_bottle'], 'def': 'vacuum flask that preserves temperature of hot or cold drinks', 'name': 'thermos_bottle'}, {'frequency': 'c', 'id': 1103, 'synset': 'thermostat.n.01', 'synonyms': ['thermostat'], 'def': 'a regulator for automatically regulating temperature by starting or stopping the supply of heat', 'name': 'thermostat'}, {'frequency': 'r', 'id': 1104, 'synset': 'thimble.n.02', 'synonyms': ['thimble'], 'def': 'a small metal cap to protect the finger while sewing; can be used as a small container', 'name': 'thimble'}, {'frequency': 'c', 'id': 1105, 'synset': 'thread.n.01', 'synonyms': ['thread', 'yarn'], 'def': 'a fine cord of twisted fibers (of cotton or silk or wool or nylon etc.) used in sewing and weaving', 'name': 'thread'}, {'frequency': 'c', 'id': 1106, 'synset': 'thumbtack.n.01', 'synonyms': ['thumbtack', 'drawing_pin', 'pushpin'], 'def': 'a tack for attaching papers to a bulletin board or drawing board', 'name': 'thumbtack'}, {'frequency': 'c', 'id': 1107, 'synset': 'tiara.n.01', 'synonyms': ['tiara'], 'def': 'a jeweled headdress worn by women on formal occasions', 'name': 'tiara'}, {'frequency': 'c', 'id': 1108, 'synset': 'tiger.n.02', 'synonyms': ['tiger'], 'def': 'large feline of forests in most of Asia having a tawny coat with black stripes', 'name': 'tiger'}, {'frequency': 'c', 'id': 1109, 'synset': 'tights.n.01', 'synonyms': ['tights_(clothing)', 'leotards'], 'def': 'skintight knit hose covering the body from the waist to the feet worn by acrobats and dancers and as stockings by women and girls', 'name': 'tights_(clothing)'}, {'frequency': 'c', 'id': 1110, 'synset': 'timer.n.01', 'synonyms': ['timer', 'stopwatch'], 'def': 'a timepiece that measures a time interval and signals its end', 'name': 'timer'}, {'frequency': 'f', 'id': 1111, 'synset': 'tinfoil.n.01', 'synonyms': ['tinfoil'], 'def': 'foil made of tin or an alloy of tin and lead', 'name': 'tinfoil'}, {'frequency': 'r', 'id': 1112, 'synset': 'tinsel.n.01', 'synonyms': ['tinsel'], 'def': 'a showy decoration that is basically valueless', 'name': 'tinsel'}, {'frequency': 'f', 'id': 1113, 'synset': 'tissue.n.02', 'synonyms': ['tissue_paper'], 'def': 'a soft thin (usually translucent) paper', 'name': 'tissue_paper'}, {'frequency': 'c', 'id': 1114, 'synset': 'toast.n.01', 'synonyms': ['toast_(food)'], 'def': 'slice of bread that has been toasted', 'name': 'toast_(food)'}, {'frequency': 'f', 'id': 1115, 'synset': 'toaster.n.02', 'synonyms': ['toaster'], 'def': 'a kitchen appliance (usually electric) for toasting bread', 'name': 'toaster'}, {'frequency': 'c', 'id': 1116, 'synset': 'toaster_oven.n.01', 'synonyms': ['toaster_oven'], 'def': 'kitchen appliance consisting of a small electric oven for toasting or warming food', 'name': 'toaster_oven'}, {'frequency': 'f', 'id': 1117, 'synset': 'toilet.n.02', 'synonyms': ['toilet'], 'def': 'a plumbing fixture for defecation and urination', 'name': 'toilet'}, {'frequency': 'f', 'id': 1118, 'synset': 'toilet_tissue.n.01', 'synonyms': ['toilet_tissue', 'toilet_paper', 'bathroom_tissue'], 'def': 'a soft thin absorbent paper for use in toilets', 'name': 'toilet_tissue'}, {'frequency': 'f', 'id': 1119, 'synset': 'tomato.n.01', 'synonyms': ['tomato'], 'def': 'mildly acid red or yellow pulpy fruit eaten as a vegetable', 'name': 'tomato'}, {'frequency': 'c', 'id': 1120, 'synset': 'tongs.n.01', 'synonyms': ['tongs'], 'def': 'any of various devices for taking hold of objects; usually have two hinged legs with handles above and pointed hooks below', 'name': 'tongs'}, {'frequency': 'c', 'id': 1121, 'synset': 'toolbox.n.01', 'synonyms': ['toolbox'], 'def': 'a box or chest or cabinet for holding hand tools', 'name': 'toolbox'}, {'frequency': 'f', 'id': 1122, 'synset': 'toothbrush.n.01', 'synonyms': ['toothbrush'], 'def': 'small brush; has long handle; used to clean teeth', 'name': 'toothbrush'}, {'frequency': 'f', 'id': 1123, 'synset': 'toothpaste.n.01', 'synonyms': ['toothpaste'], 'def': 'a dentifrice in the form of a paste', 'name': 'toothpaste'}, {'frequency': 'c', 'id': 1124, 'synset': 'toothpick.n.01', 'synonyms': ['toothpick'], 'def': 'pick consisting of a small strip of wood or plastic; used to pick food from between the teeth', 'name': 'toothpick'}, {'frequency': 'c', 'id': 1125, 'synset': 'top.n.09', 'synonyms': ['cover'], 'def': 'covering for a hole (especially a hole in the top of a container)', 'name': 'cover'}, {'frequency': 'c', 'id': 1126, 'synset': 'tortilla.n.01', 'synonyms': ['tortilla'], 'def': 'thin unleavened pancake made from cornmeal or wheat flour', 'name': 'tortilla'}, {'frequency': 'c', 'id': 1127, 'synset': 'tow_truck.n.01', 'synonyms': ['tow_truck'], 'def': 'a truck equipped to hoist and pull wrecked cars (or to remove cars from no-parking zones)', 'name': 'tow_truck'}, {'frequency': 'f', 'id': 1128, 'synset': 'towel.n.01', 'synonyms': ['towel'], 'def': 'a rectangular piece of absorbent cloth (or paper) for drying or wiping', 'name': 'towel'}, {'frequency': 'f', 'id': 1129, 'synset': 'towel_rack.n.01', 'synonyms': ['towel_rack', 'towel_rail', 'towel_bar'], 'def': 'a rack consisting of one or more bars on which towels can be hung', 'name': 'towel_rack'}, {'frequency': 'f', 'id': 1130, 'synset': 'toy.n.03', 'synonyms': ['toy'], 'def': 'a device regarded as providing amusement', 'name': 'toy'}, {'frequency': 'c', 'id': 1131, 'synset': 'tractor.n.01', 'synonyms': ['tractor_(farm_equipment)'], 'def': 'a wheeled vehicle with large wheels; used in farming and other applications', 'name': 'tractor_(farm_equipment)'}, {'frequency': 'f', 'id': 1132, 'synset': 'traffic_light.n.01', 'synonyms': ['traffic_light'], 'def': 'a device to control vehicle traffic often consisting of three or more lights', 'name': 'traffic_light'}, {'frequency': 'r', 'id': 1133, 'synset': 'trail_bike.n.01', 'synonyms': ['dirt_bike'], 'def': 'a lightweight motorcycle equipped with rugged tires and suspension for off-road use', 'name': 'dirt_bike'}, {'frequency': 'c', 'id': 1134, 'synset': 'trailer_truck.n.01', 'synonyms': ['trailer_truck', 'tractor_trailer', 'trucking_rig', 'articulated_lorry', 'semi_truck'], 'def': 'a truck consisting of a tractor and trailer together', 'name': 'trailer_truck'}, {'frequency': 'f', 'id': 1135, 'synset': 'train.n.01', 'synonyms': ['train_(railroad_vehicle)', 'railroad_train'], 'def': 'public or private transport provided by a line of railway cars coupled together and drawn by a locomotive', 'name': 'train_(railroad_vehicle)'}, {'frequency': 'r', 'id': 1136, 'synset': 'trampoline.n.01', 'synonyms': ['trampoline'], 'def': 'gymnastic apparatus consisting of a strong canvas sheet attached with springs to a metal frame', 'name': 'trampoline'}, {'frequency': 'f', 'id': 1137, 'synset': 'tray.n.01', 'synonyms': ['tray'], 'def': 'an open receptacle for holding or displaying or serving articles or food', 'name': 'tray'}, {'frequency': 'r', 'id': 1138, 'synset': 'tree_house.n.01', 'synonyms': ['tree_house'], 'def': '(NOT A TREE) a PLAYHOUSE built in the branches of a tree', 'name': 'tree_house'}, {'frequency': 'r', 'id': 1139, 'synset': 'trench_coat.n.01', 'synonyms': ['trench_coat'], 'def': 'a military style raincoat; belted with deep pockets', 'name': 'trench_coat'}, {'frequency': 'r', 'id': 1140, 'synset': 'triangle.n.05', 'synonyms': ['triangle_(musical_instrument)'], 'def': 'a percussion instrument consisting of a metal bar bent in the shape of an open triangle', 'name': 'triangle_(musical_instrument)'}, {'frequency': 'r', 'id': 1141, 'synset': 'tricycle.n.01', 'synonyms': ['tricycle'], 'def': 'a vehicle with three wheels that is moved by foot pedals', 'name': 'tricycle'}, {'frequency': 'c', 'id': 1142, 'synset': 'tripod.n.01', 'synonyms': ['tripod'], 'def': 'a three-legged rack used for support', 'name': 'tripod'}, {'frequency': 'f', 'id': 1143, 'synset': 'trouser.n.01', 'synonyms': ['trousers', 'pants_(clothing)'], 'def': 'a garment extending from the waist to the knee or ankle, covering each leg separately', 'name': 'trousers'}, {'frequency': 'f', 'id': 1144, 'synset': 'truck.n.01', 'synonyms': ['truck'], 'def': 'an automotive vehicle suitable for hauling', 'name': 'truck'}, {'frequency': 'r', 'id': 1145, 'synset': 'truffle.n.03', 'synonyms': ['truffle_(chocolate)', 'chocolate_truffle'], 'def': 'creamy chocolate candy', 'name': 'truffle_(chocolate)'}, {'frequency': 'c', 'id': 1146, 'synset': 'trunk.n.02', 'synonyms': ['trunk'], 'def': 'luggage consisting of a large strong case used when traveling or for storage', 'name': 'trunk'}, {'frequency': 'r', 'id': 1147, 'synset': 'tub.n.02', 'synonyms': ['vat'], 'def': 'a large open vessel for holding or storing liquids', 'name': 'vat'}, {'frequency': 'c', 'id': 1148, 'synset': 'turban.n.01', 'synonyms': ['turban'], 'def': 'a traditional headdress consisting of a long scarf wrapped around the head', 'name': 'turban'}, {'frequency': 'r', 'id': 1149, 'synset': 'turkey.n.01', 'synonyms': ['turkey_(bird)'], 'def': 'large gallinaceous bird with fan-shaped tail; widely domesticated for food', 'name': 'turkey_(bird)'}, {'frequency': 'c', 'id': 1150, 'synset': 'turkey.n.04', 'synonyms': ['turkey_(food)'], 'def': 'flesh of large domesticated fowl usually roasted', 'name': 'turkey_(food)'}, {'frequency': 'r', 'id': 1151, 'synset': 'turnip.n.01', 'synonyms': ['turnip'], 'def': 'widely cultivated plant having a large fleshy edible white or yellow root', 'name': 'turnip'}, {'frequency': 'c', 'id': 1152, 'synset': 'turtle.n.02', 'synonyms': ['turtle'], 'def': 'any of various aquatic and land reptiles having a bony shell and flipper-like limbs for swimming', 'name': 'turtle'}, {'frequency': 'r', 'id': 1153, 'synset': 'turtleneck.n.01', 'synonyms': ['turtleneck_(clothing)', 'polo-neck'], 'def': 'a sweater or jersey with a high close-fitting collar', 'name': 'turtleneck_(clothing)'}, {'frequency': 'r', 'id': 1154, 'synset': 'typewriter.n.01', 'synonyms': ['typewriter'], 'def': 'hand-operated character printer for printing written messages one character at a time', 'name': 'typewriter'}, {'frequency': 'f', 'id': 1155, 'synset': 'umbrella.n.01', 'synonyms': ['umbrella'], 'def': 'a lightweight handheld collapsible canopy', 'name': 'umbrella'}, {'frequency': 'c', 'id': 1156, 'synset': 'underwear.n.01', 'synonyms': ['underwear', 'underclothes', 'underclothing', 'underpants'], 'def': 'undergarment worn next to the skin and under the outer garments', 'name': 'underwear'}, {'frequency': 'r', 'id': 1157, 'synset': 'unicycle.n.01', 'synonyms': ['unicycle'], 'def': 'a vehicle with a single wheel that is driven by pedals', 'name': 'unicycle'}, {'frequency': 'c', 'id': 1158, 'synset': 'urinal.n.01', 'synonyms': ['urinal'], 'def': 'a plumbing fixture (usually attached to the wall) used by men to urinate', 'name': 'urinal'}, {'frequency': 'r', 'id': 1159, 'synset': 'urn.n.01', 'synonyms': ['urn'], 'def': 'a large vase that usually has a pedestal or feet', 'name': 'urn'}, {'frequency': 'c', 'id': 1160, 'synset': 'vacuum.n.04', 'synonyms': ['vacuum_cleaner'], 'def': 'an electrical home appliance that cleans by suction', 'name': 'vacuum_cleaner'}, {'frequency': 'c', 'id': 1161, 'synset': 'valve.n.03', 'synonyms': ['valve'], 'def': 'control consisting of a mechanical device for controlling the flow of a fluid', 'name': 'valve'}, {'frequency': 'f', 'id': 1162, 'synset': 'vase.n.01', 'synonyms': ['vase'], 'def': 'an open jar of glass or porcelain used as an ornament or to hold flowers', 'name': 'vase'}, {'frequency': 'c', 'id': 1163, 'synset': 'vending_machine.n.01', 'synonyms': ['vending_machine'], 'def': 'a slot machine for selling goods', 'name': 'vending_machine'}, {'frequency': 'f', 'id': 1164, 'synset': 'vent.n.01', 'synonyms': ['vent', 'blowhole', 'air_vent'], 'def': 'a hole for the escape of gas or air', 'name': 'vent'}, {'frequency': 'c', 'id': 1165, 'synset': 'videotape.n.01', 'synonyms': ['videotape'], 'def': 'a video recording made on magnetic tape', 'name': 'videotape'}, {'frequency': 'r', 'id': 1166, 'synset': 'vinegar.n.01', 'synonyms': ['vinegar'], 'def': 'sour-tasting liquid produced usually by oxidation of the alcohol in wine or cider and used as a condiment or food preservative', 'name': 'vinegar'}, {'frequency': 'r', 'id': 1167, 'synset': 'violin.n.01', 'synonyms': ['violin', 'fiddle'], 'def': 'bowed stringed instrument that is the highest member of the violin family', 'name': 'violin'}, {'frequency': 'r', 'id': 1168, 'synset': 'vodka.n.01', 'synonyms': ['vodka'], 'def': 'unaged colorless liquor originating in Russia', 'name': 'vodka'}, {'frequency': 'r', 'id': 1169, 'synset': 'volleyball.n.02', 'synonyms': ['volleyball'], 'def': 'an inflated ball used in playing volleyball', 'name': 'volleyball'}, {'frequency': 'r', 'id': 1170, 'synset': 'vulture.n.01', 'synonyms': ['vulture'], 'def': 'any of various large birds of prey having naked heads and weak claws and feeding chiefly on carrion', 'name': 'vulture'}, {'frequency': 'c', 'id': 1171, 'synset': 'waffle.n.01', 'synonyms': ['waffle'], 'def': 'pancake batter baked in a waffle iron', 'name': 'waffle'}, {'frequency': 'r', 'id': 1172, 'synset': 'waffle_iron.n.01', 'synonyms': ['waffle_iron'], 'def': 'a kitchen appliance for baking waffles', 'name': 'waffle_iron'}, {'frequency': 'c', 'id': 1173, 'synset': 'wagon.n.01', 'synonyms': ['wagon'], 'def': 'any of various kinds of wheeled vehicles drawn by an animal or a tractor', 'name': 'wagon'}, {'frequency': 'c', 'id': 1174, 'synset': 'wagon_wheel.n.01', 'synonyms': ['wagon_wheel'], 'def': 'a wheel of a wagon', 'name': 'wagon_wheel'}, {'frequency': 'c', 'id': 1175, 'synset': 'walking_stick.n.01', 'synonyms': ['walking_stick'], 'def': 'a stick carried in the hand for support in walking', 'name': 'walking_stick'}, {'frequency': 'c', 'id': 1176, 'synset': 'wall_clock.n.01', 'synonyms': ['wall_clock'], 'def': 'a clock mounted on a wall', 'name': 'wall_clock'}, {'frequency': 'f', 'id': 1177, 'synset': 'wall_socket.n.01', 'synonyms': ['wall_socket', 'wall_plug', 'electric_outlet', 'electrical_outlet', 'outlet', 'electric_receptacle'], 'def': 'receptacle providing a place in a wiring system where current can be taken to run electrical devices', 'name': 'wall_socket'}, {'frequency': 'c', 'id': 1178, 'synset': 'wallet.n.01', 'synonyms': ['wallet', 'billfold'], 'def': 'a pocket-size case for holding papers and paper money', 'name': 'wallet'}, {'frequency': 'r', 'id': 1179, 'synset': 'walrus.n.01', 'synonyms': ['walrus'], 'def': 'either of two large northern marine mammals having ivory tusks and tough hide over thick blubber', 'name': 'walrus'}, {'frequency': 'r', 'id': 1180, 'synset': 'wardrobe.n.01', 'synonyms': ['wardrobe'], 'def': 'a tall piece of furniture that provides storage space for clothes; has a door and rails or hooks for hanging clothes', 'name': 'wardrobe'}, {'frequency': 'r', 'id': 1181, 'synset': 'wasabi.n.02', 'synonyms': ['wasabi'], 'def': 'the thick green root of the wasabi plant that the Japanese use in cooking and that tastes like strong horseradish', 'name': 'wasabi'}, {'frequency': 'c', 'id': 1182, 'synset': 'washer.n.03', 'synonyms': ['automatic_washer', 'washing_machine'], 'def': 'a home appliance for washing clothes and linens automatically', 'name': 'automatic_washer'}, {'frequency': 'f', 'id': 1183, 'synset': 'watch.n.01', 'synonyms': ['watch', 'wristwatch'], 'def': 'a small, portable timepiece', 'name': 'watch'}, {'frequency': 'f', 'id': 1184, 'synset': 'water_bottle.n.01', 'synonyms': ['water_bottle'], 'def': 'a bottle for holding water', 'name': 'water_bottle'}, {'frequency': 'c', 'id': 1185, 'synset': 'water_cooler.n.01', 'synonyms': ['water_cooler'], 'def': 'a device for cooling and dispensing drinking water', 'name': 'water_cooler'}, {'frequency': 'c', 'id': 1186, 'synset': 'water_faucet.n.01', 'synonyms': ['water_faucet', 'water_tap', 'tap_(water_faucet)'], 'def': 'a faucet for drawing water from a pipe or cask', 'name': 'water_faucet'}, {'frequency': 'r', 'id': 1187, 'synset': 'water_filter.n.01', 'synonyms': ['water_filter'], 'def': 'a filter to remove impurities from the water supply', 'name': 'water_filter'}, {'frequency': 'r', 'id': 1188, 'synset': 'water_heater.n.01', 'synonyms': ['water_heater', 'hot-water_heater'], 'def': 'a heater and storage tank to supply heated water', 'name': 'water_heater'}, {'frequency': 'r', 'id': 1189, 'synset': 'water_jug.n.01', 'synonyms': ['water_jug'], 'def': 'a jug that holds water', 'name': 'water_jug'}, {'frequency': 'r', 'id': 1190, 'synset': 'water_pistol.n.01', 'synonyms': ['water_gun', 'squirt_gun'], 'def': 'plaything consisting of a toy pistol that squirts water', 'name': 'water_gun'}, {'frequency': 'c', 'id': 1191, 'synset': 'water_scooter.n.01', 'synonyms': ['water_scooter', 'sea_scooter', 'jet_ski'], 'def': 'a motorboat resembling a motor scooter (NOT A SURFBOARD OR WATER SKI)', 'name': 'water_scooter'}, {'frequency': 'c', 'id': 1192, 'synset': 'water_ski.n.01', 'synonyms': ['water_ski'], 'def': 'broad ski for skimming over water towed by a speedboat (DO NOT MARK WATER)', 'name': 'water_ski'}, {'frequency': 'c', 'id': 1193, 'synset': 'water_tower.n.01', 'synonyms': ['water_tower'], 'def': 'a large reservoir for water', 'name': 'water_tower'}, {'frequency': 'c', 'id': 1194, 'synset': 'watering_can.n.01', 'synonyms': ['watering_can'], 'def': 'a container with a handle and a spout with a perforated nozzle; used to sprinkle water over plants', 'name': 'watering_can'}, {'frequency': 'c', 'id': 1195, 'synset': 'watermelon.n.02', 'synonyms': ['watermelon'], 'def': 'large oblong or roundish melon with a hard green rind and sweet watery red or occasionally yellowish pulp', 'name': 'watermelon'}, {'frequency': 'f', 'id': 1196, 'synset': 'weathervane.n.01', 'synonyms': ['weathervane', 'vane_(weathervane)', 'wind_vane'], 'def': 'mechanical device attached to an elevated structure; rotates freely to show the direction of the wind', 'name': 'weathervane'}, {'frequency': 'c', 'id': 1197, 'synset': 'webcam.n.01', 'synonyms': ['webcam'], 'def': 'a digital camera designed to take digital photographs and transmit them over the internet', 'name': 'webcam'}, {'frequency': 'c', 'id': 1198, 'synset': 'wedding_cake.n.01', 'synonyms': ['wedding_cake', 'bridecake'], 'def': 'a rich cake with two or more tiers and covered with frosting and decorations; served at a wedding reception', 'name': 'wedding_cake'}, {'frequency': 'c', 'id': 1199, 'synset': 'wedding_ring.n.01', 'synonyms': ['wedding_ring', 'wedding_band'], 'def': 'a ring given to the bride and\/or groom at the wedding', 'name': 'wedding_ring'}, {'frequency': 'f', 'id': 1200, 'synset': 'wet_suit.n.01', 'synonyms': ['wet_suit'], 'def': 'a close-fitting garment made of a permeable material; worn in cold water to retain body heat', 'name': 'wet_suit'}, {'frequency': 'f', 'id': 1201, 'synset': 'wheel.n.01', 'synonyms': ['wheel'], 'def': 'a circular frame with spokes (or a solid disc) that can rotate on a shaft or axle', 'name': 'wheel'}, {'frequency': 'c', 'id': 1202, 'synset': 'wheelchair.n.01', 'synonyms': ['wheelchair'], 'def': 'a movable chair mounted on large wheels', 'name': 'wheelchair'}, {'frequency': 'c', 'id': 1203, 'synset': 'whipped_cream.n.01', 'synonyms': ['whipped_cream'], 'def': 'cream that has been beaten until light and fluffy', 'name': 'whipped_cream'}, {'frequency': 'r', 'id': 1204, 'synset': 'whiskey.n.01', 'synonyms': ['whiskey'], 'def': 'a liquor made from fermented mash of grain', 'name': 'whiskey'}, {'frequency': 'r', 'id': 1205, 'synset': 'whistle.n.03', 'synonyms': ['whistle'], 'def': 'a small wind instrument that produces a whistling sound by blowing into it', 'name': 'whistle'}, {'frequency': 'r', 'id': 1206, 'synset': 'wick.n.02', 'synonyms': ['wick'], 'def': 'a loosely woven cord in a candle or oil lamp that is lit on fire', 'name': 'wick'}, {'frequency': 'c', 'id': 1207, 'synset': 'wig.n.01', 'synonyms': ['wig'], 'def': 'hairpiece covering the head and made of real or synthetic hair', 'name': 'wig'}, {'frequency': 'c', 'id': 1208, 'synset': 'wind_chime.n.01', 'synonyms': ['wind_chime'], 'def': 'a decorative arrangement of pieces of metal or glass or pottery that hang together loosely so the wind can cause them to tinkle', 'name': 'wind_chime'}, {'frequency': 'c', 'id': 1209, 'synset': 'windmill.n.01', 'synonyms': ['windmill'], 'def': 'a mill that is powered by the wind', 'name': 'windmill'}, {'frequency': 'c', 'id': 1210, 'synset': 'window_box.n.01', 'synonyms': ['window_box_(for_plants)'], 'def': 'a container for growing plants on a windowsill', 'name': 'window_box_(for_plants)'}, {'frequency': 'f', 'id': 1211, 'synset': 'windshield_wiper.n.01', 'synonyms': ['windshield_wiper', 'windscreen_wiper', 'wiper_(for_windshield\/screen)'], 'def': 'a mechanical device that cleans the windshield', 'name': 'windshield_wiper'}, {'frequency': 'c', 'id': 1212, 'synset': 'windsock.n.01', 'synonyms': ['windsock', 'air_sock', 'air-sleeve', 'wind_sleeve', 'wind_cone'], 'def': 'a truncated cloth cone mounted on a mast\/pole; shows wind direction', 'name': 'windsock'}, {'frequency': 'f', 'id': 1213, 'synset': 'wine_bottle.n.01', 'synonyms': ['wine_bottle'], 'def': 'a bottle for holding wine', 'name': 'wine_bottle'}, {'frequency': 'r', 'id': 1214, 'synset': 'wine_bucket.n.01', 'synonyms': ['wine_bucket', 'wine_cooler'], 'def': 'a bucket of ice used to chill a bottle of wine', 'name': 'wine_bucket'}, {'frequency': 'f', 'id': 1215, 'synset': 'wineglass.n.01', 'synonyms': ['wineglass'], 'def': 'a glass that has a stem and in which wine is served', 'name': 'wineglass'}, {'frequency': 'r', 'id': 1216, 'synset': 'wing_chair.n.01', 'synonyms': ['wing_chair'], 'def': 'easy chair having wings on each side of a high back', 'name': 'wing_chair'}, {'frequency': 'c', 'id': 1217, 'synset': 'winker.n.02', 'synonyms': ['blinder_(for_horses)'], 'def': 'blinds that prevent a horse from seeing something on either side', 'name': 'blinder_(for_horses)'}, {'frequency': 'c', 'id': 1218, 'synset': 'wok.n.01', 'synonyms': ['wok'], 'def': 'pan with a convex bottom; used for frying in Chinese cooking', 'name': 'wok'}, {'frequency': 'r', 'id': 1219, 'synset': 'wolf.n.01', 'synonyms': ['wolf'], 'def': 'a wild carnivorous mammal of the dog family, living and hunting in packs', 'name': 'wolf'}, {'frequency': 'c', 'id': 1220, 'synset': 'wooden_spoon.n.02', 'synonyms': ['wooden_spoon'], 'def': 'a spoon made of wood', 'name': 'wooden_spoon'}, {'frequency': 'c', 'id': 1221, 'synset': 'wreath.n.01', 'synonyms': ['wreath'], 'def': 'an arrangement of flowers, leaves, or stems fastened in a ring', 'name': 'wreath'}, {'frequency': 'c', 'id': 1222, 'synset': 'wrench.n.03', 'synonyms': ['wrench', 'spanner'], 'def': 'a hand tool that is used to hold or twist a nut or bolt', 'name': 'wrench'}, {'frequency': 'c', 'id': 1223, 'synset': 'wristband.n.01', 'synonyms': ['wristband'], 'def': 'band consisting of a part of a sleeve that covers the wrist', 'name': 'wristband'}, {'frequency': 'f', 'id': 1224, 'synset': 'wristlet.n.01', 'synonyms': ['wristlet', 'wrist_band'], 'def': 'a band or bracelet worn around the wrist', 'name': 'wristlet'}, {'frequency': 'r', 'id': 1225, 'synset': 'yacht.n.01', 'synonyms': ['yacht'], 'def': 'an expensive vessel propelled by sail or power and used for cruising or racing', 'name': 'yacht'}, {'frequency': 'r', 'id': 1226, 'synset': 'yak.n.02', 'synonyms': ['yak'], 'def': 'large long-haired wild ox of Tibet often domesticated', 'name': 'yak'}, {'frequency': 'c', 'id': 1227, 'synset': 'yogurt.n.01', 'synonyms': ['yogurt', 'yoghurt', 'yoghourt'], 'def': 'a custard-like food made from curdled milk', 'name': 'yogurt'}, {'frequency': 'r', 'id': 1228, 'synset': 'yoke.n.07', 'synonyms': ['yoke_(animal_equipment)'], 'def': 'gear joining two animals at the neck; NOT egg yolk', 'name': 'yoke_(animal_equipment)'}, {'frequency': 'f', 'id': 1229, 'synset': 'zebra.n.01', 'synonyms': ['zebra'], 'def': 'any of several fleet black-and-white striped African equines', 'name': 'zebra'}, {'frequency': 'c', 'id': 1230, 'synset': 'zucchini.n.02', 'synonyms': ['zucchini', 'courgette'], 'def': 'small cucumber-shaped vegetable marrow; typically dark green', 'name': 'zucchini'}]  # noqa$/;"	v
LVIS_CATEGORIES	detectron2/data/datasets/lvis_v1_categories.py	/^LVIS_CATEGORIES = [{'frequency': 'c', 'synset': 'aerosol.n.02', 'synonyms': ['aerosol_can', 'spray_can'], 'id': 1, 'def': 'a dispenser that holds a substance under pressure', 'name': 'aerosol_can'}, {'frequency': 'f', 'synset': 'air_conditioner.n.01', 'synonyms': ['air_conditioner'], 'id': 2, 'def': 'a machine that keeps air cool and dry', 'name': 'air_conditioner'}, {'frequency': 'f', 'synset': 'airplane.n.01', 'synonyms': ['airplane', 'aeroplane'], 'id': 3, 'def': 'an aircraft that has a fixed wing and is powered by propellers or jets', 'name': 'airplane'}, {'frequency': 'f', 'synset': 'alarm_clock.n.01', 'synonyms': ['alarm_clock'], 'id': 4, 'def': 'a clock that wakes a sleeper at some preset time', 'name': 'alarm_clock'}, {'frequency': 'c', 'synset': 'alcohol.n.01', 'synonyms': ['alcohol', 'alcoholic_beverage'], 'id': 5, 'def': 'a liquor or brew containing alcohol as the active agent', 'name': 'alcohol'}, {'frequency': 'c', 'synset': 'alligator.n.02', 'synonyms': ['alligator', 'gator'], 'id': 6, 'def': 'amphibious reptiles related to crocodiles but with shorter broader snouts', 'name': 'alligator'}, {'frequency': 'c', 'synset': 'almond.n.02', 'synonyms': ['almond'], 'id': 7, 'def': 'oval-shaped edible seed of the almond tree', 'name': 'almond'}, {'frequency': 'c', 'synset': 'ambulance.n.01', 'synonyms': ['ambulance'], 'id': 8, 'def': 'a vehicle that takes people to and from hospitals', 'name': 'ambulance'}, {'frequency': 'c', 'synset': 'amplifier.n.01', 'synonyms': ['amplifier'], 'id': 9, 'def': 'electronic equipment that increases strength of signals', 'name': 'amplifier'}, {'frequency': 'c', 'synset': 'anklet.n.03', 'synonyms': ['anklet', 'ankle_bracelet'], 'id': 10, 'def': 'an ornament worn around the ankle', 'name': 'anklet'}, {'frequency': 'f', 'synset': 'antenna.n.01', 'synonyms': ['antenna', 'aerial', 'transmitting_aerial'], 'id': 11, 'def': 'an electrical device that sends or receives radio or television signals', 'name': 'antenna'}, {'frequency': 'f', 'synset': 'apple.n.01', 'synonyms': ['apple'], 'id': 12, 'def': 'fruit with red or yellow or green skin and sweet to tart crisp whitish flesh', 'name': 'apple'}, {'frequency': 'r', 'synset': 'applesauce.n.01', 'synonyms': ['applesauce'], 'id': 13, 'def': 'puree of stewed apples usually sweetened and spiced', 'name': 'applesauce'}, {'frequency': 'r', 'synset': 'apricot.n.02', 'synonyms': ['apricot'], 'id': 14, 'def': 'downy yellow to rosy-colored fruit resembling a small peach', 'name': 'apricot'}, {'frequency': 'f', 'synset': 'apron.n.01', 'synonyms': ['apron'], 'id': 15, 'def': 'a garment of cloth that is tied about the waist and worn to protect clothing', 'name': 'apron'}, {'frequency': 'c', 'synset': 'aquarium.n.01', 'synonyms': ['aquarium', 'fish_tank'], 'id': 16, 'def': 'a tank\/pool\/bowl filled with water for keeping live fish and underwater animals', 'name': 'aquarium'}, {'frequency': 'r', 'synset': 'arctic.n.02', 'synonyms': ['arctic_(type_of_shoe)', 'galosh', 'golosh', 'rubber_(type_of_shoe)', 'gumshoe'], 'id': 17, 'def': 'a waterproof overshoe that protects shoes from water or snow', 'name': 'arctic_(type_of_shoe)'}, {'frequency': 'c', 'synset': 'armband.n.02', 'synonyms': ['armband'], 'id': 18, 'def': 'a band worn around the upper arm', 'name': 'armband'}, {'frequency': 'f', 'synset': 'armchair.n.01', 'synonyms': ['armchair'], 'id': 19, 'def': 'chair with a support on each side for arms', 'name': 'armchair'}, {'frequency': 'r', 'synset': 'armoire.n.01', 'synonyms': ['armoire'], 'id': 20, 'def': 'a large wardrobe or cabinet', 'name': 'armoire'}, {'frequency': 'r', 'synset': 'armor.n.01', 'synonyms': ['armor', 'armour'], 'id': 21, 'def': 'protective covering made of metal and used in combat', 'name': 'armor'}, {'frequency': 'c', 'synset': 'artichoke.n.02', 'synonyms': ['artichoke'], 'id': 22, 'def': 'a thistlelike flower head with edible fleshy leaves and heart', 'name': 'artichoke'}, {'frequency': 'f', 'synset': 'ashcan.n.01', 'synonyms': ['trash_can', 'garbage_can', 'wastebin', 'dustbin', 'trash_barrel', 'trash_bin'], 'id': 23, 'def': 'a bin that holds rubbish until it is collected', 'name': 'trash_can'}, {'frequency': 'c', 'synset': 'ashtray.n.01', 'synonyms': ['ashtray'], 'id': 24, 'def': "a receptacle for the ash from smokers' cigars or cigarettes", 'name': 'ashtray'}, {'frequency': 'c', 'synset': 'asparagus.n.02', 'synonyms': ['asparagus'], 'id': 25, 'def': 'edible young shoots of the asparagus plant', 'name': 'asparagus'}, {'frequency': 'c', 'synset': 'atomizer.n.01', 'synonyms': ['atomizer', 'atomiser', 'spray', 'sprayer', 'nebulizer', 'nebuliser'], 'id': 26, 'def': 'a dispenser that turns a liquid (such as perfume) into a fine mist', 'name': 'atomizer'}, {'frequency': 'f', 'synset': 'avocado.n.01', 'synonyms': ['avocado'], 'id': 27, 'def': 'a pear-shaped fruit with green or blackish skin and rich yellowish pulp enclosing a single large seed', 'name': 'avocado'}, {'frequency': 'c', 'synset': 'award.n.02', 'synonyms': ['award', 'accolade'], 'id': 28, 'def': 'a tangible symbol signifying approval or distinction', 'name': 'award'}, {'frequency': 'f', 'synset': 'awning.n.01', 'synonyms': ['awning'], 'id': 29, 'def': 'a canopy made of canvas to shelter people or things from rain or sun', 'name': 'awning'}, {'frequency': 'r', 'synset': 'ax.n.01', 'synonyms': ['ax', 'axe'], 'id': 30, 'def': 'an edge tool with a heavy bladed head mounted across a handle', 'name': 'ax'}, {'frequency': 'r', 'synset': 'baboon.n.01', 'synonyms': ['baboon'], 'id': 31, 'def': 'large terrestrial monkeys having doglike muzzles', 'name': 'baboon'}, {'frequency': 'f', 'synset': 'baby_buggy.n.01', 'synonyms': ['baby_buggy', 'baby_carriage', 'perambulator', 'pram', 'stroller'], 'id': 32, 'def': 'a small vehicle with four wheels in which a baby or child is pushed around', 'name': 'baby_buggy'}, {'frequency': 'c', 'synset': 'backboard.n.01', 'synonyms': ['basketball_backboard'], 'id': 33, 'def': 'a raised vertical board with basket attached; used to play basketball', 'name': 'basketball_backboard'}, {'frequency': 'f', 'synset': 'backpack.n.01', 'synonyms': ['backpack', 'knapsack', 'packsack', 'rucksack', 'haversack'], 'id': 34, 'def': 'a bag carried by a strap on your back or shoulder', 'name': 'backpack'}, {'frequency': 'f', 'synset': 'bag.n.04', 'synonyms': ['handbag', 'purse', 'pocketbook'], 'id': 35, 'def': 'a container used for carrying money and small personal items or accessories', 'name': 'handbag'}, {'frequency': 'f', 'synset': 'bag.n.06', 'synonyms': ['suitcase', 'baggage', 'luggage'], 'id': 36, 'def': 'cases used to carry belongings when traveling', 'name': 'suitcase'}, {'frequency': 'c', 'synset': 'bagel.n.01', 'synonyms': ['bagel', 'beigel'], 'id': 37, 'def': 'glazed yeast-raised doughnut-shaped roll with hard crust', 'name': 'bagel'}, {'frequency': 'r', 'synset': 'bagpipe.n.01', 'synonyms': ['bagpipe'], 'id': 38, 'def': 'a tubular wind instrument; the player blows air into a bag and squeezes it out', 'name': 'bagpipe'}, {'frequency': 'r', 'synset': 'baguet.n.01', 'synonyms': ['baguet', 'baguette'], 'id': 39, 'def': 'narrow French stick loaf', 'name': 'baguet'}, {'frequency': 'r', 'synset': 'bait.n.02', 'synonyms': ['bait', 'lure'], 'id': 40, 'def': 'something used to lure fish or other animals into danger so they can be trapped or killed', 'name': 'bait'}, {'frequency': 'f', 'synset': 'ball.n.06', 'synonyms': ['ball'], 'id': 41, 'def': 'a spherical object used as a plaything', 'name': 'ball'}, {'frequency': 'r', 'synset': 'ballet_skirt.n.01', 'synonyms': ['ballet_skirt', 'tutu'], 'id': 42, 'def': 'very short skirt worn by ballerinas', 'name': 'ballet_skirt'}, {'frequency': 'f', 'synset': 'balloon.n.01', 'synonyms': ['balloon'], 'id': 43, 'def': 'large tough nonrigid bag filled with gas or heated air', 'name': 'balloon'}, {'frequency': 'c', 'synset': 'bamboo.n.02', 'synonyms': ['bamboo'], 'id': 44, 'def': 'woody tropical grass having hollow woody stems', 'name': 'bamboo'}, {'frequency': 'f', 'synset': 'banana.n.02', 'synonyms': ['banana'], 'id': 45, 'def': 'elongated crescent-shaped yellow fruit with soft sweet flesh', 'name': 'banana'}, {'frequency': 'c', 'synset': 'band_aid.n.01', 'synonyms': ['Band_Aid'], 'id': 46, 'def': 'trade name for an adhesive bandage to cover small cuts or blisters', 'name': 'Band_Aid'}, {'frequency': 'c', 'synset': 'bandage.n.01', 'synonyms': ['bandage'], 'id': 47, 'def': 'a piece of soft material that covers and protects an injured part of the body', 'name': 'bandage'}, {'frequency': 'f', 'synset': 'bandanna.n.01', 'synonyms': ['bandanna', 'bandana'], 'id': 48, 'def': 'large and brightly colored handkerchief; often used as a neckerchief', 'name': 'bandanna'}, {'frequency': 'r', 'synset': 'banjo.n.01', 'synonyms': ['banjo'], 'id': 49, 'def': 'a stringed instrument of the guitar family with a long neck and circular body', 'name': 'banjo'}, {'frequency': 'f', 'synset': 'banner.n.01', 'synonyms': ['banner', 'streamer'], 'id': 50, 'def': 'long strip of cloth or paper used for decoration or advertising', 'name': 'banner'}, {'frequency': 'r', 'synset': 'barbell.n.01', 'synonyms': ['barbell'], 'id': 51, 'def': 'a bar to which heavy discs are attached at each end; used in weightlifting', 'name': 'barbell'}, {'frequency': 'r', 'synset': 'barge.n.01', 'synonyms': ['barge'], 'id': 52, 'def': 'a flatbottom boat for carrying heavy loads (especially on canals)', 'name': 'barge'}, {'frequency': 'f', 'synset': 'barrel.n.02', 'synonyms': ['barrel', 'cask'], 'id': 53, 'def': 'a cylindrical container that holds liquids', 'name': 'barrel'}, {'frequency': 'c', 'synset': 'barrette.n.01', 'synonyms': ['barrette'], 'id': 54, 'def': "a pin for holding women's hair in place", 'name': 'barrette'}, {'frequency': 'c', 'synset': 'barrow.n.03', 'synonyms': ['barrow', 'garden_cart', 'lawn_cart', 'wheelbarrow'], 'id': 55, 'def': 'a cart for carrying small loads; has handles and one or more wheels', 'name': 'barrow'}, {'frequency': 'f', 'synset': 'base.n.03', 'synonyms': ['baseball_base'], 'id': 56, 'def': 'a place that the runner must touch before scoring', 'name': 'baseball_base'}, {'frequency': 'f', 'synset': 'baseball.n.02', 'synonyms': ['baseball'], 'id': 57, 'def': 'a ball used in playing baseball', 'name': 'baseball'}, {'frequency': 'f', 'synset': 'baseball_bat.n.01', 'synonyms': ['baseball_bat'], 'id': 58, 'def': 'an implement used in baseball by the batter', 'name': 'baseball_bat'}, {'frequency': 'f', 'synset': 'baseball_cap.n.01', 'synonyms': ['baseball_cap', 'jockey_cap', 'golf_cap'], 'id': 59, 'def': 'a cap with a bill', 'name': 'baseball_cap'}, {'frequency': 'f', 'synset': 'baseball_glove.n.01', 'synonyms': ['baseball_glove', 'baseball_mitt'], 'id': 60, 'def': 'the handwear used by fielders in playing baseball', 'name': 'baseball_glove'}, {'frequency': 'f', 'synset': 'basket.n.01', 'synonyms': ['basket', 'handbasket'], 'id': 61, 'def': 'a container that is usually woven and has handles', 'name': 'basket'}, {'frequency': 'c', 'synset': 'basketball.n.02', 'synonyms': ['basketball'], 'id': 62, 'def': 'an inflated ball used in playing basketball', 'name': 'basketball'}, {'frequency': 'r', 'synset': 'bass_horn.n.01', 'synonyms': ['bass_horn', 'sousaphone', 'tuba'], 'id': 63, 'def': 'the lowest brass wind instrument', 'name': 'bass_horn'}, {'frequency': 'c', 'synset': 'bat.n.01', 'synonyms': ['bat_(animal)'], 'id': 64, 'def': 'nocturnal mouselike mammal with forelimbs modified to form membranous wings', 'name': 'bat_(animal)'}, {'frequency': 'f', 'synset': 'bath_mat.n.01', 'synonyms': ['bath_mat'], 'id': 65, 'def': 'a heavy towel or mat to stand on while drying yourself after a bath', 'name': 'bath_mat'}, {'frequency': 'f', 'synset': 'bath_towel.n.01', 'synonyms': ['bath_towel'], 'id': 66, 'def': 'a large towel; to dry yourself after a bath', 'name': 'bath_towel'}, {'frequency': 'c', 'synset': 'bathrobe.n.01', 'synonyms': ['bathrobe'], 'id': 67, 'def': 'a loose-fitting robe of towelling; worn after a bath or swim', 'name': 'bathrobe'}, {'frequency': 'f', 'synset': 'bathtub.n.01', 'synonyms': ['bathtub', 'bathing_tub'], 'id': 68, 'def': 'a large open container that you fill with water and use to wash the body', 'name': 'bathtub'}, {'frequency': 'r', 'synset': 'batter.n.02', 'synonyms': ['batter_(food)'], 'id': 69, 'def': 'a liquid or semiliquid mixture, as of flour, eggs, and milk, used in cooking', 'name': 'batter_(food)'}, {'frequency': 'c', 'synset': 'battery.n.02', 'synonyms': ['battery'], 'id': 70, 'def': 'a portable device that produces electricity', 'name': 'battery'}, {'frequency': 'r', 'synset': 'beach_ball.n.01', 'synonyms': ['beachball'], 'id': 71, 'def': 'large and light ball; for play at the seaside', 'name': 'beachball'}, {'frequency': 'c', 'synset': 'bead.n.01', 'synonyms': ['bead'], 'id': 72, 'def': 'a small ball with a hole through the middle used for ornamentation, jewellery, etc.', 'name': 'bead'}, {'frequency': 'c', 'synset': 'bean_curd.n.01', 'synonyms': ['bean_curd', 'tofu'], 'id': 73, 'def': 'cheeselike food made of curdled soybean milk', 'name': 'bean_curd'}, {'frequency': 'c', 'synset': 'beanbag.n.01', 'synonyms': ['beanbag'], 'id': 74, 'def': 'a bag filled with dried beans or similar items; used in games or to sit on', 'name': 'beanbag'}, {'frequency': 'f', 'synset': 'beanie.n.01', 'synonyms': ['beanie', 'beany'], 'id': 75, 'def': 'a small skullcap; formerly worn by schoolboys and college freshmen', 'name': 'beanie'}, {'frequency': 'f', 'synset': 'bear.n.01', 'synonyms': ['bear'], 'id': 76, 'def': 'large carnivorous or omnivorous mammals with shaggy coats and claws', 'name': 'bear'}, {'frequency': 'f', 'synset': 'bed.n.01', 'synonyms': ['bed'], 'id': 77, 'def': 'a piece of furniture that provides a place to sleep', 'name': 'bed'}, {'frequency': 'r', 'synset': 'bedpan.n.01', 'synonyms': ['bedpan'], 'id': 78, 'def': 'a shallow vessel used by a bedridden patient for defecation and urination', 'name': 'bedpan'}, {'frequency': 'f', 'synset': 'bedspread.n.01', 'synonyms': ['bedspread', 'bedcover', 'bed_covering', 'counterpane', 'spread'], 'id': 79, 'def': 'decorative cover for a bed', 'name': 'bedspread'}, {'frequency': 'f', 'synset': 'beef.n.01', 'synonyms': ['cow'], 'id': 80, 'def': 'cattle\/cow', 'name': 'cow'}, {'frequency': 'f', 'synset': 'beef.n.02', 'synonyms': ['beef_(food)', 'boeuf_(food)'], 'id': 81, 'def': 'meat from an adult domestic bovine', 'name': 'beef_(food)'}, {'frequency': 'r', 'synset': 'beeper.n.01', 'synonyms': ['beeper', 'pager'], 'id': 82, 'def': 'an device that beeps when the person carrying it is being paged', 'name': 'beeper'}, {'frequency': 'f', 'synset': 'beer_bottle.n.01', 'synonyms': ['beer_bottle'], 'id': 83, 'def': 'a bottle that holds beer', 'name': 'beer_bottle'}, {'frequency': 'c', 'synset': 'beer_can.n.01', 'synonyms': ['beer_can'], 'id': 84, 'def': 'a can that holds beer', 'name': 'beer_can'}, {'frequency': 'r', 'synset': 'beetle.n.01', 'synonyms': ['beetle'], 'id': 85, 'def': 'insect with hard wing covers', 'name': 'beetle'}, {'frequency': 'f', 'synset': 'bell.n.01', 'synonyms': ['bell'], 'id': 86, 'def': 'a hollow device made of metal that makes a ringing sound when struck', 'name': 'bell'}, {'frequency': 'f', 'synset': 'bell_pepper.n.02', 'synonyms': ['bell_pepper', 'capsicum'], 'id': 87, 'def': 'large bell-shaped sweet pepper in green or red or yellow or orange or black varieties', 'name': 'bell_pepper'}, {'frequency': 'f', 'synset': 'belt.n.02', 'synonyms': ['belt'], 'id': 88, 'def': 'a band to tie or buckle around the body (usually at the waist)', 'name': 'belt'}, {'frequency': 'f', 'synset': 'belt_buckle.n.01', 'synonyms': ['belt_buckle'], 'id': 89, 'def': 'the buckle used to fasten a belt', 'name': 'belt_buckle'}, {'frequency': 'f', 'synset': 'bench.n.01', 'synonyms': ['bench'], 'id': 90, 'def': 'a long seat for more than one person', 'name': 'bench'}, {'frequency': 'c', 'synset': 'beret.n.01', 'synonyms': ['beret'], 'id': 91, 'def': 'a cap with no brim or bill; made of soft cloth', 'name': 'beret'}, {'frequency': 'c', 'synset': 'bib.n.02', 'synonyms': ['bib'], 'id': 92, 'def': 'a napkin tied under the chin of a child while eating', 'name': 'bib'}, {'frequency': 'r', 'synset': 'bible.n.01', 'synonyms': ['Bible'], 'id': 93, 'def': 'the sacred writings of the Christian religions', 'name': 'Bible'}, {'frequency': 'f', 'synset': 'bicycle.n.01', 'synonyms': ['bicycle', 'bike_(bicycle)'], 'id': 94, 'def': 'a wheeled vehicle that has two wheels and is moved by foot pedals', 'name': 'bicycle'}, {'frequency': 'f', 'synset': 'bill.n.09', 'synonyms': ['visor', 'vizor'], 'id': 95, 'def': 'a brim that projects to the front to shade the eyes', 'name': 'visor'}, {'frequency': 'f', 'synset': 'billboard.n.01', 'synonyms': ['billboard'], 'id': 96, 'def': 'large outdoor signboard', 'name': 'billboard'}, {'frequency': 'c', 'synset': 'binder.n.03', 'synonyms': ['binder', 'ring-binder'], 'id': 97, 'def': 'holds loose papers or magazines', 'name': 'binder'}, {'frequency': 'c', 'synset': 'binoculars.n.01', 'synonyms': ['binoculars', 'field_glasses', 'opera_glasses'], 'id': 98, 'def': 'an optical instrument designed for simultaneous use by both eyes', 'name': 'binoculars'}, {'frequency': 'f', 'synset': 'bird.n.01', 'synonyms': ['bird'], 'id': 99, 'def': 'animal characterized by feathers and wings', 'name': 'bird'}, {'frequency': 'c', 'synset': 'bird_feeder.n.01', 'synonyms': ['birdfeeder'], 'id': 100, 'def': 'an outdoor device that supplies food for wild birds', 'name': 'birdfeeder'}, {'frequency': 'c', 'synset': 'birdbath.n.01', 'synonyms': ['birdbath'], 'id': 101, 'def': 'an ornamental basin (usually in a garden) for birds to bathe in', 'name': 'birdbath'}, {'frequency': 'c', 'synset': 'birdcage.n.01', 'synonyms': ['birdcage'], 'id': 102, 'def': 'a cage in which a bird can be kept', 'name': 'birdcage'}, {'frequency': 'c', 'synset': 'birdhouse.n.01', 'synonyms': ['birdhouse'], 'id': 103, 'def': 'a shelter for birds', 'name': 'birdhouse'}, {'frequency': 'f', 'synset': 'birthday_cake.n.01', 'synonyms': ['birthday_cake'], 'id': 104, 'def': 'decorated cake served at a birthday party', 'name': 'birthday_cake'}, {'frequency': 'r', 'synset': 'birthday_card.n.01', 'synonyms': ['birthday_card'], 'id': 105, 'def': 'a card expressing a birthday greeting', 'name': 'birthday_card'}, {'frequency': 'r', 'synset': 'black_flag.n.01', 'synonyms': ['pirate_flag'], 'id': 106, 'def': 'a flag usually bearing a white skull and crossbones on a black background', 'name': 'pirate_flag'}, {'frequency': 'c', 'synset': 'black_sheep.n.02', 'synonyms': ['black_sheep'], 'id': 107, 'def': 'sheep with a black coat', 'name': 'black_sheep'}, {'frequency': 'c', 'synset': 'blackberry.n.01', 'synonyms': ['blackberry'], 'id': 108, 'def': 'large sweet black or very dark purple edible aggregate fruit', 'name': 'blackberry'}, {'frequency': 'f', 'synset': 'blackboard.n.01', 'synonyms': ['blackboard', 'chalkboard'], 'id': 109, 'def': 'sheet of slate; for writing with chalk', 'name': 'blackboard'}, {'frequency': 'f', 'synset': 'blanket.n.01', 'synonyms': ['blanket'], 'id': 110, 'def': 'bedding that keeps a person warm in bed', 'name': 'blanket'}, {'frequency': 'c', 'synset': 'blazer.n.01', 'synonyms': ['blazer', 'sport_jacket', 'sport_coat', 'sports_jacket', 'sports_coat'], 'id': 111, 'def': 'lightweight jacket; often striped in the colors of a club or school', 'name': 'blazer'}, {'frequency': 'f', 'synset': 'blender.n.01', 'synonyms': ['blender', 'liquidizer', 'liquidiser'], 'id': 112, 'def': 'an electrically powered mixer that mix or chop or liquefy foods', 'name': 'blender'}, {'frequency': 'r', 'synset': 'blimp.n.02', 'synonyms': ['blimp'], 'id': 113, 'def': 'a small nonrigid airship used for observation or as a barrage balloon', 'name': 'blimp'}, {'frequency': 'f', 'synset': 'blinker.n.01', 'synonyms': ['blinker', 'flasher'], 'id': 114, 'def': 'a light that flashes on and off; used as a signal or to send messages', 'name': 'blinker'}, {'frequency': 'f', 'synset': 'blouse.n.01', 'synonyms': ['blouse'], 'id': 115, 'def': 'a top worn by women', 'name': 'blouse'}, {'frequency': 'f', 'synset': 'blueberry.n.02', 'synonyms': ['blueberry'], 'id': 116, 'def': 'sweet edible dark-blue berries of blueberry plants', 'name': 'blueberry'}, {'frequency': 'r', 'synset': 'board.n.09', 'synonyms': ['gameboard'], 'id': 117, 'def': 'a flat portable surface (usually rectangular) designed for board games', 'name': 'gameboard'}, {'frequency': 'f', 'synset': 'boat.n.01', 'synonyms': ['boat', 'ship_(boat)'], 'id': 118, 'def': 'a vessel for travel on water', 'name': 'boat'}, {'frequency': 'r', 'synset': 'bob.n.05', 'synonyms': ['bob', 'bobber', 'bobfloat'], 'id': 119, 'def': 'a small float usually made of cork; attached to a fishing line', 'name': 'bob'}, {'frequency': 'c', 'synset': 'bobbin.n.01', 'synonyms': ['bobbin', 'spool', 'reel'], 'id': 120, 'def': 'a thing around which thread\/tape\/film or other flexible materials can be wound', 'name': 'bobbin'}, {'frequency': 'c', 'synset': 'bobby_pin.n.01', 'synonyms': ['bobby_pin', 'hairgrip'], 'id': 121, 'def': 'a flat wire hairpin used to hold bobbed hair in place', 'name': 'bobby_pin'}, {'frequency': 'c', 'synset': 'boiled_egg.n.01', 'synonyms': ['boiled_egg', 'coddled_egg'], 'id': 122, 'def': 'egg cooked briefly in the shell in gently boiling water', 'name': 'boiled_egg'}, {'frequency': 'r', 'synset': 'bolo_tie.n.01', 'synonyms': ['bolo_tie', 'bolo', 'bola_tie', 'bola'], 'id': 123, 'def': 'a cord fastened around the neck with an ornamental clasp and worn as a necktie', 'name': 'bolo_tie'}, {'frequency': 'c', 'synset': 'bolt.n.03', 'synonyms': ['deadbolt'], 'id': 124, 'def': 'the part of a lock that is engaged or withdrawn with a key', 'name': 'deadbolt'}, {'frequency': 'f', 'synset': 'bolt.n.06', 'synonyms': ['bolt'], 'id': 125, 'def': 'a screw that screws into a nut to form a fastener', 'name': 'bolt'}, {'frequency': 'r', 'synset': 'bonnet.n.01', 'synonyms': ['bonnet'], 'id': 126, 'def': 'a hat tied under the chin', 'name': 'bonnet'}, {'frequency': 'f', 'synset': 'book.n.01', 'synonyms': ['book'], 'id': 127, 'def': 'a written work or composition that has been published', 'name': 'book'}, {'frequency': 'c', 'synset': 'bookcase.n.01', 'synonyms': ['bookcase'], 'id': 128, 'def': 'a piece of furniture with shelves for storing books', 'name': 'bookcase'}, {'frequency': 'c', 'synset': 'booklet.n.01', 'synonyms': ['booklet', 'brochure', 'leaflet', 'pamphlet'], 'id': 129, 'def': 'a small book usually having a paper cover', 'name': 'booklet'}, {'frequency': 'r', 'synset': 'bookmark.n.01', 'synonyms': ['bookmark', 'bookmarker'], 'id': 130, 'def': 'a marker (a piece of paper or ribbon) placed between the pages of a book', 'name': 'bookmark'}, {'frequency': 'r', 'synset': 'boom.n.04', 'synonyms': ['boom_microphone', 'microphone_boom'], 'id': 131, 'def': 'a pole carrying an overhead microphone projected over a film or tv set', 'name': 'boom_microphone'}, {'frequency': 'f', 'synset': 'boot.n.01', 'synonyms': ['boot'], 'id': 132, 'def': 'footwear that covers the whole foot and lower leg', 'name': 'boot'}, {'frequency': 'f', 'synset': 'bottle.n.01', 'synonyms': ['bottle'], 'id': 133, 'def': 'a glass or plastic vessel used for storing drinks or other liquids', 'name': 'bottle'}, {'frequency': 'c', 'synset': 'bottle_opener.n.01', 'synonyms': ['bottle_opener'], 'id': 134, 'def': 'an opener for removing caps or corks from bottles', 'name': 'bottle_opener'}, {'frequency': 'c', 'synset': 'bouquet.n.01', 'synonyms': ['bouquet'], 'id': 135, 'def': 'an arrangement of flowers that is usually given as a present', 'name': 'bouquet'}, {'frequency': 'r', 'synset': 'bow.n.04', 'synonyms': ['bow_(weapon)'], 'id': 136, 'def': 'a weapon for shooting arrows', 'name': 'bow_(weapon)'}, {'frequency': 'f', 'synset': 'bow.n.08', 'synonyms': ['bow_(decorative_ribbons)'], 'id': 137, 'def': 'a decorative interlacing of ribbons', 'name': 'bow_(decorative_ribbons)'}, {'frequency': 'f', 'synset': 'bow_tie.n.01', 'synonyms': ['bow-tie', 'bowtie'], 'id': 138, 'def': "a man's tie that ties in a bow", 'name': 'bow-tie'}, {'frequency': 'f', 'synset': 'bowl.n.03', 'synonyms': ['bowl'], 'id': 139, 'def': 'a dish that is round and open at the top for serving foods', 'name': 'bowl'}, {'frequency': 'r', 'synset': 'bowl.n.08', 'synonyms': ['pipe_bowl'], 'id': 140, 'def': 'a small round container that is open at the top for holding tobacco', 'name': 'pipe_bowl'}, {'frequency': 'c', 'synset': 'bowler_hat.n.01', 'synonyms': ['bowler_hat', 'bowler', 'derby_hat', 'derby', 'plug_hat'], 'id': 141, 'def': 'a felt hat that is round and hard with a narrow brim', 'name': 'bowler_hat'}, {'frequency': 'r', 'synset': 'bowling_ball.n.01', 'synonyms': ['bowling_ball'], 'id': 142, 'def': 'a large ball with finger holes used in the sport of bowling', 'name': 'bowling_ball'}, {'frequency': 'f', 'synset': 'box.n.01', 'synonyms': ['box'], 'id': 143, 'def': 'a (usually rectangular) container; may have a lid', 'name': 'box'}, {'frequency': 'r', 'synset': 'boxing_glove.n.01', 'synonyms': ['boxing_glove'], 'id': 144, 'def': 'large glove coverings the fists of a fighter worn for the sport of boxing', 'name': 'boxing_glove'}, {'frequency': 'c', 'synset': 'brace.n.06', 'synonyms': ['suspenders'], 'id': 145, 'def': 'elastic straps that hold trousers up (usually used in the plural)', 'name': 'suspenders'}, {'frequency': 'f', 'synset': 'bracelet.n.02', 'synonyms': ['bracelet', 'bangle'], 'id': 146, 'def': 'jewelry worn around the wrist for decoration', 'name': 'bracelet'}, {'frequency': 'r', 'synset': 'brass.n.07', 'synonyms': ['brass_plaque'], 'id': 147, 'def': 'a memorial made of brass', 'name': 'brass_plaque'}, {'frequency': 'c', 'synset': 'brassiere.n.01', 'synonyms': ['brassiere', 'bra', 'bandeau'], 'id': 148, 'def': 'an undergarment worn by women to support their breasts', 'name': 'brassiere'}, {'frequency': 'c', 'synset': 'bread-bin.n.01', 'synonyms': ['bread-bin', 'breadbox'], 'id': 149, 'def': 'a container used to keep bread or cake in', 'name': 'bread-bin'}, {'frequency': 'f', 'synset': 'bread.n.01', 'synonyms': ['bread'], 'id': 150, 'def': 'food made from dough of flour or meal and usually raised with yeast or baking powder and then baked', 'name': 'bread'}, {'frequency': 'r', 'synset': 'breechcloth.n.01', 'synonyms': ['breechcloth', 'breechclout', 'loincloth'], 'id': 151, 'def': 'a garment that provides covering for the loins', 'name': 'breechcloth'}, {'frequency': 'f', 'synset': 'bridal_gown.n.01', 'synonyms': ['bridal_gown', 'wedding_gown', 'wedding_dress'], 'id': 152, 'def': 'a gown worn by the bride at a wedding', 'name': 'bridal_gown'}, {'frequency': 'c', 'synset': 'briefcase.n.01', 'synonyms': ['briefcase'], 'id': 153, 'def': 'a case with a handle; for carrying papers or files or books', 'name': 'briefcase'}, {'frequency': 'f', 'synset': 'broccoli.n.01', 'synonyms': ['broccoli'], 'id': 154, 'def': 'plant with dense clusters of tight green flower buds', 'name': 'broccoli'}, {'frequency': 'r', 'synset': 'brooch.n.01', 'synonyms': ['broach'], 'id': 155, 'def': 'a decorative pin worn by women', 'name': 'broach'}, {'frequency': 'c', 'synset': 'broom.n.01', 'synonyms': ['broom'], 'id': 156, 'def': 'bundle of straws or twigs attached to a long handle; used for cleaning', 'name': 'broom'}, {'frequency': 'c', 'synset': 'brownie.n.03', 'synonyms': ['brownie'], 'id': 157, 'def': 'square or bar of very rich chocolate cake usually with nuts', 'name': 'brownie'}, {'frequency': 'c', 'synset': 'brussels_sprouts.n.01', 'synonyms': ['brussels_sprouts'], 'id': 158, 'def': 'the small edible cabbage-like buds growing along a stalk', 'name': 'brussels_sprouts'}, {'frequency': 'r', 'synset': 'bubble_gum.n.01', 'synonyms': ['bubble_gum'], 'id': 159, 'def': 'a kind of chewing gum that can be blown into bubbles', 'name': 'bubble_gum'}, {'frequency': 'f', 'synset': 'bucket.n.01', 'synonyms': ['bucket', 'pail'], 'id': 160, 'def': 'a roughly cylindrical vessel that is open at the top', 'name': 'bucket'}, {'frequency': 'r', 'synset': 'buggy.n.01', 'synonyms': ['horse_buggy'], 'id': 161, 'def': 'a small lightweight carriage; drawn by a single horse', 'name': 'horse_buggy'}, {'frequency': 'c', 'synset': 'bull.n.11', 'synonyms': ['horned_cow'], 'id': 162, 'def': 'a cow with horns', 'name': 'bull'}, {'frequency': 'c', 'synset': 'bulldog.n.01', 'synonyms': ['bulldog'], 'id': 163, 'def': 'a thickset short-haired dog with a large head and strong undershot lower jaw', 'name': 'bulldog'}, {'frequency': 'r', 'synset': 'bulldozer.n.01', 'synonyms': ['bulldozer', 'dozer'], 'id': 164, 'def': 'large powerful tractor; a large blade in front flattens areas of ground', 'name': 'bulldozer'}, {'frequency': 'c', 'synset': 'bullet_train.n.01', 'synonyms': ['bullet_train'], 'id': 165, 'def': 'a high-speed passenger train', 'name': 'bullet_train'}, {'frequency': 'c', 'synset': 'bulletin_board.n.02', 'synonyms': ['bulletin_board', 'notice_board'], 'id': 166, 'def': 'a board that hangs on a wall; displays announcements', 'name': 'bulletin_board'}, {'frequency': 'r', 'synset': 'bulletproof_vest.n.01', 'synonyms': ['bulletproof_vest'], 'id': 167, 'def': 'a vest capable of resisting the impact of a bullet', 'name': 'bulletproof_vest'}, {'frequency': 'c', 'synset': 'bullhorn.n.01', 'synonyms': ['bullhorn', 'megaphone'], 'id': 168, 'def': 'a portable loudspeaker with built-in microphone and amplifier', 'name': 'bullhorn'}, {'frequency': 'f', 'synset': 'bun.n.01', 'synonyms': ['bun', 'roll'], 'id': 169, 'def': 'small rounded bread either plain or sweet', 'name': 'bun'}, {'frequency': 'c', 'synset': 'bunk_bed.n.01', 'synonyms': ['bunk_bed'], 'id': 170, 'def': 'beds built one above the other', 'name': 'bunk_bed'}, {'frequency': 'f', 'synset': 'buoy.n.01', 'synonyms': ['buoy'], 'id': 171, 'def': 'a float attached by rope to the seabed to mark channels in a harbor or underwater hazards', 'name': 'buoy'}, {'frequency': 'r', 'synset': 'burrito.n.01', 'synonyms': ['burrito'], 'id': 172, 'def': 'a flour tortilla folded around a filling', 'name': 'burrito'}, {'frequency': 'f', 'synset': 'bus.n.01', 'synonyms': ['bus_(vehicle)', 'autobus', 'charabanc', 'double-decker', 'motorbus', 'motorcoach'], 'id': 173, 'def': 'a vehicle carrying many passengers; used for public transport', 'name': 'bus_(vehicle)'}, {'frequency': 'c', 'synset': 'business_card.n.01', 'synonyms': ['business_card'], 'id': 174, 'def': "a card on which are printed the person's name and business affiliation", 'name': 'business_card'}, {'frequency': 'f', 'synset': 'butter.n.01', 'synonyms': ['butter'], 'id': 175, 'def': 'an edible emulsion of fat globules made by churning milk or cream; for cooking and table use', 'name': 'butter'}, {'frequency': 'c', 'synset': 'butterfly.n.01', 'synonyms': ['butterfly'], 'id': 176, 'def': 'insect typically having a slender body with knobbed antennae and broad colorful wings', 'name': 'butterfly'}, {'frequency': 'f', 'synset': 'button.n.01', 'synonyms': ['button'], 'id': 177, 'def': 'a round fastener sewn to shirts and coats etc to fit through buttonholes', 'name': 'button'}, {'frequency': 'f', 'synset': 'cab.n.03', 'synonyms': ['cab_(taxi)', 'taxi', 'taxicab'], 'id': 178, 'def': 'a car that takes passengers where they want to go in exchange for money', 'name': 'cab_(taxi)'}, {'frequency': 'r', 'synset': 'cabana.n.01', 'synonyms': ['cabana'], 'id': 179, 'def': 'a small tent used as a dressing room beside the sea or a swimming pool', 'name': 'cabana'}, {'frequency': 'c', 'synset': 'cabin_car.n.01', 'synonyms': ['cabin_car', 'caboose'], 'id': 180, 'def': 'a car on a freight train for use of the train crew; usually the last car on the train', 'name': 'cabin_car'}, {'frequency': 'f', 'synset': 'cabinet.n.01', 'synonyms': ['cabinet'], 'id': 181, 'def': 'a piece of furniture resembling a cupboard with doors and shelves and drawers', 'name': 'cabinet'}, {'frequency': 'r', 'synset': 'cabinet.n.03', 'synonyms': ['locker', 'storage_locker'], 'id': 182, 'def': 'a storage compartment for clothes and valuables; usually it has a lock', 'name': 'locker'}, {'frequency': 'f', 'synset': 'cake.n.03', 'synonyms': ['cake'], 'id': 183, 'def': 'baked goods made from or based on a mixture of flour, sugar, eggs, and fat', 'name': 'cake'}, {'frequency': 'c', 'synset': 'calculator.n.02', 'synonyms': ['calculator'], 'id': 184, 'def': 'a small machine that is used for mathematical calculations', 'name': 'calculator'}, {'frequency': 'f', 'synset': 'calendar.n.02', 'synonyms': ['calendar'], 'id': 185, 'def': 'a list or register of events (appointments\/social events\/court cases, etc)', 'name': 'calendar'}, {'frequency': 'c', 'synset': 'calf.n.01', 'synonyms': ['calf'], 'id': 186, 'def': 'young of domestic cattle', 'name': 'calf'}, {'frequency': 'c', 'synset': 'camcorder.n.01', 'synonyms': ['camcorder'], 'id': 187, 'def': 'a portable television camera and videocassette recorder', 'name': 'camcorder'}, {'frequency': 'c', 'synset': 'camel.n.01', 'synonyms': ['camel'], 'id': 188, 'def': 'cud-chewing mammal used as a draft or saddle animal in desert regions', 'name': 'camel'}, {'frequency': 'f', 'synset': 'camera.n.01', 'synonyms': ['camera'], 'id': 189, 'def': 'equipment for taking photographs', 'name': 'camera'}, {'frequency': 'c', 'synset': 'camera_lens.n.01', 'synonyms': ['camera_lens'], 'id': 190, 'def': 'a lens that focuses the image in a camera', 'name': 'camera_lens'}, {'frequency': 'c', 'synset': 'camper.n.02', 'synonyms': ['camper_(vehicle)', 'camping_bus', 'motor_home'], 'id': 191, 'def': 'a recreational vehicle equipped for camping out while traveling', 'name': 'camper_(vehicle)'}, {'frequency': 'f', 'synset': 'can.n.01', 'synonyms': ['can', 'tin_can'], 'id': 192, 'def': 'airtight sealed metal container for food or drink or paint etc.', 'name': 'can'}, {'frequency': 'c', 'synset': 'can_opener.n.01', 'synonyms': ['can_opener', 'tin_opener'], 'id': 193, 'def': 'a device for cutting cans open', 'name': 'can_opener'}, {'frequency': 'f', 'synset': 'candle.n.01', 'synonyms': ['candle', 'candlestick'], 'id': 194, 'def': 'stick of wax with a wick in the middle', 'name': 'candle'}, {'frequency': 'f', 'synset': 'candlestick.n.01', 'synonyms': ['candle_holder'], 'id': 195, 'def': 'a holder with sockets for candles', 'name': 'candle_holder'}, {'frequency': 'r', 'synset': 'candy_bar.n.01', 'synonyms': ['candy_bar'], 'id': 196, 'def': 'a candy shaped as a bar', 'name': 'candy_bar'}, {'frequency': 'c', 'synset': 'candy_cane.n.01', 'synonyms': ['candy_cane'], 'id': 197, 'def': 'a hard candy in the shape of a rod (usually with stripes)', 'name': 'candy_cane'}, {'frequency': 'c', 'synset': 'cane.n.01', 'synonyms': ['walking_cane'], 'id': 198, 'def': 'a stick that people can lean on to help them walk', 'name': 'walking_cane'}, {'frequency': 'c', 'synset': 'canister.n.02', 'synonyms': ['canister', 'cannister'], 'id': 199, 'def': 'metal container for storing dry foods such as tea or flour', 'name': 'canister'}, {'frequency': 'c', 'synset': 'canoe.n.01', 'synonyms': ['canoe'], 'id': 200, 'def': 'small and light boat; pointed at both ends; propelled with a paddle', 'name': 'canoe'}, {'frequency': 'c', 'synset': 'cantaloup.n.02', 'synonyms': ['cantaloup', 'cantaloupe'], 'id': 201, 'def': 'the fruit of a cantaloup vine; small to medium-sized melon with yellowish flesh', 'name': 'cantaloup'}, {'frequency': 'r', 'synset': 'canteen.n.01', 'synonyms': ['canteen'], 'id': 202, 'def': 'a flask for carrying water; used by soldiers or travelers', 'name': 'canteen'}, {'frequency': 'f', 'synset': 'cap.n.01', 'synonyms': ['cap_(headwear)'], 'id': 203, 'def': 'a tight-fitting headwear', 'name': 'cap_(headwear)'}, {'frequency': 'f', 'synset': 'cap.n.02', 'synonyms': ['bottle_cap', 'cap_(container_lid)'], 'id': 204, 'def': 'a top (as for a bottle)', 'name': 'bottle_cap'}, {'frequency': 'c', 'synset': 'cape.n.02', 'synonyms': ['cape'], 'id': 205, 'def': 'a sleeveless garment like a cloak but shorter', 'name': 'cape'}, {'frequency': 'c', 'synset': 'cappuccino.n.01', 'synonyms': ['cappuccino', 'coffee_cappuccino'], 'id': 206, 'def': 'equal parts of espresso and steamed milk', 'name': 'cappuccino'}, {'frequency': 'f', 'synset': 'car.n.01', 'synonyms': ['car_(automobile)', 'auto_(automobile)', 'automobile'], 'id': 207, 'def': 'a motor vehicle with four wheels', 'name': 'car_(automobile)'}, {'frequency': 'f', 'synset': 'car.n.02', 'synonyms': ['railcar_(part_of_a_train)', 'railway_car_(part_of_a_train)', 'railroad_car_(part_of_a_train)'], 'id': 208, 'def': 'a wheeled vehicle adapted to the rails of railroad (mark each individual railcar separately)', 'name': 'railcar_(part_of_a_train)'}, {'frequency': 'r', 'synset': 'car.n.04', 'synonyms': ['elevator_car'], 'id': 209, 'def': 'where passengers ride up and down', 'name': 'elevator_car'}, {'frequency': 'r', 'synset': 'car_battery.n.01', 'synonyms': ['car_battery', 'automobile_battery'], 'id': 210, 'def': 'a battery in a motor vehicle', 'name': 'car_battery'}, {'frequency': 'c', 'synset': 'card.n.02', 'synonyms': ['identity_card'], 'id': 211, 'def': 'a card certifying the identity of the bearer', 'name': 'identity_card'}, {'frequency': 'c', 'synset': 'card.n.03', 'synonyms': ['card'], 'id': 212, 'def': 'a rectangular piece of paper used to send messages (e.g. greetings or pictures)', 'name': 'card'}, {'frequency': 'c', 'synset': 'cardigan.n.01', 'synonyms': ['cardigan'], 'id': 213, 'def': 'knitted jacket that is fastened up the front with buttons or a zipper', 'name': 'cardigan'}, {'frequency': 'r', 'synset': 'cargo_ship.n.01', 'synonyms': ['cargo_ship', 'cargo_vessel'], 'id': 214, 'def': 'a ship designed to carry cargo', 'name': 'cargo_ship'}, {'frequency': 'r', 'synset': 'carnation.n.01', 'synonyms': ['carnation'], 'id': 215, 'def': 'plant with pink to purple-red spice-scented usually double flowers', 'name': 'carnation'}, {'frequency': 'c', 'synset': 'carriage.n.02', 'synonyms': ['horse_carriage'], 'id': 216, 'def': 'a vehicle with wheels drawn by one or more horses', 'name': 'horse_carriage'}, {'frequency': 'f', 'synset': 'carrot.n.01', 'synonyms': ['carrot'], 'id': 217, 'def': 'deep orange edible root of the cultivated carrot plant', 'name': 'carrot'}, {'frequency': 'f', 'synset': 'carryall.n.01', 'synonyms': ['tote_bag'], 'id': 218, 'def': 'a capacious bag or basket', 'name': 'tote_bag'}, {'frequency': 'c', 'synset': 'cart.n.01', 'synonyms': ['cart'], 'id': 219, 'def': 'a heavy open wagon usually having two wheels and drawn by an animal', 'name': 'cart'}, {'frequency': 'c', 'synset': 'carton.n.02', 'synonyms': ['carton'], 'id': 220, 'def': 'a container made of cardboard for holding food or drink', 'name': 'carton'}, {'frequency': 'c', 'synset': 'cash_register.n.01', 'synonyms': ['cash_register', 'register_(for_cash_transactions)'], 'id': 221, 'def': 'a cashbox with an adding machine to register transactions', 'name': 'cash_register'}, {'frequency': 'r', 'synset': 'casserole.n.01', 'synonyms': ['casserole'], 'id': 222, 'def': 'food cooked and served in a casserole', 'name': 'casserole'}, {'frequency': 'r', 'synset': 'cassette.n.01', 'synonyms': ['cassette'], 'id': 223, 'def': 'a container that holds a magnetic tape used for recording or playing sound or video', 'name': 'cassette'}, {'frequency': 'c', 'synset': 'cast.n.05', 'synonyms': ['cast', 'plaster_cast', 'plaster_bandage'], 'id': 224, 'def': 'bandage consisting of a firm covering that immobilizes broken bones while they heal', 'name': 'cast'}, {'frequency': 'f', 'synset': 'cat.n.01', 'synonyms': ['cat'], 'id': 225, 'def': 'a domestic house cat', 'name': 'cat'}, {'frequency': 'f', 'synset': 'cauliflower.n.02', 'synonyms': ['cauliflower'], 'id': 226, 'def': 'edible compact head of white undeveloped flowers', 'name': 'cauliflower'}, {'frequency': 'c', 'synset': 'cayenne.n.02', 'synonyms': ['cayenne_(spice)', 'cayenne_pepper_(spice)', 'red_pepper_(spice)'], 'id': 227, 'def': 'ground pods and seeds of pungent red peppers of the genus Capsicum', 'name': 'cayenne_(spice)'}, {'frequency': 'c', 'synset': 'cd_player.n.01', 'synonyms': ['CD_player'], 'id': 228, 'def': 'electronic equipment for playing compact discs (CDs)', 'name': 'CD_player'}, {'frequency': 'f', 'synset': 'celery.n.01', 'synonyms': ['celery'], 'id': 229, 'def': 'widely cultivated herb with aromatic leaf stalks that are eaten raw or cooked', 'name': 'celery'}, {'frequency': 'f', 'synset': 'cellular_telephone.n.01', 'synonyms': ['cellular_telephone', 'cellular_phone', 'cellphone', 'mobile_phone', 'smart_phone'], 'id': 230, 'def': 'a hand-held mobile telephone', 'name': 'cellular_telephone'}, {'frequency': 'r', 'synset': 'chain_mail.n.01', 'synonyms': ['chain_mail', 'ring_mail', 'chain_armor', 'chain_armour', 'ring_armor', 'ring_armour'], 'id': 231, 'def': '(Middle Ages) flexible armor made of interlinked metal rings', 'name': 'chain_mail'}, {'frequency': 'f', 'synset': 'chair.n.01', 'synonyms': ['chair'], 'id': 232, 'def': 'a seat for one person, with a support for the back', 'name': 'chair'}, {'frequency': 'r', 'synset': 'chaise_longue.n.01', 'synonyms': ['chaise_longue', 'chaise', 'daybed'], 'id': 233, 'def': 'a long chair; for reclining', 'name': 'chaise_longue'}, {'frequency': 'r', 'synset': 'chalice.n.01', 'synonyms': ['chalice'], 'id': 234, 'def': 'a bowl-shaped drinking vessel; especially the Eucharistic cup', 'name': 'chalice'}, {'frequency': 'f', 'synset': 'chandelier.n.01', 'synonyms': ['chandelier'], 'id': 235, 'def': 'branched lighting fixture; often ornate; hangs from the ceiling', 'name': 'chandelier'}, {'frequency': 'r', 'synset': 'chap.n.04', 'synonyms': ['chap'], 'id': 236, 'def': 'leather leggings without a seat; worn over trousers by cowboys to protect their legs', 'name': 'chap'}, {'frequency': 'r', 'synset': 'checkbook.n.01', 'synonyms': ['checkbook', 'chequebook'], 'id': 237, 'def': 'a book issued to holders of checking accounts', 'name': 'checkbook'}, {'frequency': 'r', 'synset': 'checkerboard.n.01', 'synonyms': ['checkerboard'], 'id': 238, 'def': 'a board having 64 squares of two alternating colors', 'name': 'checkerboard'}, {'frequency': 'c', 'synset': 'cherry.n.03', 'synonyms': ['cherry'], 'id': 239, 'def': 'a red fruit with a single hard stone', 'name': 'cherry'}, {'frequency': 'r', 'synset': 'chessboard.n.01', 'synonyms': ['chessboard'], 'id': 240, 'def': 'a checkerboard used to play chess', 'name': 'chessboard'}, {'frequency': 'c', 'synset': 'chicken.n.02', 'synonyms': ['chicken_(animal)'], 'id': 241, 'def': 'a domestic fowl bred for flesh or eggs', 'name': 'chicken_(animal)'}, {'frequency': 'c', 'synset': 'chickpea.n.01', 'synonyms': ['chickpea', 'garbanzo'], 'id': 242, 'def': 'the seed of the chickpea plant; usually dried', 'name': 'chickpea'}, {'frequency': 'c', 'synset': 'chili.n.02', 'synonyms': ['chili_(vegetable)', 'chili_pepper_(vegetable)', 'chilli_(vegetable)', 'chilly_(vegetable)', 'chile_(vegetable)'], 'id': 243, 'def': 'very hot and finely tapering pepper of special pungency', 'name': 'chili_(vegetable)'}, {'frequency': 'r', 'synset': 'chime.n.01', 'synonyms': ['chime', 'gong'], 'id': 244, 'def': 'an instrument consisting of a set of bells that are struck with a hammer', 'name': 'chime'}, {'frequency': 'r', 'synset': 'chinaware.n.01', 'synonyms': ['chinaware'], 'id': 245, 'def': 'dishware made of high quality porcelain', 'name': 'chinaware'}, {'frequency': 'c', 'synset': 'chip.n.04', 'synonyms': ['crisp_(potato_chip)', 'potato_chip'], 'id': 246, 'def': 'a thin crisp slice of potato fried in deep fat', 'name': 'crisp_(potato_chip)'}, {'frequency': 'r', 'synset': 'chip.n.06', 'synonyms': ['poker_chip'], 'id': 247, 'def': 'a small disk-shaped counter used to represent money when gambling', 'name': 'poker_chip'}, {'frequency': 'c', 'synset': 'chocolate_bar.n.01', 'synonyms': ['chocolate_bar'], 'id': 248, 'def': 'a bar of chocolate candy', 'name': 'chocolate_bar'}, {'frequency': 'c', 'synset': 'chocolate_cake.n.01', 'synonyms': ['chocolate_cake'], 'id': 249, 'def': 'cake containing chocolate', 'name': 'chocolate_cake'}, {'frequency': 'r', 'synset': 'chocolate_milk.n.01', 'synonyms': ['chocolate_milk'], 'id': 250, 'def': 'milk flavored with chocolate syrup', 'name': 'chocolate_milk'}, {'frequency': 'r', 'synset': 'chocolate_mousse.n.01', 'synonyms': ['chocolate_mousse'], 'id': 251, 'def': 'dessert mousse made with chocolate', 'name': 'chocolate_mousse'}, {'frequency': 'f', 'synset': 'choker.n.03', 'synonyms': ['choker', 'collar', 'neckband'], 'id': 252, 'def': 'shirt collar, animal collar, or tight-fitting necklace', 'name': 'choker'}, {'frequency': 'f', 'synset': 'chopping_board.n.01', 'synonyms': ['chopping_board', 'cutting_board', 'chopping_block'], 'id': 253, 'def': 'a wooden board where meats or vegetables can be cut', 'name': 'chopping_board'}, {'frequency': 'f', 'synset': 'chopstick.n.01', 'synonyms': ['chopstick'], 'id': 254, 'def': 'one of a pair of slender sticks used as oriental tableware to eat food with', 'name': 'chopstick'}, {'frequency': 'f', 'synset': 'christmas_tree.n.05', 'synonyms': ['Christmas_tree'], 'id': 255, 'def': 'an ornamented evergreen used as a Christmas decoration', 'name': 'Christmas_tree'}, {'frequency': 'c', 'synset': 'chute.n.02', 'synonyms': ['slide'], 'id': 256, 'def': 'sloping channel through which things can descend', 'name': 'slide'}, {'frequency': 'r', 'synset': 'cider.n.01', 'synonyms': ['cider', 'cyder'], 'id': 257, 'def': 'a beverage made from juice pressed from apples', 'name': 'cider'}, {'frequency': 'r', 'synset': 'cigar_box.n.01', 'synonyms': ['cigar_box'], 'id': 258, 'def': 'a box for holding cigars', 'name': 'cigar_box'}, {'frequency': 'f', 'synset': 'cigarette.n.01', 'synonyms': ['cigarette'], 'id': 259, 'def': 'finely ground tobacco wrapped in paper; for smoking', 'name': 'cigarette'}, {'frequency': 'c', 'synset': 'cigarette_case.n.01', 'synonyms': ['cigarette_case', 'cigarette_pack'], 'id': 260, 'def': 'a small flat case for holding cigarettes', 'name': 'cigarette_case'}, {'frequency': 'f', 'synset': 'cistern.n.02', 'synonyms': ['cistern', 'water_tank'], 'id': 261, 'def': 'a tank that holds the water used to flush a toilet', 'name': 'cistern'}, {'frequency': 'r', 'synset': 'clarinet.n.01', 'synonyms': ['clarinet'], 'id': 262, 'def': 'a single-reed instrument with a straight tube', 'name': 'clarinet'}, {'frequency': 'c', 'synset': 'clasp.n.01', 'synonyms': ['clasp'], 'id': 263, 'def': 'a fastener (as a buckle or hook) that is used to hold two things together', 'name': 'clasp'}, {'frequency': 'c', 'synset': 'cleansing_agent.n.01', 'synonyms': ['cleansing_agent', 'cleanser', 'cleaner'], 'id': 264, 'def': 'a preparation used in cleaning something', 'name': 'cleansing_agent'}, {'frequency': 'r', 'synset': 'cleat.n.02', 'synonyms': ['cleat_(for_securing_rope)'], 'id': 265, 'def': 'a fastener (usually with two projecting horns) around which a rope can be secured', 'name': 'cleat_(for_securing_rope)'}, {'frequency': 'r', 'synset': 'clementine.n.01', 'synonyms': ['clementine'], 'id': 266, 'def': 'a variety of mandarin orange', 'name': 'clementine'}, {'frequency': 'c', 'synset': 'clip.n.03', 'synonyms': ['clip'], 'id': 267, 'def': 'any of various small fasteners used to hold loose articles together', 'name': 'clip'}, {'frequency': 'c', 'synset': 'clipboard.n.01', 'synonyms': ['clipboard'], 'id': 268, 'def': 'a small writing board with a clip at the top for holding papers', 'name': 'clipboard'}, {'frequency': 'r', 'synset': 'clipper.n.03', 'synonyms': ['clippers_(for_plants)'], 'id': 269, 'def': 'shears for cutting grass or shrubbery (often used in the plural)', 'name': 'clippers_(for_plants)'}, {'frequency': 'r', 'synset': 'cloak.n.02', 'synonyms': ['cloak'], 'id': 270, 'def': 'a loose outer garment', 'name': 'cloak'}, {'frequency': 'f', 'synset': 'clock.n.01', 'synonyms': ['clock', 'timepiece', 'timekeeper'], 'id': 271, 'def': 'a timepiece that shows the time of day', 'name': 'clock'}, {'frequency': 'f', 'synset': 'clock_tower.n.01', 'synonyms': ['clock_tower'], 'id': 272, 'def': 'a tower with a large clock visible high up on an outside face', 'name': 'clock_tower'}, {'frequency': 'c', 'synset': 'clothes_hamper.n.01', 'synonyms': ['clothes_hamper', 'laundry_basket', 'clothes_basket'], 'id': 273, 'def': 'a hamper that holds dirty clothes to be washed or wet clothes to be dried', 'name': 'clothes_hamper'}, {'frequency': 'c', 'synset': 'clothespin.n.01', 'synonyms': ['clothespin', 'clothes_peg'], 'id': 274, 'def': 'wood or plastic fastener; for holding clothes on a clothesline', 'name': 'clothespin'}, {'frequency': 'r', 'synset': 'clutch_bag.n.01', 'synonyms': ['clutch_bag'], 'id': 275, 'def': "a woman's strapless purse that is carried in the hand", 'name': 'clutch_bag'}, {'frequency': 'f', 'synset': 'coaster.n.03', 'synonyms': ['coaster'], 'id': 276, 'def': 'a covering (plate or mat) that protects the surface of a table', 'name': 'coaster'}, {'frequency': 'f', 'synset': 'coat.n.01', 'synonyms': ['coat'], 'id': 277, 'def': 'an outer garment that has sleeves and covers the body from shoulder down', 'name': 'coat'}, {'frequency': 'c', 'synset': 'coat_hanger.n.01', 'synonyms': ['coat_hanger', 'clothes_hanger', 'dress_hanger'], 'id': 278, 'def': "a hanger that is shaped like a person's shoulders", 'name': 'coat_hanger'}, {'frequency': 'c', 'synset': 'coatrack.n.01', 'synonyms': ['coatrack', 'hatrack'], 'id': 279, 'def': 'a rack with hooks for temporarily holding coats and hats', 'name': 'coatrack'}, {'frequency': 'c', 'synset': 'cock.n.04', 'synonyms': ['cock', 'rooster'], 'id': 280, 'def': 'adult male chicken', 'name': 'cock'}, {'frequency': 'r', 'synset': 'cockroach.n.01', 'synonyms': ['cockroach'], 'id': 281, 'def': 'any of numerous chiefly nocturnal insects; some are domestic pests', 'name': 'cockroach'}, {'frequency': 'r', 'synset': 'cocoa.n.01', 'synonyms': ['cocoa_(beverage)', 'hot_chocolate_(beverage)', 'drinking_chocolate'], 'id': 282, 'def': 'a beverage made from cocoa powder and milk and sugar; usually drunk hot', 'name': 'cocoa_(beverage)'}, {'frequency': 'c', 'synset': 'coconut.n.02', 'synonyms': ['coconut', 'cocoanut'], 'id': 283, 'def': 'large hard-shelled brown oval nut with a fibrous husk', 'name': 'coconut'}, {'frequency': 'f', 'synset': 'coffee_maker.n.01', 'synonyms': ['coffee_maker', 'coffee_machine'], 'id': 284, 'def': 'a kitchen appliance for brewing coffee automatically', 'name': 'coffee_maker'}, {'frequency': 'f', 'synset': 'coffee_table.n.01', 'synonyms': ['coffee_table', 'cocktail_table'], 'id': 285, 'def': 'low table where magazines can be placed and coffee or cocktails are served', 'name': 'coffee_table'}, {'frequency': 'c', 'synset': 'coffeepot.n.01', 'synonyms': ['coffeepot'], 'id': 286, 'def': 'tall pot in which coffee is brewed', 'name': 'coffeepot'}, {'frequency': 'r', 'synset': 'coil.n.05', 'synonyms': ['coil'], 'id': 287, 'def': 'tubing that is wound in a spiral', 'name': 'coil'}, {'frequency': 'c', 'synset': 'coin.n.01', 'synonyms': ['coin'], 'id': 288, 'def': 'a flat metal piece (usually a disc) used as money', 'name': 'coin'}, {'frequency': 'c', 'synset': 'colander.n.01', 'synonyms': ['colander', 'cullender'], 'id': 289, 'def': 'bowl-shaped strainer; used to wash or drain foods', 'name': 'colander'}, {'frequency': 'c', 'synset': 'coleslaw.n.01', 'synonyms': ['coleslaw', 'slaw'], 'id': 290, 'def': 'basically shredded cabbage', 'name': 'coleslaw'}, {'frequency': 'r', 'synset': 'coloring_material.n.01', 'synonyms': ['coloring_material', 'colouring_material'], 'id': 291, 'def': 'any material used for its color', 'name': 'coloring_material'}, {'frequency': 'r', 'synset': 'combination_lock.n.01', 'synonyms': ['combination_lock'], 'id': 292, 'def': 'lock that can be opened only by turning dials in a special sequence', 'name': 'combination_lock'}, {'frequency': 'c', 'synset': 'comforter.n.04', 'synonyms': ['pacifier', 'teething_ring'], 'id': 293, 'def': 'device used for an infant to suck or bite on', 'name': 'pacifier'}, {'frequency': 'r', 'synset': 'comic_book.n.01', 'synonyms': ['comic_book'], 'id': 294, 'def': 'a magazine devoted to comic strips', 'name': 'comic_book'}, {'frequency': 'r', 'synset': 'compass.n.01', 'synonyms': ['compass'], 'id': 295, 'def': 'navigational instrument for finding directions', 'name': 'compass'}, {'frequency': 'f', 'synset': 'computer_keyboard.n.01', 'synonyms': ['computer_keyboard', 'keyboard_(computer)'], 'id': 296, 'def': 'a keyboard that is a data input device for computers', 'name': 'computer_keyboard'}, {'frequency': 'f', 'synset': 'condiment.n.01', 'synonyms': ['condiment'], 'id': 297, 'def': 'a preparation (a sauce or relish or spice) to enhance flavor or enjoyment', 'name': 'condiment'}, {'frequency': 'f', 'synset': 'cone.n.01', 'synonyms': ['cone', 'traffic_cone'], 'id': 298, 'def': 'a cone-shaped object used to direct traffic', 'name': 'cone'}, {'frequency': 'f', 'synset': 'control.n.09', 'synonyms': ['control', 'controller'], 'id': 299, 'def': 'a mechanism that controls the operation of a machine', 'name': 'control'}, {'frequency': 'r', 'synset': 'convertible.n.01', 'synonyms': ['convertible_(automobile)'], 'id': 300, 'def': 'a car that has top that can be folded or removed', 'name': 'convertible_(automobile)'}, {'frequency': 'r', 'synset': 'convertible.n.03', 'synonyms': ['sofa_bed'], 'id': 301, 'def': 'a sofa that can be converted into a bed', 'name': 'sofa_bed'}, {'frequency': 'r', 'synset': 'cooker.n.01', 'synonyms': ['cooker'], 'id': 302, 'def': 'a utensil for cooking', 'name': 'cooker'}, {'frequency': 'f', 'synset': 'cookie.n.01', 'synonyms': ['cookie', 'cooky', 'biscuit_(cookie)'], 'id': 303, 'def': "any of various small flat sweet cakes (`biscuit' is the British term)", 'name': 'cookie'}, {'frequency': 'r', 'synset': 'cooking_utensil.n.01', 'synonyms': ['cooking_utensil'], 'id': 304, 'def': 'a kitchen utensil made of material that does not melt easily; used for cooking', 'name': 'cooking_utensil'}, {'frequency': 'f', 'synset': 'cooler.n.01', 'synonyms': ['cooler_(for_food)', 'ice_chest'], 'id': 305, 'def': 'an insulated box for storing food often with ice', 'name': 'cooler_(for_food)'}, {'frequency': 'f', 'synset': 'cork.n.04', 'synonyms': ['cork_(bottle_plug)', 'bottle_cork'], 'id': 306, 'def': 'the plug in the mouth of a bottle (especially a wine bottle)', 'name': 'cork_(bottle_plug)'}, {'frequency': 'r', 'synset': 'corkboard.n.01', 'synonyms': ['corkboard'], 'id': 307, 'def': 'a sheet consisting of cork granules', 'name': 'corkboard'}, {'frequency': 'c', 'synset': 'corkscrew.n.01', 'synonyms': ['corkscrew', 'bottle_screw'], 'id': 308, 'def': 'a bottle opener that pulls corks', 'name': 'corkscrew'}, {'frequency': 'f', 'synset': 'corn.n.03', 'synonyms': ['edible_corn', 'corn', 'maize'], 'id': 309, 'def': 'ears or kernels of corn that can be prepared and served for human food (only mark individual ears or kernels)', 'name': 'edible_corn'}, {'frequency': 'r', 'synset': 'cornbread.n.01', 'synonyms': ['cornbread'], 'id': 310, 'def': 'bread made primarily of cornmeal', 'name': 'cornbread'}, {'frequency': 'c', 'synset': 'cornet.n.01', 'synonyms': ['cornet', 'horn', 'trumpet'], 'id': 311, 'def': 'a brass musical instrument with a narrow tube and a flared bell and many valves', 'name': 'cornet'}, {'frequency': 'c', 'synset': 'cornice.n.01', 'synonyms': ['cornice', 'valance', 'valance_board', 'pelmet'], 'id': 312, 'def': 'a decorative framework to conceal curtain fixtures at the top of a window casing', 'name': 'cornice'}, {'frequency': 'r', 'synset': 'cornmeal.n.01', 'synonyms': ['cornmeal'], 'id': 313, 'def': 'coarsely ground corn', 'name': 'cornmeal'}, {'frequency': 'c', 'synset': 'corset.n.01', 'synonyms': ['corset', 'girdle'], 'id': 314, 'def': "a woman's close-fitting foundation garment", 'name': 'corset'}, {'frequency': 'c', 'synset': 'costume.n.04', 'synonyms': ['costume'], 'id': 315, 'def': 'the attire characteristic of a country or a time or a social class', 'name': 'costume'}, {'frequency': 'r', 'synset': 'cougar.n.01', 'synonyms': ['cougar', 'puma', 'catamount', 'mountain_lion', 'panther'], 'id': 316, 'def': 'large American feline resembling a lion', 'name': 'cougar'}, {'frequency': 'r', 'synset': 'coverall.n.01', 'synonyms': ['coverall'], 'id': 317, 'def': 'a loose-fitting protective garment that is worn over other clothing', 'name': 'coverall'}, {'frequency': 'c', 'synset': 'cowbell.n.01', 'synonyms': ['cowbell'], 'id': 318, 'def': 'a bell hung around the neck of cow so that the cow can be easily located', 'name': 'cowbell'}, {'frequency': 'f', 'synset': 'cowboy_hat.n.01', 'synonyms': ['cowboy_hat', 'ten-gallon_hat'], 'id': 319, 'def': 'a hat with a wide brim and a soft crown; worn by American ranch hands', 'name': 'cowboy_hat'}, {'frequency': 'c', 'synset': 'crab.n.01', 'synonyms': ['crab_(animal)'], 'id': 320, 'def': 'decapod having eyes on short stalks and a broad flattened shell and pincers', 'name': 'crab_(animal)'}, {'frequency': 'r', 'synset': 'crab.n.05', 'synonyms': ['crabmeat'], 'id': 321, 'def': 'the edible flesh of any of various crabs', 'name': 'crabmeat'}, {'frequency': 'c', 'synset': 'cracker.n.01', 'synonyms': ['cracker'], 'id': 322, 'def': 'a thin crisp wafer', 'name': 'cracker'}, {'frequency': 'r', 'synset': 'crape.n.01', 'synonyms': ['crape', 'crepe', 'French_pancake'], 'id': 323, 'def': 'small very thin pancake', 'name': 'crape'}, {'frequency': 'f', 'synset': 'crate.n.01', 'synonyms': ['crate'], 'id': 324, 'def': 'a rugged box (usually made of wood); used for shipping', 'name': 'crate'}, {'frequency': 'c', 'synset': 'crayon.n.01', 'synonyms': ['crayon', 'wax_crayon'], 'id': 325, 'def': 'writing or drawing implement made of a colored stick of composition wax', 'name': 'crayon'}, {'frequency': 'r', 'synset': 'cream_pitcher.n.01', 'synonyms': ['cream_pitcher'], 'id': 326, 'def': 'a small pitcher for serving cream', 'name': 'cream_pitcher'}, {'frequency': 'c', 'synset': 'crescent_roll.n.01', 'synonyms': ['crescent_roll', 'croissant'], 'id': 327, 'def': 'very rich flaky crescent-shaped roll', 'name': 'crescent_roll'}, {'frequency': 'c', 'synset': 'crib.n.01', 'synonyms': ['crib', 'cot'], 'id': 328, 'def': 'baby bed with high sides made of slats', 'name': 'crib'}, {'frequency': 'c', 'synset': 'crock.n.03', 'synonyms': ['crock_pot', 'earthenware_jar'], 'id': 329, 'def': 'an earthen jar (made of baked clay) or a modern electric crockpot', 'name': 'crock_pot'}, {'frequency': 'f', 'synset': 'crossbar.n.01', 'synonyms': ['crossbar'], 'id': 330, 'def': 'a horizontal bar that goes across something', 'name': 'crossbar'}, {'frequency': 'r', 'synset': 'crouton.n.01', 'synonyms': ['crouton'], 'id': 331, 'def': 'a small piece of toasted or fried bread; served in soup or salads', 'name': 'crouton'}, {'frequency': 'c', 'synset': 'crow.n.01', 'synonyms': ['crow'], 'id': 332, 'def': 'black birds having a raucous call', 'name': 'crow'}, {'frequency': 'r', 'synset': 'crowbar.n.01', 'synonyms': ['crowbar', 'wrecking_bar', 'pry_bar'], 'id': 333, 'def': 'a heavy iron lever with one end forged into a wedge', 'name': 'crowbar'}, {'frequency': 'c', 'synset': 'crown.n.04', 'synonyms': ['crown'], 'id': 334, 'def': 'an ornamental jeweled headdress signifying sovereignty', 'name': 'crown'}, {'frequency': 'c', 'synset': 'crucifix.n.01', 'synonyms': ['crucifix'], 'id': 335, 'def': 'representation of the cross on which Jesus died', 'name': 'crucifix'}, {'frequency': 'c', 'synset': 'cruise_ship.n.01', 'synonyms': ['cruise_ship', 'cruise_liner'], 'id': 336, 'def': 'a passenger ship used commercially for pleasure cruises', 'name': 'cruise_ship'}, {'frequency': 'c', 'synset': 'cruiser.n.01', 'synonyms': ['police_cruiser', 'patrol_car', 'police_car', 'squad_car'], 'id': 337, 'def': 'a car in which policemen cruise the streets', 'name': 'police_cruiser'}, {'frequency': 'f', 'synset': 'crumb.n.03', 'synonyms': ['crumb'], 'id': 338, 'def': 'small piece of e.g. bread or cake', 'name': 'crumb'}, {'frequency': 'c', 'synset': 'crutch.n.01', 'synonyms': ['crutch'], 'id': 339, 'def': 'a wooden or metal staff that fits under the armpit and reaches to the ground', 'name': 'crutch'}, {'frequency': 'c', 'synset': 'cub.n.03', 'synonyms': ['cub_(animal)'], 'id': 340, 'def': 'the young of certain carnivorous mammals such as the bear or wolf or lion', 'name': 'cub_(animal)'}, {'frequency': 'c', 'synset': 'cube.n.05', 'synonyms': ['cube', 'square_block'], 'id': 341, 'def': 'a block in the (approximate) shape of a cube', 'name': 'cube'}, {'frequency': 'f', 'synset': 'cucumber.n.02', 'synonyms': ['cucumber', 'cuke'], 'id': 342, 'def': 'cylindrical green fruit with thin green rind and white flesh eaten as a vegetable', 'name': 'cucumber'}, {'frequency': 'c', 'synset': 'cufflink.n.01', 'synonyms': ['cufflink'], 'id': 343, 'def': 'jewelry consisting of linked buttons used to fasten the cuffs of a shirt', 'name': 'cufflink'}, {'frequency': 'f', 'synset': 'cup.n.01', 'synonyms': ['cup'], 'id': 344, 'def': 'a small open container usually used for drinking; usually has a handle', 'name': 'cup'}, {'frequency': 'c', 'synset': 'cup.n.08', 'synonyms': ['trophy_cup'], 'id': 345, 'def': 'a metal award or cup-shaped vessel with handles that is awarded as a trophy to a competition winner', 'name': 'trophy_cup'}, {'frequency': 'f', 'synset': 'cupboard.n.01', 'synonyms': ['cupboard', 'closet'], 'id': 346, 'def': 'a small room (or recess) or cabinet used for storage space', 'name': 'cupboard'}, {'frequency': 'f', 'synset': 'cupcake.n.01', 'synonyms': ['cupcake'], 'id': 347, 'def': 'small cake baked in a muffin tin', 'name': 'cupcake'}, {'frequency': 'r', 'synset': 'curler.n.01', 'synonyms': ['hair_curler', 'hair_roller', 'hair_crimper'], 'id': 348, 'def': 'a cylindrical tube around which the hair is wound to curl it', 'name': 'hair_curler'}, {'frequency': 'r', 'synset': 'curling_iron.n.01', 'synonyms': ['curling_iron'], 'id': 349, 'def': 'a cylindrical home appliance that heats hair that has been curled around it', 'name': 'curling_iron'}, {'frequency': 'f', 'synset': 'curtain.n.01', 'synonyms': ['curtain', 'drapery'], 'id': 350, 'def': 'hanging cloth used as a blind (especially for a window)', 'name': 'curtain'}, {'frequency': 'f', 'synset': 'cushion.n.03', 'synonyms': ['cushion'], 'id': 351, 'def': 'a soft bag filled with air or padding such as feathers or foam rubber', 'name': 'cushion'}, {'frequency': 'r', 'synset': 'cylinder.n.04', 'synonyms': ['cylinder'], 'id': 352, 'def': 'a cylindrical container', 'name': 'cylinder'}, {'frequency': 'r', 'synset': 'cymbal.n.01', 'synonyms': ['cymbal'], 'id': 353, 'def': 'a percussion instrument consisting of a concave brass disk', 'name': 'cymbal'}, {'frequency': 'r', 'synset': 'dagger.n.01', 'synonyms': ['dagger'], 'id': 354, 'def': 'a short knife with a pointed blade used for piercing or stabbing', 'name': 'dagger'}, {'frequency': 'r', 'synset': 'dalmatian.n.02', 'synonyms': ['dalmatian'], 'id': 355, 'def': 'a large breed having a smooth white coat with black or brown spots', 'name': 'dalmatian'}, {'frequency': 'c', 'synset': 'dartboard.n.01', 'synonyms': ['dartboard'], 'id': 356, 'def': 'a circular board of wood or cork used as the target in the game of darts', 'name': 'dartboard'}, {'frequency': 'r', 'synset': 'date.n.08', 'synonyms': ['date_(fruit)'], 'id': 357, 'def': 'sweet edible fruit of the date palm with a single long woody seed', 'name': 'date_(fruit)'}, {'frequency': 'f', 'synset': 'deck_chair.n.01', 'synonyms': ['deck_chair', 'beach_chair'], 'id': 358, 'def': 'a folding chair for use outdoors; a wooden frame supports a length of canvas', 'name': 'deck_chair'}, {'frequency': 'c', 'synset': 'deer.n.01', 'synonyms': ['deer', 'cervid'], 'id': 359, 'def': "distinguished from Bovidae by the male's having solid deciduous antlers", 'name': 'deer'}, {'frequency': 'c', 'synset': 'dental_floss.n.01', 'synonyms': ['dental_floss', 'floss'], 'id': 360, 'def': 'a soft thread for cleaning the spaces between the teeth', 'name': 'dental_floss'}, {'frequency': 'f', 'synset': 'desk.n.01', 'synonyms': ['desk'], 'id': 361, 'def': 'a piece of furniture with a writing surface and usually drawers or other compartments', 'name': 'desk'}, {'frequency': 'r', 'synset': 'detergent.n.01', 'synonyms': ['detergent'], 'id': 362, 'def': 'a surface-active chemical widely used in industry and laundering', 'name': 'detergent'}, {'frequency': 'c', 'synset': 'diaper.n.01', 'synonyms': ['diaper'], 'id': 363, 'def': 'garment consisting of a folded cloth drawn up between the legs and fastened at the waist', 'name': 'diaper'}, {'frequency': 'r', 'synset': 'diary.n.01', 'synonyms': ['diary', 'journal'], 'id': 364, 'def': 'yearly planner book', 'name': 'diary'}, {'frequency': 'r', 'synset': 'die.n.01', 'synonyms': ['die', 'dice'], 'id': 365, 'def': 'a small cube with 1 to 6 spots on the six faces; used in gambling', 'name': 'die'}, {'frequency': 'r', 'synset': 'dinghy.n.01', 'synonyms': ['dinghy', 'dory', 'rowboat'], 'id': 366, 'def': 'a small boat of shallow draft with seats and oars with which it is propelled', 'name': 'dinghy'}, {'frequency': 'f', 'synset': 'dining_table.n.01', 'synonyms': ['dining_table'], 'id': 367, 'def': 'a table at which meals are served', 'name': 'dining_table'}, {'frequency': 'r', 'synset': 'dinner_jacket.n.01', 'synonyms': ['tux', 'tuxedo'], 'id': 368, 'def': 'semiformal evening dress for men', 'name': 'tux'}, {'frequency': 'f', 'synset': 'dish.n.01', 'synonyms': ['dish'], 'id': 369, 'def': 'a piece of dishware normally used as a container for holding or serving food', 'name': 'dish'}, {'frequency': 'c', 'synset': 'dish.n.05', 'synonyms': ['dish_antenna'], 'id': 370, 'def': 'directional antenna consisting of a parabolic reflector', 'name': 'dish_antenna'}, {'frequency': 'c', 'synset': 'dishrag.n.01', 'synonyms': ['dishrag', 'dishcloth'], 'id': 371, 'def': 'a cloth for washing dishes or cleaning in general', 'name': 'dishrag'}, {'frequency': 'f', 'synset': 'dishtowel.n.01', 'synonyms': ['dishtowel', 'tea_towel'], 'id': 372, 'def': 'a towel for drying dishes', 'name': 'dishtowel'}, {'frequency': 'f', 'synset': 'dishwasher.n.01', 'synonyms': ['dishwasher', 'dishwashing_machine'], 'id': 373, 'def': 'a machine for washing dishes', 'name': 'dishwasher'}, {'frequency': 'r', 'synset': 'dishwasher_detergent.n.01', 'synonyms': ['dishwasher_detergent', 'dishwashing_detergent', 'dishwashing_liquid', 'dishsoap'], 'id': 374, 'def': 'dishsoap or dish detergent designed for use in dishwashers', 'name': 'dishwasher_detergent'}, {'frequency': 'f', 'synset': 'dispenser.n.01', 'synonyms': ['dispenser'], 'id': 375, 'def': 'a container so designed that the contents can be used in prescribed amounts', 'name': 'dispenser'}, {'frequency': 'r', 'synset': 'diving_board.n.01', 'synonyms': ['diving_board'], 'id': 376, 'def': 'a springboard from which swimmers can dive', 'name': 'diving_board'}, {'frequency': 'f', 'synset': 'dixie_cup.n.01', 'synonyms': ['Dixie_cup', 'paper_cup'], 'id': 377, 'def': 'a disposable cup made of paper; for holding drinks', 'name': 'Dixie_cup'}, {'frequency': 'f', 'synset': 'dog.n.01', 'synonyms': ['dog'], 'id': 378, 'def': 'a common domesticated dog', 'name': 'dog'}, {'frequency': 'f', 'synset': 'dog_collar.n.01', 'synonyms': ['dog_collar'], 'id': 379, 'def': 'a collar for a dog', 'name': 'dog_collar'}, {'frequency': 'f', 'synset': 'doll.n.01', 'synonyms': ['doll'], 'id': 380, 'def': 'a toy replica of a HUMAN (NOT AN ANIMAL)', 'name': 'doll'}, {'frequency': 'r', 'synset': 'dollar.n.02', 'synonyms': ['dollar', 'dollar_bill', 'one_dollar_bill'], 'id': 381, 'def': 'a piece of paper money worth one dollar', 'name': 'dollar'}, {'frequency': 'r', 'synset': 'dollhouse.n.01', 'synonyms': ['dollhouse', "doll's_house"], 'id': 382, 'def': "a house so small that it is likened to a child's plaything", 'name': 'dollhouse'}, {'frequency': 'c', 'synset': 'dolphin.n.02', 'synonyms': ['dolphin'], 'id': 383, 'def': 'any of various small toothed whales with a beaklike snout; larger than porpoises', 'name': 'dolphin'}, {'frequency': 'c', 'synset': 'domestic_ass.n.01', 'synonyms': ['domestic_ass', 'donkey'], 'id': 384, 'def': 'domestic beast of burden descended from the African wild ass; patient but stubborn', 'name': 'domestic_ass'}, {'frequency': 'f', 'synset': 'doorknob.n.01', 'synonyms': ['doorknob', 'doorhandle'], 'id': 385, 'def': "a knob used to open a door (often called `doorhandle' in Great Britain)", 'name': 'doorknob'}, {'frequency': 'c', 'synset': 'doormat.n.02', 'synonyms': ['doormat', 'welcome_mat'], 'id': 386, 'def': 'a mat placed outside an exterior door for wiping the shoes before entering', 'name': 'doormat'}, {'frequency': 'f', 'synset': 'doughnut.n.02', 'synonyms': ['doughnut', 'donut'], 'id': 387, 'def': 'a small ring-shaped friedcake', 'name': 'doughnut'}, {'frequency': 'r', 'synset': 'dove.n.01', 'synonyms': ['dove'], 'id': 388, 'def': 'any of numerous small pigeons', 'name': 'dove'}, {'frequency': 'r', 'synset': 'dragonfly.n.01', 'synonyms': ['dragonfly'], 'id': 389, 'def': 'slender-bodied non-stinging insect having iridescent wings that are outspread at rest', 'name': 'dragonfly'}, {'frequency': 'f', 'synset': 'drawer.n.01', 'synonyms': ['drawer'], 'id': 390, 'def': 'a boxlike container in a piece of furniture; made so as to slide in and out', 'name': 'drawer'}, {'frequency': 'c', 'synset': 'drawers.n.01', 'synonyms': ['underdrawers', 'boxers', 'boxershorts'], 'id': 391, 'def': 'underpants worn by men', 'name': 'underdrawers'}, {'frequency': 'f', 'synset': 'dress.n.01', 'synonyms': ['dress', 'frock'], 'id': 392, 'def': 'a one-piece garment for a woman; has skirt and bodice', 'name': 'dress'}, {'frequency': 'c', 'synset': 'dress_hat.n.01', 'synonyms': ['dress_hat', 'high_hat', 'opera_hat', 'silk_hat', 'top_hat'], 'id': 393, 'def': "a man's hat with a tall crown; usually covered with silk or with beaver fur", 'name': 'dress_hat'}, {'frequency': 'f', 'synset': 'dress_suit.n.01', 'synonyms': ['dress_suit'], 'id': 394, 'def': 'formalwear consisting of full evening dress for men', 'name': 'dress_suit'}, {'frequency': 'f', 'synset': 'dresser.n.05', 'synonyms': ['dresser'], 'id': 395, 'def': 'a cabinet with shelves', 'name': 'dresser'}, {'frequency': 'c', 'synset': 'drill.n.01', 'synonyms': ['drill'], 'id': 396, 'def': 'a tool with a sharp rotating point for making holes in hard materials', 'name': 'drill'}, {'frequency': 'r', 'synset': 'drone.n.04', 'synonyms': ['drone'], 'id': 397, 'def': 'an aircraft without a pilot that is operated by remote control', 'name': 'drone'}, {'frequency': 'r', 'synset': 'dropper.n.01', 'synonyms': ['dropper', 'eye_dropper'], 'id': 398, 'def': 'pipet consisting of a small tube with a vacuum bulb at one end for drawing liquid in and releasing it a drop at a time', 'name': 'dropper'}, {'frequency': 'c', 'synset': 'drum.n.01', 'synonyms': ['drum_(musical_instrument)'], 'id': 399, 'def': 'a musical percussion instrument; usually consists of a hollow cylinder with a membrane stretched across each end', 'name': 'drum_(musical_instrument)'}, {'frequency': 'r', 'synset': 'drumstick.n.02', 'synonyms': ['drumstick'], 'id': 400, 'def': 'a stick used for playing a drum', 'name': 'drumstick'}, {'frequency': 'f', 'synset': 'duck.n.01', 'synonyms': ['duck'], 'id': 401, 'def': 'small web-footed broad-billed swimming bird', 'name': 'duck'}, {'frequency': 'c', 'synset': 'duckling.n.02', 'synonyms': ['duckling'], 'id': 402, 'def': 'young duck', 'name': 'duckling'}, {'frequency': 'c', 'synset': 'duct_tape.n.01', 'synonyms': ['duct_tape'], 'id': 403, 'def': 'a wide silvery adhesive tape', 'name': 'duct_tape'}, {'frequency': 'f', 'synset': 'duffel_bag.n.01', 'synonyms': ['duffel_bag', 'duffle_bag', 'duffel', 'duffle'], 'id': 404, 'def': 'a large cylindrical bag of heavy cloth (does not include suitcases)', 'name': 'duffel_bag'}, {'frequency': 'r', 'synset': 'dumbbell.n.01', 'synonyms': ['dumbbell'], 'id': 405, 'def': 'an exercising weight with two ball-like ends connected by a short handle', 'name': 'dumbbell'}, {'frequency': 'c', 'synset': 'dumpster.n.01', 'synonyms': ['dumpster'], 'id': 406, 'def': 'a container designed to receive and transport and dump waste', 'name': 'dumpster'}, {'frequency': 'r', 'synset': 'dustpan.n.02', 'synonyms': ['dustpan'], 'id': 407, 'def': 'a short-handled receptacle into which dust can be swept', 'name': 'dustpan'}, {'frequency': 'c', 'synset': 'eagle.n.01', 'synonyms': ['eagle'], 'id': 408, 'def': 'large birds of prey noted for their broad wings and strong soaring flight', 'name': 'eagle'}, {'frequency': 'f', 'synset': 'earphone.n.01', 'synonyms': ['earphone', 'earpiece', 'headphone'], 'id': 409, 'def': 'device for listening to audio that is held over or inserted into the ear', 'name': 'earphone'}, {'frequency': 'r', 'synset': 'earplug.n.01', 'synonyms': ['earplug'], 'id': 410, 'def': 'a soft plug that is inserted into the ear canal to block sound', 'name': 'earplug'}, {'frequency': 'f', 'synset': 'earring.n.01', 'synonyms': ['earring'], 'id': 411, 'def': 'jewelry to ornament the ear', 'name': 'earring'}, {'frequency': 'c', 'synset': 'easel.n.01', 'synonyms': ['easel'], 'id': 412, 'def': "an upright tripod for displaying something (usually an artist's canvas)", 'name': 'easel'}, {'frequency': 'r', 'synset': 'eclair.n.01', 'synonyms': ['eclair'], 'id': 413, 'def': 'oblong cream puff', 'name': 'eclair'}, {'frequency': 'r', 'synset': 'eel.n.01', 'synonyms': ['eel'], 'id': 414, 'def': 'an elongate fish with fatty flesh', 'name': 'eel'}, {'frequency': 'f', 'synset': 'egg.n.02', 'synonyms': ['egg', 'eggs'], 'id': 415, 'def': 'oval reproductive body of a fowl (especially a hen) used as food', 'name': 'egg'}, {'frequency': 'r', 'synset': 'egg_roll.n.01', 'synonyms': ['egg_roll', 'spring_roll'], 'id': 416, 'def': 'minced vegetables and meat wrapped in a pancake and fried', 'name': 'egg_roll'}, {'frequency': 'c', 'synset': 'egg_yolk.n.01', 'synonyms': ['egg_yolk', 'yolk_(egg)'], 'id': 417, 'def': 'the yellow spherical part of an egg', 'name': 'egg_yolk'}, {'frequency': 'c', 'synset': 'eggbeater.n.02', 'synonyms': ['eggbeater', 'eggwhisk'], 'id': 418, 'def': 'a mixer for beating eggs or whipping cream', 'name': 'eggbeater'}, {'frequency': 'c', 'synset': 'eggplant.n.01', 'synonyms': ['eggplant', 'aubergine'], 'id': 419, 'def': 'egg-shaped vegetable having a shiny skin typically dark purple', 'name': 'eggplant'}, {'frequency': 'r', 'synset': 'electric_chair.n.01', 'synonyms': ['electric_chair'], 'id': 420, 'def': 'a chair-shaped instrument of execution by electrocution', 'name': 'electric_chair'}, {'frequency': 'f', 'synset': 'electric_refrigerator.n.01', 'synonyms': ['refrigerator'], 'id': 421, 'def': 'a refrigerator in which the coolant is pumped around by an electric motor', 'name': 'refrigerator'}, {'frequency': 'f', 'synset': 'elephant.n.01', 'synonyms': ['elephant'], 'id': 422, 'def': 'a common elephant', 'name': 'elephant'}, {'frequency': 'c', 'synset': 'elk.n.01', 'synonyms': ['elk', 'moose'], 'id': 423, 'def': 'large northern deer with enormous flattened antlers in the male', 'name': 'elk'}, {'frequency': 'c', 'synset': 'envelope.n.01', 'synonyms': ['envelope'], 'id': 424, 'def': 'a flat (usually rectangular) container for a letter, thin package, etc.', 'name': 'envelope'}, {'frequency': 'c', 'synset': 'eraser.n.01', 'synonyms': ['eraser'], 'id': 425, 'def': 'an implement used to erase something', 'name': 'eraser'}, {'frequency': 'r', 'synset': 'escargot.n.01', 'synonyms': ['escargot'], 'id': 426, 'def': 'edible snail usually served in the shell with a sauce of melted butter and garlic', 'name': 'escargot'}, {'frequency': 'r', 'synset': 'eyepatch.n.01', 'synonyms': ['eyepatch'], 'id': 427, 'def': 'a protective cloth covering for an injured eye', 'name': 'eyepatch'}, {'frequency': 'r', 'synset': 'falcon.n.01', 'synonyms': ['falcon'], 'id': 428, 'def': 'birds of prey having long pointed powerful wings adapted for swift flight', 'name': 'falcon'}, {'frequency': 'f', 'synset': 'fan.n.01', 'synonyms': ['fan'], 'id': 429, 'def': 'a device for creating a current of air by movement of a surface or surfaces', 'name': 'fan'}, {'frequency': 'f', 'synset': 'faucet.n.01', 'synonyms': ['faucet', 'spigot', 'tap'], 'id': 430, 'def': 'a regulator for controlling the flow of a liquid from a reservoir', 'name': 'faucet'}, {'frequency': 'r', 'synset': 'fedora.n.01', 'synonyms': ['fedora'], 'id': 431, 'def': 'a hat made of felt with a creased crown', 'name': 'fedora'}, {'frequency': 'r', 'synset': 'ferret.n.02', 'synonyms': ['ferret'], 'id': 432, 'def': 'domesticated albino variety of the European polecat bred for hunting rats and rabbits', 'name': 'ferret'}, {'frequency': 'c', 'synset': 'ferris_wheel.n.01', 'synonyms': ['Ferris_wheel'], 'id': 433, 'def': 'a large wheel with suspended seats that remain upright as the wheel rotates', 'name': 'Ferris_wheel'}, {'frequency': 'c', 'synset': 'ferry.n.01', 'synonyms': ['ferry', 'ferryboat'], 'id': 434, 'def': 'a boat that transports people or vehicles across a body of water and operates on a regular schedule', 'name': 'ferry'}, {'frequency': 'r', 'synset': 'fig.n.04', 'synonyms': ['fig_(fruit)'], 'id': 435, 'def': 'fleshy sweet pear-shaped yellowish or purple fruit eaten fresh or preserved or dried', 'name': 'fig_(fruit)'}, {'frequency': 'c', 'synset': 'fighter.n.02', 'synonyms': ['fighter_jet', 'fighter_aircraft', 'attack_aircraft'], 'id': 436, 'def': 'a high-speed military or naval airplane designed to destroy enemy targets', 'name': 'fighter_jet'}, {'frequency': 'f', 'synset': 'figurine.n.01', 'synonyms': ['figurine'], 'id': 437, 'def': 'a small carved or molded figure', 'name': 'figurine'}, {'frequency': 'c', 'synset': 'file.n.03', 'synonyms': ['file_cabinet', 'filing_cabinet'], 'id': 438, 'def': 'office furniture consisting of a container for keeping papers in order', 'name': 'file_cabinet'}, {'frequency': 'r', 'synset': 'file.n.04', 'synonyms': ['file_(tool)'], 'id': 439, 'def': 'a steel hand tool with small sharp teeth on some or all of its surfaces; used for smoothing wood or metal', 'name': 'file_(tool)'}, {'frequency': 'f', 'synset': 'fire_alarm.n.02', 'synonyms': ['fire_alarm', 'smoke_alarm'], 'id': 440, 'def': 'an alarm that is tripped off by fire or smoke', 'name': 'fire_alarm'}, {'frequency': 'f', 'synset': 'fire_engine.n.01', 'synonyms': ['fire_engine', 'fire_truck'], 'id': 441, 'def': 'large trucks that carry firefighters and equipment to the site of a fire', 'name': 'fire_engine'}, {'frequency': 'f', 'synset': 'fire_extinguisher.n.01', 'synonyms': ['fire_extinguisher', 'extinguisher'], 'id': 442, 'def': 'a manually operated device for extinguishing small fires', 'name': 'fire_extinguisher'}, {'frequency': 'c', 'synset': 'fire_hose.n.01', 'synonyms': ['fire_hose'], 'id': 443, 'def': 'a large hose that carries water from a fire hydrant to the site of the fire', 'name': 'fire_hose'}, {'frequency': 'f', 'synset': 'fireplace.n.01', 'synonyms': ['fireplace'], 'id': 444, 'def': 'an open recess in a wall at the base of a chimney where a fire can be built', 'name': 'fireplace'}, {'frequency': 'f', 'synset': 'fireplug.n.01', 'synonyms': ['fireplug', 'fire_hydrant', 'hydrant'], 'id': 445, 'def': 'an upright hydrant for drawing water to use in fighting a fire', 'name': 'fireplug'}, {'frequency': 'r', 'synset': 'first-aid_kit.n.01', 'synonyms': ['first-aid_kit'], 'id': 446, 'def': 'kit consisting of a set of bandages and medicines for giving first aid', 'name': 'first-aid_kit'}, {'frequency': 'f', 'synset': 'fish.n.01', 'synonyms': ['fish'], 'id': 447, 'def': 'any of various mostly cold-blooded aquatic vertebrates usually having scales and breathing through gills', 'name': 'fish'}, {'frequency': 'c', 'synset': 'fish.n.02', 'synonyms': ['fish_(food)'], 'id': 448, 'def': 'the flesh of fish used as food', 'name': 'fish_(food)'}, {'frequency': 'r', 'synset': 'fishbowl.n.02', 'synonyms': ['fishbowl', 'goldfish_bowl'], 'id': 449, 'def': 'a transparent bowl in which small fish are kept', 'name': 'fishbowl'}, {'frequency': 'c', 'synset': 'fishing_rod.n.01', 'synonyms': ['fishing_rod', 'fishing_pole'], 'id': 450, 'def': 'a rod that is used in fishing to extend the fishing line', 'name': 'fishing_rod'}, {'frequency': 'f', 'synset': 'flag.n.01', 'synonyms': ['flag'], 'id': 451, 'def': 'emblem usually consisting of a rectangular piece of cloth of distinctive design (do not include pole)', 'name': 'flag'}, {'frequency': 'f', 'synset': 'flagpole.n.02', 'synonyms': ['flagpole', 'flagstaff'], 'id': 452, 'def': 'a tall staff or pole on which a flag is raised', 'name': 'flagpole'}, {'frequency': 'c', 'synset': 'flamingo.n.01', 'synonyms': ['flamingo'], 'id': 453, 'def': 'large pink web-footed bird with down-bent bill', 'name': 'flamingo'}, {'frequency': 'c', 'synset': 'flannel.n.01', 'synonyms': ['flannel'], 'id': 454, 'def': 'a soft light woolen fabric; used for clothing', 'name': 'flannel'}, {'frequency': 'c', 'synset': 'flap.n.01', 'synonyms': ['flap'], 'id': 455, 'def': 'any broad thin covering attached at one edge, such as a mud flap next to a wheel or a flap on an airplane wing', 'name': 'flap'}, {'frequency': 'r', 'synset': 'flash.n.10', 'synonyms': ['flash', 'flashbulb'], 'id': 456, 'def': 'a lamp for providing momentary light to take a photograph', 'name': 'flash'}, {'frequency': 'c', 'synset': 'flashlight.n.01', 'synonyms': ['flashlight', 'torch'], 'id': 457, 'def': 'a small portable battery-powered electric lamp', 'name': 'flashlight'}, {'frequency': 'r', 'synset': 'fleece.n.03', 'synonyms': ['fleece'], 'id': 458, 'def': 'a soft bulky fabric with deep pile; used chiefly for clothing', 'name': 'fleece'}, {'frequency': 'f', 'synset': 'flip-flop.n.02', 'synonyms': ['flip-flop_(sandal)'], 'id': 459, 'def': 'a backless sandal held to the foot by a thong between two toes', 'name': 'flip-flop_(sandal)'}, {'frequency': 'c', 'synset': 'flipper.n.01', 'synonyms': ['flipper_(footwear)', 'fin_(footwear)'], 'id': 460, 'def': 'a shoe to aid a person in swimming', 'name': 'flipper_(footwear)'}, {'frequency': 'f', 'synset': 'flower_arrangement.n.01', 'synonyms': ['flower_arrangement', 'floral_arrangement'], 'id': 461, 'def': 'a decorative arrangement of flowers', 'name': 'flower_arrangement'}, {'frequency': 'c', 'synset': 'flute.n.02', 'synonyms': ['flute_glass', 'champagne_flute'], 'id': 462, 'def': 'a tall narrow wineglass', 'name': 'flute_glass'}, {'frequency': 'c', 'synset': 'foal.n.01', 'synonyms': ['foal'], 'id': 463, 'def': 'a young horse', 'name': 'foal'}, {'frequency': 'c', 'synset': 'folding_chair.n.01', 'synonyms': ['folding_chair'], 'id': 464, 'def': 'a chair that can be folded flat for storage', 'name': 'folding_chair'}, {'frequency': 'c', 'synset': 'food_processor.n.01', 'synonyms': ['food_processor'], 'id': 465, 'def': 'a kitchen appliance for shredding, blending, chopping, or slicing food', 'name': 'food_processor'}, {'frequency': 'c', 'synset': 'football.n.02', 'synonyms': ['football_(American)'], 'id': 466, 'def': 'the inflated oblong ball used in playing American football', 'name': 'football_(American)'}, {'frequency': 'r', 'synset': 'football_helmet.n.01', 'synonyms': ['football_helmet'], 'id': 467, 'def': 'a padded helmet with a face mask to protect the head of football players', 'name': 'football_helmet'}, {'frequency': 'c', 'synset': 'footstool.n.01', 'synonyms': ['footstool', 'footrest'], 'id': 468, 'def': 'a low seat or a stool to rest the feet of a seated person', 'name': 'footstool'}, {'frequency': 'f', 'synset': 'fork.n.01', 'synonyms': ['fork'], 'id': 469, 'def': 'cutlery used for serving and eating food', 'name': 'fork'}, {'frequency': 'c', 'synset': 'forklift.n.01', 'synonyms': ['forklift'], 'id': 470, 'def': 'an industrial vehicle with a power operated fork in front that can be inserted under loads to lift and move them', 'name': 'forklift'}, {'frequency': 'c', 'synset': 'freight_car.n.01', 'synonyms': ['freight_car'], 'id': 471, 'def': 'a railway car that carries freight', 'name': 'freight_car'}, {'frequency': 'c', 'synset': 'french_toast.n.01', 'synonyms': ['French_toast'], 'id': 472, 'def': 'bread slice dipped in egg and milk and fried', 'name': 'French_toast'}, {'frequency': 'c', 'synset': 'freshener.n.01', 'synonyms': ['freshener', 'air_freshener'], 'id': 473, 'def': 'anything that freshens air by removing or covering odor', 'name': 'freshener'}, {'frequency': 'f', 'synset': 'frisbee.n.01', 'synonyms': ['frisbee'], 'id': 474, 'def': 'a light, plastic disk propelled with a flip of the wrist for recreation or competition', 'name': 'frisbee'}, {'frequency': 'c', 'synset': 'frog.n.01', 'synonyms': ['frog', 'toad', 'toad_frog'], 'id': 475, 'def': 'a tailless stout-bodied amphibians with long hind limbs for leaping', 'name': 'frog'}, {'frequency': 'c', 'synset': 'fruit_juice.n.01', 'synonyms': ['fruit_juice'], 'id': 476, 'def': 'drink produced by squeezing or crushing fruit', 'name': 'fruit_juice'}, {'frequency': 'f', 'synset': 'frying_pan.n.01', 'synonyms': ['frying_pan', 'frypan', 'skillet'], 'id': 477, 'def': 'a pan used for frying foods', 'name': 'frying_pan'}, {'frequency': 'r', 'synset': 'fudge.n.01', 'synonyms': ['fudge'], 'id': 478, 'def': 'soft creamy candy', 'name': 'fudge'}, {'frequency': 'r', 'synset': 'funnel.n.02', 'synonyms': ['funnel'], 'id': 479, 'def': 'a cone-shaped utensil used to channel a substance into a container with a small mouth', 'name': 'funnel'}, {'frequency': 'r', 'synset': 'futon.n.01', 'synonyms': ['futon'], 'id': 480, 'def': 'a pad that is used for sleeping on the floor or on a raised frame', 'name': 'futon'}, {'frequency': 'r', 'synset': 'gag.n.02', 'synonyms': ['gag', 'muzzle'], 'id': 481, 'def': "restraint put into a person's mouth to prevent speaking or shouting", 'name': 'gag'}, {'frequency': 'r', 'synset': 'garbage.n.03', 'synonyms': ['garbage'], 'id': 482, 'def': 'a receptacle where waste can be discarded', 'name': 'garbage'}, {'frequency': 'c', 'synset': 'garbage_truck.n.01', 'synonyms': ['garbage_truck'], 'id': 483, 'def': 'a truck for collecting domestic refuse', 'name': 'garbage_truck'}, {'frequency': 'c', 'synset': 'garden_hose.n.01', 'synonyms': ['garden_hose'], 'id': 484, 'def': 'a hose used for watering a lawn or garden', 'name': 'garden_hose'}, {'frequency': 'c', 'synset': 'gargle.n.01', 'synonyms': ['gargle', 'mouthwash'], 'id': 485, 'def': 'a medicated solution used for gargling and rinsing the mouth', 'name': 'gargle'}, {'frequency': 'r', 'synset': 'gargoyle.n.02', 'synonyms': ['gargoyle'], 'id': 486, 'def': 'an ornament consisting of a grotesquely carved figure of a person or animal', 'name': 'gargoyle'}, {'frequency': 'c', 'synset': 'garlic.n.02', 'synonyms': ['garlic', 'ail'], 'id': 487, 'def': 'aromatic bulb used as seasoning', 'name': 'garlic'}, {'frequency': 'r', 'synset': 'gasmask.n.01', 'synonyms': ['gasmask', 'respirator', 'gas_helmet'], 'id': 488, 'def': 'a protective face mask with a filter', 'name': 'gasmask'}, {'frequency': 'c', 'synset': 'gazelle.n.01', 'synonyms': ['gazelle'], 'id': 489, 'def': 'small swift graceful antelope of Africa and Asia having lustrous eyes', 'name': 'gazelle'}, {'frequency': 'c', 'synset': 'gelatin.n.02', 'synonyms': ['gelatin', 'jelly'], 'id': 490, 'def': 'an edible jelly made with gelatin and used as a dessert or salad base or a coating for foods', 'name': 'gelatin'}, {'frequency': 'r', 'synset': 'gem.n.02', 'synonyms': ['gemstone'], 'id': 491, 'def': 'a crystalline rock that can be cut and polished for jewelry', 'name': 'gemstone'}, {'frequency': 'r', 'synset': 'generator.n.02', 'synonyms': ['generator'], 'id': 492, 'def': 'engine that converts mechanical energy into electrical energy by electromagnetic induction', 'name': 'generator'}, {'frequency': 'c', 'synset': 'giant_panda.n.01', 'synonyms': ['giant_panda', 'panda', 'panda_bear'], 'id': 493, 'def': 'large black-and-white herbivorous mammal of bamboo forests of China and Tibet', 'name': 'giant_panda'}, {'frequency': 'c', 'synset': 'gift_wrap.n.01', 'synonyms': ['gift_wrap'], 'id': 494, 'def': 'attractive wrapping paper suitable for wrapping gifts', 'name': 'gift_wrap'}, {'frequency': 'c', 'synset': 'ginger.n.03', 'synonyms': ['ginger', 'gingerroot'], 'id': 495, 'def': 'the root of the common ginger plant; used fresh as a seasoning', 'name': 'ginger'}, {'frequency': 'f', 'synset': 'giraffe.n.01', 'synonyms': ['giraffe'], 'id': 496, 'def': 'tall animal having a spotted coat and small horns and very long neck and legs', 'name': 'giraffe'}, {'frequency': 'c', 'synset': 'girdle.n.02', 'synonyms': ['cincture', 'sash', 'waistband', 'waistcloth'], 'id': 497, 'def': 'a band of material around the waist that strengthens a skirt or trousers', 'name': 'cincture'}, {'frequency': 'f', 'synset': 'glass.n.02', 'synonyms': ['glass_(drink_container)', 'drinking_glass'], 'id': 498, 'def': 'a container for holding liquids while drinking', 'name': 'glass_(drink_container)'}, {'frequency': 'c', 'synset': 'globe.n.03', 'synonyms': ['globe'], 'id': 499, 'def': 'a sphere on which a map (especially of the earth) is represented', 'name': 'globe'}, {'frequency': 'f', 'synset': 'glove.n.02', 'synonyms': ['glove'], 'id': 500, 'def': 'handwear covering the hand', 'name': 'glove'}, {'frequency': 'c', 'synset': 'goat.n.01', 'synonyms': ['goat'], 'id': 501, 'def': 'a common goat', 'name': 'goat'}, {'frequency': 'f', 'synset': 'goggles.n.01', 'synonyms': ['goggles'], 'id': 502, 'def': 'tight-fitting spectacles worn to protect the eyes', 'name': 'goggles'}, {'frequency': 'r', 'synset': 'goldfish.n.01', 'synonyms': ['goldfish'], 'id': 503, 'def': 'small golden or orange-red freshwater fishes used as pond or aquarium pets', 'name': 'goldfish'}, {'frequency': 'c', 'synset': 'golf_club.n.02', 'synonyms': ['golf_club', 'golf-club'], 'id': 504, 'def': 'golf equipment used by a golfer to hit a golf ball', 'name': 'golf_club'}, {'frequency': 'c', 'synset': 'golfcart.n.01', 'synonyms': ['golfcart'], 'id': 505, 'def': 'a small motor vehicle in which golfers can ride between shots', 'name': 'golfcart'}, {'frequency': 'r', 'synset': 'gondola.n.02', 'synonyms': ['gondola_(boat)'], 'id': 506, 'def': 'long narrow flat-bottomed boat propelled by sculling; traditionally used on canals of Venice', 'name': 'gondola_(boat)'}, {'frequency': 'c', 'synset': 'goose.n.01', 'synonyms': ['goose'], 'id': 507, 'def': 'loud, web-footed long-necked aquatic birds usually larger than ducks', 'name': 'goose'}, {'frequency': 'r', 'synset': 'gorilla.n.01', 'synonyms': ['gorilla'], 'id': 508, 'def': 'largest ape', 'name': 'gorilla'}, {'frequency': 'r', 'synset': 'gourd.n.02', 'synonyms': ['gourd'], 'id': 509, 'def': 'any of numerous inedible fruits with hard rinds', 'name': 'gourd'}, {'frequency': 'f', 'synset': 'grape.n.01', 'synonyms': ['grape'], 'id': 510, 'def': 'any of various juicy fruit with green or purple skins; grow in clusters', 'name': 'grape'}, {'frequency': 'c', 'synset': 'grater.n.01', 'synonyms': ['grater'], 'id': 511, 'def': 'utensil with sharp perforations for shredding foods (as vegetables or cheese)', 'name': 'grater'}, {'frequency': 'c', 'synset': 'gravestone.n.01', 'synonyms': ['gravestone', 'headstone', 'tombstone'], 'id': 512, 'def': 'a stone that is used to mark a grave', 'name': 'gravestone'}, {'frequency': 'r', 'synset': 'gravy_boat.n.01', 'synonyms': ['gravy_boat', 'gravy_holder'], 'id': 513, 'def': 'a dish (often boat-shaped) for serving gravy or sauce', 'name': 'gravy_boat'}, {'frequency': 'f', 'synset': 'green_bean.n.02', 'synonyms': ['green_bean'], 'id': 514, 'def': 'a common bean plant cultivated for its slender green edible pods', 'name': 'green_bean'}, {'frequency': 'f', 'synset': 'green_onion.n.01', 'synonyms': ['green_onion', 'spring_onion', 'scallion'], 'id': 515, 'def': 'a young onion before the bulb has enlarged', 'name': 'green_onion'}, {'frequency': 'r', 'synset': 'griddle.n.01', 'synonyms': ['griddle'], 'id': 516, 'def': 'cooking utensil consisting of a flat heated surface on which food is cooked', 'name': 'griddle'}, {'frequency': 'f', 'synset': 'grill.n.02', 'synonyms': ['grill', 'grille', 'grillwork', 'radiator_grille'], 'id': 517, 'def': 'a framework of metal bars used as a partition or a grate', 'name': 'grill'}, {'frequency': 'r', 'synset': 'grits.n.01', 'synonyms': ['grits', 'hominy_grits'], 'id': 518, 'def': 'coarsely ground corn boiled as a breakfast dish', 'name': 'grits'}, {'frequency': 'c', 'synset': 'grizzly.n.01', 'synonyms': ['grizzly', 'grizzly_bear'], 'id': 519, 'def': 'powerful brownish-yellow bear of the uplands of western North America', 'name': 'grizzly'}, {'frequency': 'c', 'synset': 'grocery_bag.n.01', 'synonyms': ['grocery_bag'], 'id': 520, 'def': "a sack for holding customer's groceries", 'name': 'grocery_bag'}, {'frequency': 'f', 'synset': 'guitar.n.01', 'synonyms': ['guitar'], 'id': 521, 'def': 'a stringed instrument usually having six strings; played by strumming or plucking', 'name': 'guitar'}, {'frequency': 'c', 'synset': 'gull.n.02', 'synonyms': ['gull', 'seagull'], 'id': 522, 'def': 'mostly white aquatic bird having long pointed wings and short legs', 'name': 'gull'}, {'frequency': 'c', 'synset': 'gun.n.01', 'synonyms': ['gun'], 'id': 523, 'def': 'a weapon that discharges a bullet at high velocity from a metal tube', 'name': 'gun'}, {'frequency': 'f', 'synset': 'hairbrush.n.01', 'synonyms': ['hairbrush'], 'id': 524, 'def': "a brush used to groom a person's hair", 'name': 'hairbrush'}, {'frequency': 'c', 'synset': 'hairnet.n.01', 'synonyms': ['hairnet'], 'id': 525, 'def': 'a small net that someone wears over their hair to keep it in place', 'name': 'hairnet'}, {'frequency': 'c', 'synset': 'hairpin.n.01', 'synonyms': ['hairpin'], 'id': 526, 'def': "a double pronged pin used to hold women's hair in place", 'name': 'hairpin'}, {'frequency': 'r', 'synset': 'halter.n.03', 'synonyms': ['halter_top'], 'id': 527, 'def': "a woman's top that fastens behind the back and neck leaving the back and arms uncovered", 'name': 'halter_top'}, {'frequency': 'f', 'synset': 'ham.n.01', 'synonyms': ['ham', 'jambon', 'gammon'], 'id': 528, 'def': 'meat cut from the thigh of a hog (usually smoked)', 'name': 'ham'}, {'frequency': 'c', 'synset': 'hamburger.n.01', 'synonyms': ['hamburger', 'beefburger', 'burger'], 'id': 529, 'def': 'a sandwich consisting of a patty of minced beef served on a bun', 'name': 'hamburger'}, {'frequency': 'c', 'synset': 'hammer.n.02', 'synonyms': ['hammer'], 'id': 530, 'def': 'a hand tool with a heavy head and a handle; used to deliver an impulsive force by striking', 'name': 'hammer'}, {'frequency': 'c', 'synset': 'hammock.n.02', 'synonyms': ['hammock'], 'id': 531, 'def': 'a hanging bed of canvas or rope netting (usually suspended between two trees)', 'name': 'hammock'}, {'frequency': 'r', 'synset': 'hamper.n.02', 'synonyms': ['hamper'], 'id': 532, 'def': 'a basket usually with a cover', 'name': 'hamper'}, {'frequency': 'c', 'synset': 'hamster.n.01', 'synonyms': ['hamster'], 'id': 533, 'def': 'short-tailed burrowing rodent with large cheek pouches', 'name': 'hamster'}, {'frequency': 'f', 'synset': 'hand_blower.n.01', 'synonyms': ['hair_dryer'], 'id': 534, 'def': 'a hand-held electric blower that can blow warm air onto the hair', 'name': 'hair_dryer'}, {'frequency': 'r', 'synset': 'hand_glass.n.01', 'synonyms': ['hand_glass', 'hand_mirror'], 'id': 535, 'def': 'a mirror intended to be held in the hand', 'name': 'hand_glass'}, {'frequency': 'f', 'synset': 'hand_towel.n.01', 'synonyms': ['hand_towel', 'face_towel'], 'id': 536, 'def': 'a small towel used to dry the hands or face', 'name': 'hand_towel'}, {'frequency': 'c', 'synset': 'handcart.n.01', 'synonyms': ['handcart', 'pushcart', 'hand_truck'], 'id': 537, 'def': 'wheeled vehicle that can be pushed by a person', 'name': 'handcart'}, {'frequency': 'r', 'synset': 'handcuff.n.01', 'synonyms': ['handcuff'], 'id': 538, 'def': 'shackle that consists of a metal loop that can be locked around the wrist', 'name': 'handcuff'}, {'frequency': 'c', 'synset': 'handkerchief.n.01', 'synonyms': ['handkerchief'], 'id': 539, 'def': 'a square piece of cloth used for wiping the eyes or nose or as a costume accessory', 'name': 'handkerchief'}, {'frequency': 'f', 'synset': 'handle.n.01', 'synonyms': ['handle', 'grip', 'handgrip'], 'id': 540, 'def': 'the appendage to an object that is designed to be held in order to use or move it', 'name': 'handle'}, {'frequency': 'r', 'synset': 'handsaw.n.01', 'synonyms': ['handsaw', "carpenter's_saw"], 'id': 541, 'def': 'a saw used with one hand for cutting wood', 'name': 'handsaw'}, {'frequency': 'r', 'synset': 'hardback.n.01', 'synonyms': ['hardback_book', 'hardcover_book'], 'id': 542, 'def': 'a book with cardboard or cloth or leather covers', 'name': 'hardback_book'}, {'frequency': 'r', 'synset': 'harmonium.n.01', 'synonyms': ['harmonium', 'organ_(musical_instrument)', 'reed_organ_(musical_instrument)'], 'id': 543, 'def': 'a free-reed instrument in which air is forced through the reeds by bellows', 'name': 'harmonium'}, {'frequency': 'f', 'synset': 'hat.n.01', 'synonyms': ['hat'], 'id': 544, 'def': 'headwear that protects the head from bad weather, sun, or worn for fashion', 'name': 'hat'}, {'frequency': 'r', 'synset': 'hatbox.n.01', 'synonyms': ['hatbox'], 'id': 545, 'def': 'a round piece of luggage for carrying hats', 'name': 'hatbox'}, {'frequency': 'c', 'synset': 'head_covering.n.01', 'synonyms': ['veil'], 'id': 546, 'def': 'a garment that covers the head OR face', 'name': 'veil'}, {'frequency': 'f', 'synset': 'headband.n.01', 'synonyms': ['headband'], 'id': 547, 'def': 'a band worn around or over the head', 'name': 'headband'}, {'frequency': 'f', 'synset': 'headboard.n.01', 'synonyms': ['headboard'], 'id': 548, 'def': 'a vertical board or panel forming the head of a bedstead', 'name': 'headboard'}, {'frequency': 'f', 'synset': 'headlight.n.01', 'synonyms': ['headlight', 'headlamp'], 'id': 549, 'def': 'a powerful light with reflector; attached to the front of an automobile or locomotive', 'name': 'headlight'}, {'frequency': 'c', 'synset': 'headscarf.n.01', 'synonyms': ['headscarf'], 'id': 550, 'def': 'a kerchief worn over the head and tied under the chin', 'name': 'headscarf'}, {'frequency': 'r', 'synset': 'headset.n.01', 'synonyms': ['headset'], 'id': 551, 'def': 'receiver consisting of a pair of headphones', 'name': 'headset'}, {'frequency': 'c', 'synset': 'headstall.n.01', 'synonyms': ['headstall_(for_horses)', 'headpiece_(for_horses)'], 'id': 552, 'def': "the band that is the part of a bridle that fits around a horse's head", 'name': 'headstall_(for_horses)'}, {'frequency': 'c', 'synset': 'heart.n.02', 'synonyms': ['heart'], 'id': 553, 'def': 'a muscular organ; its contractions move the blood through the body', 'name': 'heart'}, {'frequency': 'c', 'synset': 'heater.n.01', 'synonyms': ['heater', 'warmer'], 'id': 554, 'def': 'device that heats water or supplies warmth to a room', 'name': 'heater'}, {'frequency': 'c', 'synset': 'helicopter.n.01', 'synonyms': ['helicopter'], 'id': 555, 'def': 'an aircraft without wings that obtains its lift from the rotation of overhead blades', 'name': 'helicopter'}, {'frequency': 'f', 'synset': 'helmet.n.02', 'synonyms': ['helmet'], 'id': 556, 'def': 'a protective headgear made of hard material to resist blows', 'name': 'helmet'}, {'frequency': 'r', 'synset': 'heron.n.02', 'synonyms': ['heron'], 'id': 557, 'def': 'grey or white wading bird with long neck and long legs and (usually) long bill', 'name': 'heron'}, {'frequency': 'c', 'synset': 'highchair.n.01', 'synonyms': ['highchair', 'feeding_chair'], 'id': 558, 'def': 'a chair for feeding a very young child', 'name': 'highchair'}, {'frequency': 'f', 'synset': 'hinge.n.01', 'synonyms': ['hinge'], 'id': 559, 'def': 'a joint that holds two parts together so that one can swing relative to the other', 'name': 'hinge'}, {'frequency': 'r', 'synset': 'hippopotamus.n.01', 'synonyms': ['hippopotamus'], 'id': 560, 'def': 'massive thick-skinned animal living in or around rivers of tropical Africa', 'name': 'hippopotamus'}, {'frequency': 'r', 'synset': 'hockey_stick.n.01', 'synonyms': ['hockey_stick'], 'id': 561, 'def': 'sports implement consisting of a stick used by hockey players to move the puck', 'name': 'hockey_stick'}, {'frequency': 'c', 'synset': 'hog.n.03', 'synonyms': ['hog', 'pig'], 'id': 562, 'def': 'domestic swine', 'name': 'hog'}, {'frequency': 'f', 'synset': 'home_plate.n.01', 'synonyms': ['home_plate_(baseball)', 'home_base_(baseball)'], 'id': 563, 'def': '(baseball) a rubber slab where the batter stands; it must be touched by a base runner in order to score', 'name': 'home_plate_(baseball)'}, {'frequency': 'c', 'synset': 'honey.n.01', 'synonyms': ['honey'], 'id': 564, 'def': 'a sweet yellow liquid produced by bees', 'name': 'honey'}, {'frequency': 'f', 'synset': 'hood.n.06', 'synonyms': ['fume_hood', 'exhaust_hood'], 'id': 565, 'def': 'metal covering leading to a vent that exhausts smoke or fumes', 'name': 'fume_hood'}, {'frequency': 'f', 'synset': 'hook.n.05', 'synonyms': ['hook'], 'id': 566, 'def': 'a curved or bent implement for suspending or pulling something', 'name': 'hook'}, {'frequency': 'r', 'synset': 'hookah.n.01', 'synonyms': ['hookah', 'narghile', 'nargileh', 'sheesha', 'shisha', 'water_pipe'], 'id': 567, 'def': 'a tobacco pipe with a long flexible tube connected to a container where the smoke is cooled by passing through water', 'name': 'hookah'}, {'frequency': 'r', 'synset': 'hornet.n.01', 'synonyms': ['hornet'], 'id': 568, 'def': 'large stinging wasp', 'name': 'hornet'}, {'frequency': 'f', 'synset': 'horse.n.01', 'synonyms': ['horse'], 'id': 569, 'def': 'a common horse', 'name': 'horse'}, {'frequency': 'f', 'synset': 'hose.n.03', 'synonyms': ['hose', 'hosepipe'], 'id': 570, 'def': 'a flexible pipe for conveying a liquid or gas', 'name': 'hose'}, {'frequency': 'r', 'synset': 'hot-air_balloon.n.01', 'synonyms': ['hot-air_balloon'], 'id': 571, 'def': 'balloon for travel through the air in a basket suspended below a large bag of heated air', 'name': 'hot-air_balloon'}, {'frequency': 'r', 'synset': 'hot_plate.n.01', 'synonyms': ['hotplate'], 'id': 572, 'def': 'a portable electric appliance for heating or cooking or keeping food warm', 'name': 'hotplate'}, {'frequency': 'c', 'synset': 'hot_sauce.n.01', 'synonyms': ['hot_sauce'], 'id': 573, 'def': 'a pungent peppery sauce', 'name': 'hot_sauce'}, {'frequency': 'r', 'synset': 'hourglass.n.01', 'synonyms': ['hourglass'], 'id': 574, 'def': 'a sandglass timer that runs for sixty minutes', 'name': 'hourglass'}, {'frequency': 'r', 'synset': 'houseboat.n.01', 'synonyms': ['houseboat'], 'id': 575, 'def': 'a barge that is designed and equipped for use as a dwelling', 'name': 'houseboat'}, {'frequency': 'c', 'synset': 'hummingbird.n.01', 'synonyms': ['hummingbird'], 'id': 576, 'def': 'tiny American bird having brilliant iridescent plumage and long slender bills', 'name': 'hummingbird'}, {'frequency': 'r', 'synset': 'hummus.n.01', 'synonyms': ['hummus', 'humus', 'hommos', 'hoummos', 'humous'], 'id': 577, 'def': 'a thick spread made from mashed chickpeas', 'name': 'hummus'}, {'frequency': 'f', 'synset': 'ice_bear.n.01', 'synonyms': ['polar_bear'], 'id': 578, 'def': 'white bear of Arctic regions', 'name': 'polar_bear'}, {'frequency': 'c', 'synset': 'ice_cream.n.01', 'synonyms': ['icecream'], 'id': 579, 'def': 'frozen dessert containing cream and sugar and flavoring', 'name': 'icecream'}, {'frequency': 'r', 'synset': 'ice_lolly.n.01', 'synonyms': ['popsicle'], 'id': 580, 'def': 'ice cream or water ice on a small wooden stick', 'name': 'popsicle'}, {'frequency': 'c', 'synset': 'ice_maker.n.01', 'synonyms': ['ice_maker'], 'id': 581, 'def': 'an appliance included in some electric refrigerators for making ice cubes', 'name': 'ice_maker'}, {'frequency': 'r', 'synset': 'ice_pack.n.01', 'synonyms': ['ice_pack', 'ice_bag'], 'id': 582, 'def': 'a waterproof bag filled with ice: applied to the body (especially the head) to cool or reduce swelling', 'name': 'ice_pack'}, {'frequency': 'r', 'synset': 'ice_skate.n.01', 'synonyms': ['ice_skate'], 'id': 583, 'def': 'skate consisting of a boot with a steel blade fitted to the sole', 'name': 'ice_skate'}, {'frequency': 'c', 'synset': 'igniter.n.01', 'synonyms': ['igniter', 'ignitor', 'lighter'], 'id': 584, 'def': 'a substance or device used to start a fire', 'name': 'igniter'}, {'frequency': 'r', 'synset': 'inhaler.n.01', 'synonyms': ['inhaler', 'inhalator'], 'id': 585, 'def': 'a dispenser that produces a chemical vapor to be inhaled through mouth or nose', 'name': 'inhaler'}, {'frequency': 'f', 'synset': 'ipod.n.01', 'synonyms': ['iPod'], 'id': 586, 'def': 'a pocket-sized device used to play music files', 'name': 'iPod'}, {'frequency': 'c', 'synset': 'iron.n.04', 'synonyms': ['iron_(for_clothing)', 'smoothing_iron_(for_clothing)'], 'id': 587, 'def': 'home appliance consisting of a flat metal base that is heated and used to smooth cloth', 'name': 'iron_(for_clothing)'}, {'frequency': 'c', 'synset': 'ironing_board.n.01', 'synonyms': ['ironing_board'], 'id': 588, 'def': 'narrow padded board on collapsible supports; used for ironing clothes', 'name': 'ironing_board'}, {'frequency': 'f', 'synset': 'jacket.n.01', 'synonyms': ['jacket'], 'id': 589, 'def': 'a waist-length coat', 'name': 'jacket'}, {'frequency': 'c', 'synset': 'jam.n.01', 'synonyms': ['jam'], 'id': 590, 'def': 'preserve of crushed fruit', 'name': 'jam'}, {'frequency': 'f', 'synset': 'jar.n.01', 'synonyms': ['jar'], 'id': 591, 'def': 'a vessel (usually cylindrical) with a wide mouth and without handles', 'name': 'jar'}, {'frequency': 'f', 'synset': 'jean.n.01', 'synonyms': ['jean', 'blue_jean', 'denim'], 'id': 592, 'def': '(usually plural) close-fitting trousers of heavy denim for manual work or casual wear', 'name': 'jean'}, {'frequency': 'c', 'synset': 'jeep.n.01', 'synonyms': ['jeep', 'landrover'], 'id': 593, 'def': 'a car suitable for traveling over rough terrain', 'name': 'jeep'}, {'frequency': 'r', 'synset': 'jelly_bean.n.01', 'synonyms': ['jelly_bean', 'jelly_egg'], 'id': 594, 'def': 'sugar-glazed jellied candy', 'name': 'jelly_bean'}, {'frequency': 'f', 'synset': 'jersey.n.03', 'synonyms': ['jersey', 'T-shirt', 'tee_shirt'], 'id': 595, 'def': 'a close-fitting pullover shirt', 'name': 'jersey'}, {'frequency': 'c', 'synset': 'jet.n.01', 'synonyms': ['jet_plane', 'jet-propelled_plane'], 'id': 596, 'def': 'an airplane powered by one or more jet engines', 'name': 'jet_plane'}, {'frequency': 'r', 'synset': 'jewel.n.01', 'synonyms': ['jewel', 'gem', 'precious_stone'], 'id': 597, 'def': 'a precious or semiprecious stone incorporated into a piece of jewelry', 'name': 'jewel'}, {'frequency': 'c', 'synset': 'jewelry.n.01', 'synonyms': ['jewelry', 'jewellery'], 'id': 598, 'def': 'an adornment (as a bracelet or ring or necklace) made of precious metals and set with gems (or imitation gems)', 'name': 'jewelry'}, {'frequency': 'r', 'synset': 'joystick.n.02', 'synonyms': ['joystick'], 'id': 599, 'def': 'a control device for computers consisting of a vertical handle that can move freely in two directions', 'name': 'joystick'}, {'frequency': 'c', 'synset': 'jump_suit.n.01', 'synonyms': ['jumpsuit'], 'id': 600, 'def': "one-piece garment fashioned after a parachutist's uniform", 'name': 'jumpsuit'}, {'frequency': 'c', 'synset': 'kayak.n.01', 'synonyms': ['kayak'], 'id': 601, 'def': 'a small canoe consisting of a light frame made watertight with animal skins', 'name': 'kayak'}, {'frequency': 'r', 'synset': 'keg.n.02', 'synonyms': ['keg'], 'id': 602, 'def': 'small cask or barrel', 'name': 'keg'}, {'frequency': 'r', 'synset': 'kennel.n.01', 'synonyms': ['kennel', 'doghouse'], 'id': 603, 'def': 'outbuilding that serves as a shelter for a dog', 'name': 'kennel'}, {'frequency': 'c', 'synset': 'kettle.n.01', 'synonyms': ['kettle', 'boiler'], 'id': 604, 'def': 'a metal pot for stewing or boiling; usually has a lid', 'name': 'kettle'}, {'frequency': 'f', 'synset': 'key.n.01', 'synonyms': ['key'], 'id': 605, 'def': 'metal instrument used to unlock a lock', 'name': 'key'}, {'frequency': 'r', 'synset': 'keycard.n.01', 'synonyms': ['keycard'], 'id': 606, 'def': 'a plastic card used to gain access typically to a door', 'name': 'keycard'}, {'frequency': 'c', 'synset': 'kilt.n.01', 'synonyms': ['kilt'], 'id': 607, 'def': 'a knee-length pleated tartan skirt worn by men as part of the traditional dress in the Highlands of northern Scotland', 'name': 'kilt'}, {'frequency': 'c', 'synset': 'kimono.n.01', 'synonyms': ['kimono'], 'id': 608, 'def': 'a loose robe; imitated from robes originally worn by Japanese', 'name': 'kimono'}, {'frequency': 'f', 'synset': 'kitchen_sink.n.01', 'synonyms': ['kitchen_sink'], 'id': 609, 'def': 'a sink in a kitchen', 'name': 'kitchen_sink'}, {'frequency': 'r', 'synset': 'kitchen_table.n.01', 'synonyms': ['kitchen_table'], 'id': 610, 'def': 'a table in the kitchen', 'name': 'kitchen_table'}, {'frequency': 'f', 'synset': 'kite.n.03', 'synonyms': ['kite'], 'id': 611, 'def': 'plaything consisting of a light frame covered with tissue paper; flown in wind at end of a string', 'name': 'kite'}, {'frequency': 'c', 'synset': 'kitten.n.01', 'synonyms': ['kitten', 'kitty'], 'id': 612, 'def': 'young domestic cat', 'name': 'kitten'}, {'frequency': 'c', 'synset': 'kiwi.n.03', 'synonyms': ['kiwi_fruit'], 'id': 613, 'def': 'fuzzy brown egg-shaped fruit with slightly tart green flesh', 'name': 'kiwi_fruit'}, {'frequency': 'f', 'synset': 'knee_pad.n.01', 'synonyms': ['knee_pad'], 'id': 614, 'def': 'protective garment consisting of a pad worn by football or baseball or hockey players', 'name': 'knee_pad'}, {'frequency': 'f', 'synset': 'knife.n.01', 'synonyms': ['knife'], 'id': 615, 'def': 'tool with a blade and point used as a cutting instrument', 'name': 'knife'}, {'frequency': 'r', 'synset': 'knitting_needle.n.01', 'synonyms': ['knitting_needle'], 'id': 616, 'def': 'needle consisting of a slender rod with pointed ends; usually used in pairs', 'name': 'knitting_needle'}, {'frequency': 'f', 'synset': 'knob.n.02', 'synonyms': ['knob'], 'id': 617, 'def': 'a round handle often found on a door', 'name': 'knob'}, {'frequency': 'r', 'synset': 'knocker.n.05', 'synonyms': ['knocker_(on_a_door)', 'doorknocker'], 'id': 618, 'def': 'a device (usually metal and ornamental) attached by a hinge to a door', 'name': 'knocker_(on_a_door)'}, {'frequency': 'r', 'synset': 'koala.n.01', 'synonyms': ['koala', 'koala_bear'], 'id': 619, 'def': 'sluggish tailless Australian marsupial with grey furry ears and coat', 'name': 'koala'}, {'frequency': 'r', 'synset': 'lab_coat.n.01', 'synonyms': ['lab_coat', 'laboratory_coat'], 'id': 620, 'def': 'a light coat worn to protect clothing from substances used while working in a laboratory', 'name': 'lab_coat'}, {'frequency': 'f', 'synset': 'ladder.n.01', 'synonyms': ['ladder'], 'id': 621, 'def': 'steps consisting of two parallel members connected by rungs', 'name': 'ladder'}, {'frequency': 'c', 'synset': 'ladle.n.01', 'synonyms': ['ladle'], 'id': 622, 'def': 'a spoon-shaped vessel with a long handle frequently used to transfer liquids', 'name': 'ladle'}, {'frequency': 'c', 'synset': 'ladybug.n.01', 'synonyms': ['ladybug', 'ladybeetle', 'ladybird_beetle'], 'id': 623, 'def': 'small round bright-colored and spotted beetle, typically red and black', 'name': 'ladybug'}, {'frequency': 'f', 'synset': 'lamb.n.01', 'synonyms': ['lamb_(animal)'], 'id': 624, 'def': 'young sheep', 'name': 'lamb_(animal)'}, {'frequency': 'r', 'synset': 'lamb_chop.n.01', 'synonyms': ['lamb-chop', 'lambchop'], 'id': 625, 'def': 'chop cut from a lamb', 'name': 'lamb-chop'}, {'frequency': 'f', 'synset': 'lamp.n.02', 'synonyms': ['lamp'], 'id': 626, 'def': 'a piece of furniture holding one or more electric light bulbs', 'name': 'lamp'}, {'frequency': 'f', 'synset': 'lamppost.n.01', 'synonyms': ['lamppost'], 'id': 627, 'def': 'a metal post supporting an outdoor lamp (such as a streetlight)', 'name': 'lamppost'}, {'frequency': 'f', 'synset': 'lampshade.n.01', 'synonyms': ['lampshade'], 'id': 628, 'def': 'a protective ornamental shade used to screen a light bulb from direct view', 'name': 'lampshade'}, {'frequency': 'c', 'synset': 'lantern.n.01', 'synonyms': ['lantern'], 'id': 629, 'def': 'light in a transparent protective case', 'name': 'lantern'}, {'frequency': 'f', 'synset': 'lanyard.n.02', 'synonyms': ['lanyard', 'laniard'], 'id': 630, 'def': 'a cord worn around the neck to hold a knife or whistle, etc.', 'name': 'lanyard'}, {'frequency': 'f', 'synset': 'laptop.n.01', 'synonyms': ['laptop_computer', 'notebook_computer'], 'id': 631, 'def': 'a portable computer small enough to use in your lap', 'name': 'laptop_computer'}, {'frequency': 'r', 'synset': 'lasagna.n.01', 'synonyms': ['lasagna', 'lasagne'], 'id': 632, 'def': 'baked dish of layers of lasagna pasta with sauce and cheese and meat or vegetables', 'name': 'lasagna'}, {'frequency': 'f', 'synset': 'latch.n.02', 'synonyms': ['latch'], 'id': 633, 'def': 'a bar that can be lowered or slid into a groove to fasten a door or gate', 'name': 'latch'}, {'frequency': 'r', 'synset': 'lawn_mower.n.01', 'synonyms': ['lawn_mower'], 'id': 634, 'def': 'garden tool for mowing grass on lawns', 'name': 'lawn_mower'}, {'frequency': 'r', 'synset': 'leather.n.01', 'synonyms': ['leather'], 'id': 635, 'def': 'an animal skin made smooth and flexible by removing the hair and then tanning', 'name': 'leather'}, {'frequency': 'c', 'synset': 'legging.n.01', 'synonyms': ['legging_(clothing)', 'leging_(clothing)', 'leg_covering'], 'id': 636, 'def': 'a garment covering the leg (usually extending from the knee to the ankle)', 'name': 'legging_(clothing)'}, {'frequency': 'c', 'synset': 'lego.n.01', 'synonyms': ['Lego', 'Lego_set'], 'id': 637, 'def': "a child's plastic construction set for making models from blocks", 'name': 'Lego'}, {'frequency': 'r', 'synset': 'legume.n.02', 'synonyms': ['legume'], 'id': 638, 'def': 'the fruit or seed of bean or pea plants', 'name': 'legume'}, {'frequency': 'f', 'synset': 'lemon.n.01', 'synonyms': ['lemon'], 'id': 639, 'def': 'yellow oval fruit with juicy acidic flesh', 'name': 'lemon'}, {'frequency': 'r', 'synset': 'lemonade.n.01', 'synonyms': ['lemonade'], 'id': 640, 'def': 'sweetened beverage of diluted lemon juice', 'name': 'lemonade'}, {'frequency': 'f', 'synset': 'lettuce.n.02', 'synonyms': ['lettuce'], 'id': 641, 'def': 'leafy plant commonly eaten in salad or on sandwiches', 'name': 'lettuce'}, {'frequency': 'f', 'synset': 'license_plate.n.01', 'synonyms': ['license_plate', 'numberplate'], 'id': 642, 'def': "a plate mounted on the front and back of car and bearing the car's registration number", 'name': 'license_plate'}, {'frequency': 'f', 'synset': 'life_buoy.n.01', 'synonyms': ['life_buoy', 'lifesaver', 'life_belt', 'life_ring'], 'id': 643, 'def': 'a ring-shaped life preserver used to prevent drowning (NOT a life-jacket or vest)', 'name': 'life_buoy'}, {'frequency': 'f', 'synset': 'life_jacket.n.01', 'synonyms': ['life_jacket', 'life_vest'], 'id': 644, 'def': 'life preserver consisting of a sleeveless jacket of buoyant or inflatable design', 'name': 'life_jacket'}, {'frequency': 'f', 'synset': 'light_bulb.n.01', 'synonyms': ['lightbulb'], 'id': 645, 'def': 'lightblub\/source of light', 'name': 'lightbulb'}, {'frequency': 'r', 'synset': 'lightning_rod.n.02', 'synonyms': ['lightning_rod', 'lightning_conductor'], 'id': 646, 'def': 'a metallic conductor that is attached to a high point and leads to the ground', 'name': 'lightning_rod'}, {'frequency': 'f', 'synset': 'lime.n.06', 'synonyms': ['lime'], 'id': 647, 'def': 'the green acidic fruit of any of various lime trees', 'name': 'lime'}, {'frequency': 'r', 'synset': 'limousine.n.01', 'synonyms': ['limousine'], 'id': 648, 'def': 'long luxurious car; usually driven by a chauffeur', 'name': 'limousine'}, {'frequency': 'c', 'synset': 'lion.n.01', 'synonyms': ['lion'], 'id': 649, 'def': 'large gregarious predatory cat of Africa and India', 'name': 'lion'}, {'frequency': 'c', 'synset': 'lip_balm.n.01', 'synonyms': ['lip_balm'], 'id': 650, 'def': 'a balm applied to the lips', 'name': 'lip_balm'}, {'frequency': 'r', 'synset': 'liquor.n.01', 'synonyms': ['liquor', 'spirits', 'hard_liquor', 'liqueur', 'cordial'], 'id': 651, 'def': 'liquor or beer', 'name': 'liquor'}, {'frequency': 'c', 'synset': 'lizard.n.01', 'synonyms': ['lizard'], 'id': 652, 'def': 'a reptile with usually two pairs of legs and a tapering tail', 'name': 'lizard'}, {'frequency': 'f', 'synset': 'log.n.01', 'synonyms': ['log'], 'id': 653, 'def': 'a segment of the trunk of a tree when stripped of branches', 'name': 'log'}, {'frequency': 'c', 'synset': 'lollipop.n.02', 'synonyms': ['lollipop'], 'id': 654, 'def': 'hard candy on a stick', 'name': 'lollipop'}, {'frequency': 'f', 'synset': 'loudspeaker.n.01', 'synonyms': ['speaker_(stero_equipment)'], 'id': 655, 'def': 'electronic device that produces sound often as part of a stereo system', 'name': 'speaker_(stero_equipment)'}, {'frequency': 'c', 'synset': 'love_seat.n.01', 'synonyms': ['loveseat'], 'id': 656, 'def': 'small sofa that seats two people', 'name': 'loveseat'}, {'frequency': 'r', 'synset': 'machine_gun.n.01', 'synonyms': ['machine_gun'], 'id': 657, 'def': 'a rapidly firing automatic gun', 'name': 'machine_gun'}, {'frequency': 'f', 'synset': 'magazine.n.02', 'synonyms': ['magazine'], 'id': 658, 'def': 'a paperback periodic publication', 'name': 'magazine'}, {'frequency': 'f', 'synset': 'magnet.n.01', 'synonyms': ['magnet'], 'id': 659, 'def': 'a device that attracts iron and produces a magnetic field', 'name': 'magnet'}, {'frequency': 'c', 'synset': 'mail_slot.n.01', 'synonyms': ['mail_slot'], 'id': 660, 'def': 'a slot (usually in a door) through which mail can be delivered', 'name': 'mail_slot'}, {'frequency': 'f', 'synset': 'mailbox.n.01', 'synonyms': ['mailbox_(at_home)', 'letter_box_(at_home)'], 'id': 661, 'def': 'a private box for delivery of mail', 'name': 'mailbox_(at_home)'}, {'frequency': 'r', 'synset': 'mallard.n.01', 'synonyms': ['mallard'], 'id': 662, 'def': 'wild dabbling duck from which domestic ducks are descended', 'name': 'mallard'}, {'frequency': 'r', 'synset': 'mallet.n.01', 'synonyms': ['mallet'], 'id': 663, 'def': 'a sports implement with a long handle and a hammer-like head used to hit a ball', 'name': 'mallet'}, {'frequency': 'r', 'synset': 'mammoth.n.01', 'synonyms': ['mammoth'], 'id': 664, 'def': 'any of numerous extinct elephants widely distributed in the Pleistocene', 'name': 'mammoth'}, {'frequency': 'r', 'synset': 'manatee.n.01', 'synonyms': ['manatee'], 'id': 665, 'def': 'sirenian mammal of tropical coastal waters of America', 'name': 'manatee'}, {'frequency': 'c', 'synset': 'mandarin.n.05', 'synonyms': ['mandarin_orange'], 'id': 666, 'def': 'a somewhat flat reddish-orange loose skinned citrus of China', 'name': 'mandarin_orange'}, {'frequency': 'c', 'synset': 'manger.n.01', 'synonyms': ['manger', 'trough'], 'id': 667, 'def': 'a container (usually in a barn or stable) from which cattle or horses feed', 'name': 'manger'}, {'frequency': 'f', 'synset': 'manhole.n.01', 'synonyms': ['manhole'], 'id': 668, 'def': 'a hole (usually with a flush cover) through which a person can gain access to an underground structure', 'name': 'manhole'}, {'frequency': 'f', 'synset': 'map.n.01', 'synonyms': ['map'], 'id': 669, 'def': "a diagrammatic representation of the earth's surface (or part of it)", 'name': 'map'}, {'frequency': 'f', 'synset': 'marker.n.03', 'synonyms': ['marker'], 'id': 670, 'def': 'a writing implement for making a mark', 'name': 'marker'}, {'frequency': 'r', 'synset': 'martini.n.01', 'synonyms': ['martini'], 'id': 671, 'def': 'a cocktail made of gin (or vodka) with dry vermouth', 'name': 'martini'}, {'frequency': 'r', 'synset': 'mascot.n.01', 'synonyms': ['mascot'], 'id': 672, 'def': 'a person or animal that is adopted by a team or other group as a symbolic figure', 'name': 'mascot'}, {'frequency': 'c', 'synset': 'mashed_potato.n.01', 'synonyms': ['mashed_potato'], 'id': 673, 'def': 'potato that has been peeled and boiled and then mashed', 'name': 'mashed_potato'}, {'frequency': 'r', 'synset': 'masher.n.02', 'synonyms': ['masher'], 'id': 674, 'def': 'a kitchen utensil used for mashing (e.g. potatoes)', 'name': 'masher'}, {'frequency': 'f', 'synset': 'mask.n.04', 'synonyms': ['mask', 'facemask'], 'id': 675, 'def': 'a protective covering worn over the face', 'name': 'mask'}, {'frequency': 'f', 'synset': 'mast.n.01', 'synonyms': ['mast'], 'id': 676, 'def': 'a vertical spar for supporting sails', 'name': 'mast'}, {'frequency': 'c', 'synset': 'mat.n.03', 'synonyms': ['mat_(gym_equipment)', 'gym_mat'], 'id': 677, 'def': 'sports equipment consisting of a piece of thick padding on the floor for gymnastics', 'name': 'mat_(gym_equipment)'}, {'frequency': 'r', 'synset': 'matchbox.n.01', 'synonyms': ['matchbox'], 'id': 678, 'def': 'a box for holding matches', 'name': 'matchbox'}, {'frequency': 'f', 'synset': 'mattress.n.01', 'synonyms': ['mattress'], 'id': 679, 'def': 'a thick pad filled with resilient material used as a bed or part of a bed', 'name': 'mattress'}, {'frequency': 'c', 'synset': 'measuring_cup.n.01', 'synonyms': ['measuring_cup'], 'id': 680, 'def': 'graduated cup used to measure liquid or granular ingredients', 'name': 'measuring_cup'}, {'frequency': 'c', 'synset': 'measuring_stick.n.01', 'synonyms': ['measuring_stick', 'ruler_(measuring_stick)', 'measuring_rod'], 'id': 681, 'def': 'measuring instrument having a sequence of marks at regular intervals', 'name': 'measuring_stick'}, {'frequency': 'c', 'synset': 'meatball.n.01', 'synonyms': ['meatball'], 'id': 682, 'def': 'ground meat formed into a ball and fried or simmered in broth', 'name': 'meatball'}, {'frequency': 'c', 'synset': 'medicine.n.02', 'synonyms': ['medicine'], 'id': 683, 'def': 'something that treats or prevents or alleviates the symptoms of disease', 'name': 'medicine'}, {'frequency': 'c', 'synset': 'melon.n.01', 'synonyms': ['melon'], 'id': 684, 'def': 'fruit of the gourd family having a hard rind and sweet juicy flesh', 'name': 'melon'}, {'frequency': 'f', 'synset': 'microphone.n.01', 'synonyms': ['microphone'], 'id': 685, 'def': 'device for converting sound waves into electrical energy', 'name': 'microphone'}, {'frequency': 'r', 'synset': 'microscope.n.01', 'synonyms': ['microscope'], 'id': 686, 'def': 'magnifier of the image of small objects', 'name': 'microscope'}, {'frequency': 'f', 'synset': 'microwave.n.02', 'synonyms': ['microwave_oven'], 'id': 687, 'def': 'kitchen appliance that cooks food by passing an electromagnetic wave through it', 'name': 'microwave_oven'}, {'frequency': 'r', 'synset': 'milestone.n.01', 'synonyms': ['milestone', 'milepost'], 'id': 688, 'def': 'stone post at side of a road to show distances', 'name': 'milestone'}, {'frequency': 'f', 'synset': 'milk.n.01', 'synonyms': ['milk'], 'id': 689, 'def': 'a white nutritious liquid secreted by mammals and used as food by human beings', 'name': 'milk'}, {'frequency': 'r', 'synset': 'milk_can.n.01', 'synonyms': ['milk_can'], 'id': 690, 'def': 'can for transporting milk', 'name': 'milk_can'}, {'frequency': 'r', 'synset': 'milkshake.n.01', 'synonyms': ['milkshake'], 'id': 691, 'def': 'frothy drink of milk and flavoring and sometimes fruit or ice cream', 'name': 'milkshake'}, {'frequency': 'f', 'synset': 'minivan.n.01', 'synonyms': ['minivan'], 'id': 692, 'def': 'a small box-shaped passenger van', 'name': 'minivan'}, {'frequency': 'r', 'synset': 'mint.n.05', 'synonyms': ['mint_candy'], 'id': 693, 'def': 'a candy that is flavored with a mint oil', 'name': 'mint_candy'}, {'frequency': 'f', 'synset': 'mirror.n.01', 'synonyms': ['mirror'], 'id': 694, 'def': 'polished surface that forms images by reflecting light', 'name': 'mirror'}, {'frequency': 'c', 'synset': 'mitten.n.01', 'synonyms': ['mitten'], 'id': 695, 'def': 'glove that encases the thumb separately and the other four fingers together', 'name': 'mitten'}, {'frequency': 'c', 'synset': 'mixer.n.04', 'synonyms': ['mixer_(kitchen_tool)', 'stand_mixer'], 'id': 696, 'def': 'a kitchen utensil that is used for mixing foods', 'name': 'mixer_(kitchen_tool)'}, {'frequency': 'c', 'synset': 'money.n.03', 'synonyms': ['money'], 'id': 697, 'def': 'the official currency issued by a government or national bank', 'name': 'money'}, {'frequency': 'f', 'synset': 'monitor.n.04', 'synonyms': ['monitor_(computer_equipment) computer_monitor'], 'id': 698, 'def': 'a computer monitor', 'name': 'monitor_(computer_equipment) computer_monitor'}, {'frequency': 'c', 'synset': 'monkey.n.01', 'synonyms': ['monkey'], 'id': 699, 'def': 'any of various long-tailed primates', 'name': 'monkey'}, {'frequency': 'f', 'synset': 'motor.n.01', 'synonyms': ['motor'], 'id': 700, 'def': 'machine that converts other forms of energy into mechanical energy and so imparts motion', 'name': 'motor'}, {'frequency': 'f', 'synset': 'motor_scooter.n.01', 'synonyms': ['motor_scooter', 'scooter'], 'id': 701, 'def': 'a wheeled vehicle with small wheels and a low-powered engine', 'name': 'motor_scooter'}, {'frequency': 'r', 'synset': 'motor_vehicle.n.01', 'synonyms': ['motor_vehicle', 'automotive_vehicle'], 'id': 702, 'def': 'a self-propelled wheeled vehicle that does not run on rails', 'name': 'motor_vehicle'}, {'frequency': 'f', 'synset': 'motorcycle.n.01', 'synonyms': ['motorcycle'], 'id': 703, 'def': 'a motor vehicle with two wheels and a strong frame', 'name': 'motorcycle'}, {'frequency': 'f', 'synset': 'mound.n.01', 'synonyms': ['mound_(baseball)', "pitcher's_mound"], 'id': 704, 'def': '(baseball) the slight elevation on which the pitcher stands', 'name': 'mound_(baseball)'}, {'frequency': 'f', 'synset': 'mouse.n.04', 'synonyms': ['mouse_(computer_equipment)', 'computer_mouse'], 'id': 705, 'def': 'a computer input device that controls an on-screen pointer (does not include trackpads \/ touchpads)', 'name': 'mouse_(computer_equipment)'}, {'frequency': 'f', 'synset': 'mousepad.n.01', 'synonyms': ['mousepad'], 'id': 706, 'def': 'a small portable pad that provides an operating surface for a computer mouse', 'name': 'mousepad'}, {'frequency': 'c', 'synset': 'muffin.n.01', 'synonyms': ['muffin'], 'id': 707, 'def': 'a sweet quick bread baked in a cup-shaped pan', 'name': 'muffin'}, {'frequency': 'f', 'synset': 'mug.n.04', 'synonyms': ['mug'], 'id': 708, 'def': 'with handle and usually cylindrical', 'name': 'mug'}, {'frequency': 'f', 'synset': 'mushroom.n.02', 'synonyms': ['mushroom'], 'id': 709, 'def': 'a common mushroom', 'name': 'mushroom'}, {'frequency': 'r', 'synset': 'music_stool.n.01', 'synonyms': ['music_stool', 'piano_stool'], 'id': 710, 'def': 'a stool for piano players; usually adjustable in height', 'name': 'music_stool'}, {'frequency': 'c', 'synset': 'musical_instrument.n.01', 'synonyms': ['musical_instrument', 'instrument_(musical)'], 'id': 711, 'def': 'any of various devices or contrivances that can be used to produce musical tones or sounds', 'name': 'musical_instrument'}, {'frequency': 'r', 'synset': 'nailfile.n.01', 'synonyms': ['nailfile'], 'id': 712, 'def': 'a small flat file for shaping the nails', 'name': 'nailfile'}, {'frequency': 'f', 'synset': 'napkin.n.01', 'synonyms': ['napkin', 'table_napkin', 'serviette'], 'id': 713, 'def': 'a small piece of table linen or paper that is used to wipe the mouth and to cover the lap in order to protect clothing', 'name': 'napkin'}, {'frequency': 'r', 'synset': 'neckerchief.n.01', 'synonyms': ['neckerchief'], 'id': 714, 'def': 'a kerchief worn around the neck', 'name': 'neckerchief'}, {'frequency': 'f', 'synset': 'necklace.n.01', 'synonyms': ['necklace'], 'id': 715, 'def': 'jewelry consisting of a cord or chain (often bearing gems) worn about the neck as an ornament', 'name': 'necklace'}, {'frequency': 'f', 'synset': 'necktie.n.01', 'synonyms': ['necktie', 'tie_(necktie)'], 'id': 716, 'def': 'neckwear consisting of a long narrow piece of material worn under a collar and tied in knot at the front', 'name': 'necktie'}, {'frequency': 'c', 'synset': 'needle.n.03', 'synonyms': ['needle'], 'id': 717, 'def': 'a sharp pointed implement (usually metal)', 'name': 'needle'}, {'frequency': 'c', 'synset': 'nest.n.01', 'synonyms': ['nest'], 'id': 718, 'def': 'a structure in which animals lay eggs or give birth to their young', 'name': 'nest'}, {'frequency': 'f', 'synset': 'newspaper.n.01', 'synonyms': ['newspaper', 'paper_(newspaper)'], 'id': 719, 'def': 'a daily or weekly publication on folded sheets containing news, articles, and advertisements', 'name': 'newspaper'}, {'frequency': 'c', 'synset': 'newsstand.n.01', 'synonyms': ['newsstand'], 'id': 720, 'def': 'a stall where newspapers and other periodicals are sold', 'name': 'newsstand'}, {'frequency': 'c', 'synset': 'nightwear.n.01', 'synonyms': ['nightshirt', 'nightwear', 'sleepwear', 'nightclothes'], 'id': 721, 'def': 'garments designed to be worn in bed', 'name': 'nightshirt'}, {'frequency': 'r', 'synset': 'nosebag.n.01', 'synonyms': ['nosebag_(for_animals)', 'feedbag'], 'id': 722, 'def': 'a canvas bag that is used to feed an animal (such as a horse); covers the muzzle and fastens at the top of the head', 'name': 'nosebag_(for_animals)'}, {'frequency': 'c', 'synset': 'noseband.n.01', 'synonyms': ['noseband_(for_animals)', 'nosepiece_(for_animals)'], 'id': 723, 'def': "a strap that is the part of a bridle that goes over the animal's nose", 'name': 'noseband_(for_animals)'}, {'frequency': 'f', 'synset': 'notebook.n.01', 'synonyms': ['notebook'], 'id': 724, 'def': 'a book with blank pages for recording notes or memoranda', 'name': 'notebook'}, {'frequency': 'c', 'synset': 'notepad.n.01', 'synonyms': ['notepad'], 'id': 725, 'def': 'a pad of paper for keeping notes', 'name': 'notepad'}, {'frequency': 'f', 'synset': 'nut.n.03', 'synonyms': ['nut'], 'id': 726, 'def': 'a small metal block (usually square or hexagonal) with internal screw thread to be fitted onto a bolt', 'name': 'nut'}, {'frequency': 'r', 'synset': 'nutcracker.n.01', 'synonyms': ['nutcracker'], 'id': 727, 'def': 'a hand tool used to crack nuts open', 'name': 'nutcracker'}, {'frequency': 'f', 'synset': 'oar.n.01', 'synonyms': ['oar'], 'id': 728, 'def': 'an implement used to propel or steer a boat', 'name': 'oar'}, {'frequency': 'r', 'synset': 'octopus.n.01', 'synonyms': ['octopus_(food)'], 'id': 729, 'def': 'tentacles of octopus prepared as food', 'name': 'octopus_(food)'}, {'frequency': 'r', 'synset': 'octopus.n.02', 'synonyms': ['octopus_(animal)'], 'id': 730, 'def': 'bottom-living cephalopod having a soft oval body with eight long tentacles', 'name': 'octopus_(animal)'}, {'frequency': 'c', 'synset': 'oil_lamp.n.01', 'synonyms': ['oil_lamp', 'kerosene_lamp', 'kerosine_lamp'], 'id': 731, 'def': 'a lamp that burns oil (as kerosine) for light', 'name': 'oil_lamp'}, {'frequency': 'c', 'synset': 'olive_oil.n.01', 'synonyms': ['olive_oil'], 'id': 732, 'def': 'oil from olives', 'name': 'olive_oil'}, {'frequency': 'r', 'synset': 'omelet.n.01', 'synonyms': ['omelet', 'omelette'], 'id': 733, 'def': 'beaten eggs cooked until just set; may be folded around e.g. ham or cheese or jelly', 'name': 'omelet'}, {'frequency': 'f', 'synset': 'onion.n.01', 'synonyms': ['onion'], 'id': 734, 'def': 'the bulb of an onion plant', 'name': 'onion'}, {'frequency': 'f', 'synset': 'orange.n.01', 'synonyms': ['orange_(fruit)'], 'id': 735, 'def': 'orange (FRUIT of an orange tree)', 'name': 'orange_(fruit)'}, {'frequency': 'c', 'synset': 'orange_juice.n.01', 'synonyms': ['orange_juice'], 'id': 736, 'def': 'bottled or freshly squeezed juice of oranges', 'name': 'orange_juice'}, {'frequency': 'c', 'synset': 'ostrich.n.02', 'synonyms': ['ostrich'], 'id': 737, 'def': 'fast-running African flightless bird with two-toed feet; largest living bird', 'name': 'ostrich'}, {'frequency': 'f', 'synset': 'ottoman.n.03', 'synonyms': ['ottoman', 'pouf', 'pouffe', 'hassock'], 'id': 738, 'def': 'a thick standalone cushion used as a seat or footrest, often next to a chair', 'name': 'ottoman'}, {'frequency': 'f', 'synset': 'oven.n.01', 'synonyms': ['oven'], 'id': 739, 'def': 'kitchen appliance used for baking or roasting', 'name': 'oven'}, {'frequency': 'c', 'synset': 'overall.n.01', 'synonyms': ['overalls_(clothing)'], 'id': 740, 'def': 'work clothing consisting of denim trousers usually with a bib and shoulder straps', 'name': 'overalls_(clothing)'}, {'frequency': 'c', 'synset': 'owl.n.01', 'synonyms': ['owl'], 'id': 741, 'def': 'nocturnal bird of prey with hawk-like beak and claws and large head with front-facing eyes', 'name': 'owl'}, {'frequency': 'c', 'synset': 'packet.n.03', 'synonyms': ['packet'], 'id': 742, 'def': 'a small package or bundle', 'name': 'packet'}, {'frequency': 'r', 'synset': 'pad.n.03', 'synonyms': ['inkpad', 'inking_pad', 'stamp_pad'], 'id': 743, 'def': 'absorbent material saturated with ink used to transfer ink evenly to a rubber stamp', 'name': 'inkpad'}, {'frequency': 'c', 'synset': 'pad.n.04', 'synonyms': ['pad'], 'id': 744, 'def': 'mostly arm\/knee pads labeled', 'name': 'pad'}, {'frequency': 'f', 'synset': 'paddle.n.04', 'synonyms': ['paddle', 'boat_paddle'], 'id': 745, 'def': 'a short light oar used without an oarlock to propel a canoe or small boat', 'name': 'paddle'}, {'frequency': 'c', 'synset': 'padlock.n.01', 'synonyms': ['padlock'], 'id': 746, 'def': 'a detachable, portable lock', 'name': 'padlock'}, {'frequency': 'c', 'synset': 'paintbrush.n.01', 'synonyms': ['paintbrush'], 'id': 747, 'def': 'a brush used as an applicator to apply paint', 'name': 'paintbrush'}, {'frequency': 'f', 'synset': 'painting.n.01', 'synonyms': ['painting'], 'id': 748, 'def': 'graphic art consisting of an artistic composition made by applying paints to a surface', 'name': 'painting'}, {'frequency': 'f', 'synset': 'pajama.n.02', 'synonyms': ['pajamas', 'pyjamas'], 'id': 749, 'def': 'loose-fitting nightclothes worn for sleeping or lounging', 'name': 'pajamas'}, {'frequency': 'c', 'synset': 'palette.n.02', 'synonyms': ['palette', 'pallet'], 'id': 750, 'def': 'board that provides a flat surface on which artists mix paints and the range of colors used', 'name': 'palette'}, {'frequency': 'f', 'synset': 'pan.n.01', 'synonyms': ['pan_(for_cooking)', 'cooking_pan'], 'id': 751, 'def': 'cooking utensil consisting of a wide metal vessel', 'name': 'pan_(for_cooking)'}, {'frequency': 'r', 'synset': 'pan.n.03', 'synonyms': ['pan_(metal_container)'], 'id': 752, 'def': 'shallow container made of metal', 'name': 'pan_(metal_container)'}, {'frequency': 'c', 'synset': 'pancake.n.01', 'synonyms': ['pancake'], 'id': 753, 'def': 'a flat cake of thin batter fried on both sides on a griddle', 'name': 'pancake'}, {'frequency': 'r', 'synset': 'pantyhose.n.01', 'synonyms': ['pantyhose'], 'id': 754, 'def': "a woman's tights consisting of underpants and stockings", 'name': 'pantyhose'}, {'frequency': 'r', 'synset': 'papaya.n.02', 'synonyms': ['papaya'], 'id': 755, 'def': 'large oval melon-like tropical fruit with yellowish flesh', 'name': 'papaya'}, {'frequency': 'f', 'synset': 'paper_plate.n.01', 'synonyms': ['paper_plate'], 'id': 756, 'def': 'a disposable plate made of cardboard', 'name': 'paper_plate'}, {'frequency': 'f', 'synset': 'paper_towel.n.01', 'synonyms': ['paper_towel'], 'id': 757, 'def': 'a disposable towel made of absorbent paper', 'name': 'paper_towel'}, {'frequency': 'r', 'synset': 'paperback_book.n.01', 'synonyms': ['paperback_book', 'paper-back_book', 'softback_book', 'soft-cover_book'], 'id': 758, 'def': 'a book with paper covers', 'name': 'paperback_book'}, {'frequency': 'r', 'synset': 'paperweight.n.01', 'synonyms': ['paperweight'], 'id': 759, 'def': 'a weight used to hold down a stack of papers', 'name': 'paperweight'}, {'frequency': 'c', 'synset': 'parachute.n.01', 'synonyms': ['parachute'], 'id': 760, 'def': 'rescue equipment consisting of a device that fills with air and retards your fall', 'name': 'parachute'}, {'frequency': 'c', 'synset': 'parakeet.n.01', 'synonyms': ['parakeet', 'parrakeet', 'parroket', 'paraquet', 'paroquet', 'parroquet'], 'id': 761, 'def': 'any of numerous small slender long-tailed parrots', 'name': 'parakeet'}, {'frequency': 'c', 'synset': 'parasail.n.01', 'synonyms': ['parasail_(sports)'], 'id': 762, 'def': 'parachute that will lift a person up into the air when it is towed by a motorboat or a car', 'name': 'parasail_(sports)'}, {'frequency': 'c', 'synset': 'parasol.n.01', 'synonyms': ['parasol', 'sunshade'], 'id': 763, 'def': 'a handheld collapsible source of shade', 'name': 'parasol'}, {'frequency': 'r', 'synset': 'parchment.n.01', 'synonyms': ['parchment'], 'id': 764, 'def': 'a superior paper resembling sheepskin', 'name': 'parchment'}, {'frequency': 'c', 'synset': 'parka.n.01', 'synonyms': ['parka', 'anorak'], 'id': 765, 'def': "a kind of heavy jacket (`windcheater' is a British term)", 'name': 'parka'}, {'frequency': 'f', 'synset': 'parking_meter.n.01', 'synonyms': ['parking_meter'], 'id': 766, 'def': 'a coin-operated timer located next to a parking space', 'name': 'parking_meter'}, {'frequency': 'c', 'synset': 'parrot.n.01', 'synonyms': ['parrot'], 'id': 767, 'def': 'usually brightly colored tropical birds with short hooked beaks and the ability to mimic sounds', 'name': 'parrot'}, {'frequency': 'c', 'synset': 'passenger_car.n.01', 'synonyms': ['passenger_car_(part_of_a_train)', 'coach_(part_of_a_train)'], 'id': 768, 'def': 'a railcar where passengers ride', 'name': 'passenger_car_(part_of_a_train)'}, {'frequency': 'r', 'synset': 'passenger_ship.n.01', 'synonyms': ['passenger_ship'], 'id': 769, 'def': 'a ship built to carry passengers', 'name': 'passenger_ship'}, {'frequency': 'c', 'synset': 'passport.n.02', 'synonyms': ['passport'], 'id': 770, 'def': 'a document issued by a country to a citizen allowing that person to travel abroad and re-enter the home country', 'name': 'passport'}, {'frequency': 'f', 'synset': 'pastry.n.02', 'synonyms': ['pastry'], 'id': 771, 'def': 'any of various baked foods made of dough or batter', 'name': 'pastry'}, {'frequency': 'r', 'synset': 'patty.n.01', 'synonyms': ['patty_(food)'], 'id': 772, 'def': 'small flat mass of chopped food', 'name': 'patty_(food)'}, {'frequency': 'c', 'synset': 'pea.n.01', 'synonyms': ['pea_(food)'], 'id': 773, 'def': 'seed of a pea plant used for food', 'name': 'pea_(food)'}, {'frequency': 'c', 'synset': 'peach.n.03', 'synonyms': ['peach'], 'id': 774, 'def': 'downy juicy fruit with sweet yellowish or whitish flesh', 'name': 'peach'}, {'frequency': 'c', 'synset': 'peanut_butter.n.01', 'synonyms': ['peanut_butter'], 'id': 775, 'def': 'a spread made from ground peanuts', 'name': 'peanut_butter'}, {'frequency': 'f', 'synset': 'pear.n.01', 'synonyms': ['pear'], 'id': 776, 'def': 'sweet juicy gritty-textured fruit available in many varieties', 'name': 'pear'}, {'frequency': 'c', 'synset': 'peeler.n.03', 'synonyms': ['peeler_(tool_for_fruit_and_vegetables)'], 'id': 777, 'def': 'a device for peeling vegetables or fruits', 'name': 'peeler_(tool_for_fruit_and_vegetables)'}, {'frequency': 'r', 'synset': 'peg.n.04', 'synonyms': ['wooden_leg', 'pegleg'], 'id': 778, 'def': 'a prosthesis that replaces a missing leg', 'name': 'wooden_leg'}, {'frequency': 'r', 'synset': 'pegboard.n.01', 'synonyms': ['pegboard'], 'id': 779, 'def': 'a board perforated with regularly spaced holes into which pegs can be fitted', 'name': 'pegboard'}, {'frequency': 'c', 'synset': 'pelican.n.01', 'synonyms': ['pelican'], 'id': 780, 'def': 'large long-winged warm-water seabird having a large bill with a distensible pouch for fish', 'name': 'pelican'}, {'frequency': 'f', 'synset': 'pen.n.01', 'synonyms': ['pen'], 'id': 781, 'def': 'a writing implement with a point from which ink flows', 'name': 'pen'}, {'frequency': 'f', 'synset': 'pencil.n.01', 'synonyms': ['pencil'], 'id': 782, 'def': 'a thin cylindrical pointed writing implement made of wood and graphite', 'name': 'pencil'}, {'frequency': 'r', 'synset': 'pencil_box.n.01', 'synonyms': ['pencil_box', 'pencil_case'], 'id': 783, 'def': 'a box for holding pencils', 'name': 'pencil_box'}, {'frequency': 'r', 'synset': 'pencil_sharpener.n.01', 'synonyms': ['pencil_sharpener'], 'id': 784, 'def': 'a rotary implement for sharpening the point on pencils', 'name': 'pencil_sharpener'}, {'frequency': 'r', 'synset': 'pendulum.n.01', 'synonyms': ['pendulum'], 'id': 785, 'def': 'an apparatus consisting of an object mounted so that it swings freely under the influence of gravity', 'name': 'pendulum'}, {'frequency': 'c', 'synset': 'penguin.n.01', 'synonyms': ['penguin'], 'id': 786, 'def': 'short-legged flightless birds of cold southern regions having webbed feet and wings modified as flippers', 'name': 'penguin'}, {'frequency': 'r', 'synset': 'pennant.n.02', 'synonyms': ['pennant'], 'id': 787, 'def': 'a flag longer than it is wide (and often tapering)', 'name': 'pennant'}, {'frequency': 'r', 'synset': 'penny.n.02', 'synonyms': ['penny_(coin)'], 'id': 788, 'def': 'a coin worth one-hundredth of the value of the basic unit', 'name': 'penny_(coin)'}, {'frequency': 'f', 'synset': 'pepper.n.03', 'synonyms': ['pepper', 'peppercorn'], 'id': 789, 'def': 'pungent seasoning from the berry of the common pepper plant; whole or ground', 'name': 'pepper'}, {'frequency': 'c', 'synset': 'pepper_mill.n.01', 'synonyms': ['pepper_mill', 'pepper_grinder'], 'id': 790, 'def': 'a mill for grinding pepper', 'name': 'pepper_mill'}, {'frequency': 'c', 'synset': 'perfume.n.02', 'synonyms': ['perfume'], 'id': 791, 'def': 'a toiletry that emits and diffuses a fragrant odor', 'name': 'perfume'}, {'frequency': 'r', 'synset': 'persimmon.n.02', 'synonyms': ['persimmon'], 'id': 792, 'def': 'orange fruit resembling a plum; edible when fully ripe', 'name': 'persimmon'}, {'frequency': 'f', 'synset': 'person.n.01', 'synonyms': ['person', 'baby', 'child', 'boy', 'girl', 'man', 'woman', 'human'], 'id': 793, 'def': 'a human being', 'name': 'person'}, {'frequency': 'c', 'synset': 'pet.n.01', 'synonyms': ['pet'], 'id': 794, 'def': 'a domesticated animal kept for companionship or amusement', 'name': 'pet'}, {'frequency': 'c', 'synset': 'pew.n.01', 'synonyms': ['pew_(church_bench)', 'church_bench'], 'id': 795, 'def': 'long bench with backs; used in church by the congregation', 'name': 'pew_(church_bench)'}, {'frequency': 'r', 'synset': 'phonebook.n.01', 'synonyms': ['phonebook', 'telephone_book', 'telephone_directory'], 'id': 796, 'def': 'a directory containing an alphabetical list of telephone subscribers and their telephone numbers', 'name': 'phonebook'}, {'frequency': 'c', 'synset': 'phonograph_record.n.01', 'synonyms': ['phonograph_record', 'phonograph_recording', 'record_(phonograph_recording)'], 'id': 797, 'def': 'sound recording consisting of a typically black disk with a continuous groove', 'name': 'phonograph_record'}, {'frequency': 'f', 'synset': 'piano.n.01', 'synonyms': ['piano'], 'id': 798, 'def': 'a keyboard instrument that is played by depressing keys that cause hammers to strike tuned strings and produce sounds', 'name': 'piano'}, {'frequency': 'f', 'synset': 'pickle.n.01', 'synonyms': ['pickle'], 'id': 799, 'def': 'vegetables (especially cucumbers) preserved in brine or vinegar', 'name': 'pickle'}, {'frequency': 'f', 'synset': 'pickup.n.01', 'synonyms': ['pickup_truck'], 'id': 800, 'def': 'a light truck with an open body and low sides and a tailboard', 'name': 'pickup_truck'}, {'frequency': 'c', 'synset': 'pie.n.01', 'synonyms': ['pie'], 'id': 801, 'def': 'dish baked in pastry-lined pan often with a pastry top', 'name': 'pie'}, {'frequency': 'c', 'synset': 'pigeon.n.01', 'synonyms': ['pigeon'], 'id': 802, 'def': 'wild and domesticated birds having a heavy body and short legs', 'name': 'pigeon'}, {'frequency': 'r', 'synset': 'piggy_bank.n.01', 'synonyms': ['piggy_bank', 'penny_bank'], 'id': 803, 'def': "a child's coin bank (often shaped like a pig)", 'name': 'piggy_bank'}, {'frequency': 'f', 'synset': 'pillow.n.01', 'synonyms': ['pillow'], 'id': 804, 'def': 'a cushion to support the head of a sleeping person', 'name': 'pillow'}, {'frequency': 'r', 'synset': 'pin.n.09', 'synonyms': ['pin_(non_jewelry)'], 'id': 805, 'def': 'a small slender (often pointed) piece of wood or metal used to support or fasten or attach things', 'name': 'pin_(non_jewelry)'}, {'frequency': 'f', 'synset': 'pineapple.n.02', 'synonyms': ['pineapple'], 'id': 806, 'def': 'large sweet fleshy tropical fruit with a tuft of stiff leaves', 'name': 'pineapple'}, {'frequency': 'c', 'synset': 'pinecone.n.01', 'synonyms': ['pinecone'], 'id': 807, 'def': 'the seed-producing cone of a pine tree', 'name': 'pinecone'}, {'frequency': 'r', 'synset': 'ping-pong_ball.n.01', 'synonyms': ['ping-pong_ball'], 'id': 808, 'def': 'light hollow ball used in playing table tennis', 'name': 'ping-pong_ball'}, {'frequency': 'r', 'synset': 'pinwheel.n.03', 'synonyms': ['pinwheel'], 'id': 809, 'def': 'a toy consisting of vanes of colored paper or plastic that is pinned to a stick and spins when it is pointed into the wind', 'name': 'pinwheel'}, {'frequency': 'r', 'synset': 'pipe.n.01', 'synonyms': ['tobacco_pipe'], 'id': 810, 'def': 'a tube with a small bowl at one end; used for smoking tobacco', 'name': 'tobacco_pipe'}, {'frequency': 'f', 'synset': 'pipe.n.02', 'synonyms': ['pipe', 'piping'], 'id': 811, 'def': 'a long tube made of metal or plastic that is used to carry water or oil or gas etc.', 'name': 'pipe'}, {'frequency': 'r', 'synset': 'pistol.n.01', 'synonyms': ['pistol', 'handgun'], 'id': 812, 'def': 'a firearm that is held and fired with one hand', 'name': 'pistol'}, {'frequency': 'c', 'synset': 'pita.n.01', 'synonyms': ['pita_(bread)', 'pocket_bread'], 'id': 813, 'def': 'usually small round bread that can open into a pocket for filling', 'name': 'pita_(bread)'}, {'frequency': 'f', 'synset': 'pitcher.n.02', 'synonyms': ['pitcher_(vessel_for_liquid)', 'ewer'], 'id': 814, 'def': 'an open vessel with a handle and a spout for pouring', 'name': 'pitcher_(vessel_for_liquid)'}, {'frequency': 'r', 'synset': 'pitchfork.n.01', 'synonyms': ['pitchfork'], 'id': 815, 'def': 'a long-handled hand tool with sharp widely spaced prongs for lifting and pitching hay', 'name': 'pitchfork'}, {'frequency': 'f', 'synset': 'pizza.n.01', 'synonyms': ['pizza'], 'id': 816, 'def': 'Italian open pie made of thin bread dough spread with a spiced mixture of e.g. tomato sauce and cheese', 'name': 'pizza'}, {'frequency': 'f', 'synset': 'place_mat.n.01', 'synonyms': ['place_mat'], 'id': 817, 'def': 'a mat placed on a table for an individual place setting', 'name': 'place_mat'}, {'frequency': 'f', 'synset': 'plate.n.04', 'synonyms': ['plate'], 'id': 818, 'def': 'dish on which food is served or from which food is eaten', 'name': 'plate'}, {'frequency': 'c', 'synset': 'platter.n.01', 'synonyms': ['platter'], 'id': 819, 'def': 'a large shallow dish used for serving food', 'name': 'platter'}, {'frequency': 'r', 'synset': 'playpen.n.01', 'synonyms': ['playpen'], 'id': 820, 'def': 'a portable enclosure in which babies may be left to play', 'name': 'playpen'}, {'frequency': 'c', 'synset': 'pliers.n.01', 'synonyms': ['pliers', 'plyers'], 'id': 821, 'def': 'a gripping hand tool with two hinged arms and (usually) serrated jaws', 'name': 'pliers'}, {'frequency': 'r', 'synset': 'plow.n.01', 'synonyms': ['plow_(farm_equipment)', 'plough_(farm_equipment)'], 'id': 822, 'def': 'a farm tool having one or more heavy blades to break the soil and cut a furrow prior to sowing', 'name': 'plow_(farm_equipment)'}, {'frequency': 'r', 'synset': 'plume.n.02', 'synonyms': ['plume'], 'id': 823, 'def': 'a feather or cluster of feathers worn as an ornament', 'name': 'plume'}, {'frequency': 'r', 'synset': 'pocket_watch.n.01', 'synonyms': ['pocket_watch'], 'id': 824, 'def': 'a watch that is carried in a small watch pocket', 'name': 'pocket_watch'}, {'frequency': 'c', 'synset': 'pocketknife.n.01', 'synonyms': ['pocketknife'], 'id': 825, 'def': 'a knife with a blade that folds into the handle; suitable for carrying in the pocket', 'name': 'pocketknife'}, {'frequency': 'c', 'synset': 'poker.n.01', 'synonyms': ['poker_(fire_stirring_tool)', 'stove_poker', 'fire_hook'], 'id': 826, 'def': 'fire iron consisting of a metal rod with a handle; used to stir a fire', 'name': 'poker_(fire_stirring_tool)'}, {'frequency': 'f', 'synset': 'pole.n.01', 'synonyms': ['pole', 'post'], 'id': 827, 'def': 'a long (usually round) rod of wood or metal or plastic', 'name': 'pole'}, {'frequency': 'f', 'synset': 'polo_shirt.n.01', 'synonyms': ['polo_shirt', 'sport_shirt'], 'id': 828, 'def': 'a shirt with short sleeves designed for comfort and casual wear', 'name': 'polo_shirt'}, {'frequency': 'r', 'synset': 'poncho.n.01', 'synonyms': ['poncho'], 'id': 829, 'def': 'a blanket-like cloak with a hole in the center for the head', 'name': 'poncho'}, {'frequency': 'c', 'synset': 'pony.n.05', 'synonyms': ['pony'], 'id': 830, 'def': 'any of various breeds of small gentle horses usually less than five feet high at the shoulder', 'name': 'pony'}, {'frequency': 'r', 'synset': 'pool_table.n.01', 'synonyms': ['pool_table', 'billiard_table', 'snooker_table'], 'id': 831, 'def': 'game equipment consisting of a heavy table on which pool is played', 'name': 'pool_table'}, {'frequency': 'f', 'synset': 'pop.n.02', 'synonyms': ['pop_(soda)', 'soda_(pop)', 'tonic', 'soft_drink'], 'id': 832, 'def': 'a sweet drink containing carbonated water and flavoring', 'name': 'pop_(soda)'}, {'frequency': 'c', 'synset': 'postbox.n.01', 'synonyms': ['postbox_(public)', 'mailbox_(public)'], 'id': 833, 'def': 'public box for deposit of mail', 'name': 'postbox_(public)'}, {'frequency': 'c', 'synset': 'postcard.n.01', 'synonyms': ['postcard', 'postal_card', 'mailing-card'], 'id': 834, 'def': 'a card for sending messages by post without an envelope', 'name': 'postcard'}, {'frequency': 'f', 'synset': 'poster.n.01', 'synonyms': ['poster', 'placard'], 'id': 835, 'def': 'a sign posted in a public place as an advertisement', 'name': 'poster'}, {'frequency': 'f', 'synset': 'pot.n.01', 'synonyms': ['pot'], 'id': 836, 'def': 'metal or earthenware cooking vessel that is usually round and deep; often has a handle and lid', 'name': 'pot'}, {'frequency': 'f', 'synset': 'pot.n.04', 'synonyms': ['flowerpot'], 'id': 837, 'def': 'a container in which plants are cultivated', 'name': 'flowerpot'}, {'frequency': 'f', 'synset': 'potato.n.01', 'synonyms': ['potato'], 'id': 838, 'def': 'an edible tuber native to South America', 'name': 'potato'}, {'frequency': 'c', 'synset': 'potholder.n.01', 'synonyms': ['potholder'], 'id': 839, 'def': 'an insulated pad for holding hot pots', 'name': 'potholder'}, {'frequency': 'c', 'synset': 'pottery.n.01', 'synonyms': ['pottery', 'clayware'], 'id': 840, 'def': 'ceramic ware made from clay and baked in a kiln', 'name': 'pottery'}, {'frequency': 'c', 'synset': 'pouch.n.01', 'synonyms': ['pouch'], 'id': 841, 'def': 'a small or medium size container for holding or carrying things', 'name': 'pouch'}, {'frequency': 'c', 'synset': 'power_shovel.n.01', 'synonyms': ['power_shovel', 'excavator', 'digger'], 'id': 842, 'def': 'a machine for excavating', 'name': 'power_shovel'}, {'frequency': 'c', 'synset': 'prawn.n.01', 'synonyms': ['prawn', 'shrimp'], 'id': 843, 'def': 'any of various edible decapod crustaceans', 'name': 'prawn'}, {'frequency': 'c', 'synset': 'pretzel.n.01', 'synonyms': ['pretzel'], 'id': 844, 'def': 'glazed and salted cracker typically in the shape of a loose knot', 'name': 'pretzel'}, {'frequency': 'f', 'synset': 'printer.n.03', 'synonyms': ['printer', 'printing_machine'], 'id': 845, 'def': 'a machine that prints', 'name': 'printer'}, {'frequency': 'c', 'synset': 'projectile.n.01', 'synonyms': ['projectile_(weapon)', 'missile'], 'id': 846, 'def': 'a weapon that is forcibly thrown or projected at a targets', 'name': 'projectile_(weapon)'}, {'frequency': 'c', 'synset': 'projector.n.02', 'synonyms': ['projector'], 'id': 847, 'def': 'an optical instrument that projects an enlarged image onto a screen', 'name': 'projector'}, {'frequency': 'f', 'synset': 'propeller.n.01', 'synonyms': ['propeller', 'propellor'], 'id': 848, 'def': 'a mechanical device that rotates to push against air or water', 'name': 'propeller'}, {'frequency': 'r', 'synset': 'prune.n.01', 'synonyms': ['prune'], 'id': 849, 'def': 'dried plum', 'name': 'prune'}, {'frequency': 'r', 'synset': 'pudding.n.01', 'synonyms': ['pudding'], 'id': 850, 'def': 'any of various soft thick unsweetened baked dishes', 'name': 'pudding'}, {'frequency': 'r', 'synset': 'puffer.n.02', 'synonyms': ['puffer_(fish)', 'pufferfish', 'blowfish', 'globefish'], 'id': 851, 'def': 'fishes whose elongated spiny body can inflate itself with water or air to form a globe', 'name': 'puffer_(fish)'}, {'frequency': 'r', 'synset': 'puffin.n.01', 'synonyms': ['puffin'], 'id': 852, 'def': 'seabirds having short necks and brightly colored compressed bills', 'name': 'puffin'}, {'frequency': 'r', 'synset': 'pug.n.01', 'synonyms': ['pug-dog'], 'id': 853, 'def': 'small compact smooth-coated breed of Asiatic origin having a tightly curled tail and broad flat wrinkled muzzle', 'name': 'pug-dog'}, {'frequency': 'c', 'synset': 'pumpkin.n.02', 'synonyms': ['pumpkin'], 'id': 854, 'def': 'usually large pulpy deep-yellow round fruit of the squash family maturing in late summer or early autumn', 'name': 'pumpkin'}, {'frequency': 'r', 'synset': 'punch.n.03', 'synonyms': ['puncher'], 'id': 855, 'def': 'a tool for making holes or indentations', 'name': 'puncher'}, {'frequency': 'r', 'synset': 'puppet.n.01', 'synonyms': ['puppet', 'marionette'], 'id': 856, 'def': 'a small figure of a person operated from above with strings by a puppeteer', 'name': 'puppet'}, {'frequency': 'c', 'synset': 'puppy.n.01', 'synonyms': ['puppy'], 'id': 857, 'def': 'a young dog', 'name': 'puppy'}, {'frequency': 'r', 'synset': 'quesadilla.n.01', 'synonyms': ['quesadilla'], 'id': 858, 'def': 'a tortilla that is filled with cheese and heated', 'name': 'quesadilla'}, {'frequency': 'r', 'synset': 'quiche.n.02', 'synonyms': ['quiche'], 'id': 859, 'def': 'a tart filled with rich unsweetened custard; often contains other ingredients (as cheese or ham or seafood or vegetables)', 'name': 'quiche'}, {'frequency': 'f', 'synset': 'quilt.n.01', 'synonyms': ['quilt', 'comforter'], 'id': 860, 'def': 'bedding made of two layers of cloth filled with stuffing and stitched together', 'name': 'quilt'}, {'frequency': 'c', 'synset': 'rabbit.n.01', 'synonyms': ['rabbit'], 'id': 861, 'def': 'any of various burrowing animals of the family Leporidae having long ears and short tails', 'name': 'rabbit'}, {'frequency': 'r', 'synset': 'racer.n.02', 'synonyms': ['race_car', 'racing_car'], 'id': 862, 'def': 'a fast car that competes in races', 'name': 'race_car'}, {'frequency': 'c', 'synset': 'racket.n.04', 'synonyms': ['racket', 'racquet'], 'id': 863, 'def': 'a sports implement used to strike a ball in various games', 'name': 'racket'}, {'frequency': 'r', 'synset': 'radar.n.01', 'synonyms': ['radar'], 'id': 864, 'def': 'measuring instrument in which the echo of a pulse of microwave radiation is used to detect and locate distant objects', 'name': 'radar'}, {'frequency': 'f', 'synset': 'radiator.n.03', 'synonyms': ['radiator'], 'id': 865, 'def': 'a mechanism consisting of a metal honeycomb through which hot fluids circulate', 'name': 'radiator'}, {'frequency': 'c', 'synset': 'radio_receiver.n.01', 'synonyms': ['radio_receiver', 'radio_set', 'radio', 'tuner_(radio)'], 'id': 866, 'def': 'an electronic receiver that detects and demodulates and amplifies transmitted radio signals', 'name': 'radio_receiver'}, {'frequency': 'c', 'synset': 'radish.n.03', 'synonyms': ['radish', 'daikon'], 'id': 867, 'def': 'pungent edible root of any of various cultivated radish plants', 'name': 'radish'}, {'frequency': 'c', 'synset': 'raft.n.01', 'synonyms': ['raft'], 'id': 868, 'def': 'a flat float (usually made of logs or planks) that can be used for transport or as a platform for swimmers', 'name': 'raft'}, {'frequency': 'r', 'synset': 'rag_doll.n.01', 'synonyms': ['rag_doll'], 'id': 869, 'def': 'a cloth doll that is stuffed and (usually) painted', 'name': 'rag_doll'}, {'frequency': 'c', 'synset': 'raincoat.n.01', 'synonyms': ['raincoat', 'waterproof_jacket'], 'id': 870, 'def': 'a water-resistant coat', 'name': 'raincoat'}, {'frequency': 'c', 'synset': 'ram.n.05', 'synonyms': ['ram_(animal)'], 'id': 871, 'def': 'uncastrated adult male sheep', 'name': 'ram_(animal)'}, {'frequency': 'c', 'synset': 'raspberry.n.02', 'synonyms': ['raspberry'], 'id': 872, 'def': 'red or black edible aggregate berries usually smaller than the related blackberries', 'name': 'raspberry'}, {'frequency': 'r', 'synset': 'rat.n.01', 'synonyms': ['rat'], 'id': 873, 'def': 'any of various long-tailed rodents similar to but larger than a mouse', 'name': 'rat'}, {'frequency': 'c', 'synset': 'razorblade.n.01', 'synonyms': ['razorblade'], 'id': 874, 'def': 'a blade that has very sharp edge', 'name': 'razorblade'}, {'frequency': 'c', 'synset': 'reamer.n.01', 'synonyms': ['reamer_(juicer)', 'juicer', 'juice_reamer'], 'id': 875, 'def': 'a squeezer with a conical ridged center that is used for squeezing juice from citrus fruit', 'name': 'reamer_(juicer)'}, {'frequency': 'f', 'synset': 'rearview_mirror.n.01', 'synonyms': ['rearview_mirror'], 'id': 876, 'def': 'vehicle mirror (side or rearview)', 'name': 'rearview_mirror'}, {'frequency': 'c', 'synset': 'receipt.n.02', 'synonyms': ['receipt'], 'id': 877, 'def': 'an acknowledgment (usually tangible) that payment has been made', 'name': 'receipt'}, {'frequency': 'c', 'synset': 'recliner.n.01', 'synonyms': ['recliner', 'reclining_chair', 'lounger_(chair)'], 'id': 878, 'def': 'an armchair whose back can be lowered and foot can be raised to allow the sitter to recline in it', 'name': 'recliner'}, {'frequency': 'c', 'synset': 'record_player.n.01', 'synonyms': ['record_player', 'phonograph_(record_player)', 'turntable'], 'id': 879, 'def': 'machine in which rotating records cause a stylus to vibrate and the vibrations are amplified acoustically or electronically', 'name': 'record_player'}, {'frequency': 'f', 'synset': 'reflector.n.01', 'synonyms': ['reflector'], 'id': 880, 'def': 'device that reflects light, radiation, etc.', 'name': 'reflector'}, {'frequency': 'f', 'synset': 'remote_control.n.01', 'synonyms': ['remote_control'], 'id': 881, 'def': 'a device that can be used to control a machine or apparatus from a distance', 'name': 'remote_control'}, {'frequency': 'c', 'synset': 'rhinoceros.n.01', 'synonyms': ['rhinoceros'], 'id': 882, 'def': 'massive powerful herbivorous odd-toed ungulate of southeast Asia and Africa having very thick skin and one or two horns on the snout', 'name': 'rhinoceros'}, {'frequency': 'r', 'synset': 'rib.n.03', 'synonyms': ['rib_(food)'], 'id': 883, 'def': 'cut of meat including one or more ribs', 'name': 'rib_(food)'}, {'frequency': 'c', 'synset': 'rifle.n.01', 'synonyms': ['rifle'], 'id': 884, 'def': 'a shoulder firearm with a long barrel', 'name': 'rifle'}, {'frequency': 'f', 'synset': 'ring.n.08', 'synonyms': ['ring'], 'id': 885, 'def': 'jewelry consisting of a circlet of precious metal (often set with jewels) worn on the finger', 'name': 'ring'}, {'frequency': 'r', 'synset': 'river_boat.n.01', 'synonyms': ['river_boat'], 'id': 886, 'def': 'a boat used on rivers or to ply a river', 'name': 'river_boat'}, {'frequency': 'r', 'synset': 'road_map.n.02', 'synonyms': ['road_map'], 'id': 887, 'def': '(NOT A ROAD) a MAP showing roads (for automobile travel)', 'name': 'road_map'}, {'frequency': 'c', 'synset': 'robe.n.01', 'synonyms': ['robe'], 'id': 888, 'def': 'any loose flowing garment', 'name': 'robe'}, {'frequency': 'c', 'synset': 'rocking_chair.n.01', 'synonyms': ['rocking_chair'], 'id': 889, 'def': 'a chair mounted on rockers', 'name': 'rocking_chair'}, {'frequency': 'r', 'synset': 'rodent.n.01', 'synonyms': ['rodent'], 'id': 890, 'def': 'relatively small placental mammals having a single pair of constantly growing incisor teeth specialized for gnawing', 'name': 'rodent'}, {'frequency': 'r', 'synset': 'roller_skate.n.01', 'synonyms': ['roller_skate'], 'id': 891, 'def': 'a shoe with pairs of rollers (small hard wheels) fixed to the sole', 'name': 'roller_skate'}, {'frequency': 'r', 'synset': 'rollerblade.n.01', 'synonyms': ['Rollerblade'], 'id': 892, 'def': 'an in-line variant of a roller skate', 'name': 'Rollerblade'}, {'frequency': 'c', 'synset': 'rolling_pin.n.01', 'synonyms': ['rolling_pin'], 'id': 893, 'def': 'utensil consisting of a cylinder (usually of wood) with a handle at each end; used to roll out dough', 'name': 'rolling_pin'}, {'frequency': 'r', 'synset': 'root_beer.n.01', 'synonyms': ['root_beer'], 'id': 894, 'def': 'carbonated drink containing extracts of roots and herbs', 'name': 'root_beer'}, {'frequency': 'c', 'synset': 'router.n.02', 'synonyms': ['router_(computer_equipment)'], 'id': 895, 'def': 'a device that forwards data packets between computer networks', 'name': 'router_(computer_equipment)'}, {'frequency': 'f', 'synset': 'rubber_band.n.01', 'synonyms': ['rubber_band', 'elastic_band'], 'id': 896, 'def': 'a narrow band of elastic rubber used to hold things (such as papers) together', 'name': 'rubber_band'}, {'frequency': 'c', 'synset': 'runner.n.08', 'synonyms': ['runner_(carpet)'], 'id': 897, 'def': 'a long narrow carpet', 'name': 'runner_(carpet)'}, {'frequency': 'f', 'synset': 'sack.n.01', 'synonyms': ['plastic_bag', 'paper_bag'], 'id': 898, 'def': "a bag made of paper or plastic for holding customer's purchases", 'name': 'plastic_bag'}, {'frequency': 'f', 'synset': 'saddle.n.01', 'synonyms': ['saddle_(on_an_animal)'], 'id': 899, 'def': 'a seat for the rider of a horse or camel', 'name': 'saddle_(on_an_animal)'}, {'frequency': 'f', 'synset': 'saddle_blanket.n.01', 'synonyms': ['saddle_blanket', 'saddlecloth', 'horse_blanket'], 'id': 900, 'def': 'stable gear consisting of a blanket placed under the saddle', 'name': 'saddle_blanket'}, {'frequency': 'c', 'synset': 'saddlebag.n.01', 'synonyms': ['saddlebag'], 'id': 901, 'def': 'a large bag (or pair of bags) hung over a saddle', 'name': 'saddlebag'}, {'frequency': 'r', 'synset': 'safety_pin.n.01', 'synonyms': ['safety_pin'], 'id': 902, 'def': 'a pin in the form of a clasp; has a guard so the point of the pin will not stick the user', 'name': 'safety_pin'}, {'frequency': 'f', 'synset': 'sail.n.01', 'synonyms': ['sail'], 'id': 903, 'def': 'a large piece of fabric by means of which wind is used to propel a sailing vessel', 'name': 'sail'}, {'frequency': 'f', 'synset': 'salad.n.01', 'synonyms': ['salad'], 'id': 904, 'def': 'food mixtures either arranged on a plate or tossed and served with a moist dressing; usually consisting of or including greens', 'name': 'salad'}, {'frequency': 'r', 'synset': 'salad_plate.n.01', 'synonyms': ['salad_plate', 'salad_bowl'], 'id': 905, 'def': 'a plate or bowl for individual servings of salad', 'name': 'salad_plate'}, {'frequency': 'c', 'synset': 'salami.n.01', 'synonyms': ['salami'], 'id': 906, 'def': 'highly seasoned fatty sausage of pork and beef usually dried', 'name': 'salami'}, {'frequency': 'c', 'synset': 'salmon.n.01', 'synonyms': ['salmon_(fish)'], 'id': 907, 'def': 'any of various large food and game fishes of northern waters', 'name': 'salmon_(fish)'}, {'frequency': 'r', 'synset': 'salmon.n.03', 'synonyms': ['salmon_(food)'], 'id': 908, 'def': 'flesh of any of various marine or freshwater fish of the family Salmonidae', 'name': 'salmon_(food)'}, {'frequency': 'c', 'synset': 'salsa.n.01', 'synonyms': ['salsa'], 'id': 909, 'def': 'spicy sauce of tomatoes and onions and chili peppers to accompany Mexican foods', 'name': 'salsa'}, {'frequency': 'f', 'synset': 'saltshaker.n.01', 'synonyms': ['saltshaker'], 'id': 910, 'def': 'a shaker with a perforated top for sprinkling salt', 'name': 'saltshaker'}, {'frequency': 'f', 'synset': 'sandal.n.01', 'synonyms': ['sandal_(type_of_shoe)'], 'id': 911, 'def': 'a shoe consisting of a sole fastened by straps to the foot', 'name': 'sandal_(type_of_shoe)'}, {'frequency': 'f', 'synset': 'sandwich.n.01', 'synonyms': ['sandwich'], 'id': 912, 'def': 'two (or more) slices of bread with a filling between them', 'name': 'sandwich'}, {'frequency': 'r', 'synset': 'satchel.n.01', 'synonyms': ['satchel'], 'id': 913, 'def': 'luggage consisting of a small case with a flat bottom and (usually) a shoulder strap', 'name': 'satchel'}, {'frequency': 'r', 'synset': 'saucepan.n.01', 'synonyms': ['saucepan'], 'id': 914, 'def': 'a deep pan with a handle; used for stewing or boiling', 'name': 'saucepan'}, {'frequency': 'f', 'synset': 'saucer.n.02', 'synonyms': ['saucer'], 'id': 915, 'def': 'a small shallow dish for holding a cup at the table', 'name': 'saucer'}, {'frequency': 'f', 'synset': 'sausage.n.01', 'synonyms': ['sausage'], 'id': 916, 'def': 'highly seasoned minced meat stuffed in casings', 'name': 'sausage'}, {'frequency': 'r', 'synset': 'sawhorse.n.01', 'synonyms': ['sawhorse', 'sawbuck'], 'id': 917, 'def': 'a framework for holding wood that is being sawed', 'name': 'sawhorse'}, {'frequency': 'r', 'synset': 'sax.n.02', 'synonyms': ['saxophone'], 'id': 918, 'def': "a wind instrument with a `J'-shaped form typically made of brass", 'name': 'saxophone'}, {'frequency': 'f', 'synset': 'scale.n.07', 'synonyms': ['scale_(measuring_instrument)'], 'id': 919, 'def': 'a measuring instrument for weighing; shows amount of mass', 'name': 'scale_(measuring_instrument)'}, {'frequency': 'r', 'synset': 'scarecrow.n.01', 'synonyms': ['scarecrow', 'strawman'], 'id': 920, 'def': 'an effigy in the shape of a man to frighten birds away from seeds', 'name': 'scarecrow'}, {'frequency': 'f', 'synset': 'scarf.n.01', 'synonyms': ['scarf'], 'id': 921, 'def': 'a garment worn around the head or neck or shoulders for warmth or decoration', 'name': 'scarf'}, {'frequency': 'c', 'synset': 'school_bus.n.01', 'synonyms': ['school_bus'], 'id': 922, 'def': 'a bus used to transport children to or from school', 'name': 'school_bus'}, {'frequency': 'f', 'synset': 'scissors.n.01', 'synonyms': ['scissors'], 'id': 923, 'def': 'a tool having two crossed pivoting blades with looped handles', 'name': 'scissors'}, {'frequency': 'f', 'synset': 'scoreboard.n.01', 'synonyms': ['scoreboard'], 'id': 924, 'def': 'a large board for displaying the score of a contest (and some other information)', 'name': 'scoreboard'}, {'frequency': 'r', 'synset': 'scraper.n.01', 'synonyms': ['scraper'], 'id': 925, 'def': 'any of various hand tools for scraping', 'name': 'scraper'}, {'frequency': 'c', 'synset': 'screwdriver.n.01', 'synonyms': ['screwdriver'], 'id': 926, 'def': 'a hand tool for driving screws; has a tip that fits into the head of a screw', 'name': 'screwdriver'}, {'frequency': 'f', 'synset': 'scrub_brush.n.01', 'synonyms': ['scrubbing_brush'], 'id': 927, 'def': 'a brush with short stiff bristles for heavy cleaning', 'name': 'scrubbing_brush'}, {'frequency': 'c', 'synset': 'sculpture.n.01', 'synonyms': ['sculpture'], 'id': 928, 'def': 'a three-dimensional work of art', 'name': 'sculpture'}, {'frequency': 'c', 'synset': 'seabird.n.01', 'synonyms': ['seabird', 'seafowl'], 'id': 929, 'def': 'a bird that frequents coastal waters and the open ocean: gulls; pelicans; gannets; cormorants; albatrosses; petrels; etc.', 'name': 'seabird'}, {'frequency': 'c', 'synset': 'seahorse.n.02', 'synonyms': ['seahorse'], 'id': 930, 'def': 'small fish with horse-like heads bent sharply downward and curled tails', 'name': 'seahorse'}, {'frequency': 'r', 'synset': 'seaplane.n.01', 'synonyms': ['seaplane', 'hydroplane'], 'id': 931, 'def': 'an airplane that can land on or take off from water', 'name': 'seaplane'}, {'frequency': 'c', 'synset': 'seashell.n.01', 'synonyms': ['seashell'], 'id': 932, 'def': 'the shell of a marine organism', 'name': 'seashell'}, {'frequency': 'c', 'synset': 'sewing_machine.n.01', 'synonyms': ['sewing_machine'], 'id': 933, 'def': 'a textile machine used as a home appliance for sewing', 'name': 'sewing_machine'}, {'frequency': 'c', 'synset': 'shaker.n.03', 'synonyms': ['shaker'], 'id': 934, 'def': 'a container in which something can be shaken', 'name': 'shaker'}, {'frequency': 'c', 'synset': 'shampoo.n.01', 'synonyms': ['shampoo'], 'id': 935, 'def': 'cleansing agent consisting of soaps or detergents used for washing the hair', 'name': 'shampoo'}, {'frequency': 'c', 'synset': 'shark.n.01', 'synonyms': ['shark'], 'id': 936, 'def': 'typically large carnivorous fishes with sharpe teeth', 'name': 'shark'}, {'frequency': 'r', 'synset': 'sharpener.n.01', 'synonyms': ['sharpener'], 'id': 937, 'def': 'any implement that is used to make something (an edge or a point) sharper', 'name': 'sharpener'}, {'frequency': 'r', 'synset': 'sharpie.n.03', 'synonyms': ['Sharpie'], 'id': 938, 'def': 'a pen with indelible ink that will write on any surface', 'name': 'Sharpie'}, {'frequency': 'r', 'synset': 'shaver.n.03', 'synonyms': ['shaver_(electric)', 'electric_shaver', 'electric_razor'], 'id': 939, 'def': 'a razor powered by an electric motor', 'name': 'shaver_(electric)'}, {'frequency': 'c', 'synset': 'shaving_cream.n.01', 'synonyms': ['shaving_cream', 'shaving_soap'], 'id': 940, 'def': 'toiletry consisting that forms a rich lather for softening the beard before shaving', 'name': 'shaving_cream'}, {'frequency': 'r', 'synset': 'shawl.n.01', 'synonyms': ['shawl'], 'id': 941, 'def': 'cloak consisting of an oblong piece of cloth used to cover the head and shoulders', 'name': 'shawl'}, {'frequency': 'r', 'synset': 'shears.n.01', 'synonyms': ['shears'], 'id': 942, 'def': 'large scissors with strong blades', 'name': 'shears'}, {'frequency': 'f', 'synset': 'sheep.n.01', 'synonyms': ['sheep'], 'id': 943, 'def': 'woolly usually horned ruminant mammal related to the goat', 'name': 'sheep'}, {'frequency': 'r', 'synset': 'shepherd_dog.n.01', 'synonyms': ['shepherd_dog', 'sheepdog'], 'id': 944, 'def': 'any of various usually long-haired breeds of dog reared to herd and guard sheep', 'name': 'shepherd_dog'}, {'frequency': 'r', 'synset': 'sherbert.n.01', 'synonyms': ['sherbert', 'sherbet'], 'id': 945, 'def': 'a frozen dessert made primarily of fruit juice and sugar', 'name': 'sherbert'}, {'frequency': 'c', 'synset': 'shield.n.02', 'synonyms': ['shield'], 'id': 946, 'def': 'armor carried on the arm to intercept blows', 'name': 'shield'}, {'frequency': 'f', 'synset': 'shirt.n.01', 'synonyms': ['shirt'], 'id': 947, 'def': 'a garment worn on the upper half of the body', 'name': 'shirt'}, {'frequency': 'f', 'synset': 'shoe.n.01', 'synonyms': ['shoe', 'sneaker_(type_of_shoe)', 'tennis_shoe'], 'id': 948, 'def': 'common footwear covering the foot', 'name': 'shoe'}, {'frequency': 'f', 'synset': 'shopping_bag.n.01', 'synonyms': ['shopping_bag'], 'id': 949, 'def': 'a bag made of plastic or strong paper (often with handles); used to transport goods after shopping', 'name': 'shopping_bag'}, {'frequency': 'c', 'synset': 'shopping_cart.n.01', 'synonyms': ['shopping_cart'], 'id': 950, 'def': 'a handcart that holds groceries or other goods while shopping', 'name': 'shopping_cart'}, {'frequency': 'f', 'synset': 'short_pants.n.01', 'synonyms': ['short_pants', 'shorts_(clothing)', 'trunks_(clothing)'], 'id': 951, 'def': 'trousers that end at or above the knee', 'name': 'short_pants'}, {'frequency': 'r', 'synset': 'shot_glass.n.01', 'synonyms': ['shot_glass'], 'id': 952, 'def': 'a small glass adequate to hold a single swallow of whiskey', 'name': 'shot_glass'}, {'frequency': 'f', 'synset': 'shoulder_bag.n.01', 'synonyms': ['shoulder_bag'], 'id': 953, 'def': 'a large handbag that can be carried by a strap looped over the shoulder', 'name': 'shoulder_bag'}, {'frequency': 'c', 'synset': 'shovel.n.01', 'synonyms': ['shovel'], 'id': 954, 'def': 'a hand tool for lifting loose material such as snow, dirt, etc.', 'name': 'shovel'}, {'frequency': 'f', 'synset': 'shower.n.01', 'synonyms': ['shower_head'], 'id': 955, 'def': 'a plumbing fixture that sprays water over you', 'name': 'shower_head'}, {'frequency': 'r', 'synset': 'shower_cap.n.01', 'synonyms': ['shower_cap'], 'id': 956, 'def': 'a tight cap worn to keep hair dry while showering', 'name': 'shower_cap'}, {'frequency': 'f', 'synset': 'shower_curtain.n.01', 'synonyms': ['shower_curtain'], 'id': 957, 'def': 'a curtain that keeps water from splashing out of the shower area', 'name': 'shower_curtain'}, {'frequency': 'r', 'synset': 'shredder.n.01', 'synonyms': ['shredder_(for_paper)'], 'id': 958, 'def': 'a device that shreds documents', 'name': 'shredder_(for_paper)'}, {'frequency': 'f', 'synset': 'signboard.n.01', 'synonyms': ['signboard'], 'id': 959, 'def': 'structure displaying a board on which advertisements can be posted', 'name': 'signboard'}, {'frequency': 'c', 'synset': 'silo.n.01', 'synonyms': ['silo'], 'id': 960, 'def': 'a cylindrical tower used for storing goods', 'name': 'silo'}, {'frequency': 'f', 'synset': 'sink.n.01', 'synonyms': ['sink'], 'id': 961, 'def': 'plumbing fixture consisting of a water basin fixed to a wall or floor and having a drainpipe', 'name': 'sink'}, {'frequency': 'f', 'synset': 'skateboard.n.01', 'synonyms': ['skateboard'], 'id': 962, 'def': 'a board with wheels that is ridden in a standing or crouching position and propelled by foot', 'name': 'skateboard'}, {'frequency': 'c', 'synset': 'skewer.n.01', 'synonyms': ['skewer'], 'id': 963, 'def': 'a long pin for holding meat in position while it is being roasted', 'name': 'skewer'}, {'frequency': 'f', 'synset': 'ski.n.01', 'synonyms': ['ski'], 'id': 964, 'def': 'sports equipment for skiing on snow', 'name': 'ski'}, {'frequency': 'f', 'synset': 'ski_boot.n.01', 'synonyms': ['ski_boot'], 'id': 965, 'def': 'a stiff boot that is fastened to a ski with a ski binding', 'name': 'ski_boot'}, {'frequency': 'f', 'synset': 'ski_parka.n.01', 'synonyms': ['ski_parka', 'ski_jacket'], 'id': 966, 'def': 'a parka to be worn while skiing', 'name': 'ski_parka'}, {'frequency': 'f', 'synset': 'ski_pole.n.01', 'synonyms': ['ski_pole'], 'id': 967, 'def': 'a pole with metal points used as an aid in skiing', 'name': 'ski_pole'}, {'frequency': 'f', 'synset': 'skirt.n.02', 'synonyms': ['skirt'], 'id': 968, 'def': 'a garment hanging from the waist; worn mainly by girls and women', 'name': 'skirt'}, {'frequency': 'r', 'synset': 'skullcap.n.01', 'synonyms': ['skullcap'], 'id': 969, 'def': 'rounded brimless cap fitting the crown of the head', 'name': 'skullcap'}, {'frequency': 'c', 'synset': 'sled.n.01', 'synonyms': ['sled', 'sledge', 'sleigh'], 'id': 970, 'def': 'a vehicle or flat object for transportation over snow by sliding or pulled by dogs, etc.', 'name': 'sled'}, {'frequency': 'c', 'synset': 'sleeping_bag.n.01', 'synonyms': ['sleeping_bag'], 'id': 971, 'def': 'large padded bag designed to be slept in outdoors', 'name': 'sleeping_bag'}, {'frequency': 'r', 'synset': 'sling.n.05', 'synonyms': ['sling_(bandage)', 'triangular_bandage'], 'id': 972, 'def': 'bandage to support an injured forearm; slung over the shoulder or neck', 'name': 'sling_(bandage)'}, {'frequency': 'c', 'synset': 'slipper.n.01', 'synonyms': ['slipper_(footwear)', 'carpet_slipper_(footwear)'], 'id': 973, 'def': 'low footwear that can be slipped on and off easily; usually worn indoors', 'name': 'slipper_(footwear)'}, {'frequency': 'r', 'synset': 'smoothie.n.02', 'synonyms': ['smoothie'], 'id': 974, 'def': 'a thick smooth drink consisting of fresh fruit pureed with ice cream or yoghurt or milk', 'name': 'smoothie'}, {'frequency': 'r', 'synset': 'snake.n.01', 'synonyms': ['snake', 'serpent'], 'id': 975, 'def': 'limbless scaly elongate reptile; some are venomous', 'name': 'snake'}, {'frequency': 'f', 'synset': 'snowboard.n.01', 'synonyms': ['snowboard'], 'id': 976, 'def': 'a board that resembles a broad ski or a small surfboard; used in a standing position to slide down snow-covered slopes', 'name': 'snowboard'}, {'frequency': 'c', 'synset': 'snowman.n.01', 'synonyms': ['snowman'], 'id': 977, 'def': 'a figure of a person made of packed snow', 'name': 'snowman'}, {'frequency': 'c', 'synset': 'snowmobile.n.01', 'synonyms': ['snowmobile'], 'id': 978, 'def': 'tracked vehicle for travel on snow having skis in front', 'name': 'snowmobile'}, {'frequency': 'f', 'synset': 'soap.n.01', 'synonyms': ['soap'], 'id': 979, 'def': 'a cleansing agent made from the salts of vegetable or animal fats', 'name': 'soap'}, {'frequency': 'f', 'synset': 'soccer_ball.n.01', 'synonyms': ['soccer_ball'], 'id': 980, 'def': "an inflated ball used in playing soccer (called `football' outside of the United States)", 'name': 'soccer_ball'}, {'frequency': 'f', 'synset': 'sock.n.01', 'synonyms': ['sock'], 'id': 981, 'def': 'cloth covering for the foot; worn inside the shoe; reaches to between the ankle and the knee', 'name': 'sock'}, {'frequency': 'f', 'synset': 'sofa.n.01', 'synonyms': ['sofa', 'couch', 'lounge'], 'id': 982, 'def': 'an upholstered seat for more than one person', 'name': 'sofa'}, {'frequency': 'r', 'synset': 'softball.n.01', 'synonyms': ['softball'], 'id': 983, 'def': 'ball used in playing softball', 'name': 'softball'}, {'frequency': 'c', 'synset': 'solar_array.n.01', 'synonyms': ['solar_array', 'solar_battery', 'solar_panel'], 'id': 984, 'def': 'electrical device consisting of a large array of connected solar cells', 'name': 'solar_array'}, {'frequency': 'r', 'synset': 'sombrero.n.02', 'synonyms': ['sombrero'], 'id': 985, 'def': 'a straw hat with a tall crown and broad brim; worn in American southwest and in Mexico', 'name': 'sombrero'}, {'frequency': 'f', 'synset': 'soup.n.01', 'synonyms': ['soup'], 'id': 986, 'def': 'liquid food especially of meat or fish or vegetable stock often containing pieces of solid food', 'name': 'soup'}, {'frequency': 'r', 'synset': 'soup_bowl.n.01', 'synonyms': ['soup_bowl'], 'id': 987, 'def': 'a bowl for serving soup', 'name': 'soup_bowl'}, {'frequency': 'c', 'synset': 'soupspoon.n.01', 'synonyms': ['soupspoon'], 'id': 988, 'def': 'a spoon with a rounded bowl for eating soup', 'name': 'soupspoon'}, {'frequency': 'c', 'synset': 'sour_cream.n.01', 'synonyms': ['sour_cream', 'soured_cream'], 'id': 989, 'def': 'soured light cream', 'name': 'sour_cream'}, {'frequency': 'r', 'synset': 'soya_milk.n.01', 'synonyms': ['soya_milk', 'soybean_milk', 'soymilk'], 'id': 990, 'def': 'a milk substitute containing soybean flour and water; used in some infant formulas and in making tofu', 'name': 'soya_milk'}, {'frequency': 'r', 'synset': 'space_shuttle.n.01', 'synonyms': ['space_shuttle'], 'id': 991, 'def': "a reusable spacecraft with wings for a controlled descent through the Earth's atmosphere", 'name': 'space_shuttle'}, {'frequency': 'r', 'synset': 'sparkler.n.02', 'synonyms': ['sparkler_(fireworks)'], 'id': 992, 'def': 'a firework that burns slowly and throws out a shower of sparks', 'name': 'sparkler_(fireworks)'}, {'frequency': 'f', 'synset': 'spatula.n.02', 'synonyms': ['spatula'], 'id': 993, 'def': 'a hand tool with a thin flexible blade used to mix or spread soft substances', 'name': 'spatula'}, {'frequency': 'r', 'synset': 'spear.n.01', 'synonyms': ['spear', 'lance'], 'id': 994, 'def': 'a long pointed rod used as a tool or weapon', 'name': 'spear'}, {'frequency': 'f', 'synset': 'spectacles.n.01', 'synonyms': ['spectacles', 'specs', 'eyeglasses', 'glasses'], 'id': 995, 'def': 'optical instrument consisting of a frame that holds a pair of lenses for correcting defective vision', 'name': 'spectacles'}, {'frequency': 'c', 'synset': 'spice_rack.n.01', 'synonyms': ['spice_rack'], 'id': 996, 'def': 'a rack for displaying containers filled with spices', 'name': 'spice_rack'}, {'frequency': 'c', 'synset': 'spider.n.01', 'synonyms': ['spider'], 'id': 997, 'def': 'predatory arachnid with eight legs, two poison fangs, two feelers, and usually two silk-spinning organs at the back end of the body', 'name': 'spider'}, {'frequency': 'r', 'synset': 'spiny_lobster.n.02', 'synonyms': ['crawfish', 'crayfish'], 'id': 998, 'def': 'large edible marine crustacean having a spiny carapace but lacking the large pincers of true lobsters', 'name': 'crawfish'}, {'frequency': 'c', 'synset': 'sponge.n.01', 'synonyms': ['sponge'], 'id': 999, 'def': 'a porous mass usable to absorb water typically used for cleaning', 'name': 'sponge'}, {'frequency': 'f', 'synset': 'spoon.n.01', 'synonyms': ['spoon'], 'id': 1000, 'def': 'a piece of cutlery with a shallow bowl-shaped container and a handle', 'name': 'spoon'}, {'frequency': 'c', 'synset': 'sportswear.n.01', 'synonyms': ['sportswear', 'athletic_wear', 'activewear'], 'id': 1001, 'def': 'attire worn for sport or for casual wear', 'name': 'sportswear'}, {'frequency': 'c', 'synset': 'spotlight.n.02', 'synonyms': ['spotlight'], 'id': 1002, 'def': 'a lamp that produces a strong beam of light to illuminate a restricted area; used to focus attention of a stage performer', 'name': 'spotlight'}, {'frequency': 'r', 'synset': 'squid.n.01', 'synonyms': ['squid_(food)', 'calamari', 'calamary'], 'id': 1003, 'def': '(Italian cuisine) squid prepared as food', 'name': 'squid_(food)'}, {'frequency': 'c', 'synset': 'squirrel.n.01', 'synonyms': ['squirrel'], 'id': 1004, 'def': 'a kind of arboreal rodent having a long bushy tail', 'name': 'squirrel'}, {'frequency': 'r', 'synset': 'stagecoach.n.01', 'synonyms': ['stagecoach'], 'id': 1005, 'def': 'a large coach-and-four formerly used to carry passengers and mail on regular routes between towns', 'name': 'stagecoach'}, {'frequency': 'c', 'synset': 'stapler.n.01', 'synonyms': ['stapler_(stapling_machine)'], 'id': 1006, 'def': 'a machine that inserts staples into sheets of paper in order to fasten them together', 'name': 'stapler_(stapling_machine)'}, {'frequency': 'c', 'synset': 'starfish.n.01', 'synonyms': ['starfish', 'sea_star'], 'id': 1007, 'def': 'echinoderms characterized by five arms extending from a central disk', 'name': 'starfish'}, {'frequency': 'f', 'synset': 'statue.n.01', 'synonyms': ['statue_(sculpture)'], 'id': 1008, 'def': 'a sculpture representing a human or animal', 'name': 'statue_(sculpture)'}, {'frequency': 'c', 'synset': 'steak.n.01', 'synonyms': ['steak_(food)'], 'id': 1009, 'def': 'a slice of meat cut from the fleshy part of an animal or large fish', 'name': 'steak_(food)'}, {'frequency': 'r', 'synset': 'steak_knife.n.01', 'synonyms': ['steak_knife'], 'id': 1010, 'def': 'a sharp table knife used in eating steak', 'name': 'steak_knife'}, {'frequency': 'f', 'synset': 'steering_wheel.n.01', 'synonyms': ['steering_wheel'], 'id': 1011, 'def': 'a handwheel that is used for steering', 'name': 'steering_wheel'}, {'frequency': 'r', 'synset': 'step_ladder.n.01', 'synonyms': ['stepladder'], 'id': 1012, 'def': 'a folding portable ladder hinged at the top', 'name': 'stepladder'}, {'frequency': 'c', 'synset': 'step_stool.n.01', 'synonyms': ['step_stool'], 'id': 1013, 'def': 'a stool that has one or two steps that fold under the seat', 'name': 'step_stool'}, {'frequency': 'c', 'synset': 'stereo.n.01', 'synonyms': ['stereo_(sound_system)'], 'id': 1014, 'def': 'electronic device for playing audio', 'name': 'stereo_(sound_system)'}, {'frequency': 'r', 'synset': 'stew.n.02', 'synonyms': ['stew'], 'id': 1015, 'def': 'food prepared by stewing especially meat or fish with vegetables', 'name': 'stew'}, {'frequency': 'r', 'synset': 'stirrer.n.02', 'synonyms': ['stirrer'], 'id': 1016, 'def': 'an implement used for stirring', 'name': 'stirrer'}, {'frequency': 'f', 'synset': 'stirrup.n.01', 'synonyms': ['stirrup'], 'id': 1017, 'def': "support consisting of metal loops into which rider's feet go", 'name': 'stirrup'}, {'frequency': 'f', 'synset': 'stool.n.01', 'synonyms': ['stool'], 'id': 1018, 'def': 'a simple seat without a back or arms', 'name': 'stool'}, {'frequency': 'f', 'synset': 'stop_sign.n.01', 'synonyms': ['stop_sign'], 'id': 1019, 'def': 'a traffic sign to notify drivers that they must come to a complete stop', 'name': 'stop_sign'}, {'frequency': 'f', 'synset': 'stoplight.n.01', 'synonyms': ['brake_light'], 'id': 1020, 'def': 'a red light on the rear of a motor vehicle that signals when the brakes are applied', 'name': 'brake_light'}, {'frequency': 'f', 'synset': 'stove.n.01', 'synonyms': ['stove', 'kitchen_stove', 'range_(kitchen_appliance)', 'kitchen_range', 'cooking_stove'], 'id': 1021, 'def': 'a kitchen appliance used for cooking food', 'name': 'stove'}, {'frequency': 'c', 'synset': 'strainer.n.01', 'synonyms': ['strainer'], 'id': 1022, 'def': 'a filter to retain larger pieces while smaller pieces and liquids pass through', 'name': 'strainer'}, {'frequency': 'f', 'synset': 'strap.n.01', 'synonyms': ['strap'], 'id': 1023, 'def': 'an elongated strip of material for binding things together or holding', 'name': 'strap'}, {'frequency': 'f', 'synset': 'straw.n.04', 'synonyms': ['straw_(for_drinking)', 'drinking_straw'], 'id': 1024, 'def': 'a thin paper or plastic tube used to suck liquids into the mouth', 'name': 'straw_(for_drinking)'}, {'frequency': 'f', 'synset': 'strawberry.n.01', 'synonyms': ['strawberry'], 'id': 1025, 'def': 'sweet fleshy red fruit', 'name': 'strawberry'}, {'frequency': 'f', 'synset': 'street_sign.n.01', 'synonyms': ['street_sign'], 'id': 1026, 'def': 'a sign visible from the street', 'name': 'street_sign'}, {'frequency': 'f', 'synset': 'streetlight.n.01', 'synonyms': ['streetlight', 'street_lamp'], 'id': 1027, 'def': 'a lamp supported on a lamppost; for illuminating a street', 'name': 'streetlight'}, {'frequency': 'r', 'synset': 'string_cheese.n.01', 'synonyms': ['string_cheese'], 'id': 1028, 'def': 'cheese formed in long strings twisted together', 'name': 'string_cheese'}, {'frequency': 'r', 'synset': 'stylus.n.02', 'synonyms': ['stylus'], 'id': 1029, 'def': 'a pointed tool for writing or drawing or engraving, including pens', 'name': 'stylus'}, {'frequency': 'r', 'synset': 'subwoofer.n.01', 'synonyms': ['subwoofer'], 'id': 1030, 'def': 'a loudspeaker that is designed to reproduce very low bass frequencies', 'name': 'subwoofer'}, {'frequency': 'r', 'synset': 'sugar_bowl.n.01', 'synonyms': ['sugar_bowl'], 'id': 1031, 'def': 'a dish in which sugar is served', 'name': 'sugar_bowl'}, {'frequency': 'r', 'synset': 'sugarcane.n.01', 'synonyms': ['sugarcane_(plant)'], 'id': 1032, 'def': 'juicy canes whose sap is a source of molasses and commercial sugar; fresh canes are sometimes chewed for the juice', 'name': 'sugarcane_(plant)'}, {'frequency': 'f', 'synset': 'suit.n.01', 'synonyms': ['suit_(clothing)'], 'id': 1033, 'def': 'a set of garments (usually including a jacket and trousers or skirt) for outerwear all of the same fabric and color', 'name': 'suit_(clothing)'}, {'frequency': 'c', 'synset': 'sunflower.n.01', 'synonyms': ['sunflower'], 'id': 1034, 'def': 'any plant of the genus Helianthus having large flower heads with dark disk florets and showy yellow rays', 'name': 'sunflower'}, {'frequency': 'f', 'synset': 'sunglasses.n.01', 'synonyms': ['sunglasses'], 'id': 1035, 'def': 'spectacles that are darkened or polarized to protect the eyes from the glare of the sun', 'name': 'sunglasses'}, {'frequency': 'c', 'synset': 'sunhat.n.01', 'synonyms': ['sunhat'], 'id': 1036, 'def': 'a hat with a broad brim that protects the face from direct exposure to the sun', 'name': 'sunhat'}, {'frequency': 'f', 'synset': 'surfboard.n.01', 'synonyms': ['surfboard'], 'id': 1037, 'def': 'a narrow buoyant board for riding surf', 'name': 'surfboard'}, {'frequency': 'c', 'synset': 'sushi.n.01', 'synonyms': ['sushi'], 'id': 1038, 'def': 'rice (with raw fish) wrapped in seaweed', 'name': 'sushi'}, {'frequency': 'c', 'synset': 'swab.n.02', 'synonyms': ['mop'], 'id': 1039, 'def': 'cleaning implement consisting of absorbent material fastened to a handle; for cleaning floors', 'name': 'mop'}, {'frequency': 'c', 'synset': 'sweat_pants.n.01', 'synonyms': ['sweat_pants'], 'id': 1040, 'def': 'loose-fitting trousers with elastic cuffs; worn by athletes', 'name': 'sweat_pants'}, {'frequency': 'c', 'synset': 'sweatband.n.02', 'synonyms': ['sweatband'], 'id': 1041, 'def': 'a band of material tied around the forehead or wrist to absorb sweat', 'name': 'sweatband'}, {'frequency': 'f', 'synset': 'sweater.n.01', 'synonyms': ['sweater'], 'id': 1042, 'def': 'a crocheted or knitted garment covering the upper part of the body', 'name': 'sweater'}, {'frequency': 'f', 'synset': 'sweatshirt.n.01', 'synonyms': ['sweatshirt'], 'id': 1043, 'def': 'cotton knit pullover with long sleeves worn during athletic activity', 'name': 'sweatshirt'}, {'frequency': 'c', 'synset': 'sweet_potato.n.02', 'synonyms': ['sweet_potato'], 'id': 1044, 'def': 'the edible tuberous root of the sweet potato vine', 'name': 'sweet_potato'}, {'frequency': 'f', 'synset': 'swimsuit.n.01', 'synonyms': ['swimsuit', 'swimwear', 'bathing_suit', 'swimming_costume', 'bathing_costume', 'swimming_trunks', 'bathing_trunks'], 'id': 1045, 'def': 'garment worn for swimming', 'name': 'swimsuit'}, {'frequency': 'c', 'synset': 'sword.n.01', 'synonyms': ['sword'], 'id': 1046, 'def': 'a cutting or thrusting weapon that has a long metal blade', 'name': 'sword'}, {'frequency': 'r', 'synset': 'syringe.n.01', 'synonyms': ['syringe'], 'id': 1047, 'def': 'a medical instrument used to inject or withdraw fluids', 'name': 'syringe'}, {'frequency': 'r', 'synset': 'tabasco.n.02', 'synonyms': ['Tabasco_sauce'], 'id': 1048, 'def': 'very spicy sauce (trade name Tabasco) made from fully-aged red peppers', 'name': 'Tabasco_sauce'}, {'frequency': 'r', 'synset': 'table-tennis_table.n.01', 'synonyms': ['table-tennis_table', 'ping-pong_table'], 'id': 1049, 'def': 'a table used for playing table tennis', 'name': 'table-tennis_table'}, {'frequency': 'f', 'synset': 'table.n.02', 'synonyms': ['table'], 'id': 1050, 'def': 'a piece of furniture having a smooth flat top that is usually supported by one or more vertical legs', 'name': 'table'}, {'frequency': 'c', 'synset': 'table_lamp.n.01', 'synonyms': ['table_lamp'], 'id': 1051, 'def': 'a lamp that sits on a table', 'name': 'table_lamp'}, {'frequency': 'f', 'synset': 'tablecloth.n.01', 'synonyms': ['tablecloth'], 'id': 1052, 'def': 'a covering spread over a dining table', 'name': 'tablecloth'}, {'frequency': 'r', 'synset': 'tachometer.n.01', 'synonyms': ['tachometer'], 'id': 1053, 'def': 'measuring instrument for indicating speed of rotation', 'name': 'tachometer'}, {'frequency': 'r', 'synset': 'taco.n.02', 'synonyms': ['taco'], 'id': 1054, 'def': 'a small tortilla cupped around a filling', 'name': 'taco'}, {'frequency': 'f', 'synset': 'tag.n.02', 'synonyms': ['tag'], 'id': 1055, 'def': 'a label associated with something for the purpose of identification or information', 'name': 'tag'}, {'frequency': 'f', 'synset': 'taillight.n.01', 'synonyms': ['taillight', 'rear_light'], 'id': 1056, 'def': 'lamp (usually red) mounted at the rear of a motor vehicle', 'name': 'taillight'}, {'frequency': 'r', 'synset': 'tambourine.n.01', 'synonyms': ['tambourine'], 'id': 1057, 'def': 'a shallow drum with a single drumhead and with metallic disks in the sides', 'name': 'tambourine'}, {'frequency': 'r', 'synset': 'tank.n.01', 'synonyms': ['army_tank', 'armored_combat_vehicle', 'armoured_combat_vehicle'], 'id': 1058, 'def': 'an enclosed armored military vehicle; has a cannon and moves on caterpillar treads', 'name': 'army_tank'}, {'frequency': 'f', 'synset': 'tank.n.02', 'synonyms': ['tank_(storage_vessel)', 'storage_tank'], 'id': 1059, 'def': 'a large (usually metallic) vessel for holding gases or liquids', 'name': 'tank_(storage_vessel)'}, {'frequency': 'f', 'synset': 'tank_top.n.01', 'synonyms': ['tank_top_(clothing)'], 'id': 1060, 'def': 'a tight-fitting sleeveless shirt with wide shoulder straps and low neck and no front opening', 'name': 'tank_top_(clothing)'}, {'frequency': 'f', 'synset': 'tape.n.01', 'synonyms': ['tape_(sticky_cloth_or_paper)'], 'id': 1061, 'def': 'a long thin piece of cloth or paper as used for binding or fastening', 'name': 'tape_(sticky_cloth_or_paper)'}, {'frequency': 'c', 'synset': 'tape.n.04', 'synonyms': ['tape_measure', 'measuring_tape'], 'id': 1062, 'def': 'measuring instrument consisting of a narrow strip (cloth or metal) marked in inches or centimeters and used for measuring lengths', 'name': 'tape_measure'}, {'frequency': 'c', 'synset': 'tapestry.n.02', 'synonyms': ['tapestry'], 'id': 1063, 'def': 'a heavy textile with a woven design; used for curtains and upholstery', 'name': 'tapestry'}, {'frequency': 'f', 'synset': 'tarpaulin.n.01', 'synonyms': ['tarp'], 'id': 1064, 'def': 'waterproofed canvas', 'name': 'tarp'}, {'frequency': 'c', 'synset': 'tartan.n.01', 'synonyms': ['tartan', 'plaid'], 'id': 1065, 'def': 'a cloth having a crisscross design', 'name': 'tartan'}, {'frequency': 'c', 'synset': 'tassel.n.01', 'synonyms': ['tassel'], 'id': 1066, 'def': 'adornment consisting of a bunch of cords fastened at one end', 'name': 'tassel'}, {'frequency': 'c', 'synset': 'tea_bag.n.01', 'synonyms': ['tea_bag'], 'id': 1067, 'def': 'a measured amount of tea in a bag for an individual serving of tea', 'name': 'tea_bag'}, {'frequency': 'c', 'synset': 'teacup.n.02', 'synonyms': ['teacup'], 'id': 1068, 'def': 'a cup from which tea is drunk', 'name': 'teacup'}, {'frequency': 'c', 'synset': 'teakettle.n.01', 'synonyms': ['teakettle'], 'id': 1069, 'def': 'kettle for boiling water to make tea', 'name': 'teakettle'}, {'frequency': 'f', 'synset': 'teapot.n.01', 'synonyms': ['teapot'], 'id': 1070, 'def': 'pot for brewing tea; usually has a spout and handle', 'name': 'teapot'}, {'frequency': 'f', 'synset': 'teddy.n.01', 'synonyms': ['teddy_bear'], 'id': 1071, 'def': "plaything consisting of a child's toy bear (usually plush and stuffed with soft materials)", 'name': 'teddy_bear'}, {'frequency': 'f', 'synset': 'telephone.n.01', 'synonyms': ['telephone', 'phone', 'telephone_set'], 'id': 1072, 'def': 'electronic device for communicating by voice over long distances (includes wired and wireless\/cell phones)', 'name': 'telephone'}, {'frequency': 'c', 'synset': 'telephone_booth.n.01', 'synonyms': ['telephone_booth', 'phone_booth', 'call_box', 'telephone_box', 'telephone_kiosk'], 'id': 1073, 'def': 'booth for using a telephone', 'name': 'telephone_booth'}, {'frequency': 'f', 'synset': 'telephone_pole.n.01', 'synonyms': ['telephone_pole', 'telegraph_pole', 'telegraph_post'], 'id': 1074, 'def': 'tall pole supporting telephone wires', 'name': 'telephone_pole'}, {'frequency': 'r', 'synset': 'telephoto_lens.n.01', 'synonyms': ['telephoto_lens', 'zoom_lens'], 'id': 1075, 'def': 'a camera lens that magnifies the image', 'name': 'telephoto_lens'}, {'frequency': 'c', 'synset': 'television_camera.n.01', 'synonyms': ['television_camera', 'tv_camera'], 'id': 1076, 'def': 'television equipment for capturing and recording video', 'name': 'television_camera'}, {'frequency': 'f', 'synset': 'television_receiver.n.01', 'synonyms': ['television_set', 'tv', 'tv_set'], 'id': 1077, 'def': 'an electronic device that receives television signals and displays them on a screen', 'name': 'television_set'}, {'frequency': 'f', 'synset': 'tennis_ball.n.01', 'synonyms': ['tennis_ball'], 'id': 1078, 'def': 'ball about the size of a fist used in playing tennis', 'name': 'tennis_ball'}, {'frequency': 'f', 'synset': 'tennis_racket.n.01', 'synonyms': ['tennis_racket'], 'id': 1079, 'def': 'a racket used to play tennis', 'name': 'tennis_racket'}, {'frequency': 'r', 'synset': 'tequila.n.01', 'synonyms': ['tequila'], 'id': 1080, 'def': 'Mexican liquor made from fermented juices of an agave plant', 'name': 'tequila'}, {'frequency': 'c', 'synset': 'thermometer.n.01', 'synonyms': ['thermometer'], 'id': 1081, 'def': 'measuring instrument for measuring temperature', 'name': 'thermometer'}, {'frequency': 'c', 'synset': 'thermos.n.01', 'synonyms': ['thermos_bottle'], 'id': 1082, 'def': 'vacuum flask that preserves temperature of hot or cold drinks', 'name': 'thermos_bottle'}, {'frequency': 'f', 'synset': 'thermostat.n.01', 'synonyms': ['thermostat'], 'id': 1083, 'def': 'a regulator for automatically regulating temperature by starting or stopping the supply of heat', 'name': 'thermostat'}, {'frequency': 'r', 'synset': 'thimble.n.02', 'synonyms': ['thimble'], 'id': 1084, 'def': 'a small metal cap to protect the finger while sewing; can be used as a small container', 'name': 'thimble'}, {'frequency': 'c', 'synset': 'thread.n.01', 'synonyms': ['thread', 'yarn'], 'id': 1085, 'def': 'a fine cord of twisted fibers (of cotton or silk or wool or nylon etc.) used in sewing and weaving', 'name': 'thread'}, {'frequency': 'c', 'synset': 'thumbtack.n.01', 'synonyms': ['thumbtack', 'drawing_pin', 'pushpin'], 'id': 1086, 'def': 'a tack for attaching papers to a bulletin board or drawing board', 'name': 'thumbtack'}, {'frequency': 'c', 'synset': 'tiara.n.01', 'synonyms': ['tiara'], 'id': 1087, 'def': 'a jeweled headdress worn by women on formal occasions', 'name': 'tiara'}, {'frequency': 'c', 'synset': 'tiger.n.02', 'synonyms': ['tiger'], 'id': 1088, 'def': 'large feline of forests in most of Asia having a tawny coat with black stripes', 'name': 'tiger'}, {'frequency': 'c', 'synset': 'tights.n.01', 'synonyms': ['tights_(clothing)', 'leotards'], 'id': 1089, 'def': 'skintight knit hose covering the body from the waist to the feet worn by acrobats and dancers and as stockings by women and girls', 'name': 'tights_(clothing)'}, {'frequency': 'c', 'synset': 'timer.n.01', 'synonyms': ['timer', 'stopwatch'], 'id': 1090, 'def': 'a timepiece that measures a time interval and signals its end', 'name': 'timer'}, {'frequency': 'f', 'synset': 'tinfoil.n.01', 'synonyms': ['tinfoil'], 'id': 1091, 'def': 'foil made of tin or an alloy of tin and lead', 'name': 'tinfoil'}, {'frequency': 'c', 'synset': 'tinsel.n.01', 'synonyms': ['tinsel'], 'id': 1092, 'def': 'a showy decoration that is basically valueless', 'name': 'tinsel'}, {'frequency': 'f', 'synset': 'tissue.n.02', 'synonyms': ['tissue_paper'], 'id': 1093, 'def': 'a soft thin (usually translucent) paper', 'name': 'tissue_paper'}, {'frequency': 'c', 'synset': 'toast.n.01', 'synonyms': ['toast_(food)'], 'id': 1094, 'def': 'slice of bread that has been toasted', 'name': 'toast_(food)'}, {'frequency': 'f', 'synset': 'toaster.n.02', 'synonyms': ['toaster'], 'id': 1095, 'def': 'a kitchen appliance (usually electric) for toasting bread', 'name': 'toaster'}, {'frequency': 'f', 'synset': 'toaster_oven.n.01', 'synonyms': ['toaster_oven'], 'id': 1096, 'def': 'kitchen appliance consisting of a small electric oven for toasting or warming food', 'name': 'toaster_oven'}, {'frequency': 'f', 'synset': 'toilet.n.02', 'synonyms': ['toilet'], 'id': 1097, 'def': 'a plumbing fixture for defecation and urination', 'name': 'toilet'}, {'frequency': 'f', 'synset': 'toilet_tissue.n.01', 'synonyms': ['toilet_tissue', 'toilet_paper', 'bathroom_tissue'], 'id': 1098, 'def': 'a soft thin absorbent paper for use in toilets', 'name': 'toilet_tissue'}, {'frequency': 'f', 'synset': 'tomato.n.01', 'synonyms': ['tomato'], 'id': 1099, 'def': 'mildly acid red or yellow pulpy fruit eaten as a vegetable', 'name': 'tomato'}, {'frequency': 'f', 'synset': 'tongs.n.01', 'synonyms': ['tongs'], 'id': 1100, 'def': 'any of various devices for taking hold of objects; usually have two hinged legs with handles above and pointed hooks below', 'name': 'tongs'}, {'frequency': 'c', 'synset': 'toolbox.n.01', 'synonyms': ['toolbox'], 'id': 1101, 'def': 'a box or chest or cabinet for holding hand tools', 'name': 'toolbox'}, {'frequency': 'f', 'synset': 'toothbrush.n.01', 'synonyms': ['toothbrush'], 'id': 1102, 'def': 'small brush; has long handle; used to clean teeth', 'name': 'toothbrush'}, {'frequency': 'f', 'synset': 'toothpaste.n.01', 'synonyms': ['toothpaste'], 'id': 1103, 'def': 'a dentifrice in the form of a paste', 'name': 'toothpaste'}, {'frequency': 'f', 'synset': 'toothpick.n.01', 'synonyms': ['toothpick'], 'id': 1104, 'def': 'pick consisting of a small strip of wood or plastic; used to pick food from between the teeth', 'name': 'toothpick'}, {'frequency': 'f', 'synset': 'top.n.09', 'synonyms': ['cover'], 'id': 1105, 'def': 'covering for a hole (especially a hole in the top of a container)', 'name': 'cover'}, {'frequency': 'c', 'synset': 'tortilla.n.01', 'synonyms': ['tortilla'], 'id': 1106, 'def': 'thin unleavened pancake made from cornmeal or wheat flour', 'name': 'tortilla'}, {'frequency': 'c', 'synset': 'tow_truck.n.01', 'synonyms': ['tow_truck'], 'id': 1107, 'def': 'a truck equipped to hoist and pull wrecked cars (or to remove cars from no-parking zones)', 'name': 'tow_truck'}, {'frequency': 'f', 'synset': 'towel.n.01', 'synonyms': ['towel'], 'id': 1108, 'def': 'a rectangular piece of absorbent cloth (or paper) for drying or wiping', 'name': 'towel'}, {'frequency': 'f', 'synset': 'towel_rack.n.01', 'synonyms': ['towel_rack', 'towel_rail', 'towel_bar'], 'id': 1109, 'def': 'a rack consisting of one or more bars on which towels can be hung', 'name': 'towel_rack'}, {'frequency': 'f', 'synset': 'toy.n.03', 'synonyms': ['toy'], 'id': 1110, 'def': 'a device regarded as providing amusement', 'name': 'toy'}, {'frequency': 'c', 'synset': 'tractor.n.01', 'synonyms': ['tractor_(farm_equipment)'], 'id': 1111, 'def': 'a wheeled vehicle with large wheels; used in farming and other applications', 'name': 'tractor_(farm_equipment)'}, {'frequency': 'f', 'synset': 'traffic_light.n.01', 'synonyms': ['traffic_light'], 'id': 1112, 'def': 'a device to control vehicle traffic often consisting of three or more lights', 'name': 'traffic_light'}, {'frequency': 'c', 'synset': 'trail_bike.n.01', 'synonyms': ['dirt_bike'], 'id': 1113, 'def': 'a lightweight motorcycle equipped with rugged tires and suspension for off-road use', 'name': 'dirt_bike'}, {'frequency': 'f', 'synset': 'trailer_truck.n.01', 'synonyms': ['trailer_truck', 'tractor_trailer', 'trucking_rig', 'articulated_lorry', 'semi_truck'], 'id': 1114, 'def': 'a truck consisting of a tractor and trailer together', 'name': 'trailer_truck'}, {'frequency': 'f', 'synset': 'train.n.01', 'synonyms': ['train_(railroad_vehicle)', 'railroad_train'], 'id': 1115, 'def': 'public or private transport provided by a line of railway cars coupled together and drawn by a locomotive', 'name': 'train_(railroad_vehicle)'}, {'frequency': 'r', 'synset': 'trampoline.n.01', 'synonyms': ['trampoline'], 'id': 1116, 'def': 'gymnastic apparatus consisting of a strong canvas sheet attached with springs to a metal frame', 'name': 'trampoline'}, {'frequency': 'f', 'synset': 'tray.n.01', 'synonyms': ['tray'], 'id': 1117, 'def': 'an open receptacle for holding or displaying or serving articles or food', 'name': 'tray'}, {'frequency': 'r', 'synset': 'trench_coat.n.01', 'synonyms': ['trench_coat'], 'id': 1118, 'def': 'a military style raincoat; belted with deep pockets', 'name': 'trench_coat'}, {'frequency': 'r', 'synset': 'triangle.n.05', 'synonyms': ['triangle_(musical_instrument)'], 'id': 1119, 'def': 'a percussion instrument consisting of a metal bar bent in the shape of an open triangle', 'name': 'triangle_(musical_instrument)'}, {'frequency': 'c', 'synset': 'tricycle.n.01', 'synonyms': ['tricycle'], 'id': 1120, 'def': 'a vehicle with three wheels that is moved by foot pedals', 'name': 'tricycle'}, {'frequency': 'f', 'synset': 'tripod.n.01', 'synonyms': ['tripod'], 'id': 1121, 'def': 'a three-legged rack used for support', 'name': 'tripod'}, {'frequency': 'f', 'synset': 'trouser.n.01', 'synonyms': ['trousers', 'pants_(clothing)'], 'id': 1122, 'def': 'a garment extending from the waist to the knee or ankle, covering each leg separately', 'name': 'trousers'}, {'frequency': 'f', 'synset': 'truck.n.01', 'synonyms': ['truck'], 'id': 1123, 'def': 'an automotive vehicle suitable for hauling', 'name': 'truck'}, {'frequency': 'r', 'synset': 'truffle.n.03', 'synonyms': ['truffle_(chocolate)', 'chocolate_truffle'], 'id': 1124, 'def': 'creamy chocolate candy', 'name': 'truffle_(chocolate)'}, {'frequency': 'c', 'synset': 'trunk.n.02', 'synonyms': ['trunk'], 'id': 1125, 'def': 'luggage consisting of a large strong case used when traveling or for storage', 'name': 'trunk'}, {'frequency': 'r', 'synset': 'tub.n.02', 'synonyms': ['vat'], 'id': 1126, 'def': 'a large vessel for holding or storing liquids', 'name': 'vat'}, {'frequency': 'c', 'synset': 'turban.n.01', 'synonyms': ['turban'], 'id': 1127, 'def': 'a traditional headdress consisting of a long scarf wrapped around the head', 'name': 'turban'}, {'frequency': 'c', 'synset': 'turkey.n.04', 'synonyms': ['turkey_(food)'], 'id': 1128, 'def': 'flesh of large domesticated fowl usually roasted', 'name': 'turkey_(food)'}, {'frequency': 'r', 'synset': 'turnip.n.01', 'synonyms': ['turnip'], 'id': 1129, 'def': 'widely cultivated plant having a large fleshy edible white or yellow root', 'name': 'turnip'}, {'frequency': 'c', 'synset': 'turtle.n.02', 'synonyms': ['turtle'], 'id': 1130, 'def': 'any of various aquatic and land reptiles having a bony shell and flipper-like limbs for swimming', 'name': 'turtle'}, {'frequency': 'c', 'synset': 'turtleneck.n.01', 'synonyms': ['turtleneck_(clothing)', 'polo-neck'], 'id': 1131, 'def': 'a sweater or jersey with a high close-fitting collar', 'name': 'turtleneck_(clothing)'}, {'frequency': 'c', 'synset': 'typewriter.n.01', 'synonyms': ['typewriter'], 'id': 1132, 'def': 'hand-operated character printer for printing written messages one character at a time', 'name': 'typewriter'}, {'frequency': 'f', 'synset': 'umbrella.n.01', 'synonyms': ['umbrella'], 'id': 1133, 'def': 'a lightweight handheld collapsible canopy', 'name': 'umbrella'}, {'frequency': 'f', 'synset': 'underwear.n.01', 'synonyms': ['underwear', 'underclothes', 'underclothing', 'underpants'], 'id': 1134, 'def': 'undergarment worn next to the skin and under the outer garments', 'name': 'underwear'}, {'frequency': 'r', 'synset': 'unicycle.n.01', 'synonyms': ['unicycle'], 'id': 1135, 'def': 'a vehicle with a single wheel that is driven by pedals', 'name': 'unicycle'}, {'frequency': 'f', 'synset': 'urinal.n.01', 'synonyms': ['urinal'], 'id': 1136, 'def': 'a plumbing fixture (usually attached to the wall) used by men to urinate', 'name': 'urinal'}, {'frequency': 'c', 'synset': 'urn.n.01', 'synonyms': ['urn'], 'id': 1137, 'def': 'a large vase that usually has a pedestal or feet', 'name': 'urn'}, {'frequency': 'c', 'synset': 'vacuum.n.04', 'synonyms': ['vacuum_cleaner'], 'id': 1138, 'def': 'an electrical home appliance that cleans by suction', 'name': 'vacuum_cleaner'}, {'frequency': 'f', 'synset': 'vase.n.01', 'synonyms': ['vase'], 'id': 1139, 'def': 'an open jar of glass or porcelain used as an ornament or to hold flowers', 'name': 'vase'}, {'frequency': 'c', 'synset': 'vending_machine.n.01', 'synonyms': ['vending_machine'], 'id': 1140, 'def': 'a slot machine for selling goods', 'name': 'vending_machine'}, {'frequency': 'f', 'synset': 'vent.n.01', 'synonyms': ['vent', 'blowhole', 'air_vent'], 'id': 1141, 'def': 'a hole for the escape of gas or air', 'name': 'vent'}, {'frequency': 'f', 'synset': 'vest.n.01', 'synonyms': ['vest', 'waistcoat'], 'id': 1142, 'def': "a man's sleeveless garment worn underneath a coat", 'name': 'vest'}, {'frequency': 'c', 'synset': 'videotape.n.01', 'synonyms': ['videotape'], 'id': 1143, 'def': 'a video recording made on magnetic tape', 'name': 'videotape'}, {'frequency': 'r', 'synset': 'vinegar.n.01', 'synonyms': ['vinegar'], 'id': 1144, 'def': 'sour-tasting liquid produced usually by oxidation of the alcohol in wine or cider and used as a condiment or food preservative', 'name': 'vinegar'}, {'frequency': 'r', 'synset': 'violin.n.01', 'synonyms': ['violin', 'fiddle'], 'id': 1145, 'def': 'bowed stringed instrument that is the highest member of the violin family', 'name': 'violin'}, {'frequency': 'r', 'synset': 'vodka.n.01', 'synonyms': ['vodka'], 'id': 1146, 'def': 'unaged colorless liquor originating in Russia', 'name': 'vodka'}, {'frequency': 'c', 'synset': 'volleyball.n.02', 'synonyms': ['volleyball'], 'id': 1147, 'def': 'an inflated ball used in playing volleyball', 'name': 'volleyball'}, {'frequency': 'r', 'synset': 'vulture.n.01', 'synonyms': ['vulture'], 'id': 1148, 'def': 'any of various large birds of prey having naked heads and weak claws and feeding chiefly on carrion', 'name': 'vulture'}, {'frequency': 'c', 'synset': 'waffle.n.01', 'synonyms': ['waffle'], 'id': 1149, 'def': 'pancake batter baked in a waffle iron', 'name': 'waffle'}, {'frequency': 'r', 'synset': 'waffle_iron.n.01', 'synonyms': ['waffle_iron'], 'id': 1150, 'def': 'a kitchen appliance for baking waffles', 'name': 'waffle_iron'}, {'frequency': 'c', 'synset': 'wagon.n.01', 'synonyms': ['wagon'], 'id': 1151, 'def': 'any of various kinds of wheeled vehicles drawn by an animal or a tractor', 'name': 'wagon'}, {'frequency': 'c', 'synset': 'wagon_wheel.n.01', 'synonyms': ['wagon_wheel'], 'id': 1152, 'def': 'a wheel of a wagon', 'name': 'wagon_wheel'}, {'frequency': 'c', 'synset': 'walking_stick.n.01', 'synonyms': ['walking_stick'], 'id': 1153, 'def': 'a stick carried in the hand for support in walking', 'name': 'walking_stick'}, {'frequency': 'c', 'synset': 'wall_clock.n.01', 'synonyms': ['wall_clock'], 'id': 1154, 'def': 'a clock mounted on a wall', 'name': 'wall_clock'}, {'frequency': 'f', 'synset': 'wall_socket.n.01', 'synonyms': ['wall_socket', 'wall_plug', 'electric_outlet', 'electrical_outlet', 'outlet', 'electric_receptacle'], 'id': 1155, 'def': 'receptacle providing a place in a wiring system where current can be taken to run electrical devices', 'name': 'wall_socket'}, {'frequency': 'f', 'synset': 'wallet.n.01', 'synonyms': ['wallet', 'billfold'], 'id': 1156, 'def': 'a pocket-size case for holding papers and paper money', 'name': 'wallet'}, {'frequency': 'r', 'synset': 'walrus.n.01', 'synonyms': ['walrus'], 'id': 1157, 'def': 'either of two large northern marine mammals having ivory tusks and tough hide over thick blubber', 'name': 'walrus'}, {'frequency': 'r', 'synset': 'wardrobe.n.01', 'synonyms': ['wardrobe'], 'id': 1158, 'def': 'a tall piece of furniture that provides storage space for clothes; has a door and rails or hooks for hanging clothes', 'name': 'wardrobe'}, {'frequency': 'r', 'synset': 'washbasin.n.01', 'synonyms': ['washbasin', 'basin_(for_washing)', 'washbowl', 'washstand', 'handbasin'], 'id': 1159, 'def': 'a bathroom sink that is permanently installed and connected to a water supply and drainpipe; where you can wash your hands and face', 'name': 'washbasin'}, {'frequency': 'c', 'synset': 'washer.n.03', 'synonyms': ['automatic_washer', 'washing_machine'], 'id': 1160, 'def': 'a home appliance for washing clothes and linens automatically', 'name': 'automatic_washer'}, {'frequency': 'f', 'synset': 'watch.n.01', 'synonyms': ['watch', 'wristwatch'], 'id': 1161, 'def': 'a small, portable timepiece', 'name': 'watch'}, {'frequency': 'f', 'synset': 'water_bottle.n.01', 'synonyms': ['water_bottle'], 'id': 1162, 'def': 'a bottle for holding water', 'name': 'water_bottle'}, {'frequency': 'c', 'synset': 'water_cooler.n.01', 'synonyms': ['water_cooler'], 'id': 1163, 'def': 'a device for cooling and dispensing drinking water', 'name': 'water_cooler'}, {'frequency': 'c', 'synset': 'water_faucet.n.01', 'synonyms': ['water_faucet', 'water_tap', 'tap_(water_faucet)'], 'id': 1164, 'def': 'a faucet for drawing water from a pipe or cask', 'name': 'water_faucet'}, {'frequency': 'r', 'synset': 'water_heater.n.01', 'synonyms': ['water_heater', 'hot-water_heater'], 'id': 1165, 'def': 'a heater and storage tank to supply heated water', 'name': 'water_heater'}, {'frequency': 'c', 'synset': 'water_jug.n.01', 'synonyms': ['water_jug'], 'id': 1166, 'def': 'a jug that holds water', 'name': 'water_jug'}, {'frequency': 'r', 'synset': 'water_pistol.n.01', 'synonyms': ['water_gun', 'squirt_gun'], 'id': 1167, 'def': 'plaything consisting of a toy pistol that squirts water', 'name': 'water_gun'}, {'frequency': 'c', 'synset': 'water_scooter.n.01', 'synonyms': ['water_scooter', 'sea_scooter', 'jet_ski'], 'id': 1168, 'def': 'a motorboat resembling a motor scooter (NOT A SURFBOARD OR WATER SKI)', 'name': 'water_scooter'}, {'frequency': 'c', 'synset': 'water_ski.n.01', 'synonyms': ['water_ski'], 'id': 1169, 'def': 'broad ski for skimming over water towed by a speedboat (DO NOT MARK WATER)', 'name': 'water_ski'}, {'frequency': 'c', 'synset': 'water_tower.n.01', 'synonyms': ['water_tower'], 'id': 1170, 'def': 'a large reservoir for water', 'name': 'water_tower'}, {'frequency': 'c', 'synset': 'watering_can.n.01', 'synonyms': ['watering_can'], 'id': 1171, 'def': 'a container with a handle and a spout with a perforated nozzle; used to sprinkle water over plants', 'name': 'watering_can'}, {'frequency': 'f', 'synset': 'watermelon.n.02', 'synonyms': ['watermelon'], 'id': 1172, 'def': 'large oblong or roundish melon with a hard green rind and sweet watery red or occasionally yellowish pulp', 'name': 'watermelon'}, {'frequency': 'f', 'synset': 'weathervane.n.01', 'synonyms': ['weathervane', 'vane_(weathervane)', 'wind_vane'], 'id': 1173, 'def': 'mechanical device attached to an elevated structure; rotates freely to show the direction of the wind', 'name': 'weathervane'}, {'frequency': 'c', 'synset': 'webcam.n.01', 'synonyms': ['webcam'], 'id': 1174, 'def': 'a digital camera designed to take digital photographs and transmit them over the internet', 'name': 'webcam'}, {'frequency': 'c', 'synset': 'wedding_cake.n.01', 'synonyms': ['wedding_cake', 'bridecake'], 'id': 1175, 'def': 'a rich cake with two or more tiers and covered with frosting and decorations; served at a wedding reception', 'name': 'wedding_cake'}, {'frequency': 'c', 'synset': 'wedding_ring.n.01', 'synonyms': ['wedding_ring', 'wedding_band'], 'id': 1176, 'def': 'a ring given to the bride and\/or groom at the wedding', 'name': 'wedding_ring'}, {'frequency': 'f', 'synset': 'wet_suit.n.01', 'synonyms': ['wet_suit'], 'id': 1177, 'def': 'a close-fitting garment made of a permeable material; worn in cold water to retain body heat', 'name': 'wet_suit'}, {'frequency': 'f', 'synset': 'wheel.n.01', 'synonyms': ['wheel'], 'id': 1178, 'def': 'a circular frame with spokes (or a solid disc) that can rotate on a shaft or axle', 'name': 'wheel'}, {'frequency': 'c', 'synset': 'wheelchair.n.01', 'synonyms': ['wheelchair'], 'id': 1179, 'def': 'a movable chair mounted on large wheels', 'name': 'wheelchair'}, {'frequency': 'c', 'synset': 'whipped_cream.n.01', 'synonyms': ['whipped_cream'], 'id': 1180, 'def': 'cream that has been beaten until light and fluffy', 'name': 'whipped_cream'}, {'frequency': 'c', 'synset': 'whistle.n.03', 'synonyms': ['whistle'], 'id': 1181, 'def': 'a small wind instrument that produces a whistling sound by blowing into it', 'name': 'whistle'}, {'frequency': 'c', 'synset': 'wig.n.01', 'synonyms': ['wig'], 'id': 1182, 'def': 'hairpiece covering the head and made of real or synthetic hair', 'name': 'wig'}, {'frequency': 'c', 'synset': 'wind_chime.n.01', 'synonyms': ['wind_chime'], 'id': 1183, 'def': 'a decorative arrangement of pieces of metal or glass or pottery that hang together loosely so the wind can cause them to tinkle', 'name': 'wind_chime'}, {'frequency': 'c', 'synset': 'windmill.n.01', 'synonyms': ['windmill'], 'id': 1184, 'def': 'A mill or turbine that is powered by wind', 'name': 'windmill'}, {'frequency': 'c', 'synset': 'window_box.n.01', 'synonyms': ['window_box_(for_plants)'], 'id': 1185, 'def': 'a container for growing plants on a windowsill', 'name': 'window_box_(for_plants)'}, {'frequency': 'f', 'synset': 'windshield_wiper.n.01', 'synonyms': ['windshield_wiper', 'windscreen_wiper', 'wiper_(for_windshield\/screen)'], 'id': 1186, 'def': 'a mechanical device that cleans the windshield', 'name': 'windshield_wiper'}, {'frequency': 'c', 'synset': 'windsock.n.01', 'synonyms': ['windsock', 'air_sock', 'air-sleeve', 'wind_sleeve', 'wind_cone'], 'id': 1187, 'def': 'a truncated cloth cone mounted on a mast\/pole; shows wind direction', 'name': 'windsock'}, {'frequency': 'f', 'synset': 'wine_bottle.n.01', 'synonyms': ['wine_bottle'], 'id': 1188, 'def': 'a bottle for holding wine', 'name': 'wine_bottle'}, {'frequency': 'c', 'synset': 'wine_bucket.n.01', 'synonyms': ['wine_bucket', 'wine_cooler'], 'id': 1189, 'def': 'a bucket of ice used to chill a bottle of wine', 'name': 'wine_bucket'}, {'frequency': 'f', 'synset': 'wineglass.n.01', 'synonyms': ['wineglass'], 'id': 1190, 'def': 'a glass that has a stem and in which wine is served', 'name': 'wineglass'}, {'frequency': 'f', 'synset': 'winker.n.02', 'synonyms': ['blinder_(for_horses)'], 'id': 1191, 'def': 'blinds that prevent a horse from seeing something on either side', 'name': 'blinder_(for_horses)'}, {'frequency': 'c', 'synset': 'wok.n.01', 'synonyms': ['wok'], 'id': 1192, 'def': 'pan with a convex bottom; used for frying in Chinese cooking', 'name': 'wok'}, {'frequency': 'r', 'synset': 'wolf.n.01', 'synonyms': ['wolf'], 'id': 1193, 'def': 'a wild carnivorous mammal of the dog family, living and hunting in packs', 'name': 'wolf'}, {'frequency': 'c', 'synset': 'wooden_spoon.n.02', 'synonyms': ['wooden_spoon'], 'id': 1194, 'def': 'a spoon made of wood', 'name': 'wooden_spoon'}, {'frequency': 'c', 'synset': 'wreath.n.01', 'synonyms': ['wreath'], 'id': 1195, 'def': 'an arrangement of flowers, leaves, or stems fastened in a ring', 'name': 'wreath'}, {'frequency': 'c', 'synset': 'wrench.n.03', 'synonyms': ['wrench', 'spanner'], 'id': 1196, 'def': 'a hand tool that is used to hold or twist a nut or bolt', 'name': 'wrench'}, {'frequency': 'f', 'synset': 'wristband.n.01', 'synonyms': ['wristband'], 'id': 1197, 'def': 'band consisting of a part of a sleeve that covers the wrist', 'name': 'wristband'}, {'frequency': 'f', 'synset': 'wristlet.n.01', 'synonyms': ['wristlet', 'wrist_band'], 'id': 1198, 'def': 'a band or bracelet worn around the wrist', 'name': 'wristlet'}, {'frequency': 'c', 'synset': 'yacht.n.01', 'synonyms': ['yacht'], 'id': 1199, 'def': 'an expensive vessel propelled by sail or power and used for cruising or racing', 'name': 'yacht'}, {'frequency': 'c', 'synset': 'yogurt.n.01', 'synonyms': ['yogurt', 'yoghurt', 'yoghourt'], 'id': 1200, 'def': 'a custard-like food made from curdled milk', 'name': 'yogurt'}, {'frequency': 'c', 'synset': 'yoke.n.07', 'synonyms': ['yoke_(animal_equipment)'], 'id': 1201, 'def': 'gear joining two animals at the neck; NOT egg yolk', 'name': 'yoke_(animal_equipment)'}, {'frequency': 'f', 'synset': 'zebra.n.01', 'synonyms': ['zebra'], 'id': 1202, 'def': 'any of several fleet black-and-white striped African equines', 'name': 'zebra'}, {'frequency': 'c', 'synset': 'zucchini.n.02', 'synonyms': ['zucchini', 'courgette'], 'id': 1203, 'def': 'small cucumber-shaped vegetable marrow; typically dark green', 'name': 'zucchini'}]  # noqa$/;"	v
LVIS_CATEGORY_IMAGE_COUNT	detectron2/data/datasets/lvis_v1_category_image_count.py	/^LVIS_CATEGORY_IMAGE_COUNT = [{'id': 1, 'image_count': 64}, {'id': 2, 'image_count': 364}, {'id': 3, 'image_count': 1911}, {'id': 4, 'image_count': 149}, {'id': 5, 'image_count': 29}, {'id': 6, 'image_count': 26}, {'id': 7, 'image_count': 59}, {'id': 8, 'image_count': 22}, {'id': 9, 'image_count': 12}, {'id': 10, 'image_count': 28}, {'id': 11, 'image_count': 505}, {'id': 12, 'image_count': 1207}, {'id': 13, 'image_count': 4}, {'id': 14, 'image_count': 10}, {'id': 15, 'image_count': 500}, {'id': 16, 'image_count': 33}, {'id': 17, 'image_count': 3}, {'id': 18, 'image_count': 44}, {'id': 19, 'image_count': 561}, {'id': 20, 'image_count': 8}, {'id': 21, 'image_count': 9}, {'id': 22, 'image_count': 33}, {'id': 23, 'image_count': 1883}, {'id': 24, 'image_count': 98}, {'id': 25, 'image_count': 70}, {'id': 26, 'image_count': 46}, {'id': 27, 'image_count': 117}, {'id': 28, 'image_count': 41}, {'id': 29, 'image_count': 1395}, {'id': 30, 'image_count': 7}, {'id': 31, 'image_count': 1}, {'id': 32, 'image_count': 314}, {'id': 33, 'image_count': 31}, {'id': 34, 'image_count': 1905}, {'id': 35, 'image_count': 1859}, {'id': 36, 'image_count': 1623}, {'id': 37, 'image_count': 47}, {'id': 38, 'image_count': 3}, {'id': 39, 'image_count': 3}, {'id': 40, 'image_count': 1}, {'id': 41, 'image_count': 305}, {'id': 42, 'image_count': 6}, {'id': 43, 'image_count': 210}, {'id': 44, 'image_count': 36}, {'id': 45, 'image_count': 1787}, {'id': 46, 'image_count': 17}, {'id': 47, 'image_count': 51}, {'id': 48, 'image_count': 138}, {'id': 49, 'image_count': 3}, {'id': 50, 'image_count': 1470}, {'id': 51, 'image_count': 3}, {'id': 52, 'image_count': 2}, {'id': 53, 'image_count': 186}, {'id': 54, 'image_count': 76}, {'id': 55, 'image_count': 26}, {'id': 56, 'image_count': 303}, {'id': 57, 'image_count': 738}, {'id': 58, 'image_count': 1799}, {'id': 59, 'image_count': 1934}, {'id': 60, 'image_count': 1609}, {'id': 61, 'image_count': 1622}, {'id': 62, 'image_count': 41}, {'id': 63, 'image_count': 4}, {'id': 64, 'image_count': 11}, {'id': 65, 'image_count': 270}, {'id': 66, 'image_count': 349}, {'id': 67, 'image_count': 42}, {'id': 68, 'image_count': 823}, {'id': 69, 'image_count': 6}, {'id': 70, 'image_count': 48}, {'id': 71, 'image_count': 3}, {'id': 72, 'image_count': 42}, {'id': 73, 'image_count': 24}, {'id': 74, 'image_count': 16}, {'id': 75, 'image_count': 605}, {'id': 76, 'image_count': 646}, {'id': 77, 'image_count': 1765}, {'id': 78, 'image_count': 2}, {'id': 79, 'image_count': 125}, {'id': 80, 'image_count': 1420}, {'id': 81, 'image_count': 140}, {'id': 82, 'image_count': 4}, {'id': 83, 'image_count': 322}, {'id': 84, 'image_count': 60}, {'id': 85, 'image_count': 2}, {'id': 86, 'image_count': 231}, {'id': 87, 'image_count': 333}, {'id': 88, 'image_count': 1941}, {'id': 89, 'image_count': 367}, {'id': 90, 'image_count': 1922}, {'id': 91, 'image_count': 18}, {'id': 92, 'image_count': 81}, {'id': 93, 'image_count': 1}, {'id': 94, 'image_count': 1852}, {'id': 95, 'image_count': 430}, {'id': 96, 'image_count': 247}, {'id': 97, 'image_count': 94}, {'id': 98, 'image_count': 21}, {'id': 99, 'image_count': 1821}, {'id': 100, 'image_count': 16}, {'id': 101, 'image_count': 12}, {'id': 102, 'image_count': 25}, {'id': 103, 'image_count': 41}, {'id': 104, 'image_count': 244}, {'id': 105, 'image_count': 7}, {'id': 106, 'image_count': 1}, {'id': 107, 'image_count': 40}, {'id': 108, 'image_count': 40}, {'id': 109, 'image_count': 104}, {'id': 110, 'image_count': 1671}, {'id': 111, 'image_count': 49}, {'id': 112, 'image_count': 243}, {'id': 113, 'image_count': 2}, {'id': 114, 'image_count': 242}, {'id': 115, 'image_count': 271}, {'id': 116, 'image_count': 104}, {'id': 117, 'image_count': 8}, {'id': 118, 'image_count': 1758}, {'id': 119, 'image_count': 1}, {'id': 120, 'image_count': 48}, {'id': 121, 'image_count': 14}, {'id': 122, 'image_count': 40}, {'id': 123, 'image_count': 1}, {'id': 124, 'image_count': 37}, {'id': 125, 'image_count': 1510}, {'id': 126, 'image_count': 6}, {'id': 127, 'image_count': 1903}, {'id': 128, 'image_count': 70}, {'id': 129, 'image_count': 86}, {'id': 130, 'image_count': 7}, {'id': 131, 'image_count': 5}, {'id': 132, 'image_count': 1406}, {'id': 133, 'image_count': 1901}, {'id': 134, 'image_count': 15}, {'id': 135, 'image_count': 28}, {'id': 136, 'image_count': 6}, {'id': 137, 'image_count': 494}, {'id': 138, 'image_count': 234}, {'id': 139, 'image_count': 1922}, {'id': 140, 'image_count': 1}, {'id': 141, 'image_count': 35}, {'id': 142, 'image_count': 5}, {'id': 143, 'image_count': 1828}, {'id': 144, 'image_count': 8}, {'id': 145, 'image_count': 63}, {'id': 146, 'image_count': 1668}, {'id': 147, 'image_count': 4}, {'id': 148, 'image_count': 95}, {'id': 149, 'image_count': 17}, {'id': 150, 'image_count': 1567}, {'id': 151, 'image_count': 2}, {'id': 152, 'image_count': 103}, {'id': 153, 'image_count': 50}, {'id': 154, 'image_count': 1309}, {'id': 155, 'image_count': 6}, {'id': 156, 'image_count': 92}, {'id': 157, 'image_count': 19}, {'id': 158, 'image_count': 37}, {'id': 159, 'image_count': 4}, {'id': 160, 'image_count': 709}, {'id': 161, 'image_count': 9}, {'id': 162, 'image_count': 82}, {'id': 163, 'image_count': 15}, {'id': 164, 'image_count': 3}, {'id': 165, 'image_count': 61}, {'id': 166, 'image_count': 51}, {'id': 167, 'image_count': 5}, {'id': 168, 'image_count': 13}, {'id': 169, 'image_count': 642}, {'id': 170, 'image_count': 24}, {'id': 171, 'image_count': 255}, {'id': 172, 'image_count': 9}, {'id': 173, 'image_count': 1808}, {'id': 174, 'image_count': 31}, {'id': 175, 'image_count': 158}, {'id': 176, 'image_count': 80}, {'id': 177, 'image_count': 1884}, {'id': 178, 'image_count': 158}, {'id': 179, 'image_count': 2}, {'id': 180, 'image_count': 12}, {'id': 181, 'image_count': 1659}, {'id': 182, 'image_count': 7}, {'id': 183, 'image_count': 834}, {'id': 184, 'image_count': 57}, {'id': 185, 'image_count': 174}, {'id': 186, 'image_count': 95}, {'id': 187, 'image_count': 27}, {'id': 188, 'image_count': 22}, {'id': 189, 'image_count': 1391}, {'id': 190, 'image_count': 90}, {'id': 191, 'image_count': 40}, {'id': 192, 'image_count': 445}, {'id': 193, 'image_count': 21}, {'id': 194, 'image_count': 1132}, {'id': 195, 'image_count': 177}, {'id': 196, 'image_count': 4}, {'id': 197, 'image_count': 17}, {'id': 198, 'image_count': 84}, {'id': 199, 'image_count': 55}, {'id': 200, 'image_count': 30}, {'id': 201, 'image_count': 25}, {'id': 202, 'image_count': 2}, {'id': 203, 'image_count': 125}, {'id': 204, 'image_count': 1135}, {'id': 205, 'image_count': 19}, {'id': 206, 'image_count': 72}, {'id': 207, 'image_count': 1926}, {'id': 208, 'image_count': 159}, {'id': 209, 'image_count': 7}, {'id': 210, 'image_count': 1}, {'id': 211, 'image_count': 13}, {'id': 212, 'image_count': 35}, {'id': 213, 'image_count': 18}, {'id': 214, 'image_count': 8}, {'id': 215, 'image_count': 6}, {'id': 216, 'image_count': 35}, {'id': 217, 'image_count': 1222}, {'id': 218, 'image_count': 103}, {'id': 219, 'image_count': 28}, {'id': 220, 'image_count': 63}, {'id': 221, 'image_count': 28}, {'id': 222, 'image_count': 5}, {'id': 223, 'image_count': 7}, {'id': 224, 'image_count': 14}, {'id': 225, 'image_count': 1918}, {'id': 226, 'image_count': 133}, {'id': 227, 'image_count': 16}, {'id': 228, 'image_count': 27}, {'id': 229, 'image_count': 110}, {'id': 230, 'image_count': 1895}, {'id': 231, 'image_count': 4}, {'id': 232, 'image_count': 1927}, {'id': 233, 'image_count': 8}, {'id': 234, 'image_count': 1}, {'id': 235, 'image_count': 263}, {'id': 236, 'image_count': 10}, {'id': 237, 'image_count': 2}, {'id': 238, 'image_count': 3}, {'id': 239, 'image_count': 87}, {'id': 240, 'image_count': 9}, {'id': 241, 'image_count': 71}, {'id': 242, 'image_count': 13}, {'id': 243, 'image_count': 18}, {'id': 244, 'image_count': 2}, {'id': 245, 'image_count': 5}, {'id': 246, 'image_count': 45}, {'id': 247, 'image_count': 1}, {'id': 248, 'image_count': 23}, {'id': 249, 'image_count': 32}, {'id': 250, 'image_count': 4}, {'id': 251, 'image_count': 1}, {'id': 252, 'image_count': 858}, {'id': 253, 'image_count': 661}, {'id': 254, 'image_count': 168}, {'id': 255, 'image_count': 210}, {'id': 256, 'image_count': 65}, {'id': 257, 'image_count': 4}, {'id': 258, 'image_count': 2}, {'id': 259, 'image_count': 159}, {'id': 260, 'image_count': 31}, {'id': 261, 'image_count': 811}, {'id': 262, 'image_count': 1}, {'id': 263, 'image_count': 42}, {'id': 264, 'image_count': 27}, {'id': 265, 'image_count': 2}, {'id': 266, 'image_count': 5}, {'id': 267, 'image_count': 95}, {'id': 268, 'image_count': 32}, {'id': 269, 'image_count': 1}, {'id': 270, 'image_count': 1}, {'id': 271, 'image_count': 1844}, {'id': 272, 'image_count': 897}, {'id': 273, 'image_count': 31}, {'id': 274, 'image_count': 23}, {'id': 275, 'image_count': 1}, {'id': 276, 'image_count': 202}, {'id': 277, 'image_count': 746}, {'id': 278, 'image_count': 44}, {'id': 279, 'image_count': 14}, {'id': 280, 'image_count': 26}, {'id': 281, 'image_count': 1}, {'id': 282, 'image_count': 2}, {'id': 283, 'image_count': 25}, {'id': 284, 'image_count': 238}, {'id': 285, 'image_count': 592}, {'id': 286, 'image_count': 26}, {'id': 287, 'image_count': 5}, {'id': 288, 'image_count': 42}, {'id': 289, 'image_count': 13}, {'id': 290, 'image_count': 46}, {'id': 291, 'image_count': 1}, {'id': 292, 'image_count': 8}, {'id': 293, 'image_count': 34}, {'id': 294, 'image_count': 5}, {'id': 295, 'image_count': 1}, {'id': 296, 'image_count': 1871}, {'id': 297, 'image_count': 717}, {'id': 298, 'image_count': 1010}, {'id': 299, 'image_count': 679}, {'id': 300, 'image_count': 3}, {'id': 301, 'image_count': 4}, {'id': 302, 'image_count': 1}, {'id': 303, 'image_count': 166}, {'id': 304, 'image_count': 2}, {'id': 305, 'image_count': 266}, {'id': 306, 'image_count': 101}, {'id': 307, 'image_count': 6}, {'id': 308, 'image_count': 14}, {'id': 309, 'image_count': 133}, {'id': 310, 'image_count': 2}, {'id': 311, 'image_count': 38}, {'id': 312, 'image_count': 95}, {'id': 313, 'image_count': 1}, {'id': 314, 'image_count': 12}, {'id': 315, 'image_count': 49}, {'id': 316, 'image_count': 5}, {'id': 317, 'image_count': 5}, {'id': 318, 'image_count': 16}, {'id': 319, 'image_count': 216}, {'id': 320, 'image_count': 12}, {'id': 321, 'image_count': 1}, {'id': 322, 'image_count': 54}, {'id': 323, 'image_count': 5}, {'id': 324, 'image_count': 245}, {'id': 325, 'image_count': 12}, {'id': 326, 'image_count': 7}, {'id': 327, 'image_count': 35}, {'id': 328, 'image_count': 36}, {'id': 329, 'image_count': 32}, {'id': 330, 'image_count': 1027}, {'id': 331, 'image_count': 10}, {'id': 332, 'image_count': 12}, {'id': 333, 'image_count': 1}, {'id': 334, 'image_count': 67}, {'id': 335, 'image_count': 71}, {'id': 336, 'image_count': 30}, {'id': 337, 'image_count': 48}, {'id': 338, 'image_count': 249}, {'id': 339, 'image_count': 13}, {'id': 340, 'image_count': 29}, {'id': 341, 'image_count': 14}, {'id': 342, 'image_count': 236}, {'id': 343, 'image_count': 15}, {'id': 344, 'image_count': 1521}, {'id': 345, 'image_count': 25}, {'id': 346, 'image_count': 249}, {'id': 347, 'image_count': 139}, {'id': 348, 'image_count': 2}, {'id': 349, 'image_count': 2}, {'id': 350, 'image_count': 1890}, {'id': 351, 'image_count': 1240}, {'id': 352, 'image_count': 1}, {'id': 353, 'image_count': 9}, {'id': 354, 'image_count': 1}, {'id': 355, 'image_count': 3}, {'id': 356, 'image_count': 11}, {'id': 357, 'image_count': 4}, {'id': 358, 'image_count': 236}, {'id': 359, 'image_count': 44}, {'id': 360, 'image_count': 19}, {'id': 361, 'image_count': 1100}, {'id': 362, 'image_count': 7}, {'id': 363, 'image_count': 69}, {'id': 364, 'image_count': 2}, {'id': 365, 'image_count': 8}, {'id': 366, 'image_count': 5}, {'id': 367, 'image_count': 227}, {'id': 368, 'image_count': 6}, {'id': 369, 'image_count': 106}, {'id': 370, 'image_count': 81}, {'id': 371, 'image_count': 17}, {'id': 372, 'image_count': 134}, {'id': 373, 'image_count': 312}, {'id': 374, 'image_count': 8}, {'id': 375, 'image_count': 271}, {'id': 376, 'image_count': 2}, {'id': 377, 'image_count': 103}, {'id': 378, 'image_count': 1938}, {'id': 379, 'image_count': 574}, {'id': 380, 'image_count': 120}, {'id': 381, 'image_count': 2}, {'id': 382, 'image_count': 2}, {'id': 383, 'image_count': 13}, {'id': 384, 'image_count': 29}, {'id': 385, 'image_count': 1710}, {'id': 386, 'image_count': 66}, {'id': 387, 'image_count': 1008}, {'id': 388, 'image_count': 1}, {'id': 389, 'image_count': 3}, {'id': 390, 'image_count': 1942}, {'id': 391, 'image_count': 19}, {'id': 392, 'image_count': 1488}, {'id': 393, 'image_count': 46}, {'id': 394, 'image_count': 106}, {'id': 395, 'image_count': 115}, {'id': 396, 'image_count': 19}, {'id': 397, 'image_count': 2}, {'id': 398, 'image_count': 1}, {'id': 399, 'image_count': 28}, {'id': 400, 'image_count': 9}, {'id': 401, 'image_count': 192}, {'id': 402, 'image_count': 12}, {'id': 403, 'image_count': 21}, {'id': 404, 'image_count': 247}, {'id': 405, 'image_count': 6}, {'id': 406, 'image_count': 64}, {'id': 407, 'image_count': 7}, {'id': 408, 'image_count': 40}, {'id': 409, 'image_count': 542}, {'id': 410, 'image_count': 2}, {'id': 411, 'image_count': 1898}, {'id': 412, 'image_count': 36}, {'id': 413, 'image_count': 4}, {'id': 414, 'image_count': 1}, {'id': 415, 'image_count': 191}, {'id': 416, 'image_count': 6}, {'id': 417, 'image_count': 41}, {'id': 418, 'image_count': 39}, {'id': 419, 'image_count': 46}, {'id': 420, 'image_count': 1}, {'id': 421, 'image_count': 1451}, {'id': 422, 'image_count': 1878}, {'id': 423, 'image_count': 11}, {'id': 424, 'image_count': 82}, {'id': 425, 'image_count': 18}, {'id': 426, 'image_count': 1}, {'id': 427, 'image_count': 7}, {'id': 428, 'image_count': 3}, {'id': 429, 'image_count': 575}, {'id': 430, 'image_count': 1907}, {'id': 431, 'image_count': 8}, {'id': 432, 'image_count': 4}, {'id': 433, 'image_count': 32}, {'id': 434, 'image_count': 11}, {'id': 435, 'image_count': 4}, {'id': 436, 'image_count': 54}, {'id': 437, 'image_count': 202}, {'id': 438, 'image_count': 32}, {'id': 439, 'image_count': 3}, {'id': 440, 'image_count': 130}, {'id': 441, 'image_count': 119}, {'id': 442, 'image_count': 141}, {'id': 443, 'image_count': 29}, {'id': 444, 'image_count': 525}, {'id': 445, 'image_count': 1323}, {'id': 446, 'image_count': 2}, {'id': 447, 'image_count': 113}, {'id': 448, 'image_count': 16}, {'id': 449, 'image_count': 7}, {'id': 450, 'image_count': 35}, {'id': 451, 'image_count': 1908}, {'id': 452, 'image_count': 353}, {'id': 453, 'image_count': 18}, {'id': 454, 'image_count': 14}, {'id': 455, 'image_count': 77}, {'id': 456, 'image_count': 8}, {'id': 457, 'image_count': 37}, {'id': 458, 'image_count': 1}, {'id': 459, 'image_count': 346}, {'id': 460, 'image_count': 19}, {'id': 461, 'image_count': 1779}, {'id': 462, 'image_count': 23}, {'id': 463, 'image_count': 25}, {'id': 464, 'image_count': 67}, {'id': 465, 'image_count': 19}, {'id': 466, 'image_count': 28}, {'id': 467, 'image_count': 4}, {'id': 468, 'image_count': 27}, {'id': 469, 'image_count': 1861}, {'id': 470, 'image_count': 11}, {'id': 471, 'image_count': 13}, {'id': 472, 'image_count': 13}, {'id': 473, 'image_count': 32}, {'id': 474, 'image_count': 1767}, {'id': 475, 'image_count': 42}, {'id': 476, 'image_count': 17}, {'id': 477, 'image_count': 128}, {'id': 478, 'image_count': 1}, {'id': 479, 'image_count': 9}, {'id': 480, 'image_count': 10}, {'id': 481, 'image_count': 4}, {'id': 482, 'image_count': 9}, {'id': 483, 'image_count': 18}, {'id': 484, 'image_count': 41}, {'id': 485, 'image_count': 28}, {'id': 486, 'image_count': 3}, {'id': 487, 'image_count': 65}, {'id': 488, 'image_count': 9}, {'id': 489, 'image_count': 23}, {'id': 490, 'image_count': 24}, {'id': 491, 'image_count': 1}, {'id': 492, 'image_count': 2}, {'id': 493, 'image_count': 59}, {'id': 494, 'image_count': 48}, {'id': 495, 'image_count': 17}, {'id': 496, 'image_count': 1877}, {'id': 497, 'image_count': 18}, {'id': 498, 'image_count': 1920}, {'id': 499, 'image_count': 50}, {'id': 500, 'image_count': 1890}, {'id': 501, 'image_count': 99}, {'id': 502, 'image_count': 1530}, {'id': 503, 'image_count': 3}, {'id': 504, 'image_count': 11}, {'id': 505, 'image_count': 19}, {'id': 506, 'image_count': 3}, {'id': 507, 'image_count': 63}, {'id': 508, 'image_count': 5}, {'id': 509, 'image_count': 6}, {'id': 510, 'image_count': 233}, {'id': 511, 'image_count': 54}, {'id': 512, 'image_count': 36}, {'id': 513, 'image_count': 10}, {'id': 514, 'image_count': 124}, {'id': 515, 'image_count': 101}, {'id': 516, 'image_count': 3}, {'id': 517, 'image_count': 363}, {'id': 518, 'image_count': 3}, {'id': 519, 'image_count': 30}, {'id': 520, 'image_count': 18}, {'id': 521, 'image_count': 199}, {'id': 522, 'image_count': 97}, {'id': 523, 'image_count': 32}, {'id': 524, 'image_count': 121}, {'id': 525, 'image_count': 16}, {'id': 526, 'image_count': 12}, {'id': 527, 'image_count': 2}, {'id': 528, 'image_count': 214}, {'id': 529, 'image_count': 48}, {'id': 530, 'image_count': 26}, {'id': 531, 'image_count': 13}, {'id': 532, 'image_count': 4}, {'id': 533, 'image_count': 11}, {'id': 534, 'image_count': 123}, {'id': 535, 'image_count': 7}, {'id': 536, 'image_count': 200}, {'id': 537, 'image_count': 91}, {'id': 538, 'image_count': 9}, {'id': 539, 'image_count': 72}, {'id': 540, 'image_count': 1886}, {'id': 541, 'image_count': 4}, {'id': 542, 'image_count': 1}, {'id': 543, 'image_count': 1}, {'id': 544, 'image_count': 1932}, {'id': 545, 'image_count': 4}, {'id': 546, 'image_count': 56}, {'id': 547, 'image_count': 854}, {'id': 548, 'image_count': 755}, {'id': 549, 'image_count': 1843}, {'id': 550, 'image_count': 96}, {'id': 551, 'image_count': 7}, {'id': 552, 'image_count': 74}, {'id': 553, 'image_count': 66}, {'id': 554, 'image_count': 57}, {'id': 555, 'image_count': 44}, {'id': 556, 'image_count': 1905}, {'id': 557, 'image_count': 4}, {'id': 558, 'image_count': 90}, {'id': 559, 'image_count': 1635}, {'id': 560, 'image_count': 8}, {'id': 561, 'image_count': 5}, {'id': 562, 'image_count': 50}, {'id': 563, 'image_count': 545}, {'id': 564, 'image_count': 20}, {'id': 565, 'image_count': 193}, {'id': 566, 'image_count': 285}, {'id': 567, 'image_count': 3}, {'id': 568, 'image_count': 1}, {'id': 569, 'image_count': 1904}, {'id': 570, 'image_count': 294}, {'id': 571, 'image_count': 3}, {'id': 572, 'image_count': 5}, {'id': 573, 'image_count': 24}, {'id': 574, 'image_count': 2}, {'id': 575, 'image_count': 2}, {'id': 576, 'image_count': 16}, {'id': 577, 'image_count': 8}, {'id': 578, 'image_count': 154}, {'id': 579, 'image_count': 66}, {'id': 580, 'image_count': 1}, {'id': 581, 'image_count': 24}, {'id': 582, 'image_count': 1}, {'id': 583, 'image_count': 4}, {'id': 584, 'image_count': 75}, {'id': 585, 'image_count': 6}, {'id': 586, 'image_count': 126}, {'id': 587, 'image_count': 24}, {'id': 588, 'image_count': 22}, {'id': 589, 'image_count': 1872}, {'id': 590, 'image_count': 16}, {'id': 591, 'image_count': 423}, {'id': 592, 'image_count': 1927}, {'id': 593, 'image_count': 38}, {'id': 594, 'image_count': 3}, {'id': 595, 'image_count': 1945}, {'id': 596, 'image_count': 35}, {'id': 597, 'image_count': 1}, {'id': 598, 'image_count': 13}, {'id': 599, 'image_count': 9}, {'id': 600, 'image_count': 14}, {'id': 601, 'image_count': 37}, {'id': 602, 'image_count': 3}, {'id': 603, 'image_count': 4}, {'id': 604, 'image_count': 100}, {'id': 605, 'image_count': 195}, {'id': 606, 'image_count': 1}, {'id': 607, 'image_count': 12}, {'id': 608, 'image_count': 24}, {'id': 609, 'image_count': 489}, {'id': 610, 'image_count': 10}, {'id': 611, 'image_count': 1689}, {'id': 612, 'image_count': 42}, {'id': 613, 'image_count': 81}, {'id': 614, 'image_count': 894}, {'id': 615, 'image_count': 1868}, {'id': 616, 'image_count': 7}, {'id': 617, 'image_count': 1567}, {'id': 618, 'image_count': 10}, {'id': 619, 'image_count': 8}, {'id': 620, 'image_count': 7}, {'id': 621, 'image_count': 629}, {'id': 622, 'image_count': 89}, {'id': 623, 'image_count': 15}, {'id': 624, 'image_count': 134}, {'id': 625, 'image_count': 4}, {'id': 626, 'image_count': 1802}, {'id': 627, 'image_count': 595}, {'id': 628, 'image_count': 1210}, {'id': 629, 'image_count': 48}, {'id': 630, 'image_count': 418}, {'id': 631, 'image_count': 1846}, {'id': 632, 'image_count': 5}, {'id': 633, 'image_count': 221}, {'id': 634, 'image_count': 10}, {'id': 635, 'image_count': 7}, {'id': 636, 'image_count': 76}, {'id': 637, 'image_count': 22}, {'id': 638, 'image_count': 10}, {'id': 639, 'image_count': 341}, {'id': 640, 'image_count': 1}, {'id': 641, 'image_count': 705}, {'id': 642, 'image_count': 1900}, {'id': 643, 'image_count': 188}, {'id': 644, 'image_count': 227}, {'id': 645, 'image_count': 861}, {'id': 646, 'image_count': 6}, {'id': 647, 'image_count': 115}, {'id': 648, 'image_count': 5}, {'id': 649, 'image_count': 43}, {'id': 650, 'image_count': 14}, {'id': 651, 'image_count': 6}, {'id': 652, 'image_count': 15}, {'id': 653, 'image_count': 1167}, {'id': 654, 'image_count': 15}, {'id': 655, 'image_count': 994}, {'id': 656, 'image_count': 28}, {'id': 657, 'image_count': 2}, {'id': 658, 'image_count': 338}, {'id': 659, 'image_count': 334}, {'id': 660, 'image_count': 15}, {'id': 661, 'image_count': 102}, {'id': 662, 'image_count': 1}, {'id': 663, 'image_count': 8}, {'id': 664, 'image_count': 1}, {'id': 665, 'image_count': 1}, {'id': 666, 'image_count': 28}, {'id': 667, 'image_count': 91}, {'id': 668, 'image_count': 260}, {'id': 669, 'image_count': 131}, {'id': 670, 'image_count': 128}, {'id': 671, 'image_count': 3}, {'id': 672, 'image_count': 10}, {'id': 673, 'image_count': 39}, {'id': 674, 'image_count': 2}, {'id': 675, 'image_count': 925}, {'id': 676, 'image_count': 354}, {'id': 677, 'image_count': 31}, {'id': 678, 'image_count': 10}, {'id': 679, 'image_count': 215}, {'id': 680, 'image_count': 71}, {'id': 681, 'image_count': 43}, {'id': 682, 'image_count': 28}, {'id': 683, 'image_count': 34}, {'id': 684, 'image_count': 16}, {'id': 685, 'image_count': 273}, {'id': 686, 'image_count': 2}, {'id': 687, 'image_count': 999}, {'id': 688, 'image_count': 4}, {'id': 689, 'image_count': 107}, {'id': 690, 'image_count': 2}, {'id': 691, 'image_count': 1}, {'id': 692, 'image_count': 454}, {'id': 693, 'image_count': 9}, {'id': 694, 'image_count': 1901}, {'id': 695, 'image_count': 61}, {'id': 696, 'image_count': 91}, {'id': 697, 'image_count': 46}, {'id': 698, 'image_count': 1402}, {'id': 699, 'image_count': 74}, {'id': 700, 'image_count': 421}, {'id': 701, 'image_count': 226}, {'id': 702, 'image_count': 10}, {'id': 703, 'image_count': 1720}, {'id': 704, 'image_count': 261}, {'id': 705, 'image_count': 1337}, {'id': 706, 'image_count': 293}, {'id': 707, 'image_count': 62}, {'id': 708, 'image_count': 814}, {'id': 709, 'image_count': 407}, {'id': 710, 'image_count': 6}, {'id': 711, 'image_count': 16}, {'id': 712, 'image_count': 7}, {'id': 713, 'image_count': 1791}, {'id': 714, 'image_count': 2}, {'id': 715, 'image_count': 1915}, {'id': 716, 'image_count': 1940}, {'id': 717, 'image_count': 13}, {'id': 718, 'image_count': 16}, {'id': 719, 'image_count': 448}, {'id': 720, 'image_count': 12}, {'id': 721, 'image_count': 18}, {'id': 722, 'image_count': 4}, {'id': 723, 'image_count': 71}, {'id': 724, 'image_count': 189}, {'id': 725, 'image_count': 74}, {'id': 726, 'image_count': 103}, {'id': 727, 'image_count': 3}, {'id': 728, 'image_count': 110}, {'id': 729, 'image_count': 5}, {'id': 730, 'image_count': 9}, {'id': 731, 'image_count': 15}, {'id': 732, 'image_count': 25}, {'id': 733, 'image_count': 7}, {'id': 734, 'image_count': 647}, {'id': 735, 'image_count': 824}, {'id': 736, 'image_count': 100}, {'id': 737, 'image_count': 47}, {'id': 738, 'image_count': 121}, {'id': 739, 'image_count': 731}, {'id': 740, 'image_count': 73}, {'id': 741, 'image_count': 49}, {'id': 742, 'image_count': 23}, {'id': 743, 'image_count': 4}, {'id': 744, 'image_count': 62}, {'id': 745, 'image_count': 118}, {'id': 746, 'image_count': 99}, {'id': 747, 'image_count': 40}, {'id': 748, 'image_count': 1036}, {'id': 749, 'image_count': 105}, {'id': 750, 'image_count': 21}, {'id': 751, 'image_count': 229}, {'id': 752, 'image_count': 7}, {'id': 753, 'image_count': 72}, {'id': 754, 'image_count': 9}, {'id': 755, 'image_count': 10}, {'id': 756, 'image_count': 328}, {'id': 757, 'image_count': 468}, {'id': 758, 'image_count': 1}, {'id': 759, 'image_count': 2}, {'id': 760, 'image_count': 24}, {'id': 761, 'image_count': 11}, {'id': 762, 'image_count': 72}, {'id': 763, 'image_count': 17}, {'id': 764, 'image_count': 10}, {'id': 765, 'image_count': 17}, {'id': 766, 'image_count': 489}, {'id': 767, 'image_count': 47}, {'id': 768, 'image_count': 93}, {'id': 769, 'image_count': 1}, {'id': 770, 'image_count': 12}, {'id': 771, 'image_count': 228}, {'id': 772, 'image_count': 5}, {'id': 773, 'image_count': 76}, {'id': 774, 'image_count': 71}, {'id': 775, 'image_count': 30}, {'id': 776, 'image_count': 109}, {'id': 777, 'image_count': 14}, {'id': 778, 'image_count': 1}, {'id': 779, 'image_count': 8}, {'id': 780, 'image_count': 26}, {'id': 781, 'image_count': 339}, {'id': 782, 'image_count': 153}, {'id': 783, 'image_count': 2}, {'id': 784, 'image_count': 3}, {'id': 785, 'image_count': 8}, {'id': 786, 'image_count': 47}, {'id': 787, 'image_count': 8}, {'id': 788, 'image_count': 6}, {'id': 789, 'image_count': 116}, {'id': 790, 'image_count': 69}, {'id': 791, 'image_count': 13}, {'id': 792, 'image_count': 6}, {'id': 793, 'image_count': 1928}, {'id': 794, 'image_count': 79}, {'id': 795, 'image_count': 14}, {'id': 796, 'image_count': 7}, {'id': 797, 'image_count': 20}, {'id': 798, 'image_count': 114}, {'id': 799, 'image_count': 221}, {'id': 800, 'image_count': 502}, {'id': 801, 'image_count': 62}, {'id': 802, 'image_count': 87}, {'id': 803, 'image_count': 4}, {'id': 804, 'image_count': 1912}, {'id': 805, 'image_count': 7}, {'id': 806, 'image_count': 186}, {'id': 807, 'image_count': 18}, {'id': 808, 'image_count': 4}, {'id': 809, 'image_count': 3}, {'id': 810, 'image_count': 7}, {'id': 811, 'image_count': 1413}, {'id': 812, 'image_count': 7}, {'id': 813, 'image_count': 12}, {'id': 814, 'image_count': 248}, {'id': 815, 'image_count': 4}, {'id': 816, 'image_count': 1881}, {'id': 817, 'image_count': 529}, {'id': 818, 'image_count': 1932}, {'id': 819, 'image_count': 50}, {'id': 820, 'image_count': 3}, {'id': 821, 'image_count': 28}, {'id': 822, 'image_count': 10}, {'id': 823, 'image_count': 5}, {'id': 824, 'image_count': 5}, {'id': 825, 'image_count': 18}, {'id': 826, 'image_count': 14}, {'id': 827, 'image_count': 1890}, {'id': 828, 'image_count': 660}, {'id': 829, 'image_count': 8}, {'id': 830, 'image_count': 25}, {'id': 831, 'image_count': 10}, {'id': 832, 'image_count': 218}, {'id': 833, 'image_count': 36}, {'id': 834, 'image_count': 16}, {'id': 835, 'image_count': 808}, {'id': 836, 'image_count': 479}, {'id': 837, 'image_count': 1404}, {'id': 838, 'image_count': 307}, {'id': 839, 'image_count': 57}, {'id': 840, 'image_count': 28}, {'id': 841, 'image_count': 80}, {'id': 842, 'image_count': 11}, {'id': 843, 'image_count': 92}, {'id': 844, 'image_count': 20}, {'id': 845, 'image_count': 194}, {'id': 846, 'image_count': 23}, {'id': 847, 'image_count': 52}, {'id': 848, 'image_count': 673}, {'id': 849, 'image_count': 2}, {'id': 850, 'image_count': 2}, {'id': 851, 'image_count': 1}, {'id': 852, 'image_count': 2}, {'id': 853, 'image_count': 8}, {'id': 854, 'image_count': 80}, {'id': 855, 'image_count': 3}, {'id': 856, 'image_count': 3}, {'id': 857, 'image_count': 15}, {'id': 858, 'image_count': 2}, {'id': 859, 'image_count': 10}, {'id': 860, 'image_count': 386}, {'id': 861, 'image_count': 65}, {'id': 862, 'image_count': 3}, {'id': 863, 'image_count': 35}, {'id': 864, 'image_count': 5}, {'id': 865, 'image_count': 180}, {'id': 866, 'image_count': 99}, {'id': 867, 'image_count': 49}, {'id': 868, 'image_count': 28}, {'id': 869, 'image_count': 1}, {'id': 870, 'image_count': 52}, {'id': 871, 'image_count': 36}, {'id': 872, 'image_count': 70}, {'id': 873, 'image_count': 6}, {'id': 874, 'image_count': 29}, {'id': 875, 'image_count': 24}, {'id': 876, 'image_count': 1115}, {'id': 877, 'image_count': 61}, {'id': 878, 'image_count': 18}, {'id': 879, 'image_count': 18}, {'id': 880, 'image_count': 665}, {'id': 881, 'image_count': 1096}, {'id': 882, 'image_count': 29}, {'id': 883, 'image_count': 8}, {'id': 884, 'image_count': 14}, {'id': 885, 'image_count': 1622}, {'id': 886, 'image_count': 2}, {'id': 887, 'image_count': 3}, {'id': 888, 'image_count': 32}, {'id': 889, 'image_count': 55}, {'id': 890, 'image_count': 1}, {'id': 891, 'image_count': 10}, {'id': 892, 'image_count': 10}, {'id': 893, 'image_count': 47}, {'id': 894, 'image_count': 3}, {'id': 895, 'image_count': 29}, {'id': 896, 'image_count': 342}, {'id': 897, 'image_count': 25}, {'id': 898, 'image_count': 1469}, {'id': 899, 'image_count': 521}, {'id': 900, 'image_count': 347}, {'id': 901, 'image_count': 35}, {'id': 902, 'image_count': 7}, {'id': 903, 'image_count': 207}, {'id': 904, 'image_count': 108}, {'id': 905, 'image_count': 2}, {'id': 906, 'image_count': 34}, {'id': 907, 'image_count': 12}, {'id': 908, 'image_count': 10}, {'id': 909, 'image_count': 13}, {'id': 910, 'image_count': 361}, {'id': 911, 'image_count': 1023}, {'id': 912, 'image_count': 782}, {'id': 913, 'image_count': 2}, {'id': 914, 'image_count': 5}, {'id': 915, 'image_count': 247}, {'id': 916, 'image_count': 221}, {'id': 917, 'image_count': 4}, {'id': 918, 'image_count': 8}, {'id': 919, 'image_count': 158}, {'id': 920, 'image_count': 3}, {'id': 921, 'image_count': 752}, {'id': 922, 'image_count': 64}, {'id': 923, 'image_count': 707}, {'id': 924, 'image_count': 143}, {'id': 925, 'image_count': 1}, {'id': 926, 'image_count': 49}, {'id': 927, 'image_count': 126}, {'id': 928, 'image_count': 76}, {'id': 929, 'image_count': 11}, {'id': 930, 'image_count': 11}, {'id': 931, 'image_count': 4}, {'id': 932, 'image_count': 39}, {'id': 933, 'image_count': 11}, {'id': 934, 'image_count': 13}, {'id': 935, 'image_count': 91}, {'id': 936, 'image_count': 14}, {'id': 937, 'image_count': 5}, {'id': 938, 'image_count': 3}, {'id': 939, 'image_count': 10}, {'id': 940, 'image_count': 18}, {'id': 941, 'image_count': 9}, {'id': 942, 'image_count': 6}, {'id': 943, 'image_count': 951}, {'id': 944, 'image_count': 2}, {'id': 945, 'image_count': 1}, {'id': 946, 'image_count': 19}, {'id': 947, 'image_count': 1942}, {'id': 948, 'image_count': 1916}, {'id': 949, 'image_count': 139}, {'id': 950, 'image_count': 43}, {'id': 951, 'image_count': 1969}, {'id': 952, 'image_count': 5}, {'id': 953, 'image_count': 134}, {'id': 954, 'image_count': 74}, {'id': 955, 'image_count': 381}, {'id': 956, 'image_count': 1}, {'id': 957, 'image_count': 381}, {'id': 958, 'image_count': 6}, {'id': 959, 'image_count': 1826}, {'id': 960, 'image_count': 28}, {'id': 961, 'image_count': 1635}, {'id': 962, 'image_count': 1967}, {'id': 963, 'image_count': 16}, {'id': 964, 'image_count': 1926}, {'id': 965, 'image_count': 1789}, {'id': 966, 'image_count': 401}, {'id': 967, 'image_count': 1968}, {'id': 968, 'image_count': 1167}, {'id': 969, 'image_count': 1}, {'id': 970, 'image_count': 56}, {'id': 971, 'image_count': 17}, {'id': 972, 'image_count': 1}, {'id': 973, 'image_count': 58}, {'id': 974, 'image_count': 9}, {'id': 975, 'image_count': 8}, {'id': 976, 'image_count': 1124}, {'id': 977, 'image_count': 31}, {'id': 978, 'image_count': 16}, {'id': 979, 'image_count': 491}, {'id': 980, 'image_count': 432}, {'id': 981, 'image_count': 1945}, {'id': 982, 'image_count': 1899}, {'id': 983, 'image_count': 5}, {'id': 984, 'image_count': 28}, {'id': 985, 'image_count': 7}, {'id': 986, 'image_count': 146}, {'id': 987, 'image_count': 1}, {'id': 988, 'image_count': 25}, {'id': 989, 'image_count': 22}, {'id': 990, 'image_count': 1}, {'id': 991, 'image_count': 10}, {'id': 992, 'image_count': 9}, {'id': 993, 'image_count': 308}, {'id': 994, 'image_count': 4}, {'id': 995, 'image_count': 1969}, {'id': 996, 'image_count': 45}, {'id': 997, 'image_count': 12}, {'id': 998, 'image_count': 1}, {'id': 999, 'image_count': 85}, {'id': 1000, 'image_count': 1127}, {'id': 1001, 'image_count': 11}, {'id': 1002, 'image_count': 60}, {'id': 1003, 'image_count': 1}, {'id': 1004, 'image_count': 16}, {'id': 1005, 'image_count': 1}, {'id': 1006, 'image_count': 65}, {'id': 1007, 'image_count': 13}, {'id': 1008, 'image_count': 655}, {'id': 1009, 'image_count': 51}, {'id': 1010, 'image_count': 1}, {'id': 1011, 'image_count': 673}, {'id': 1012, 'image_count': 5}, {'id': 1013, 'image_count': 36}, {'id': 1014, 'image_count': 54}, {'id': 1015, 'image_count': 5}, {'id': 1016, 'image_count': 8}, {'id': 1017, 'image_count': 305}, {'id': 1018, 'image_count': 297}, {'id': 1019, 'image_count': 1053}, {'id': 1020, 'image_count': 223}, {'id': 1021, 'image_count': 1037}, {'id': 1022, 'image_count': 63}, {'id': 1023, 'image_count': 1881}, {'id': 1024, 'image_count': 507}, {'id': 1025, 'image_count': 333}, {'id': 1026, 'image_count': 1911}, {'id': 1027, 'image_count': 1765}, {'id': 1028, 'image_count': 1}, {'id': 1029, 'image_count': 5}, {'id': 1030, 'image_count': 1}, {'id': 1031, 'image_count': 9}, {'id': 1032, 'image_count': 2}, {'id': 1033, 'image_count': 151}, {'id': 1034, 'image_count': 82}, {'id': 1035, 'image_count': 1931}, {'id': 1036, 'image_count': 41}, {'id': 1037, 'image_count': 1895}, {'id': 1038, 'image_count': 24}, {'id': 1039, 'image_count': 22}, {'id': 1040, 'image_count': 35}, {'id': 1041, 'image_count': 69}, {'id': 1042, 'image_count': 962}, {'id': 1043, 'image_count': 588}, {'id': 1044, 'image_count': 21}, {'id': 1045, 'image_count': 825}, {'id': 1046, 'image_count': 52}, {'id': 1047, 'image_count': 5}, {'id': 1048, 'image_count': 5}, {'id': 1049, 'image_count': 5}, {'id': 1050, 'image_count': 1860}, {'id': 1051, 'image_count': 56}, {'id': 1052, 'image_count': 1582}, {'id': 1053, 'image_count': 7}, {'id': 1054, 'image_count': 2}, {'id': 1055, 'image_count': 1562}, {'id': 1056, 'image_count': 1885}, {'id': 1057, 'image_count': 1}, {'id': 1058, 'image_count': 5}, {'id': 1059, 'image_count': 137}, {'id': 1060, 'image_count': 1094}, {'id': 1061, 'image_count': 134}, {'id': 1062, 'image_count': 29}, {'id': 1063, 'image_count': 22}, {'id': 1064, 'image_count': 522}, {'id': 1065, 'image_count': 50}, {'id': 1066, 'image_count': 68}, {'id': 1067, 'image_count': 16}, {'id': 1068, 'image_count': 40}, {'id': 1069, 'image_count': 35}, {'id': 1070, 'image_count': 135}, {'id': 1071, 'image_count': 1413}, {'id': 1072, 'image_count': 772}, {'id': 1073, 'image_count': 50}, {'id': 1074, 'image_count': 1015}, {'id': 1075, 'image_count': 1}, {'id': 1076, 'image_count': 65}, {'id': 1077, 'image_count': 1900}, {'id': 1078, 'image_count': 1302}, {'id': 1079, 'image_count': 1977}, {'id': 1080, 'image_count': 2}, {'id': 1081, 'image_count': 29}, {'id': 1082, 'image_count': 36}, {'id': 1083, 'image_count': 138}, {'id': 1084, 'image_count': 4}, {'id': 1085, 'image_count': 67}, {'id': 1086, 'image_count': 26}, {'id': 1087, 'image_count': 25}, {'id': 1088, 'image_count': 33}, {'id': 1089, 'image_count': 37}, {'id': 1090, 'image_count': 50}, {'id': 1091, 'image_count': 270}, {'id': 1092, 'image_count': 12}, {'id': 1093, 'image_count': 316}, {'id': 1094, 'image_count': 41}, {'id': 1095, 'image_count': 224}, {'id': 1096, 'image_count': 105}, {'id': 1097, 'image_count': 1925}, {'id': 1098, 'image_count': 1021}, {'id': 1099, 'image_count': 1213}, {'id': 1100, 'image_count': 172}, {'id': 1101, 'image_count': 28}, {'id': 1102, 'image_count': 745}, {'id': 1103, 'image_count': 187}, {'id': 1104, 'image_count': 147}, {'id': 1105, 'image_count': 136}, {'id': 1106, 'image_count': 34}, {'id': 1107, 'image_count': 41}, {'id': 1108, 'image_count': 636}, {'id': 1109, 'image_count': 570}, {'id': 1110, 'image_count': 1149}, {'id': 1111, 'image_count': 61}, {'id': 1112, 'image_count': 1890}, {'id': 1113, 'image_count': 18}, {'id': 1114, 'image_count': 143}, {'id': 1115, 'image_count': 1517}, {'id': 1116, 'image_count': 7}, {'id': 1117, 'image_count': 943}, {'id': 1118, 'image_count': 6}, {'id': 1119, 'image_count': 1}, {'id': 1120, 'image_count': 11}, {'id': 1121, 'image_count': 101}, {'id': 1122, 'image_count': 1909}, {'id': 1123, 'image_count': 800}, {'id': 1124, 'image_count': 1}, {'id': 1125, 'image_count': 44}, {'id': 1126, 'image_count': 3}, {'id': 1127, 'image_count': 44}, {'id': 1128, 'image_count': 31}, {'id': 1129, 'image_count': 7}, {'id': 1130, 'image_count': 20}, {'id': 1131, 'image_count': 11}, {'id': 1132, 'image_count': 13}, {'id': 1133, 'image_count': 1924}, {'id': 1134, 'image_count': 113}, {'id': 1135, 'image_count': 2}, {'id': 1136, 'image_count': 139}, {'id': 1137, 'image_count': 12}, {'id': 1138, 'image_count': 37}, {'id': 1139, 'image_count': 1866}, {'id': 1140, 'image_count': 47}, {'id': 1141, 'image_count': 1468}, {'id': 1142, 'image_count': 729}, {'id': 1143, 'image_count': 24}, {'id': 1144, 'image_count': 1}, {'id': 1145, 'image_count': 10}, {'id': 1146, 'image_count': 3}, {'id': 1147, 'image_count': 14}, {'id': 1148, 'image_count': 4}, {'id': 1149, 'image_count': 29}, {'id': 1150, 'image_count': 4}, {'id': 1151, 'image_count': 70}, {'id': 1152, 'image_count': 46}, {'id': 1153, 'image_count': 14}, {'id': 1154, 'image_count': 48}, {'id': 1155, 'image_count': 1855}, {'id': 1156, 'image_count': 113}, {'id': 1157, 'image_count': 1}, {'id': 1158, 'image_count': 1}, {'id': 1159, 'image_count': 10}, {'id': 1160, 'image_count': 54}, {'id': 1161, 'image_count': 1923}, {'id': 1162, 'image_count': 630}, {'id': 1163, 'image_count': 31}, {'id': 1164, 'image_count': 69}, {'id': 1165, 'image_count': 7}, {'id': 1166, 'image_count': 11}, {'id': 1167, 'image_count': 1}, {'id': 1168, 'image_count': 30}, {'id': 1169, 'image_count': 50}, {'id': 1170, 'image_count': 45}, {'id': 1171, 'image_count': 28}, {'id': 1172, 'image_count': 114}, {'id': 1173, 'image_count': 193}, {'id': 1174, 'image_count': 21}, {'id': 1175, 'image_count': 91}, {'id': 1176, 'image_count': 31}, {'id': 1177, 'image_count': 1469}, {'id': 1178, 'image_count': 1924}, {'id': 1179, 'image_count': 87}, {'id': 1180, 'image_count': 77}, {'id': 1181, 'image_count': 11}, {'id': 1182, 'image_count': 47}, {'id': 1183, 'image_count': 21}, {'id': 1184, 'image_count': 47}, {'id': 1185, 'image_count': 70}, {'id': 1186, 'image_count': 1838}, {'id': 1187, 'image_count': 19}, {'id': 1188, 'image_count': 531}, {'id': 1189, 'image_count': 11}, {'id': 1190, 'image_count': 941}, {'id': 1191, 'image_count': 113}, {'id': 1192, 'image_count': 26}, {'id': 1193, 'image_count': 5}, {'id': 1194, 'image_count': 56}, {'id': 1195, 'image_count': 73}, {'id': 1196, 'image_count': 32}, {'id': 1197, 'image_count': 128}, {'id': 1198, 'image_count': 623}, {'id': 1199, 'image_count': 12}, {'id': 1200, 'image_count': 52}, {'id': 1201, 'image_count': 11}, {'id': 1202, 'image_count': 1674}, {'id': 1203, 'image_count': 81}]  # noqa$/;"	v
LVIS_DATASET_DATA	projects/DensePose/tests/test_dataset_loaded_annotations.py	/^    LVIS_DATASET_DATA = {$/;"	v	class:TestDatasetLoadedAnnotations
LastKFramesSelector	projects/DensePose/densepose/data/video/frame_selector.py	/^class LastKFramesSelector(Callable):  # pyre-ignore[39]$/;"	c
LastLevelMaxPool	detectron2/modeling/backbone/fpn.py	/^class LastLevelMaxPool(nn.Module):$/;"	c
LastLevelP6P7	detectron2/modeling/backbone/fpn.py	/^class LastLevelP6P7(nn.Module):$/;"	c
LayerNorm	detectron2/layers/batch_norm.py	/^class LayerNorm(nn.Module):$/;"	c
LazyCall	detectron2/config/lazy.py	/^class LazyCall:$/;"	c
LazyConfig	detectron2/config/lazy.py	/^class LazyConfig:$/;"	c
Linear	detectron2/layers/wrappers.py	/^Linear = torch.nn.Linear$/;"	v
ListSchema	detectron2/export/flatten.py	/^class ListSchema(Schema):$/;"	c
Loader	projects/DensePose/densepose/data/combined_loader.py	/^Loader = Iterable[Any]$/;"	v
LossDict	projects/DensePose/densepose/modeling/losses/utils.py	/^LossDict = Dict[str, torch.Tensor]$/;"	v
M	projects/TensorMask/tensormask/arch.py	/^    M = anchor_boxes.shape[0]$/;"	v
M	tests/test_export_onnx.py	/^        class M(torch.nn.Module):$/;"	c	function:TestONNXTracingExport.testKeypointHead
M	tests/test_export_torchscript.py	/^        class M(nn.Module):$/;"	c	function:TestTorchscriptUtils.test_allow_non_tensor
M	tests/test_export_torchscript.py	/^        class M(nn.Module):$/;"	c	function:TestTracing.testKeypointHead
MASK_LABEL_SYMMETRIES	projects/DensePose/densepose/structures/transform_data.py	/^    MASK_LABEL_SYMMETRIES = [0, 1, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 14]$/;"	v	class:DensePoseTransformData
MASK_SIZE	projects/DensePose/densepose/structures/data_relative.py	/^    MASK_SIZE = 256$/;"	v	class:DensePoseDataRelative
MESHES	projects/DensePose/densepose/data/meshes/builtin.py	/^MESHES = [$/;"	v
MESH_NAME_KEY	projects/DensePose/densepose/structures/data_relative.py	/^    MESH_NAME_KEY = "ref_model"$/;"	v	class:DensePoseDataRelative
META_ARCH_CAFFE2_EXPORT_TYPE_MAP	detectron2/export/caffe2_modeling.py	/^META_ARCH_CAFFE2_EXPORT_TYPE_MAP = {$/;"	v
META_ARCH_REGISTRY	detectron2/modeling/meta_arch/build.py	/^META_ARCH_REGISTRY = Registry("META_ARCH")  # noqa F401 isort:skip$/;"	v
MMDetBackbone	detectron2/modeling/mmdet_wrapper.py	/^class MMDetBackbone(Backbone):$/;"	c
MMDetDetector	detectron2/modeling/mmdet_wrapper.py	/^class MMDetDetector(nn.Module):$/;"	c
MViT	detectron2/modeling/backbone/mvit.py	/^class MViT(Backbone):$/;"	c
MapDataset	detectron2/data/common.py	/^class MapDataset(data.Dataset):$/;"	c
MaskFromDensePoseSampler	projects/DensePose/densepose/data/samplers/mask_from_densepose.py	/^class MaskFromDensePoseSampler:$/;"	c
MaskLoss	projects/DensePose/densepose/modeling/losses/mask.py	/^class MaskLoss:$/;"	c
MaskOrSegmentationLoss	projects/DensePose/densepose/modeling/losses/mask_or_segm.py	/^class MaskOrSegmentationLoss:$/;"	c
MaskRCNNConvUpsampleHead	detectron2/modeling/roi_heads/mask_head.py	/^class MaskRCNNConvUpsampleHead(BaseMaskRCNNHead, nn.Sequential):$/;"	c
MaskRCNNConvUpsamplePointSupHead	projects/PointSup/point_sup/mask_head.py	/^class MaskRCNNConvUpsamplePointSupHead(MaskRCNNConvUpsampleHead):$/;"	c
MaskRCNNE2ETest	tests/modeling/test_model_e2e.py	/^class MaskRCNNE2ETest(InstanceModelE2ETest, unittest.TestCase):$/;"	c
MaskRCNNTest	tests/test_model_analysis.py	/^class MaskRCNNTest(unittest.TestCase):$/;"	c
Matcher	detectron2/modeling/matcher.py	/^class Matcher:$/;"	c
MatrixVisualizer	projects/DensePose/densepose/vis/base.py	/^class MatrixVisualizer:$/;"	c
Mesh	projects/DensePose/densepose/structures/mesh.py	/^class Mesh:$/;"	c
MeshAlignmentEvaluator	projects/DensePose/densepose/evaluation/mesh_alignment_evaluator.py	/^class MeshAlignmentEvaluator:$/;"	c
MeshCatalog	projects/DensePose/densepose/data/meshes/catalog.py	/^MeshCatalog = _MeshCatalog()$/;"	v
MeshInfo	projects/DensePose/densepose/data/meshes/catalog.py	/^class MeshInfo:$/;"	c
Metadata	detectron2/data/catalog.py	/^class Metadata(types.SimpleNamespace):$/;"	c
MetadataCatalog	detectron2/data/catalog.py	/^MetadataCatalog = _MetadataCatalog()$/;"	v
MinIoURandomCrop	detectron2/data/transforms/augmentation_impl.py	/^class MinIoURandomCrop(Augmentation):$/;"	c
Mlp	detectron2/modeling/backbone/swin.py	/^class Mlp(nn.Module):$/;"	c
Mod	tests/test_export_torchscript.py	/^        class Mod(nn.Module):$/;"	c	function:TestTorchscriptUtils.test_dump_IR_tracing
Model	tests/modeling/test_fast_rcnn.py	/^        class Model(torch.nn.Module):$/;"	c	function:FastRCNNTest.test_predict_boxes_tracing
Model	tests/modeling/test_fast_rcnn.py	/^        class Model(torch.nn.Module):$/;"	c	function:FastRCNNTest.test_predict_probs_tracing
Model	tests/modeling/test_roi_pooler.py	/^        class Model(torch.nn.Module):$/;"	c	function:TestROIPooler.test_roi_pooler_tracing
ModelCatalog	detectron2/checkpoint/catalog.py	/^class ModelCatalog:$/;"	c
ModelCatalogHandler	detectron2/checkpoint/catalog.py	/^class ModelCatalogHandler(PathHandler):$/;"	c
ModelE2ETest	projects/DensePose/tests/test_model_e2e.py	/^class ModelE2ETest(unittest.TestCase):$/;"	c
ModelOutput	projects/DensePose/densepose/data/inference_based_loader.py	/^ModelOutput = Any$/;"	v
ModelOutput	projects/DensePose/densepose/data/samplers/prediction_to_gt.py	/^ModelOutput = Dict[str, Any]$/;"	v
ModulatedDeformConv	detectron2/layers/deform_conv.py	/^    ModulatedDeformConv = create_dummy_class("ModulatedDeformConv", *_args)$/;"	v
ModulatedDeformConv	detectron2/layers/deform_conv.py	/^class ModulatedDeformConv(nn.Module):$/;"	c
MultiProcessFileTensorStorage	projects/DensePose/densepose/evaluation/tensor_storage.py	/^class MultiProcessFileTensorStorage(MultiProcessTensorStorage):$/;"	c
MultiProcessRamTensorStorage	projects/DensePose/densepose/evaluation/tensor_storage.py	/^class MultiProcessRamTensorStorage(MultiProcessTensorStorage):$/;"	c
MultiProcessTensorStorage	projects/DensePose/densepose/evaluation/tensor_storage.py	/^class MultiProcessTensorStorage:$/;"	c
MultiScaleAttention	detectron2/modeling/backbone/mvit.py	/^class MultiScaleAttention(nn.Module):$/;"	c
MultiScaleBlock	detectron2/modeling/backbone/mvit.py	/^class MultiScaleBlock(nn.Module):$/;"	c
N	projects/TensorMask/tensormask/arch.py	/^    N = gt_boxes.shape[0]$/;"	v
NONLocalBlock2D	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^class NONLocalBlock2D(_NonLocalBlockND):$/;"	c
NORM	detectron2/solver/build.py	/^    NORM = "norm"$/;"	v	class:GradientClipType
N_BODY_PARTS	projects/DensePose/densepose/structures/data_relative.py	/^    N_BODY_PARTS = 14$/;"	v	class:DensePoseDataRelative
N_PART_LABELS	projects/DensePose/densepose/structures/data_relative.py	/^    N_PART_LABELS = 24$/;"	v	class:DensePoseDataRelative
NaiveSyncBatchNorm	detectron2/layers/batch_norm.py	/^class NaiveSyncBatchNorm(BatchNorm2d):$/;"	c
NmsFilteredExtractor	projects/DensePose/densepose/vis/extractor.py	/^class NmsFilteredExtractor:$/;"	c
OC_VERSION	tests/config/test_instantiate_config.py	/^OC_VERSION = tuple(int(x) for x in oc_version.split(".")[:2])$/;"	v
PILColorTransform	detectron2/data/transforms/transform.py	/^class PILColorTransform(ColorTransform):$/;"	c
POINT_HEAD_REGISTRY	projects/PointRend/point_rend/point_head.py	/^POINT_HEAD_REGISTRY = Registry("POINT_HEAD")$/;"	v
POINT_LABEL_SYMMETRIES	projects/DensePose/densepose/structures/transform_data.py	/^    POINT_LABEL_SYMMETRIES = [ 0, 1, 2, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23]  # noqa$/;"	v	class:DensePoseTransformData
PREFIX	detectron2/checkpoint/catalog.py	/^    PREFIX = "catalog:\/\/"$/;"	v	class:ModelCatalogHandler
PREFIX	detectron2/utils/file_io.py	/^    PREFIX = "detectron2:\/\/"$/;"	v	class:Detectron2Handler
PREFIX	tests/test_checkpoint.py	/^                PREFIX = "detectron2_test:\/\/"$/;"	v	class:TestCheckpointer.test_custom_path_manager_handler.CustomPathManagerHandler
PROJECTS	setup.py	/^PROJECTS = {$/;"	v
PROPOSAL_GENERATOR_REGISTRY	detectron2/modeling/proposal_generator/build.py	/^PROPOSAL_GENERATOR_REGISTRY = Registry("PROPOSAL_GENERATOR")$/;"	v
PackedChartBasedAnnotations	projects/DensePose/densepose/modeling/losses/utils.py	/^class PackedChartBasedAnnotations:$/;"	c
PackedCseAnnotations	projects/DensePose/densepose/modeling/losses/embed_utils.py	/^class PackedCseAnnotations:$/;"	c
PanopticDeepLab	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^class PanopticDeepLab(nn.Module):$/;"	c
PanopticDeepLabInsEmbedHead	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^class PanopticDeepLabInsEmbedHead(DeepLabV3PlusHead):$/;"	c
PanopticDeepLabSemSegHead	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^class PanopticDeepLabSemSegHead(DeepLabV3PlusHead):$/;"	c
PanopticDeepLabTargetGenerator	projects/Panoptic-DeepLab/panoptic_deeplab/target_generator.py	/^class PanopticDeepLabTargetGenerator:$/;"	c
PanopticDeeplabDatasetMapper	projects/Panoptic-DeepLab/panoptic_deeplab/dataset_mapper.py	/^class PanopticDeeplabDatasetMapper:$/;"	c
PanopticFPN	detectron2/modeling/meta_arch/panoptic_fpn.py	/^class PanopticFPN(GeneralizedRCNN):$/;"	c
Params	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^class Params:$/;"	c
PascalVOCDetectionEvaluator	detectron2/evaluation/pascal_voc_evaluation.py	/^class PascalVOCDetectionEvaluator(DatasetEvaluator):$/;"	c
PatchEmbed	detectron2/modeling/backbone/swin.py	/^class PatchEmbed(nn.Module):$/;"	c
PatchEmbed	detectron2/modeling/backbone/utils.py	/^class PatchEmbed(nn.Module):$/;"	c
PatchMerging	detectron2/modeling/backbone/swin.py	/^class PatchMerging(nn.Module):$/;"	c
PathManager	detectron2/utils/file_io.py	/^PathManager = PathManagerBase()$/;"	v
PeriodicCheckpointer	detectron2/engine/hooks.py	/^class PeriodicCheckpointer(_PeriodicCheckpointer, HookBase):$/;"	c
PeriodicWriter	detectron2/engine/hooks.py	/^class PeriodicWriter(HookBase):$/;"	c
PicklableWrapper	detectron2/utils/serialize.py	/^class PicklableWrapper:$/;"	c
PixToShapeCycleLoss	projects/DensePose/densepose/modeling/losses/cycle_pix2shape.py	/^class PixToShapeCycleLoss(nn.Module):$/;"	c
PointRendMaskHead	projects/PointRend/point_rend/mask_head.py	/^class PointRendMaskHead(nn.Module):$/;"	c
PointRendROIHeads	projects/PointRend/point_rend/roi_heads.py	/^class PointRendROIHeads(StandardROIHeads):$/;"	c
PointRendSemSegHead	projects/PointRend/point_rend/semantic_seg.py	/^class PointRendSemSegHead(nn.Module):$/;"	c
PointSupDatasetMapper	projects/PointSup/point_sup/dataset_mapper.py	/^class PointSupDatasetMapper:$/;"	c
PointsVisualizer	projects/DensePose/densepose/vis/base.py	/^class PointsVisualizer:$/;"	c
PolygonMasks	detectron2/structures/masks.py	/^class PolygonMasks:$/;"	c
PoseHigherResolutionNet	projects/DensePose/densepose/modeling/hrnet.py	/^class PoseHigherResolutionNet(Backbone):$/;"	c
PreciseBN	detectron2/engine/hooks.py	/^class PreciseBN(HookBase):$/;"	c
PredictionToGroundTruthSampler	projects/DensePose/densepose/data/samplers/prediction_to_gt.py	/^class PredictionToGroundTruthSampler:$/;"	c
PredictorOutput_getitem	projects/DensePose/densepose/structures/chart_confidence.py	/^    def PredictorOutput_getitem(self, item):$/;"	f	function:decorate_predictor_output_class_with_confidences
PredictorOutput_getitem	projects/DensePose/densepose/structures/cse_confidence.py	/^    def PredictorOutput_getitem(self, item):$/;"	f	function:decorate_cse_predictor_output_class_with_confidences
PredictorOutput_to	projects/DensePose/densepose/structures/chart_confidence.py	/^    def PredictorOutput_to(self, device: torch.device):$/;"	f	function:decorate_predictor_output_class_with_confidences
PredictorOutput_to	projects/DensePose/densepose/structures/cse_confidence.py	/^    def PredictorOutput_to(self, device: torch.device):$/;"	f	function:decorate_cse_predictor_output_class_with_confidences
PrintAction	projects/DensePose/query_db.py	/^class PrintAction(EntrywiseAction):$/;"	c
ProposalNetwork	detectron2/modeling/meta_arch/rcnn.py	/^class ProposalNetwork(nn.Module):$/;"	c
ProtobufDetectionModel	detectron2/export/caffe2_inference.py	/^class ProtobufDetectionModel(torch.nn.Module):$/;"	c
ProtobufModel	detectron2/export/caffe2_inference.py	/^class ProtobufModel(torch.nn.Module):$/;"	c
RAM_msg	tools/benchmark.py	/^def RAM_msg():$/;"	f
RANDOM_K	projects/DensePose/densepose/data/video/frame_selector.py	/^    RANDOM_K = "random_k"$/;"	v	class:FrameSelectionStrategy
RENAME	detectron2/config/compat.py	/^    RENAME = [$/;"	v	class:ConverterV2
RENAME	detectron2/config/compat.py	/^    RENAME = [("MODEL.RPN_HEAD.NAME", "MODEL.RPN.HEAD_NAME")]$/;"	v	class:ConverterV1
ROIAlign	detectron2/layers/roi_align.py	/^class ROIAlign(nn.Module):$/;"	c
ROIAlignRotated	detectron2/layers/roi_align_rotated.py	/^class ROIAlignRotated(nn.Module):$/;"	c
ROIAlignRotatedTest	tests/layers/test_roi_align_rotated.py	/^class ROIAlignRotatedTest(unittest.TestCase):$/;"	c
ROIAlignTest	tests/layers/test_roi_align.py	/^class ROIAlignTest(unittest.TestCase):$/;"	c
ROIHeads	detectron2/modeling/roi_heads/roi_heads.py	/^class ROIHeads(torch.nn.Module):$/;"	c
ROIHeadsPatcher	detectron2/export/caffe2_patch.py	/^class ROIHeadsPatcher:$/;"	c
ROIHeadsTest	tests/modeling/test_roi_heads.py	/^class ROIHeadsTest(unittest.TestCase):$/;"	c
ROIMasks	detectron2/structures/masks.py	/^class ROIMasks:$/;"	c
ROIPooler	detectron2/modeling/poolers.py	/^class ROIPooler(nn.Module):$/;"	c
ROI_BOX_HEAD_REGISTRY	detectron2/modeling/roi_heads/box_head.py	/^ROI_BOX_HEAD_REGISTRY = Registry("ROI_BOX_HEAD")$/;"	v
ROI_DENSEPOSE_HEAD_REGISTRY	projects/DensePose/densepose/modeling/roi_heads/registry.py	/^ROI_DENSEPOSE_HEAD_REGISTRY = Registry("ROI_DENSEPOSE_HEAD")$/;"	v
ROI_HEADS_REGISTRY	detectron2/modeling/roi_heads/roi_heads.py	/^ROI_HEADS_REGISTRY = Registry("ROI_HEADS")$/;"	v
ROI_KEYPOINT_HEAD_REGISTRY	detectron2/modeling/roi_heads/keypoint_head.py	/^ROI_KEYPOINT_HEAD_REGISTRY = Registry("ROI_KEYPOINT_HEAD")$/;"	v
ROI_MASK_HEAD_REGISTRY	detectron2/modeling/roi_heads/mask_head.py	/^ROI_MASK_HEAD_REGISTRY = Registry("ROI_MASK_HEAD")$/;"	v
ROOT	docs/conf.py	/^    ROOT = "https:\/\/github.com\/facebookresearch\/detectron2\/blob\/main\/"$/;"	v	class:GithubURLDomain
RPN	detectron2/modeling/proposal_generator/rpn.py	/^class RPN(nn.Module):$/;"	c
RPNTest	tests/modeling/test_rpn.py	/^class RPNTest(unittest.TestCase):$/;"	c
RPN_HEAD_REGISTRY	detectron2/modeling/proposal_generator/rpn.py	/^RPN_HEAD_REGISTRY = Registry("RPN_HEAD")$/;"	v
RROIHeads	detectron2/modeling/roi_heads/rotated_fast_rcnn.py	/^class RROIHeads(StandardROIHeads):$/;"	c
RRPN	detectron2/modeling/proposal_generator/rrpn.py	/^class RRPN(RPN):$/;"	c
RandomApply	detectron2/data/transforms/augmentation_impl.py	/^class RandomApply(Augmentation):$/;"	c
RandomBrightness	detectron2/data/transforms/augmentation_impl.py	/^class RandomBrightness(Augmentation):$/;"	c
RandomContrast	detectron2/data/transforms/augmentation_impl.py	/^class RandomContrast(Augmentation):$/;"	c
RandomCrop	detectron2/data/transforms/augmentation_impl.py	/^class RandomCrop(Augmentation):$/;"	c
RandomCrop_CategoryAreaConstraint	detectron2/data/transforms/augmentation_impl.py	/^class RandomCrop_CategoryAreaConstraint(Augmentation):$/;"	c
RandomExtent	detectron2/data/transforms/augmentation_impl.py	/^class RandomExtent(Augmentation):$/;"	c
RandomFlip	detectron2/data/transforms/augmentation_impl.py	/^class RandomFlip(Augmentation):$/;"	c
RandomKFramesSelector	projects/DensePose/densepose/data/video/frame_selector.py	/^class RandomKFramesSelector(Callable):  # pyre-ignore[39]$/;"	c
RandomLighting	detectron2/data/transforms/augmentation_impl.py	/^class RandomLighting(Augmentation):$/;"	c
RandomResize	detectron2/data/transforms/augmentation_impl.py	/^class RandomResize(Augmentation):$/;"	c
RandomRotation	detectron2/data/transforms/augmentation_impl.py	/^class RandomRotation(Augmentation):$/;"	c
RandomSaturation	detectron2/data/transforms/augmentation_impl.py	/^class RandomSaturation(Augmentation):$/;"	c
RandomSubsetTrainingSampler	detectron2/data/samplers/distributed_sampler.py	/^class RandomSubsetTrainingSampler(TrainingSampler):$/;"	c
RectangleVisualizer	projects/DensePose/densepose/vis/base.py	/^class RectangleVisualizer:$/;"	c
RegNet	detectron2/modeling/backbone/regnet.py	/^class RegNet(AnyNet):$/;"	c
RepeatFactorTrainingSampler	detectron2/data/samplers/distributed_sampler.py	/^class RepeatFactorTrainingSampler(Sampler):$/;"	c
Res5ROIHeads	detectron2/modeling/roi_heads/roi_heads.py	/^class Res5ROIHeads(ROIHeads):$/;"	c
ResBasicBlock	detectron2/modeling/backbone/regnet.py	/^class ResBasicBlock(CNNBlockBase):$/;"	c
ResBottleneckBlock	detectron2/modeling/backbone/regnet.py	/^class ResBottleneckBlock(CNNBlockBase):$/;"	c
ResBottleneckBlock	detectron2/modeling/backbone/vit.py	/^class ResBottleneckBlock(CNNBlockBase):$/;"	c
ResNet	detectron2/modeling/backbone/resnet.py	/^class ResNet(Backbone):$/;"	c
ResNetBlockBase	detectron2/modeling/backbone/resnet.py	/^ResNetBlockBase = CNNBlockBase$/;"	v
ResStem	detectron2/modeling/backbone/regnet.py	/^class ResStem(CNNBlockBase):$/;"	c
Resize	detectron2/data/transforms/augmentation_impl.py	/^class Resize(Augmentation):$/;"	c
ResizeScale	detectron2/data/transforms/augmentation_impl.py	/^class ResizeScale(Augmentation):$/;"	c
ResizeShortestEdge	detectron2/data/transforms/augmentation_impl.py	/^class ResizeShortestEdge(Augmentation):$/;"	c
ResizeTransform	detectron2/data/transforms/transform.py	/^class ResizeTransform(Transform):$/;"	c
Resize_rotated_box	detectron2/data/transforms/transform.py	/^def Resize_rotated_box(transform, rotated_boxes):$/;"	f
RetinaNet	detectron2/modeling/meta_arch/retinanet.py	/^class RetinaNet(DenseDetector):$/;"	c
RetinaNetE2ETest	tests/modeling/test_model_e2e.py	/^class RetinaNetE2ETest(InstanceModelE2ETest, unittest.TestCase):$/;"	c
RetinaNetHead	detectron2/modeling/meta_arch/retinanet.py	/^class RetinaNetHead(nn.Module):$/;"	c
RetinaNetHead_SharedTrainingBN	projects/Rethinking-BatchNorm/configs/retinanet_SyncBNhead_SharedTraining.py	/^class RetinaNetHead_SharedTrainingBN(RetinaNetHead):$/;"	c
RetinaNetTest	tests/test_model_analysis.py	/^class RetinaNetTest(unittest.TestCase):$/;"	c
RotatedAnchorGenerator	detectron2/modeling/anchor_generator.py	/^class RotatedAnchorGenerator(nn.Module):$/;"	c
RotatedBoxes	detectron2/structures/rotated_boxes.py	/^class RotatedBoxes(Boxes):$/;"	c
RotatedCOCOEvaluator	detectron2/evaluation/rotated_coco_evaluation.py	/^class RotatedCOCOEvaluator(COCOEvaluator):$/;"	c
RotatedCOCOeval	detectron2/evaluation/rotated_coco_evaluation.py	/^class RotatedCOCOeval(COCOeval):$/;"	c
RotatedFastRCNNOutputLayers	detectron2/modeling/roi_heads/rotated_fast_rcnn.py	/^class RotatedFastRCNNOutputLayers(FastRCNNOutputLayers):$/;"	c
RotationTransform	detectron2/data/transforms/transform.py	/^class RotationTransform(Transform):$/;"	c
S3_C2_DETECTRON_PREFIX	detectron2/checkpoint/catalog.py	/^    S3_C2_DETECTRON_PREFIX = "https:\/\/dl.fbaipublicfiles.com\/detectron"$/;"	v	class:ModelCatalog
S3_DETECTRON2_PREFIX	detectron2/utils/file_io.py	/^    S3_DETECTRON2_PREFIX = "https:\/\/dl.fbaipublicfiles.com\/detectron2\/"$/;"	v	class:Detectron2Handler
S3_PREFIX	detectron2/model_zoo/model_zoo.py	/^    S3_PREFIX = "https:\/\/dl.fbaipublicfiles.com\/detectron2\/"$/;"	v	class:_ModelZooUrls
SE	detectron2/modeling/backbone/regnet.py	/^class SE(nn.Module):$/;"	c
SEGMENTATION	detectron2/utils/visualizer.py	/^    SEGMENTATION = 1$/;"	v	class:ColorMode
SEM_SEG_HEADS_REGISTRY	detectron2/modeling/meta_arch/semantic_seg.py	/^SEM_SEG_HEADS_REGISTRY = Registry("SEM_SEG_HEADS")$/;"	v
SGD	configs/common/optim.py	/^SGD = L(torch.optim.SGD)($/;"	v
SPECIFIER	projects/DensePose/densepose/utils/dbhelper.py	/^    SPECIFIER = "*"$/;"	v	class:AllEntrySelector
STABLE_ONNX_OPSET_VERSION	detectron2/export/__init__.py	/^STABLE_ONNX_OPSET_VERSION = 11$/;"	v
S_KEY	projects/DensePose/densepose/structures/data_relative.py	/^    S_KEY = "dp_masks"$/;"	v	class:DensePoseDataRelative
SampleCountMetricPrinter	projects/DensePose/densepose/engine/trainer.py	/^class SampleCountMetricPrinter(EventWriter):$/;"	c
SampleCountingLoader	projects/DensePose/densepose/engine/trainer.py	/^class SampleCountingLoader:$/;"	c
SampledData	projects/DensePose/densepose/data/inference_based_loader.py	/^SampledData = Any$/;"	v
SampledData	projects/DensePose/densepose/data/samplers/prediction_to_gt.py	/^SampledData = Dict[str, Any]$/;"	v
Schema	detectron2/export/flatten.py	/^class Schema:$/;"	c
ScopedWS	detectron2/export/shared.py	/^class ScopedWS:$/;"	c
ScoreBasedFilter	projects/DensePose/densepose/data/inference_based_loader.py	/^class ScoreBasedFilter:$/;"	c
ScoreThresholdedExtractor	projects/DensePose/densepose/vis/extractor.py	/^class ScoreThresholdedExtractor:$/;"	c
ScoredBoundingBoxExtractor	projects/DensePose/densepose/vis/extractor.py	/^class ScoredBoundingBoxExtractor:$/;"	c
ScoredBoundingBoxVisualizer	projects/DensePose/densepose/vis/bounding_box.py	/^class ScoredBoundingBoxVisualizer:$/;"	c
Scores	projects/DensePose/densepose/vis/extractor.py	/^Scores = Sequence[float]$/;"	v
ScriptableAdapter	tools/deploy/export_model.py	/^        class ScriptableAdapter(ScriptableAdapterBase):$/;"	c	class:export_scripting.ScriptableAdapterBase
ScriptableAdapterBase	tools/deploy/export_model.py	/^    class ScriptableAdapterBase(nn.Module):$/;"	c	function:export_scripting
SegmentationLoss	projects/DensePose/densepose/modeling/losses/segm.py	/^class SegmentationLoss:$/;"	c
SemSegE2ETest	tests/modeling/test_model_e2e.py	/^class SemSegE2ETest(unittest.TestCase):$/;"	c
SemSegEvaluator	detectron2/evaluation/sem_seg_evaluation.py	/^class SemSegEvaluator(DatasetEvaluator):$/;"	c
SemSegFPNHead	detectron2/modeling/meta_arch/semantic_seg.py	/^class SemSegFPNHead(nn.Module):$/;"	c
SemanticSegmentor	detectron2/modeling/meta_arch/semantic_seg.py	/^class SemanticSegmentor(nn.Module):$/;"	c
ShapeSpec	detectron2/layers/shape_spec.py	/^class ShapeSpec:$/;"	c
ShapeToShapeCycleLoss	projects/DensePose/densepose/modeling/losses/cycle_shape2shape.py	/^class ShapeToShapeCycleLoss(nn.Module):$/;"	c
ShowAction	projects/DensePose/apply_net.py	/^class ShowAction(InferenceAction):$/;"	c
ShowAction	projects/DensePose/query_db.py	/^class ShowAction(EntrywiseAction):$/;"	c
SimpleFeaturePyramid	detectron2/modeling/backbone/vit.py	/^class SimpleFeaturePyramid(Backbone):$/;"	c
SimpleStem	detectron2/modeling/backbone/regnet.py	/^class SimpleStem(CNNBlockBase):$/;"	c
SimpleTrainer	detectron2/engine/train_loop.py	/^class SimpleTrainer(TrainerBase):$/;"	c
SingleProcessFileTensorStorage	projects/DensePose/densepose/evaluation/tensor_storage.py	/^class SingleProcessFileTensorStorage(SingleProcessTensorStorage):$/;"	c
SingleProcessRamTensorStorage	projects/DensePose/densepose/evaluation/tensor_storage.py	/^class SingleProcessRamTensorStorage(SingleProcessTensorStorage):$/;"	c
SingleProcessTensorStorage	projects/DensePose/densepose/evaluation/tensor_storage.py	/^class SingleProcessTensorStorage:$/;"	c
SizeData	projects/DensePose/densepose/evaluation/tensor_storage.py	/^class SizeData:$/;"	c
SizeMismatchError	detectron2/data/detection_utils.py	/^class SizeMismatchError(ValueError):$/;"	c
SoftEmbeddingLoss	projects/DensePose/densepose/modeling/losses/soft_embed.py	/^class SoftEmbeddingLoss:$/;"	c
StandardAugInput	detectron2/data/transforms/augmentation.py	/^StandardAugInput = AugInput$/;"	v
StandardPointHead	projects/PointRend/point_rend/point_head.py	/^class StandardPointHead(nn.Module):$/;"	c
StandardROIHeads	detectron2/modeling/roi_heads/roi_heads.py	/^class StandardROIHeads(ROIHeads):$/;"	c
StandardRPNHead	detectron2/modeling/proposal_generator/rpn.py	/^class StandardRPNHead(nn.Module):$/;"	c
SwapAlign2Nat	projects/TensorMask/tensormask/layers/swap_align2nat.py	/^class SwapAlign2Nat(nn.Module):$/;"	c
SwapAlign2NatTest	projects/TensorMask/tests/test_swap_align2nat.py	/^class SwapAlign2NatTest(unittest.TestCase):$/;"	c
SwinTransformer	detectron2/modeling/backbone/swin.py	/^class SwinTransformer(Backbone):$/;"	c
SwinTransformerBlock	detectron2/modeling/backbone/swin.py	/^class SwinTransformerBlock(nn.Module):$/;"	c
TG1	tests/data/test_transforms.py	/^        class TG1(T.Augmentation):$/;"	c	function:TestTransforms.test_augmentation_input_args
TG2	tests/data/test_transforms.py	/^        class TG2(T.Augmentation):$/;"	c	function:TestTransforms.test_augmentation_input_args
TG3	tests/data/test_transforms.py	/^        class TG3(T.Augmentation):$/;"	c	function:TestTransforms.test_augmentation_input_args
TORCH_VERSION	detectron2/utils/env.py	/^TORCH_VERSION = tuple(int(x) for x in torch.__version__.split(".")[:2])$/;"	v
TRACKER_HEADS_REGISTRY	detectron2/tracking/base_tracker.py	/^TRACKER_HEADS_REGISTRY = Registry("TRACKER_HEADS")$/;"	v
TensorMask	projects/TensorMask/tensormask/arch.py	/^class TensorMask(nn.Module):$/;"	c
TensorMaskAnchorGenerator	projects/TensorMask/tensormask/arch.py	/^class TensorMaskAnchorGenerator(DefaultAnchorGenerator):$/;"	c
TensorMaskHead	projects/TensorMask/tensormask/arch.py	/^class TensorMaskHead(nn.Module):$/;"	c
TensorWrapSchema	detectron2/export/flatten.py	/^class TensorWrapSchema(Schema):$/;"	c
TensorboardXWriter	detectron2/utils/events.py	/^class TensorboardXWriter(EventWriter):$/;"	c
TestAnchorGenerator	tests/modeling/test_anchor_generator.py	/^class TestAnchorGenerator(unittest.TestCase):$/;"	c
TestAspectRatioGrouping	tests/data/test_dataset.py	/^class TestAspectRatioGrouping(unittest.TestCase):$/;"	c
TestBBoxIOUTracker	tests/tracking/test_bbox_iou_tracker.py	/^class TestBBoxIOUTracker(unittest.TestCase):$/;"	c
TestBackBone	tests/modeling/test_backbone.py	/^class TestBackBone(unittest.TestCase):$/;"	c
TestBaseHungarianTracker	tests/tracking/test_hungarian_tracker.py	/^class TestBaseHungarianTracker(unittest.TestCase):$/;"	c
TestBitMask	tests/structures/test_masks.py	/^class TestBitMask(unittest.TestCase):$/;"	c
TestBlocks	tests/layers/test_blocks.py	/^class TestBlocks(unittest.TestCase):$/;"	c
TestBox2BoxTransform	tests/modeling/test_box2box_transform.py	/^class TestBox2BoxTransform(unittest.TestCase):$/;"	c
TestBox2BoxTransformLinear	tests/modeling/test_box2box_transform.py	/^class TestBox2BoxTransformLinear(unittest.TestCase):$/;"	c
TestBox2BoxTransformRotated	tests/modeling/test_box2box_transform.py	/^class TestBox2BoxTransformRotated(unittest.TestCase):$/;"	c
TestBoxIOU	tests/structures/test_boxes.py	/^class TestBoxIOU(unittest.TestCase):$/;"	c
TestBoxMode	tests/structures/test_boxes.py	/^class TestBoxMode(unittest.TestCase):$/;"	c
TestBoxes	tests/structures/test_boxes.py	/^class TestBoxes(unittest.TestCase):$/;"	c
TestCOCOeval	tests/data/test_coco_evaluation.py	/^class TestCOCOeval(unittest.TestCase):$/;"	c
TestCaffe2Export	tests/test_export_caffe2.py	/^class TestCaffe2Export(unittest.TestCase):$/;"	c
TestCaffe2RPN	tests/export/test_c10.py	/^class TestCaffe2RPN(unittest.TestCase):$/;"	c
TestChartBasedAnnotationsAccumulator	projects/DensePose/tests/test_chart_based_annotations_accumulator.py	/^class TestChartBasedAnnotationsAccumulator(unittest.TestCase):$/;"	c
TestCheckpointer	tests/test_checkpoint.py	/^class TestCheckpointer(unittest.TestCase):$/;"	c
TestClass	tests/config/test_instantiate_config.py	/^class TestClass:$/;"	c
TestCollectEnv	tests/test_packaging.py	/^class TestCollectEnv(unittest.TestCase):$/;"	c
TestCombinedDataLoader	projects/DensePose/tests/test_combine_data_loader.py	/^class TestCombinedDataLoader(unittest.TestCase):$/;"	c
TestConfigVersioning	tests/config/test_yacs_config.py	/^class TestConfigVersioning(unittest.TestCase):$/;"	c
TestConfigurable	tests/config/test_yacs_config.py	/^class TestConfigurable(unittest.TestCase):$/;"	c
TestConstruction	tests/config/test_instantiate_config.py	/^class TestConstruction(unittest.TestCase):$/;"	c
TestConvertCOCO	tests/data/test_coco.py	/^class TestConvertCOCO(unittest.TestCase):$/;"	c
TestCseAnnotationsAccumulator	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^class TestCseAnnotationsAccumulator(unittest.TestCase):$/;"	c
TestDataLoader	tests/data/test_dataset.py	/^class TestDataLoader(unittest.TestCase):$/;"	c
TestDatasetFromList	tests/data/test_dataset.py	/^class TestDatasetFromList(unittest.TestCase):$/;"	c
TestDatasetLoadedAnnotations	projects/DensePose/tests/test_dataset_loaded_annotations.py	/^class TestDatasetLoadedAnnotations(unittest.TestCase):$/;"	c
TestEventWriter	tests/test_events.py	/^class TestEventWriter(unittest.TestCase):$/;"	c
TestFrameSelector	projects/DensePose/tests/test_frame_selector.py	/^class TestFrameSelector(unittest.TestCase):$/;"	c
TestGroupedBatchSampler	tests/data/test_sampler.py	/^class TestGroupedBatchSampler(unittest.TestCase):$/;"	c
TestIOUWeightedHungarianBBoxIOUTracker	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^class TestIOUWeightedHungarianBBoxIOUTracker(unittest.TestCase):$/;"	c
TestImageList	tests/structures/test_imagelist.py	/^class TestImageList(unittest.TestCase):$/;"	c
TestImageListDataset	projects/DensePose/tests/test_image_list_dataset.py	/^class TestImageListDataset(unittest.TestCase):$/;"	c
TestImageResizeTransform	projects/DensePose/tests/test_image_resize_transform.py	/^class TestImageResizeTransform(unittest.TestCase):$/;"	c
TestInferenceSampler	tests/data/test_sampler.py	/^class TestInferenceSampler(unittest.TestCase):$/;"	c
TestInstances	tests/structures/test_instances.py	/^class TestInstances(unittest.TestCase):$/;"	c
TestKeypoints	tests/structures/test_keypoints.py	/^class TestKeypoints(unittest.TestCase):$/;"	c
TestLazyPythonConfig	tests/config/test_lazy_config.py	/^class TestLazyPythonConfig(unittest.TestCase):$/;"	c
TestLocate	tests/test_registry.py	/^class TestLocate(unittest.TestCase):$/;"	c
TestLosses	tests/layers/test_losses.py	/^class TestLosses(unittest.TestCase):$/;"	c
TestMMDetWrapper	tests/modeling/test_mmdet.py	/^class TestMMDetWrapper(unittest.TestCase):$/;"	c
TestMapDataset	tests/data/test_dataset.py	/^class TestMapDataset(unittest.TestCase):$/;"	c
TestMaskCropPaste	tests/layers/test_mask_ops.py	/^class TestMaskCropPaste(unittest.TestCase):$/;"	c
TestMatcher	tests/modeling/test_matcher.py	/^class TestMatcher(unittest.TestCase):$/;"	c
TestMod	tests/test_model_analysis.py	/^        class TestMod(nn.Module):$/;"	c	function:UnusedParamTest.test_unused
TestModelZoo	tests/test_model_zoo.py	/^class TestModelZoo(unittest.TestCase):$/;"	c
TestMultiProcessFileTensorStorage	projects/DensePose/tests/test_tensor_storage.py	/^class TestMultiProcessFileTensorStorage(unittest.TestCase):$/;"	c
TestMultiProcessRamTensorStorage	projects/DensePose/tests/test_tensor_storage.py	/^class TestMultiProcessRamTensorStorage(unittest.TestCase):$/;"	c
TestNMS	tests/layers/test_nms.py	/^class TestNMS(unittest.TestCase):$/;"	c
TestNMSRotated	tests/layers/test_nms_rotated.py	/^class TestNMSRotated(unittest.TestCase):$/;"	c
TestONNXTracingExport	tests/test_export_onnx.py	/^class TestONNXTracingExport(unittest.TestCase):$/;"	c
TestOptimizer	tests/test_solver.py	/^class TestOptimizer(unittest.TestCase):$/;"	c
TestProjects	tests/test_packaging.py	/^class TestProjects(unittest.TestCase):$/;"	c
TestRLEToJson	tests/data/test_coco.py	/^class TestRLEToJson(unittest.TestCase):$/;"	c
TestROIPooler	tests/modeling/test_roi_pooler.py	/^class TestROIPooler(unittest.TestCase):$/;"	c
TestRepeatFactorTrainingSampler	tests/data/test_sampler.py	/^class TestRepeatFactorTrainingSampler(unittest.TestCase):$/;"	c
TestRotatedBoxesLayer	tests/structures/test_rotated_boxes.py	/^class TestRotatedBoxesLayer(unittest.TestCase):$/;"	c
TestRotatedBoxesStructure	tests/structures/test_rotated_boxes.py	/^class TestRotatedBoxesStructure(unittest.TestCase):$/;"	c
TestRotationTransform	tests/data/test_rotation_transform.py	/^class TestRotationTransform(unittest.TestCase):$/;"	c
TestSamplerDeterministic	tests/data/test_sampler.py	/^class TestSamplerDeterministic(unittest.TestCase):$/;"	c
TestScheduler	tests/test_scheduler.py	/^class TestScheduler(TestCase):$/;"	c
TestScriptable	tests/layers/test_nms_rotated.py	/^class TestScriptable(unittest.TestCase):$/;"	c
TestScripting	tests/test_export_torchscript.py	/^class TestScripting(unittest.TestCase):$/;"	c
TestSetup	projects/DensePose/tests/test_setup.py	/^class TestSetup(unittest.TestCase):$/;"	c
TestSingleProcessFileTensorStorage	projects/DensePose/tests/test_tensor_storage.py	/^class TestSingleProcessFileTensorStorage(unittest.TestCase):$/;"	c
TestSingleProcessRamTensorStorage	projects/DensePose/tests/test_tensor_storage.py	/^class TestSingleProcessRamTensorStorage(unittest.TestCase):$/;"	c
TestStructures	projects/DensePose/tests/test_structures.py	/^class TestStructures(unittest.TestCase):$/;"	c
TestTensorboardXWriter	tests/utils/test_tensorboardx.py	/^class TestTensorboardXWriter(unittest.TestCase):$/;"	c
TestTorchscriptUtils	tests/test_export_torchscript.py	/^class TestTorchscriptUtils(unittest.TestCase):$/;"	c
TestTracing	tests/test_export_torchscript.py	/^class TestTracing(unittest.TestCase):$/;"	c
TestTrainer	tests/test_engine.py	/^class TestTrainer(unittest.TestCase):$/;"	c
TestTransformAnnotations	tests/data/test_detection_utils.py	/^class TestTransformAnnotations(unittest.TestCase):$/;"	c
TestTransforms	tests/data/test_transforms.py	/^class TestTransforms(unittest.TestCase):$/;"	c
TestVanillaHungarianBBoxIOUTracker	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^class TestVanillaHungarianBBoxIOUTracker(unittest.TestCase):$/;"	c
TestVideoKeyframeDataset	projects/DensePose/tests/test_video_keyframe_dataset.py	/^class TestVideoKeyframeDataset(unittest.TestCase):$/;"	c
TestVisualizer	tests/test_visualizer.py	/^class TestVisualizer(unittest.TestCase):$/;"	c
TestingModule	tests/layers/test_nms_rotated.py	/^        class TestingModule(torch.nn.Module):$/;"	c	function:TestScriptable.setUp
TextVisualizer	projects/DensePose/densepose/vis/base.py	/^class TextVisualizer:$/;"	c
ToChartResultConverter	projects/DensePose/densepose/converters/to_chart_result.py	/^class ToChartResultConverter(BaseConverter):$/;"	c
ToChartResultConverterWithConfidences	projects/DensePose/densepose/converters/to_chart_result.py	/^class ToChartResultConverterWithConfidences(BaseConverter):$/;"	c
ToIterableDataset	detectron2/data/common.py	/^class ToIterableDataset(data.IterableDataset):$/;"	c
ToMaskConverter	projects/DensePose/densepose/converters/to_mask.py	/^class ToMaskConverter(BaseConverter):$/;"	c
TorchMemoryStats	detectron2/engine/hooks.py	/^class TorchMemoryStats(HookBase):$/;"	c
TorchProfiler	detectron2/engine/hooks.py	/^class TorchProfiler(HookBase):$/;"	c
TracingAdapter	detectron2/export/flatten.py	/^class TracingAdapter(nn.Module):$/;"	c
Trainer	projects/DeepLab/train_net.py	/^class Trainer(DefaultTrainer):$/;"	c
Trainer	projects/DensePose/densepose/engine/trainer.py	/^class Trainer(DefaultTrainer):$/;"	c
Trainer	projects/Panoptic-DeepLab/train_net.py	/^class Trainer(DefaultTrainer):$/;"	c
Trainer	projects/PointRend/train_net.py	/^class Trainer(DefaultTrainer):$/;"	c
Trainer	projects/PointSup/train_net.py	/^class Trainer(DefaultTrainer):$/;"	c
Trainer	projects/TensorMask/train_net.py	/^class Trainer(DefaultTrainer):$/;"	c
Trainer	projects/TridentNet/train_net.py	/^class Trainer(DefaultTrainer):$/;"	c
Trainer	tools/train_net.py	/^class Trainer(DefaultTrainer):$/;"	c
TrainerBase	detectron2/engine/train_loop.py	/^class TrainerBase:$/;"	c
TrainingModule	tools/lightning_train_net.py	/^class TrainingModule(LightningModule):$/;"	c
TrainingSampler	detectron2/data/samplers/distributed_sampler.py	/^class TrainingSampler(Sampler):$/;"	c
TransformGen	detectron2/data/transforms/augmentation.py	/^TransformGen = Augmentation$/;"	v
TridentBottleneckBlock	projects/TridentNet/tridentnet/trident_backbone.py	/^class TridentBottleneckBlock(ResNetBlockBase):$/;"	c
TridentConv	projects/TridentNet/tridentnet/trident_conv.py	/^class TridentConv(nn.Module):$/;"	c
TridentRPN	projects/TridentNet/tridentnet/trident_rpn.py	/^class TridentRPN(RPN):$/;"	c
TridentRes5ROIHeads	projects/TridentNet/tridentnet/trident_rcnn.py	/^class TridentRes5ROIHeads(Res5ROIHeads):$/;"	c
TridentStandardROIHeads	projects/TridentNet/tridentnet/trident_rcnn.py	/^class TridentStandardROIHeads(StandardROIHeads):$/;"	c
TupleSchema	detectron2/export/flatten.py	/^class TupleSchema(ListSchema):$/;"	c
U_KEY	projects/DensePose/densepose/structures/data_relative.py	/^    U_KEY = "dp_U"$/;"	v	class:DensePoseDataRelative
UnusedParamTest	tests/test_model_analysis.py	/^class UnusedParamTest(unittest.TestCase):$/;"	c
VALUE	detectron2/solver/build.py	/^    VALUE = "value"$/;"	v	class:GradientClipType
VERTEX_DIRECT	projects/DensePose/densepose/modeling/cse/embedder.py	/^    VERTEX_DIRECT = "vertex_direct"$/;"	v	class:EmbedderType
VERTEX_FEATURE	projects/DensePose/densepose/modeling/cse/embedder.py	/^    VERTEX_FEATURE = "vertex_feature"$/;"	v	class:EmbedderType
VERTEX_IDS_KEY	projects/DensePose/densepose/structures/data_relative.py	/^    VERTEX_IDS_KEY = "dp_vertex"$/;"	v	class:DensePoseDataRelative
VIDEO_LIST	projects/DensePose/densepose/data/datasets/dataset_type.py	/^    VIDEO_LIST = "video_list"$/;"	v	class:DatasetType
V_KEY	projects/DensePose/densepose/structures/data_relative.py	/^    V_KEY = "dp_V"$/;"	v	class:DensePoseDataRelative
VanillaBlock	detectron2/modeling/backbone/regnet.py	/^class VanillaBlock(CNNBlockBase):$/;"	c
VanillaHungarianBBoxIOUTracker	detectron2/tracking/vanilla_hungarian_bbox_iou_tracker.py	/^class VanillaHungarianBBoxIOUTracker(BaseHungarianTracker):$/;"	c
VertexDirectEmbedder	projects/DensePose/densepose/modeling/cse/vertex_direct_embedder.py	/^class VertexDirectEmbedder(nn.Module):$/;"	c
VertexFeatureEmbedder	projects/DensePose/densepose/modeling/cse/vertex_feature_embedder.py	/^class VertexFeatureEmbedder(nn.Module):$/;"	c
ViT	detectron2/modeling/backbone/vit.py	/^class ViT(Backbone):$/;"	c
VideoKeyframeDataset	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^class VideoKeyframeDataset(Dataset):$/;"	c
VideoVisualizer	detectron2/utils/video_visualizer.py	/^class VideoVisualizer:$/;"	c
VisImage	detectron2/utils/visualizer.py	/^class VisImage:$/;"	c
VisualizationDemo	demo/predictor.py	/^class VisualizationDemo:$/;"	c
Visualizer	detectron2/utils/visualizer.py	/^class Visualizer:$/;"	c
WINDOW_NAME	demo/demo.py	/^WINDOW_NAME = "COCO detections"$/;"	v
WarmupCosineLR	detectron2/solver/lr_scheduler.py	/^class WarmupCosineLR(LRScheduler):$/;"	c
WarmupMultiStepLR	detectron2/solver/lr_scheduler.py	/^class WarmupMultiStepLR(LRScheduler):$/;"	c
WarmupParamScheduler	detectron2/solver/lr_scheduler.py	/^class WarmupParamScheduler(CompositeParamScheduler):$/;"	c
WarmupPolyLR	projects/DeepLab/deeplab/lr_scheduler.py	/^class WarmupPolyLR(LRScheduler):$/;"	c
WindowAttention	detectron2/modeling/backbone/swin.py	/^class WindowAttention(nn.Module):$/;"	c
Wrap	tests/modeling/test_roi_heads.py	/^        class Wrap(nn.ModuleDict):$/;"	c	function:ROIHeadsTest.test_PointRend_mask_head_tracing
XYWHA_ABS	detectron2/structures/boxes.py	/^    XYWHA_ABS = 4$/;"	v	class:BoxMode
XYWH_ABS	detectron2/structures/boxes.py	/^    XYWH_ABS = 1$/;"	v	class:BoxMode
XYWH_REL	detectron2/structures/boxes.py	/^    XYWH_REL = 3$/;"	v	class:BoxMode
XYXY_ABS	detectron2/structures/boxes.py	/^    XYXY_ABS = 0$/;"	v	class:BoxMode
XYXY_REL	detectron2/structures/boxes.py	/^    XYXY_REL = 2$/;"	v	class:BoxMode
X_KEY	projects/DensePose/densepose/structures/data_relative.py	/^    X_KEY = "dp_x"$/;"	v	class:DensePoseDataRelative
Y_KEY	projects/DensePose/densepose/structures/data_relative.py	/^    Y_KEY = "dp_y"$/;"	v	class:DensePoseDataRelative
_	tests/config/test_yacs_config.py	/^            _ = _BadClass1(a=1)$/;"	v	class:TestConfigurable.testBadClass._BadClass3
_	tests/config/test_yacs_config.py	/^            _ = _BadClass2(a=1)$/;"	v	class:TestConfigurable.testBadClass._BadClass3
_	tests/config/test_yacs_config.py	/^            _ = _BadClass3(get_cfg())$/;"	v	class:TestConfigurable.testBadClass._BadClass3
_	tests/test_export_torchscript.py	/^            _ = adap(*newdata)$/;"	v	class:TestTorchscriptUtils.test_allow_non_tensor.M
_BASE_CONFIG_DIR	projects/DensePose/tests/common.py	/^_BASE_CONFIG_DIR = "configs"$/;"	v
_BASE_CONFIG_FILE_PREFIX	projects/DensePose/tests/common.py	/^_BASE_CONFIG_FILE_PREFIX = "Base-"$/;"	v
_BLACK	detectron2/utils/visualizer.py	/^_BLACK = (0, 0, 0)$/;"	v
_BadClass1	tests/config/test_yacs_config.py	/^        class _BadClass1:$/;"	c	function:TestConfigurable.testBadClass
_BadClass2	tests/config/test_yacs_config.py	/^        class _BadClass2:$/;"	c	function:TestConfigurable.testBadClass
_BadClass3	tests/config/test_yacs_config.py	/^        class _BadClass3:$/;"	c	function:TestConfigurable.testBadClass
_BootstrapDatasetFactoryCatalog	projects/DensePose/densepose/data/build.py	/^class _BootstrapDatasetFactoryCatalog(UserDict):$/;"	c
_C	detectron2/config/defaults.py	/^_C = CN()$/;"	v
_CFG_PACKAGE_NAME	detectron2/config/lazy.py	/^_CFG_PACKAGE_NAME = "detectron2._cfg_loader"$/;"	v
_COLORS	detectron2/utils/colormap.py	/^_COLORS = np.array($/;"	v
_COLOR_GRAY	projects/DensePose/densepose/vis/base.py	/^    _COLOR_GRAY = (218, 227, 218)$/;"	v	class:TextVisualizer
_COLOR_GREEN	projects/DensePose/densepose/vis/base.py	/^    _COLOR_GREEN = (18, 127, 15)$/;"	v	class:PointsVisualizer
_COLOR_GREEN	projects/DensePose/densepose/vis/base.py	/^    _COLOR_GREEN = (18, 127, 15)$/;"	v	class:RectangleVisualizer
_COLOR_WHITE	projects/DensePose/densepose/vis/base.py	/^    _COLOR_WHITE = (255, 255, 255)$/;"	v	class:TextVisualizer
_CONFIG_FILE_EXT	projects/DensePose/tests/common.py	/^_CONFIG_FILE_EXT = ".yaml"$/;"	v
_CURRENT_STORAGE_STACK	detectron2/utils/events.py	/^_CURRENT_STORAGE_STACK = []$/;"	v
_CV2_IMPORTED	detectron2/evaluation/sem_seg_evaluation.py	/^    _CV2_IMPORTED = False$/;"	v
_CV2_IMPORTED	detectron2/evaluation/sem_seg_evaluation.py	/^_CV2_IMPORTED = True$/;"	v
_ColorfulFormatter	detectron2/utils/logger.py	/^class _ColorfulFormatter(logging.Formatter):$/;"	c
_D2ProjectsFinder	detectron2/projects/__init__.py	/^    class _D2ProjectsFinder(importlib.abc.MetaPathFinder):$/;"	c
_DEFAULT_DATASET_FROM_LIST_SERIALIZE_METHOD	detectron2/data/common.py	/^_DEFAULT_DATASET_FROM_LIST_SERIALIZE_METHOD = _TorchSerializedList$/;"	v
_DEFAULT_SCALE_CLAMP	detectron2/modeling/box_regression.py	/^_DEFAULT_SCALE_CLAMP = math.log(1000.0 \/ 16)$/;"	v
_DatasetCatalog	detectron2/data/catalog.py	/^class _DatasetCatalog(UserDict):$/;"	c
_DatasetCategory	projects/DensePose/densepose/data/build.py	/^class _DatasetCategory:$/;"	c
_DeformConv	detectron2/layers/deform_conv.py	/^class _DeformConv(Function):$/;"	c
_DetectedInstance	detectron2/utils/video_visualizer.py	/^class _DetectedInstance:$/;"	c
_Dummy	detectron2/utils/develop.py	/^    class _Dummy(object, metaclass=_DummyMetaClass):$/;"	c	function:create_dummy_class
_DummyMetaClass	detectron2/utils/develop.py	/^    class _DummyMetaClass(type):$/;"	c	function:create_dummy_class
_EMBED_LOSS_REGISTRY	projects/DensePose/densepose/modeling/losses/cse.py	/^    _EMBED_LOSS_REGISTRY = {$/;"	v	class:DensePoseCseLoss
_EMPTY_FRAMES	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^    _EMPTY_FRAMES = torch.empty((0, 3, 1, 1))$/;"	v	class:VideoKeyframeDataset
_EMPTY_IMAGE	projects/DensePose/densepose/data/image_list_dataset.py	/^    _EMPTY_IMAGE = torch.empty((0, 3, 1, 1))$/;"	v	class:ImageListDataset
_ENV_SETUP_DONE	detectron2/utils/env.py	/^_ENV_SETUP_DONE = False$/;"	v
_ERROR_PREFIX	projects/DensePose/densepose/utils/dbhelper.py	/^    _ERROR_PREFIX = "Invalid field selector specifier"$/;"	v	class:FieldEntrySelector
_EVOLUTION_CONFIG_SUB_DIR	projects/DensePose/tests/common.py	/^_EVOLUTION_CONFIG_SUB_DIR = "evolution"$/;"	v
_EXCLUDE	detectron2/modeling/__init__.py	/^_EXCLUDE = {"ShapeSpec"}$/;"	v
_EXIF_ORIENT	detectron2/data/detection_utils.py	/^_EXIF_ORIENT = 274  # exif 'Orientation' tag$/;"	v
_EmptyMapDataset	detectron2/data/benchmark.py	/^class _EmptyMapDataset(torch.utils.data.Dataset):$/;"	c
_FieldEntryRangePredicate	projects/DensePose/densepose/utils/dbhelper.py	/^    class _FieldEntryRangePredicate:$/;"	c	class:FieldEntrySelector
_FieldEntryValuePredicate	projects/DensePose/densepose/utils/dbhelper.py	/^    class _FieldEntryValuePredicate:$/;"	c	class:FieldEntrySelector
_FieldType	detectron2/export/torchscript_patch.py	/^    class _FieldType:$/;"	c	function:_gen_instance_class
_GradientClipper	detectron2/solver/build.py	/^_GradientClipper = Callable[[_GradientClipperInput], None]$/;"	v
_GradientClipperInput	detectron2/solver/build.py	/^_GradientClipperInput = Union[torch.Tensor, Iterable[torch.Tensor]]$/;"	v
_HRNET_CONFIG_SUB_DIR	projects/DensePose/tests/common.py	/^_HRNET_CONFIG_SUB_DIR = "HRNet"$/;"	v
_IGNORED_OPS	detectron2/utils/analysis.py	/^_IGNORED_OPS = {$/;"	v
_KEYPOINT_THRESHOLD	detectron2/utils/visualizer.py	/^_KEYPOINT_THRESHOLD = 0.05$/;"	v
_LARGE_MASK_AREA_THRESH	detectron2/utils/visualizer.py	/^_LARGE_MASK_AREA_THRESH = 120000$/;"	v
_LOCAL_PROCESS_GROUP	detectron2/utils/comm.py	/^_LOCAL_PROCESS_GROUP = None$/;"	v
_LOG_COUNTER	detectron2/utils/logger.py	/^_LOG_COUNTER = Counter()$/;"	v
_LOG_TIMER	detectron2/utils/logger.py	/^_LOG_TIMER = {}$/;"	v
_LegacySubClass	tests/config/test_yacs_config.py	/^class _LegacySubClass(_TestClassB):$/;"	c
_LegacySubClassNotCfg	tests/config/test_yacs_config.py	/^class _LegacySubClassNotCfg(_TestClassB):$/;"	c
_MISSING_LOCAL_PG_ERROR	detectron2/utils/comm.py	/^_MISSING_LOCAL_PG_ERROR = ($/;"	v
_M_RGB2YUV	detectron2/data/detection_utils.py	/^_M_RGB2YUV = [[0.299, 0.587, 0.114], [-0.14713, -0.28886, 0.436], [0.615, -0.51499, -0.10001]]$/;"	v
_M_YUV2RGB	detectron2/data/detection_utils.py	/^_M_YUV2RGB = [[1.0, 0.0, 1.13983], [1.0, -0.39465, -0.58060], [1.0, 2.03211, 0.0]]$/;"	v
_MapIterableDataset	detectron2/data/common.py	/^class _MapIterableDataset(data.IterableDataset):$/;"	c
_MergedCategoriesT	projects/DensePose/densepose/data/build.py	/^_MergedCategoriesT = Dict[int, List[_DatasetCategory]]$/;"	v
_MeshCatalog	projects/DensePose/densepose/data/meshes/catalog.py	/^class _MeshCatalog(UserDict):$/;"	c
_MetadataCatalog	detectron2/data/catalog.py	/^class _MetadataCatalog(UserDict):$/;"	c
_ModelZooUrls	detectron2/model_zoo/model_zoo.py	/^class _ModelZooUrls:$/;"	c
_ModulatedDeformConv	detectron2/layers/deform_conv.py	/^class _ModulatedDeformConv(Function):$/;"	c
_MyData	tests/data/test_dataset.py	/^class _MyData(torch.utils.data.IterableDataset):$/;"	c
_NewEmptyTensorOp	detectron2/layers/wrappers.py	/^class _NewEmptyTensorOp(torch.autograd.Function):$/;"	c
_NewSubClassNewInit	tests/config/test_yacs_config.py	/^class _NewSubClassNewInit(_TestClassB):$/;"	c
_NonLocalBlockND	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^class _NonLocalBlockND(nn.Module):$/;"	c
_OFF_WHITE	detectron2/utils/visualizer.py	/^_OFF_WHITE = (1.0, 1.0, 240.0 \/ 255)$/;"	v
_PAPER_DATA	docs/conf.py	/^_PAPER_DATA = {$/;"	v
_PREDEFINED_SPLITS_COCO	detectron2/data/datasets/builtin.py	/^_PREDEFINED_SPLITS_COCO = {}$/;"	v
_PREDEFINED_SPLITS_COCO	projects/PointSup/point_sup/register_point_annotations.py	/^_PREDEFINED_SPLITS_COCO = {}$/;"	v
_PREDEFINED_SPLITS_COCO_PANOPTIC	detectron2/data/datasets/builtin.py	/^_PREDEFINED_SPLITS_COCO_PANOPTIC = {$/;"	v
_PREDEFINED_SPLITS_LVIS	detectron2/data/datasets/builtin.py	/^_PREDEFINED_SPLITS_LVIS = {$/;"	v
_PROJECTS	detectron2/projects/__init__.py	/^_PROJECTS = {$/;"	v
_PROJECT_ROOT	detectron2/projects/__init__.py	/^_PROJECT_ROOT = Path(__file__).resolve().parent.parent.parent \/ "projects"$/;"	v
_PanopticPrediction	detectron2/utils/visualizer.py	/^class _PanopticPrediction:$/;"	c
_PredictWorker	demo/predictor.py	/^    class _PredictWorker(mp.Process):$/;"	c	class:AsyncPredictor
_QUICK_SCHEDULES_CONFIG_SUB_DIR	projects/DensePose/tests/common.py	/^_QUICK_SCHEDULES_CONFIG_SUB_DIR = "quick_schedules"$/;"	v
_RANGE_DELIM	projects/DensePose/densepose/utils/dbhelper.py	/^    _RANGE_DELIM = "-"$/;"	v	class:FieldEntrySelector
_RAW_CITYSCAPES_PANOPTIC_SPLITS	detectron2/data/datasets/cityscapes_panoptic.py	/^_RAW_CITYSCAPES_PANOPTIC_SPLITS = {$/;"	v
_RAW_CITYSCAPES_SPLITS	detectron2/data/datasets/builtin.py	/^_RAW_CITYSCAPES_SPLITS = {$/;"	v
_RED	detectron2/utils/visualizer.py	/^_RED = (1.0, 0, 0)$/;"	v
_RENAMED	detectron2/data/catalog.py	/^    _RENAMED = {$/;"	v	class:Metadata
_ROIAlignRotated	detectron2/layers/roi_align_rotated.py	/^class _ROIAlignRotated(Function):$/;"	c
_RawBoxType	detectron2/structures/boxes.py	/^_RawBoxType = Union[List[float], Tuple[float, ...], torch.Tensor, np.ndarray]$/;"	v
_RenameConverter	detectron2/config/compat.py	/^class _RenameConverter:$/;"	c
_SMALL_OBJECT_AREA_THRESH	detectron2/utils/visualizer.py	/^_SMALL_OBJECT_AREA_THRESH = 1000$/;"	v
_SPEC_DELIM	projects/DensePose/densepose/utils/dbhelper.py	/^    _SPEC_DELIM = ","$/;"	v	class:FieldEntrySelector
_Sampler	projects/DensePose/densepose/data/samplers/prediction_to_gt.py	/^class _Sampler:$/;"	c
_ScaleGradient	detectron2/modeling/roi_heads/cascade_rcnn.py	/^class _ScaleGradient(Function):$/;"	c
_SimpleModel	tests/test_engine.py	/^class _SimpleModel(nn.Module):$/;"	c
_StopToken	demo/predictor.py	/^    class _StopToken:$/;"	c	class:AsyncPredictor
_SwapAlign2Nat	projects/TensorMask/tensormask/layers/swap_align2nat.py	/^class _SwapAlign2Nat(Function):$/;"	c
_TORCH_DEVICE_CPU	projects/DensePose/densepose/structures/list.py	/^    _TORCH_DEVICE_CPU = torch.device("cpu")$/;"	v	class:DensePoseList
_TOTAL_SKIPPED	detectron2/modeling/roi_heads/keypoint_head.py	/^_TOTAL_SKIPPED = 0$/;"	v
_TYPE_DELIM	projects/DensePose/densepose/utils/dbhelper.py	/^    _TYPE_DELIM = ":"$/;"	v	class:FieldEntrySelector
_TestClassA	tests/config/test_yacs_config.py	/^class _TestClassA(torch.nn.Module):$/;"	c
_TestClassB	tests/config/test_yacs_config.py	/^class _TestClassB(_TestClassA):$/;"	c
_TestClassC	tests/config/test_yacs_config.py	/^class _TestClassC(_TestClassB):$/;"	c
_TestClassD	tests/config/test_yacs_config.py	/^class _TestClassD(_TestClassA):$/;"	c
_TorchSerializedList	detectron2/data/common.py	/^class _TorchSerializedList:$/;"	c
_TransformToAug	detectron2/data/transforms/augmentation.py	/^class _TransformToAug(Augmentation):$/;"	c
__all__	detectron2/checkpoint/__init__.py	/^__all__ = ["Checkpointer", "PeriodicCheckpointer", "DetectionCheckpointer"]$/;"	v
__all__	detectron2/config/__init__.py	/^__all__ = [$/;"	v
__all__	detectron2/config/compat.py	/^__all__ = ["upgrade_config", "downgrade_config"]$/;"	v
__all__	detectron2/config/instantiate.py	/^__all__ = ["dump_dataclass", "instantiate"]$/;"	v
__all__	detectron2/config/lazy.py	/^__all__ = ["LazyCall", "LazyConfig"]$/;"	v
__all__	detectron2/data/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/data/build.py	/^__all__ = [$/;"	v
__all__	detectron2/data/catalog.py	/^__all__ = ["DatasetCatalog", "MetadataCatalog", "Metadata"]$/;"	v
__all__	detectron2/data/common.py	/^__all__ = ["MapDataset", "DatasetFromList", "AspectRatioGroupedDataset", "ToIterableDataset"]$/;"	v
__all__	detectron2/data/dataset_mapper.py	/^__all__ = ["DatasetMapper"]$/;"	v
__all__	detectron2/data/datasets/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/data/datasets/coco.py	/^__all__ = [$/;"	v
__all__	detectron2/data/datasets/coco_panoptic.py	/^__all__ = ["register_coco_panoptic", "register_coco_panoptic_separated"]$/;"	v
__all__	detectron2/data/datasets/lvis.py	/^__all__ = ["load_lvis_json", "register_lvis_instances", "get_lvis_instances_meta"]$/;"	v
__all__	detectron2/data/datasets/pascal_voc.py	/^__all__ = ["load_voc_instances", "register_pascal_voc"]$/;"	v
__all__	detectron2/data/detection_utils.py	/^__all__ = [$/;"	v
__all__	detectron2/data/samplers/__init__.py	/^__all__ = [$/;"	v
__all__	detectron2/data/transforms/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/data/transforms/augmentation.py	/^__all__ = [$/;"	v
__all__	detectron2/data/transforms/augmentation_impl.py	/^__all__ = [$/;"	v
__all__	detectron2/data/transforms/transform.py	/^__all__ = [$/;"	v
__all__	detectron2/engine/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/engine/defaults.py	/^__all__ = [$/;"	v
__all__	detectron2/engine/hooks.py	/^__all__ = [$/;"	v
__all__	detectron2/engine/launch.py	/^__all__ = ["DEFAULT_TIMEOUT", "launch"]$/;"	v
__all__	detectron2/engine/train_loop.py	/^__all__ = ["HookBase", "TrainerBase", "SimpleTrainer", "AMPTrainer"]$/;"	v
__all__	detectron2/evaluation/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/export/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/export/api.py	/^__all__ = [$/;"	v
__all__	detectron2/export/torchscript.py	/^__all__ = ["scripting_with_instances", "dump_torchscript_IR"]$/;"	v
__all__	detectron2/layers/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/layers/mask_ops.py	/^__all__ = ["paste_masks_in_image"]$/;"	v
__all__	detectron2/model_zoo/__init__.py	/^__all__ = ["get_checkpoint_url", "get", "get_config_file", "get_config"]$/;"	v
__all__	detectron2/modeling/__init__.py	/^__all__ = [k for k in globals().keys() if k not in _EXCLUDE and not k.startswith("_")]$/;"	v
__all__	detectron2/modeling/backbone/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/modeling/backbone/backbone.py	/^__all__ = ["Backbone"]$/;"	v
__all__	detectron2/modeling/backbone/fpn.py	/^__all__ = ["build_resnet_fpn_backbone", "build_retinanet_resnet_fpn_backbone", "FPN"]$/;"	v
__all__	detectron2/modeling/backbone/mvit.py	/^__all__ = ["MViT"]$/;"	v
__all__	detectron2/modeling/backbone/regnet.py	/^__all__ = [$/;"	v
__all__	detectron2/modeling/backbone/resnet.py	/^__all__ = [$/;"	v
__all__	detectron2/modeling/backbone/utils.py	/^__all__ = [$/;"	v
__all__	detectron2/modeling/backbone/vit.py	/^__all__ = ["ViT", "SimpleFeaturePyramid", "get_vit_lr_decay_rate"]$/;"	v
__all__	detectron2/modeling/box_regression.py	/^__all__ = ["Box2BoxTransform", "Box2BoxTransformRotated", "Box2BoxTransformLinear"]$/;"	v
__all__	detectron2/modeling/meta_arch/__init__.py	/^__all__ = list(globals().keys())$/;"	v
__all__	detectron2/modeling/meta_arch/fcos.py	/^__all__ = ["FCOS"]$/;"	v
__all__	detectron2/modeling/meta_arch/panoptic_fpn.py	/^__all__ = ["PanopticFPN"]$/;"	v
__all__	detectron2/modeling/meta_arch/rcnn.py	/^__all__ = ["GeneralizedRCNN", "ProposalNetwork"]$/;"	v
__all__	detectron2/modeling/meta_arch/retinanet.py	/^__all__ = ["RetinaNet"]$/;"	v
__all__	detectron2/modeling/meta_arch/semantic_seg.py	/^__all__ = [$/;"	v
__all__	detectron2/modeling/poolers.py	/^__all__ = ["ROIPooler"]$/;"	v
__all__	detectron2/modeling/proposal_generator/__init__.py	/^__all__ = list(globals().keys())$/;"	v
__all__	detectron2/modeling/roi_heads/__init__.py	/^__all__ = list(globals().keys())$/;"	v
__all__	detectron2/modeling/roi_heads/box_head.py	/^__all__ = ["FastRCNNConvFCHead", "build_box_head", "ROI_BOX_HEAD_REGISTRY"]$/;"	v
__all__	detectron2/modeling/roi_heads/fast_rcnn.py	/^__all__ = ["fast_rcnn_inference", "FastRCNNOutputLayers"]$/;"	v
__all__	detectron2/modeling/roi_heads/keypoint_head.py	/^__all__ = [$/;"	v
__all__	detectron2/modeling/roi_heads/mask_head.py	/^__all__ = [$/;"	v
__all__	detectron2/modeling/sampling.py	/^__all__ = ["subsample_labels"]$/;"	v
__all__	detectron2/modeling/test_time_augmentation.py	/^__all__ = ["DatasetMapperTTA", "GeneralizedRCNNWithTTA"]$/;"	v
__all__	detectron2/projects/__init__.py	/^__all__ = []$/;"	v
__all__	detectron2/solver/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/structures/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/tracking/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	detectron2/utils/analysis.py	/^__all__ = [$/;"	v
__all__	detectron2/utils/collect_env.py	/^__all__ = ["collect_env_info"]$/;"	v
__all__	detectron2/utils/colormap.py	/^__all__ = ["colormap", "random_color", "random_colors"]$/;"	v
__all__	detectron2/utils/env.py	/^__all__ = ["seed_all_rng"]$/;"	v
__all__	detectron2/utils/events.py	/^__all__ = [$/;"	v
__all__	detectron2/utils/file_io.py	/^__all__ = ["PathManager", "PathHandler"]$/;"	v
__all__	detectron2/utils/logger.py	/^__all__ = ["setup_logger", "log_first_n", "log_every_n", "log_every_n_seconds"]$/;"	v
__all__	detectron2/utils/memory.py	/^__all__ = ["retry_if_cuda_oom"]$/;"	v
__all__	detectron2/utils/registry.py	/^__all__ = ["Registry", "locate"]$/;"	v
__all__	detectron2/utils/visualizer.py	/^__all__ = ["ColorMode", "VisImage", "Visualizer"]$/;"	v
__all__	projects/DensePose/densepose/data/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	projects/DensePose/densepose/data/build.py	/^__all__ = ["build_detection_train_loader", "build_detection_test_loader"]$/;"	v
__all__	projects/DensePose/densepose/data/datasets/__init__.py	/^__all__ = [k for k in globals().keys() if "builtin" not in k and not k.startswith("_")]$/;"	v
__all__	projects/DensePose/densepose/data/meshes/__init__.py	/^__all__ = [k for k in globals().keys() if "builtin" not in k and not k.startswith("_")]$/;"	v
__all__	projects/DensePose/densepose/modeling/hrnet.py	/^__all__ = ["build_pose_hrnet_backbone", "PoseHigherResolutionNet"]$/;"	v
__all__	projects/DensePose/densepose/modeling/losses/__init__.py	/^__all__ = [$/;"	v
__all__	projects/Panoptic-DeepLab/panoptic_deeplab/dataset_mapper.py	/^__all__ = ["PanopticDeeplabDatasetMapper"]$/;"	v
__all__	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^__all__ = ["PanopticDeepLab", "INS_EMBED_BRANCHES_REGISTRY", "build_ins_embed_branch"]$/;"	v
__all__	projects/PointSup/point_sup/dataset_mapper.py	/^__all__ = [$/;"	v
__all__	projects/PointSup/point_sup/mask_head.py	/^__all__ = [$/;"	v
__all__	projects/TensorMask/tensormask/arch.py	/^__all__ = ["TensorMask"]$/;"	v
__all__	projects/TensorMask/tensormask/layers/__init__.py	/^__all__ = [k for k in globals().keys() if not k.startswith("_")]$/;"	v
__all__	projects/TridentNet/tridentnet/trident_backbone.py	/^__all__ = ["TridentBottleneckBlock", "make_trident_stage", "build_trident_resnet_backbone"]$/;"	v
__author__	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^__author__ = "tsungyi"$/;"	v
__call__	demo/predictor.py	/^    def __call__(self, image):$/;"	m	class:AsyncPredictor	file:
__call__	detectron2/config/lazy.py	/^    def __call__(self, **kwargs):$/;"	m	class:LazyCall	file:
__call__	detectron2/data/dataset_mapper.py	/^    def __call__(self, dataset_dict):$/;"	m	class:DatasetMapper	file:
__call__	detectron2/data/transforms/augmentation.py	/^    def __call__(self, aug_input) -> Transform:$/;"	m	class:Augmentation	file:
__call__	detectron2/data/transforms/augmentation.py	/^    def __call__(self, aug_input) -> TransformList:$/;"	m	class:AugmentationList	file:
__call__	detectron2/data/transforms/augmentation_impl.py	/^    def __call__(self, aug_input):$/;"	m	class:RandomApply	file:
__call__	detectron2/engine/defaults.py	/^    def __call__(self, original_image):$/;"	m	class:DefaultPredictor	file:
__call__	detectron2/export/api.py	/^    def __call__(self, inputs):$/;"	m	class:Caffe2Model	file:
__call__	detectron2/export/c10.py	/^    def __call__(self, box_predictor, predictions, proposals):$/;"	m	class:Caffe2FastRCNNOutputsInference	file:
__call__	detectron2/export/c10.py	/^    def __call__(self, pred_keypoint_logits, pred_instances):$/;"	m	class:Caffe2KeypointRCNNInference	file:
__call__	detectron2/export/c10.py	/^    def __call__(self, pred_mask_logits, pred_instances):$/;"	m	class:Caffe2MaskRCNNInference	file:
__call__	detectron2/export/flatten.py	/^    def __call__(self, values):$/;"	m	class:DictSchema	file:
__call__	detectron2/export/flatten.py	/^    def __call__(self, values):$/;"	m	class:IdentitySchema	file:
__call__	detectron2/export/flatten.py	/^    def __call__(self, values):$/;"	m	class:InstancesSchema	file:
__call__	detectron2/export/flatten.py	/^    def __call__(self, values):$/;"	m	class:ListSchema	file:
__call__	detectron2/export/flatten.py	/^    def __call__(self, values):$/;"	m	class:Schema	file:
__call__	detectron2/export/flatten.py	/^    def __call__(self, values):$/;"	m	class:TensorWrapSchema	file:
__call__	detectron2/export/flatten.py	/^    def __call__(self, values):$/;"	m	class:TupleSchema	file:
__call__	detectron2/modeling/matcher.py	/^    def __call__(self, match_quality_matrix):$/;"	m	class:Matcher	file:
__call__	detectron2/modeling/test_time_augmentation.py	/^    def __call__(self, batched_inputs):$/;"	m	class:GeneralizedRCNNWithTTA	file:
__call__	detectron2/modeling/test_time_augmentation.py	/^    def __call__(self, dataset_dict):$/;"	m	class:DatasetMapperTTA	file:
__call__	detectron2/utils/serialize.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:PicklableWrapper	file:
__call__	projects/DensePose/densepose/data/dataset_mapper.py	/^    def __call__(self, dataset_dict):$/;"	m	class:DatasetMapper	file:
__call__	projects/DensePose/densepose/data/inference_based_loader.py	/^    def __call__(self, model_output: ModelOutput) -> ModelOutput:$/;"	m	class:ScoreBasedFilter	file:
__call__	projects/DensePose/densepose/data/samplers/densepose_base.py	/^    def __call__(self, instances: Instances) -> DensePoseList:$/;"	m	class:DensePoseBaseSampler	file:
__call__	projects/DensePose/densepose/data/samplers/mask_from_densepose.py	/^    def __call__(self, instances: Instances) -> BitMasks:$/;"	m	class:MaskFromDensePoseSampler	file:
__call__	projects/DensePose/densepose/data/samplers/prediction_to_gt.py	/^    def __call__(self, model_output: List[ModelOutput]) -> List[SampledData]:$/;"	m	class:PredictionToGroundTruthSampler	file:
__call__	projects/DensePose/densepose/data/transform/image.py	/^    def __call__(self, images: torch.Tensor) -> torch.Tensor:$/;"	m	class:ImageResizeTransform	file:
__call__	projects/DensePose/densepose/data/video/frame_selector.py	/^    def __call__(self, frame_tss: FrameTsList) -> FrameTsList:$/;"	m	class:FirstKFramesSelector	file:
__call__	projects/DensePose/densepose/data/video/frame_selector.py	/^    def __call__(self, frame_tss: FrameTsList) -> FrameTsList:$/;"	m	class:LastKFramesSelector	file:
__call__	projects/DensePose/densepose/data/video/frame_selector.py	/^    def __call__(self, frame_tss: FrameTsList) -> FrameTsList:$/;"	m	class:RandomKFramesSelector	file:
__call__	projects/DensePose/densepose/modeling/filter.py	/^    def __call__(self, features: List[torch.Tensor], proposals_with_targets: List[Instances]):$/;"	m	class:DensePoseDataFilter	file:
__call__	projects/DensePose/densepose/modeling/losses/chart.py	/^    def __call__($/;"	m	class:DensePoseChartLoss	file:
__call__	projects/DensePose/densepose/modeling/losses/cse.py	/^    def __call__($/;"	m	class:DensePoseCseLoss	file:
__call__	projects/DensePose/densepose/modeling/losses/embed.py	/^    def __call__($/;"	m	class:EmbeddingLoss	file:
__call__	projects/DensePose/densepose/modeling/losses/mask.py	/^    def __call__($/;"	m	class:MaskLoss	file:
__call__	projects/DensePose/densepose/modeling/losses/mask_or_segm.py	/^    def __call__($/;"	m	class:MaskOrSegmentationLoss	file:
__call__	projects/DensePose/densepose/modeling/losses/segm.py	/^    def __call__($/;"	m	class:SegmentationLoss	file:
__call__	projects/DensePose/densepose/modeling/losses/soft_embed.py	/^    def __call__($/;"	m	class:SoftEmbeddingLoss	file:
__call__	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^    def __call__(self, dataset_dict):$/;"	m	class:DensePoseDatasetMapperTTA	file:
__call__	projects/DensePose/densepose/utils/dbhelper.py	/^        def __call__(self, entry):$/;"	m	class:FieldEntrySelector._FieldEntryRangePredicate	file:
__call__	projects/DensePose/densepose/utils/dbhelper.py	/^        def __call__(self, entry):$/;"	m	class:FieldEntrySelector._FieldEntryValuePredicate	file:
__call__	projects/DensePose/densepose/utils/dbhelper.py	/^    def __call__(self, entry):$/;"	m	class:AllEntrySelector	file:
__call__	projects/DensePose/densepose/utils/dbhelper.py	/^    def __call__(self, entry: Dict[str, Any]):$/;"	m	class:FieldEntrySelector	file:
__call__	projects/DensePose/densepose/vis/extractor.py	/^    def __call__($/;"	m	class:DensePoseOutputsExtractor	file:
__call__	projects/DensePose/densepose/vis/extractor.py	/^    def __call__($/;"	m	class:DensePoseResultExtractor	file:
__call__	projects/DensePose/densepose/vis/extractor.py	/^    def __call__(self, instances: Instances):$/;"	m	class:BoundingBoxExtractor	file:
__call__	projects/DensePose/densepose/vis/extractor.py	/^    def __call__(self, instances: Instances, select=None):$/;"	m	class:CompoundExtractor	file:
__call__	projects/DensePose/densepose/vis/extractor.py	/^    def __call__(self, instances: Instances, select=None):$/;"	m	class:NmsFilteredExtractor	file:
__call__	projects/DensePose/densepose/vis/extractor.py	/^    def __call__(self, instances: Instances, select=None):$/;"	m	class:ScoreThresholdedExtractor	file:
__call__	projects/DensePose/densepose/vis/extractor.py	/^    def __call__(self, instances: Instances, select=None):$/;"	m	class:ScoredBoundingBoxExtractor	file:
__call__	projects/Panoptic-DeepLab/panoptic_deeplab/dataset_mapper.py	/^    def __call__(self, dataset_dict):$/;"	m	class:PanopticDeeplabDatasetMapper	file:
__call__	projects/Panoptic-DeepLab/panoptic_deeplab/target_generator.py	/^    def __call__(self, panoptic, segments_info):$/;"	m	class:PanopticDeepLabTargetGenerator	file:
__call__	projects/PointSup/point_sup/dataset_mapper.py	/^    def __call__(self, dataset_dict):$/;"	m	class:PointSupDatasetMapper	file:
__call__	tests/config/test_instantiate_config.py	/^    def __call__(self, call_arg):$/;"	m	class:TestClass	file:
__enter__	detectron2/export/shared.py	/^    def __enter__(self):$/;"	m	class:ScopedWS	file:
__enter__	detectron2/utils/events.py	/^    def __enter__(self):$/;"	m	class:EventStorage	file:
__exit__	detectron2/export/shared.py	/^    def __exit__(self, *args):$/;"	m	class:ScopedWS	file:
__exit__	detectron2/utils/events.py	/^    def __exit__(self, exc_type, exc_val, exc_tb):$/;"	m	class:EventStorage	file:
__getattr__	detectron2/data/catalog.py	/^    def __getattr__(self, key):$/;"	m	class:Metadata	file:
__getattr__	detectron2/export/c10.py	/^    def __getattr__(self, name):$/;"	m	class:InstancesList	file:
__getattr__	detectron2/structures/instances.py	/^    def __getattr__(self, name: str) -> Any:$/;"	m	class:Instances	file:
__getattr__	detectron2/utils/develop.py	/^        def __getattr__(_, __):  # noqa: B902$/;"	m	class:create_dummy_class._DummyMetaClass	file:
__getattr__	detectron2/utils/serialize.py	/^    def __getattr__(self, attr):$/;"	m	class:PicklableWrapper	file:
__getitem__	detectron2/data/benchmark.py	/^    def __getitem__(self, idx):$/;"	m	class:_EmptyMapDataset	file:
__getitem__	detectron2/data/common.py	/^    def __getitem__(self, idx):$/;"	m	class:DatasetFromList	file:
__getitem__	detectron2/data/common.py	/^    def __getitem__(self, idx):$/;"	m	class:MapDataset	file:
__getitem__	detectron2/data/common.py	/^    def __getitem__(self, idx):$/;"	m	class:_TorchSerializedList	file:
__getitem__	detectron2/structures/boxes.py	/^    def __getitem__(self, item) -> "Boxes":$/;"	m	class:Boxes	file:
__getitem__	detectron2/structures/image_list.py	/^    def __getitem__(self, idx) -> torch.Tensor:$/;"	m	class:ImageList	file:
__getitem__	detectron2/structures/instances.py	/^    def __getitem__(self, item: Union[int, slice, torch.BoolTensor]) -> "Instances":$/;"	m	class:Instances	file:
__getitem__	detectron2/structures/keypoints.py	/^    def __getitem__(self, item: Union[int, slice, torch.BoolTensor]) -> "Keypoints":$/;"	m	class:Keypoints	file:
__getitem__	detectron2/structures/masks.py	/^    def __getitem__(self, item) -> "ROIMasks":$/;"	m	class:ROIMasks	file:
__getitem__	detectron2/structures/masks.py	/^    def __getitem__(self, item: Union[int, slice, List[int], torch.BoolTensor]) -> "PolygonMasks":$/;"	m	class:PolygonMasks	file:
__getitem__	detectron2/structures/masks.py	/^    def __getitem__(self, item: Union[int, slice, torch.BoolTensor]) -> "BitMasks":$/;"	m	class:BitMasks	file:
__getitem__	detectron2/structures/rotated_boxes.py	/^    def __getitem__(self, item) -> "RotatedBoxes":$/;"	m	class:RotatedBoxes	file:
__getitem__	projects/DensePose/densepose/data/image_list_dataset.py	/^    def __getitem__(self, idx: int) -> Dict[str, Any]:$/;"	m	class:ImageListDataset	file:
__getitem__	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^    def __getitem__(self, idx: int) -> Dict[str, Any]:$/;"	m	class:VideoKeyframeDataset	file:
__getitem__	projects/DensePose/densepose/structures/chart.py	/^    def __getitem__($/;"	m	class:DensePoseChartPredictorOutput	file:
__getitem__	projects/DensePose/densepose/structures/cse.py	/^    def __getitem__($/;"	m	class:DensePoseEmbeddingPredictorOutput	file:
__getitem__	projects/DensePose/densepose/structures/list.py	/^    def __getitem__(self, item):$/;"	m	class:DensePoseList	file:
__getnewargs__	detectron2/data/common.py	/^    def __getnewargs__(self):$/;"	m	class:MapDataset	file:
__init__	configs/Misc/torchvision_imagenet_R_50.py	/^    def __init__(self, model: nn.Module):$/;"	m	class:ClassificationNet
__init__	demo/predictor.py	/^        def __init__(self, cfg, task_queue, result_queue):$/;"	m	class:AsyncPredictor._PredictWorker
__init__	demo/predictor.py	/^    def __init__(self, cfg, instance_mode=ColorMode.IMAGE, parallel=False):$/;"	m	class:VisualizationDemo
__init__	demo/predictor.py	/^    def __init__(self, cfg, num_gpus: int = 1):$/;"	m	class:AsyncPredictor
__init__	detectron2/checkpoint/detection_checkpoint.py	/^    def __init__(self, model, save_dir="", *, save_to_disk=None, **checkpointables):$/;"	m	class:DetectionCheckpointer
__init__	detectron2/config/lazy.py	/^    def __init__(self, target):$/;"	m	class:LazyCall
__init__	detectron2/data/benchmark.py	/^    def __init__($/;"	m	class:DataLoaderBenchmark
__init__	detectron2/data/benchmark.py	/^    def __init__(self, dataset):$/;"	m	class:_EmptyMapDataset
__init__	detectron2/data/common.py	/^    def __init__($/;"	m	class:DatasetFromList
__init__	detectron2/data/common.py	/^    def __init__($/;"	m	class:ToIterableDataset
__init__	detectron2/data/common.py	/^    def __init__(self, dataset, batch_size):$/;"	m	class:AspectRatioGroupedDataset
__init__	detectron2/data/common.py	/^    def __init__(self, dataset, map_func):$/;"	m	class:MapDataset
__init__	detectron2/data/common.py	/^    def __init__(self, dataset, map_func):$/;"	m	class:_MapIterableDataset
__init__	detectron2/data/common.py	/^    def __init__(self, lst: list):$/;"	m	class:_TorchSerializedList
__init__	detectron2/data/dataset_mapper.py	/^    def __init__($/;"	m	class:DatasetMapper
__init__	detectron2/data/samplers/distributed_sampler.py	/^    def __init__($/;"	m	class:RandomSubsetTrainingSampler
__init__	detectron2/data/samplers/distributed_sampler.py	/^    def __init__(self, repeat_factors, *, shuffle=True, seed=None):$/;"	m	class:RepeatFactorTrainingSampler
__init__	detectron2/data/samplers/distributed_sampler.py	/^    def __init__(self, size: int):$/;"	m	class:InferenceSampler
__init__	detectron2/data/samplers/distributed_sampler.py	/^    def __init__(self, size: int, shuffle: bool = True, seed: Optional[int] = None):$/;"	m	class:TrainingSampler
__init__	detectron2/data/samplers/grouped_batch_sampler.py	/^    def __init__(self, sampler, group_ids, batch_size):$/;"	m	class:GroupedBatchSampler
__init__	detectron2/data/transforms/augmentation.py	/^    def __init__($/;"	m	class:AugInput
__init__	detectron2/data/transforms/augmentation.py	/^    def __init__(self, augs):$/;"	m	class:AugmentationList
__init__	detectron2/data/transforms/augmentation.py	/^    def __init__(self, tfm: Transform):$/;"	m	class:_TransformToAug
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__($/;"	m	class:FixedSizeCrop
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__($/;"	m	class:MinIoURandomCrop
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__($/;"	m	class:RandomCrop_CategoryAreaConstraint
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__($/;"	m	class:ResizeScale
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__($/;"	m	class:ResizeShortestEdge
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, angle, expand=True, center=None, sample_style="range", interp=None):$/;"	m	class:RandomRotation
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, aug):$/;"	m	class:Albumentations
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, crop_type: str, crop_size):$/;"	m	class:RandomCrop
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, intensity_min, intensity_max):$/;"	m	class:RandomBrightness
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, intensity_min, intensity_max):$/;"	m	class:RandomContrast
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, intensity_min, intensity_max):$/;"	m	class:RandomSaturation
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, prob=0.5, *, horizontal=True, vertical=False):$/;"	m	class:RandomFlip
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, scale):$/;"	m	class:RandomLighting
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, scale_range, shift_range):$/;"	m	class:RandomExtent
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, shape, interp=Image.BILINEAR):$/;"	m	class:Resize
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, shape_list, interp=Image.BILINEAR):$/;"	m	class:RandomResize
__init__	detectron2/data/transforms/augmentation_impl.py	/^    def __init__(self, tfm_or_aug, prob=0.5):$/;"	m	class:RandomApply
__init__	detectron2/data/transforms/transform.py	/^    def __init__(self, aug, params, img_height, img_width):$/;"	m	class:AlbumentationsTransform
__init__	detectron2/data/transforms/transform.py	/^    def __init__(self, h, w, angle, expand=True, center=None, interp=None):$/;"	m	class:RotationTransform
__init__	detectron2/data/transforms/transform.py	/^    def __init__(self, h, w, new_h, new_w, interp=None):$/;"	m	class:ResizeTransform
__init__	detectron2/data/transforms/transform.py	/^    def __init__(self, op):$/;"	m	class:ColorTransform
__init__	detectron2/data/transforms/transform.py	/^    def __init__(self, op):$/;"	m	class:PILColorTransform
__init__	detectron2/data/transforms/transform.py	/^    def __init__(self, src_rect, output_size, interp=Image.BILINEAR, fill=0):$/;"	m	class:ExtentTransform
__init__	detectron2/engine/defaults.py	/^    def __init__(self, cfg):$/;"	m	class:DefaultPredictor
__init__	detectron2/engine/defaults.py	/^    def __init__(self, cfg):$/;"	m	class:DefaultTrainer
__init__	detectron2/engine/hooks.py	/^    def __init__($/;"	m	class:BestCheckpointer
__init__	detectron2/engine/hooks.py	/^    def __init__(self, *, before_train=None, after_train=None, before_step=None, after_step=None):$/;"	m	class:CallbackHook
__init__	detectron2/engine/hooks.py	/^    def __init__(self, enable_predicate, output_dir, *, activities=None, save_tensorboard=True):$/;"	m	class:TorchProfiler
__init__	detectron2/engine/hooks.py	/^    def __init__(self, enable_predicate, output_dir, *, use_cuda=True):$/;"	m	class:AutogradProfiler
__init__	detectron2/engine/hooks.py	/^    def __init__(self, eval_period, eval_function, eval_after_train=True):$/;"	m	class:EvalHook
__init__	detectron2/engine/hooks.py	/^    def __init__(self, optimizer=None, scheduler=None):$/;"	m	class:LRScheduler
__init__	detectron2/engine/hooks.py	/^    def __init__(self, period, model, data_loader, num_iter):$/;"	m	class:PreciseBN
__init__	detectron2/engine/hooks.py	/^    def __init__(self, period=20, max_runs=10):$/;"	m	class:TorchMemoryStats
__init__	detectron2/engine/hooks.py	/^    def __init__(self, warmup_iter=3):$/;"	m	class:IterationTimer
__init__	detectron2/engine/hooks.py	/^    def __init__(self, writers, period=20):$/;"	m	class:PeriodicWriter
__init__	detectron2/engine/train_loop.py	/^    def __init__($/;"	m	class:AMPTrainer
__init__	detectron2/engine/train_loop.py	/^    def __init__($/;"	m	class:SimpleTrainer
__init__	detectron2/engine/train_loop.py	/^    def __init__(self) -> None:$/;"	m	class:TrainerBase
__init__	detectron2/evaluation/cityscapes_evaluation.py	/^    def __init__(self, dataset_name):$/;"	m	class:CityscapesEvaluator
__init__	detectron2/evaluation/coco_evaluation.py	/^    def __init__($/;"	m	class:COCOEvaluator
__init__	detectron2/evaluation/evaluator.py	/^    def __init__(self, evaluators):$/;"	m	class:DatasetEvaluators
__init__	detectron2/evaluation/lvis_evaluation.py	/^    def __init__($/;"	m	class:LVISEvaluator
__init__	detectron2/evaluation/panoptic_evaluation.py	/^    def __init__(self, dataset_name: str, output_dir: Optional[str] = None):$/;"	m	class:COCOPanopticEvaluator
__init__	detectron2/evaluation/pascal_voc_evaluation.py	/^    def __init__(self, dataset_name):$/;"	m	class:PascalVOCDetectionEvaluator
__init__	detectron2/evaluation/sem_seg_evaluation.py	/^    def __init__($/;"	m	class:SemSegEvaluator
__init__	detectron2/export/api.py	/^    def __init__(self, cfg: CfgNode, model: nn.Module, inputs):$/;"	m	class:Caffe2Tracer
__init__	detectron2/export/api.py	/^    def __init__(self, predict_net, init_net):$/;"	m	class:Caffe2Model
__init__	detectron2/export/c10.py	/^    def __init__(self, im_info, indices, extra_fields=None):$/;"	m	class:InstancesList
__init__	detectron2/export/c10.py	/^    def __init__(self, tensor):$/;"	m	class:Caffe2Boxes
__init__	detectron2/export/c10.py	/^    def __init__(self, tensor_mode):$/;"	m	class:Caffe2FastRCNNOutputsInference
__init__	detectron2/export/c10.py	/^    def __init__(self, use_heatmap_max_keypoint):$/;"	m	class:Caffe2KeypointRCNNInference
__init__	detectron2/export/caffe2_inference.py	/^    def __init__(self, predict_net, init_net):$/;"	m	class:ProtobufModel
__init__	detectron2/export/caffe2_inference.py	/^    def __init__(self, predict_net, init_net, *, convert_outputs=None):$/;"	m	class:ProtobufDetectionModel
__init__	detectron2/export/caffe2_modeling.py	/^    def __init__(self, cfg, torch_model):$/;"	m	class:Caffe2RetinaNet
__init__	detectron2/export/caffe2_modeling.py	/^    def __init__(self, cfg, torch_model, enable_tensor_mode=True):$/;"	m	class:Caffe2GeneralizedRCNN
__init__	detectron2/export/caffe2_modeling.py	/^    def __init__(self, cfg, torch_model, enable_tensor_mode=True):$/;"	m	class:Caffe2MetaArch
__init__	detectron2/export/caffe2_patch.py	/^    def __init__(self, heads, use_heatmap_max_keypoint):$/;"	m	class:ROIHeadsPatcher
__init__	detectron2/export/caffe2_patch.py	/^    def __init__(self, replaceCls):$/;"	m	class:Caffe2CompatibleConverter
__init__	detectron2/export/flatten.py	/^    def __init__($/;"	m	class:TracingAdapter
__init__	detectron2/export/shared.py	/^    def __init__(self):$/;"	m	class:DiGraph
__init__	detectron2/export/shared.py	/^    def __init__(self, ws_name, is_reset, is_cleanup=False):$/;"	m	class:ScopedWS
__init__	detectron2/export/torchscript_patch.py	/^        def __init__(self, name, type_):$/;"	m	class:_gen_instance_class._FieldType
__init__	detectron2/layers/aspp.py	/^    def __init__($/;"	m	class:ASPP
__init__	detectron2/layers/batch_norm.py	/^    def __init__(self, *args, stats_mode="", **kwargs):$/;"	m	class:NaiveSyncBatchNorm
__init__	detectron2/layers/batch_norm.py	/^    def __init__(self, length: int, bn_class=nn.BatchNorm2d, **kwargs):$/;"	m	class:CycleBatchNormList
__init__	detectron2/layers/batch_norm.py	/^    def __init__(self, normalized_shape, eps=1e-6):$/;"	m	class:LayerNorm
__init__	detectron2/layers/batch_norm.py	/^    def __init__(self, num_features, eps=1e-5):$/;"	m	class:FrozenBatchNorm2d
__init__	detectron2/layers/blocks.py	/^    def __init__($/;"	m	class:DepthwiseSeparableConv2d
__init__	detectron2/layers/blocks.py	/^    def __init__(self, in_channels, out_channels, stride):$/;"	m	class:CNNBlockBase
__init__	detectron2/layers/deform_conv.py	/^    def __init__($/;"	m	class:DeformConv
__init__	detectron2/layers/deform_conv.py	/^    def __init__($/;"	m	class:ModulatedDeformConv
__init__	detectron2/layers/roi_align.py	/^    def __init__(self, output_size, spatial_scale, sampling_ratio, aligned=True):$/;"	m	class:ROIAlign
__init__	detectron2/layers/roi_align_rotated.py	/^    def __init__(self, output_size, spatial_scale, sampling_ratio):$/;"	m	class:ROIAlignRotated
__init__	detectron2/layers/wrappers.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Conv2d
__init__	detectron2/modeling/anchor_generator.py	/^    def __init__(self, *, sizes, aspect_ratios, strides, angles, offset=0.5):$/;"	m	class:RotatedAnchorGenerator
__init__	detectron2/modeling/anchor_generator.py	/^    def __init__(self, *, sizes, aspect_ratios, strides, offset=0.5):$/;"	m	class:DefaultAnchorGenerator
__init__	detectron2/modeling/anchor_generator.py	/^    def __init__(self, buffers):$/;"	m	class:BufferList
__init__	detectron2/modeling/backbone/backbone.py	/^    def __init__(self):$/;"	m	class:Backbone
__init__	detectron2/modeling/backbone/fpn.py	/^    def __init__($/;"	m	class:FPN
__init__	detectron2/modeling/backbone/fpn.py	/^    def __init__(self):$/;"	m	class:LastLevelMaxPool
__init__	detectron2/modeling/backbone/fpn.py	/^    def __init__(self, in_channels, out_channels, in_feature="res5"):$/;"	m	class:LastLevelP6P7
__init__	detectron2/modeling/backbone/mvit.py	/^    def __init__($/;"	m	class:MViT
__init__	detectron2/modeling/backbone/mvit.py	/^    def __init__($/;"	m	class:MultiScaleAttention
__init__	detectron2/modeling/backbone/mvit.py	/^    def __init__($/;"	m	class:MultiScaleBlock
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__($/;"	m	class:AnyNet
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__($/;"	m	class:RegNet
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__(self, w_in, w_out, norm, activation_class):$/;"	m	class:ResStem
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__(self, w_in, w_out, norm, activation_class):$/;"	m	class:SimpleStem
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__(self, w_in, w_out, stride, d, block_class, norm, activation_class, params):$/;"	m	class:AnyStage
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__(self, w_in, w_out, stride, norm, activation_class, _params):$/;"	m	class:BasicTransform
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__(self, w_in, w_out, stride, norm, activation_class, _params):$/;"	m	class:VanillaBlock
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__(self, w_in, w_out, stride, norm, activation_class, params):$/;"	m	class:BottleneckTransform
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__(self, w_in, w_out, stride, norm, activation_class, params):$/;"	m	class:ResBasicBlock
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__(self, w_in, w_out, stride, norm, activation_class, params):$/;"	m	class:ResBottleneckBlock
__init__	detectron2/modeling/backbone/regnet.py	/^    def __init__(self, w_in, w_se, activation_class):$/;"	m	class:SE
__init__	detectron2/modeling/backbone/resnet.py	/^    def __init__($/;"	m	class:BottleneckBlock
__init__	detectron2/modeling/backbone/resnet.py	/^    def __init__($/;"	m	class:DeformBottleneckBlock
__init__	detectron2/modeling/backbone/resnet.py	/^    def __init__(self, in_channels, out_channels, *, stride=1, norm="BN"):$/;"	m	class:BasicBlock
__init__	detectron2/modeling/backbone/resnet.py	/^    def __init__(self, in_channels=3, out_channels=64, norm="BN"):$/;"	m	class:BasicStem
__init__	detectron2/modeling/backbone/resnet.py	/^    def __init__(self, stem, stages, num_classes=None, out_features=None, freeze_at=0):$/;"	m	class:ResNet
__init__	detectron2/modeling/backbone/swin.py	/^    def __init__($/;"	m	class:BasicLayer
__init__	detectron2/modeling/backbone/swin.py	/^    def __init__($/;"	m	class:Mlp
__init__	detectron2/modeling/backbone/swin.py	/^    def __init__($/;"	m	class:SwinTransformer
__init__	detectron2/modeling/backbone/swin.py	/^    def __init__($/;"	m	class:SwinTransformerBlock
__init__	detectron2/modeling/backbone/swin.py	/^    def __init__($/;"	m	class:WindowAttention
__init__	detectron2/modeling/backbone/swin.py	/^    def __init__(self, dim, norm_layer=nn.LayerNorm):$/;"	m	class:PatchMerging
__init__	detectron2/modeling/backbone/swin.py	/^    def __init__(self, patch_size=4, in_chans=3, embed_dim=96, norm_layer=None):$/;"	m	class:PatchEmbed
__init__	detectron2/modeling/backbone/utils.py	/^    def __init__($/;"	m	class:PatchEmbed
__init__	detectron2/modeling/backbone/vit.py	/^    def __init__($/;"	m	class:Attention
__init__	detectron2/modeling/backbone/vit.py	/^    def __init__($/;"	m	class:Block
__init__	detectron2/modeling/backbone/vit.py	/^    def __init__($/;"	m	class:ResBottleneckBlock
__init__	detectron2/modeling/backbone/vit.py	/^    def __init__($/;"	m	class:SimpleFeaturePyramid
__init__	detectron2/modeling/backbone/vit.py	/^    def __init__($/;"	m	class:ViT
__init__	detectron2/modeling/box_regression.py	/^    def __init__($/;"	m	class:Box2BoxTransform
__init__	detectron2/modeling/box_regression.py	/^    def __init__($/;"	m	class:Box2BoxTransformRotated
__init__	detectron2/modeling/box_regression.py	/^    def __init__(self, normalize_by_size=True):$/;"	m	class:Box2BoxTransformLinear
__init__	detectron2/modeling/matcher.py	/^    def __init__($/;"	m	class:Matcher
__init__	detectron2/modeling/meta_arch/dense_detector.py	/^    def __init__($/;"	m	class:DenseDetector
__init__	detectron2/modeling/meta_arch/fcos.py	/^    def __init__($/;"	m	class:FCOS
__init__	detectron2/modeling/meta_arch/fcos.py	/^    def __init__(self, *, input_shape: List[ShapeSpec], conv_dims: List[int], **kwargs):$/;"	m	class:FCOSHead
__init__	detectron2/modeling/meta_arch/panoptic_fpn.py	/^    def __init__($/;"	m	class:PanopticFPN
__init__	detectron2/modeling/meta_arch/rcnn.py	/^    def __init__($/;"	m	class:GeneralizedRCNN
__init__	detectron2/modeling/meta_arch/rcnn.py	/^    def __init__($/;"	m	class:ProposalNetwork
__init__	detectron2/modeling/meta_arch/retinanet.py	/^    def __init__($/;"	m	class:RetinaNet
__init__	detectron2/modeling/meta_arch/retinanet.py	/^    def __init__($/;"	m	class:RetinaNetHead
__init__	detectron2/modeling/meta_arch/semantic_seg.py	/^    def __init__($/;"	m	class:SemSegFPNHead
__init__	detectron2/modeling/meta_arch/semantic_seg.py	/^    def __init__($/;"	m	class:SemanticSegmentor
__init__	detectron2/modeling/mmdet_wrapper.py	/^    def __init__($/;"	m	class:MMDetBackbone
__init__	detectron2/modeling/mmdet_wrapper.py	/^    def __init__($/;"	m	class:MMDetDetector
__init__	detectron2/modeling/poolers.py	/^    def __init__($/;"	m	class:ROIPooler
__init__	detectron2/modeling/proposal_generator/rpn.py	/^    def __init__($/;"	m	class:RPN
__init__	detectron2/modeling/proposal_generator/rpn.py	/^    def __init__($/;"	m	class:StandardRPNHead
__init__	detectron2/modeling/proposal_generator/rrpn.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:RRPN
__init__	detectron2/modeling/roi_heads/box_head.py	/^    def __init__($/;"	m	class:FastRCNNConvFCHead
__init__	detectron2/modeling/roi_heads/cascade_rcnn.py	/^    def __init__($/;"	m	class:CascadeROIHeads
__init__	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def __init__($/;"	m	class:FastRCNNOutputLayers
__init__	detectron2/modeling/roi_heads/keypoint_head.py	/^    def __init__(self, *, num_keypoints, loss_weight=1.0, loss_normalizer=1.0):$/;"	m	class:BaseKeypointRCNNHead
__init__	detectron2/modeling/roi_heads/keypoint_head.py	/^    def __init__(self, input_shape, *, num_keypoints, conv_dims, **kwargs):$/;"	m	class:KRCNNConvDeconvUpsampleHead
__init__	detectron2/modeling/roi_heads/mask_head.py	/^    def __init__(self, *, loss_weight: float = 1.0, vis_period: int = 0):$/;"	m	class:BaseMaskRCNNHead
__init__	detectron2/modeling/roi_heads/mask_head.py	/^    def __init__(self, input_shape: ShapeSpec, *, num_classes, conv_dims, conv_norm="", **kwargs):$/;"	m	class:MaskRCNNConvUpsampleHead
__init__	detectron2/modeling/roi_heads/roi_heads.py	/^    def __init__($/;"	m	class:ROIHeads
__init__	detectron2/modeling/roi_heads/roi_heads.py	/^    def __init__($/;"	m	class:Res5ROIHeads
__init__	detectron2/modeling/roi_heads/roi_heads.py	/^    def __init__($/;"	m	class:StandardROIHeads
__init__	detectron2/modeling/roi_heads/rotated_fast_rcnn.py	/^    def __init__(self, **kwargs):$/;"	m	class:RROIHeads
__init__	detectron2/modeling/test_time_augmentation.py	/^    def __init__(self, cfg, model, tta_mapper=None, batch_size=3):$/;"	m	class:GeneralizedRCNNWithTTA
__init__	detectron2/modeling/test_time_augmentation.py	/^    def __init__(self, min_sizes: List[int], max_size: int, flip: bool):$/;"	m	class:DatasetMapperTTA
__init__	detectron2/solver/lr_scheduler.py	/^    def __init__($/;"	m	class:LRMultiplier
__init__	detectron2/solver/lr_scheduler.py	/^    def __init__($/;"	m	class:WarmupCosineLR
__init__	detectron2/solver/lr_scheduler.py	/^    def __init__($/;"	m	class:WarmupMultiStepLR
__init__	detectron2/solver/lr_scheduler.py	/^    def __init__($/;"	m	class:WarmupParamScheduler
__init__	detectron2/structures/boxes.py	/^    def __init__(self, tensor: torch.Tensor):$/;"	m	class:Boxes
__init__	detectron2/structures/image_list.py	/^    def __init__(self, tensor: torch.Tensor, image_sizes: List[Tuple[int, int]]):$/;"	m	class:ImageList
__init__	detectron2/structures/instances.py	/^    def __init__(self, image_size: Tuple[int, int], **kwargs: Any):$/;"	m	class:Instances
__init__	detectron2/structures/keypoints.py	/^    def __init__(self, keypoints: Union[torch.Tensor, np.ndarray, List[List[float]]]):$/;"	m	class:Keypoints
__init__	detectron2/structures/masks.py	/^    def __init__(self, polygons: List[List[Union[torch.Tensor, np.ndarray]]]):$/;"	m	class:PolygonMasks
__init__	detectron2/structures/masks.py	/^    def __init__(self, tensor: Union[torch.Tensor, np.ndarray]):$/;"	m	class:BitMasks
__init__	detectron2/structures/masks.py	/^    def __init__(self, tensor: torch.Tensor):$/;"	m	class:ROIMasks
__init__	detectron2/structures/rotated_boxes.py	/^    def __init__(self, tensor: torch.Tensor):$/;"	m	class:RotatedBoxes
__init__	detectron2/tracking/base_tracker.py	/^    def __init__(self, **kwargs):$/;"	m	class:BaseTracker
__init__	detectron2/tracking/bbox_iou_tracker.py	/^    def __init__($/;"	m	class:BBoxIOUTracker
__init__	detectron2/tracking/hungarian_tracker.py	/^    def __init__($/;"	m	class:BaseHungarianTracker
__init__	detectron2/tracking/iou_weighted_hungarian_bbox_iou_tracker.py	/^    def __init__($/;"	m	class:IOUWeightedHungarianBBoxIOUTracker
__init__	detectron2/tracking/vanilla_hungarian_bbox_iou_tracker.py	/^    def __init__($/;"	m	class:VanillaHungarianBBoxIOUTracker
__init__	detectron2/utils/analysis.py	/^    def __init__(self, model, inputs):$/;"	m	class:FlopCountAnalysis
__init__	detectron2/utils/develop.py	/^        def __init__(self, *args, **kwargs):$/;"	m	class:create_dummy_class._Dummy
__init__	detectron2/utils/events.py	/^    def __init__(self, json_file, window_size=20):$/;"	m	class:JSONWriter
__init__	detectron2/utils/events.py	/^    def __init__(self, log_dir: str, window_size: int = 20, **kwargs):$/;"	m	class:TensorboardXWriter
__init__	detectron2/utils/events.py	/^    def __init__(self, max_iter: Optional[int] = None, window_size: int = 20):$/;"	m	class:CommonMetricPrinter
__init__	detectron2/utils/events.py	/^    def __init__(self, start_iter=0):$/;"	m	class:EventStorage
__init__	detectron2/utils/logger.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:_ColorfulFormatter
__init__	detectron2/utils/serialize.py	/^    def __init__(self, obj):$/;"	m	class:PicklableWrapper
__init__	detectron2/utils/video_visualizer.py	/^    def __init__(self, label, bbox, mask_rle, color, ttl):$/;"	m	class:_DetectedInstance
__init__	detectron2/utils/video_visualizer.py	/^    def __init__(self, metadata, instance_mode=ColorMode.IMAGE):$/;"	m	class:VideoVisualizer
__init__	detectron2/utils/visualizer.py	/^    def __init__($/;"	m	class:Visualizer
__init__	detectron2/utils/visualizer.py	/^    def __init__(self, img, scale=1.0):$/;"	m	class:VisImage
__init__	detectron2/utils/visualizer.py	/^    def __init__(self, mask_or_polygons, height, width):$/;"	m	class:GenericMask
__init__	detectron2/utils/visualizer.py	/^    def __init__(self, panoptic_seg, segments_info, metadata=None):$/;"	m	class:_PanopticPrediction
__init__	projects/DeepLab/deeplab/loss.py	/^    def __init__(self, ignore_label=-1, top_k_percent_pixels=1.0, weight=None):$/;"	m	class:DeepLabCE
__init__	projects/DeepLab/deeplab/lr_scheduler.py	/^    def __init__($/;"	m	class:WarmupPolyLR
__init__	projects/DeepLab/deeplab/resnet.py	/^    def __init__(self, in_channels=3, out_channels=128, norm="BN"):$/;"	m	class:DeepLabStem
__init__	projects/DeepLab/deeplab/semantic_seg.py	/^    def __init__($/;"	m	class:DeepLabV3PlusHead
__init__	projects/DeepLab/deeplab/semantic_seg.py	/^    def __init__(self, cfg, input_shape: Dict[str, ShapeSpec]):$/;"	m	class:DeepLabV3Head
__init__	projects/DensePose/densepose/data/combined_loader.py	/^    def __init__(self, loaders: Collection[Loader], batch_size: int, ratios: Sequence[float]):$/;"	m	class:CombinedDataLoader
__init__	projects/DensePose/densepose/data/dataset_mapper.py	/^    def __init__(self, cfg, is_train=True):$/;"	m	class:DatasetMapper
__init__	projects/DensePose/densepose/data/image_list_dataset.py	/^    def __init__($/;"	m	class:ImageListDataset
__init__	projects/DensePose/densepose/data/inference_based_loader.py	/^    def __init__($/;"	m	class:InferenceBasedLoader
__init__	projects/DensePose/densepose/data/inference_based_loader.py	/^    def __init__(self, min_score: float = 0.8):$/;"	m	class:ScoreBasedFilter
__init__	projects/DensePose/densepose/data/meshes/catalog.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:_MeshCatalog
__init__	projects/DensePose/densepose/data/samplers/densepose_base.py	/^    def __init__(self, count_per_class: int = 8):$/;"	m	class:DensePoseBaseSampler
__init__	projects/DensePose/densepose/data/samplers/densepose_confidence_based.py	/^    def __init__($/;"	m	class:DensePoseConfidenceBasedSampler
__init__	projects/DensePose/densepose/data/samplers/densepose_cse_base.py	/^    def __init__($/;"	m	class:DensePoseCSEBaseSampler
__init__	projects/DensePose/densepose/data/samplers/densepose_cse_confidence_based.py	/^    def __init__($/;"	m	class:DensePoseCSEConfidenceBasedSampler
__init__	projects/DensePose/densepose/data/samplers/densepose_uniform.py	/^    def __init__(self, count_per_class: int = 8):$/;"	m	class:DensePoseUniformSampler
__init__	projects/DensePose/densepose/data/samplers/prediction_to_gt.py	/^    def __init__(self, dataset_name: str = ""):$/;"	m	class:PredictionToGroundTruthSampler
__init__	projects/DensePose/densepose/data/transform/image.py	/^    def __init__(self, min_size: int = 800, max_size: int = 1333):$/;"	m	class:ImageResizeTransform
__init__	projects/DensePose/densepose/data/video/frame_selector.py	/^    def __init__(self, k: int):$/;"	m	class:FirstKFramesSelector
__init__	projects/DensePose/densepose/data/video/frame_selector.py	/^    def __init__(self, k: int):$/;"	m	class:LastKFramesSelector
__init__	projects/DensePose/densepose/data/video/frame_selector.py	/^    def __init__(self, k: int):$/;"	m	class:RandomKFramesSelector
__init__	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^    def __init__($/;"	m	class:VideoKeyframeDataset
__init__	projects/DensePose/densepose/engine/trainer.py	/^    def __init__(self):$/;"	m	class:SampleCountMetricPrinter
__init__	projects/DensePose/densepose/engine/trainer.py	/^    def __init__(self, loader):$/;"	m	class:SampleCountingLoader
__init__	projects/DensePose/densepose/evaluation/d2_evaluator_adapter.py	/^    def __init__($/;"	m	class:Detectron2COCOEvaluatorAdapter
__init__	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def __init__($/;"	m	class:DensePoseCocoEval
__init__	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def __init__(self, iouType="segm"):$/;"	m	class:Params
__init__	projects/DensePose/densepose/evaluation/evaluator.py	/^    def __init__($/;"	m	class:DensePoseCOCOEvaluator
__init__	projects/DensePose/densepose/evaluation/mesh_alignment_evaluator.py	/^    def __init__(self, embedder: nn.Module, mesh_names: Optional[List[str]]):$/;"	m	class:MeshAlignmentEvaluator
__init__	projects/DensePose/densepose/evaluation/tensor_storage.py	/^    def __init__(self, data_schema: Dict[str, SizeData], buf: io.BytesIO):$/;"	m	class:SingleProcessRamTensorStorage
__init__	projects/DensePose/densepose/evaluation/tensor_storage.py	/^    def __init__(self, data_schema: Dict[str, SizeData], fpath: str, mode: str):$/;"	m	class:SingleProcessFileTensorStorage
__init__	projects/DensePose/densepose/evaluation/tensor_storage.py	/^    def __init__(self, data_schema: Dict[str, SizeData], rank_to_buffer: Dict[int, io.BytesIO]):$/;"	m	class:MultiProcessRamTensorStorage
__init__	projects/DensePose/densepose/evaluation/tensor_storage.py	/^    def __init__(self, data_schema: Dict[str, SizeData], rank_to_fpath: Dict[int, str], mode: str):$/;"	m	class:MultiProcessFileTensorStorage
__init__	projects/DensePose/densepose/evaluation/tensor_storage.py	/^    def __init__(self, data_schema: Dict[str, SizeData], storage_impl: BinaryIO):$/;"	m	class:SingleProcessTensorStorage
__init__	projects/DensePose/densepose/evaluation/tensor_storage.py	/^    def __init__(self, rank_to_storage: Dict[int, SingleProcessTensorStorage]):$/;"	m	class:MultiProcessTensorStorage
__init__	projects/DensePose/densepose/modeling/cse/embedder.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:Embedder
__init__	projects/DensePose/densepose/modeling/cse/vertex_direct_embedder.py	/^    def __init__(self, num_vertices: int, embed_dim: int):$/;"	m	class:VertexDirectEmbedder
__init__	projects/DensePose/densepose/modeling/cse/vertex_feature_embedder.py	/^    def __init__($/;"	m	class:VertexFeatureEmbedder
__init__	projects/DensePose/densepose/modeling/densepose_checkpoint.py	/^    def __init__(self, model, save_dir="", *, save_to_disk=None, **checkpointables):$/;"	m	class:DensePoseCheckpointer
__init__	projects/DensePose/densepose/modeling/filter.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:DensePoseDataFilter
__init__	projects/DensePose/densepose/modeling/hrfpn.py	/^    def __init__($/;"	m	class:HRFPN
__init__	projects/DensePose/densepose/modeling/hrnet.py	/^    def __init__($/;"	m	class:HighResolutionModule
__init__	projects/DensePose/densepose/modeling/hrnet.py	/^    def __init__(self, cfg, **kwargs):$/;"	m	class:PoseHigherResolutionNet
__init__	projects/DensePose/densepose/modeling/hrnet.py	/^    def __init__(self, inplanes, planes, stride=1, downsample=None):$/;"	m	class:BasicBlock
__init__	projects/DensePose/densepose/modeling/hrnet.py	/^    def __init__(self, inplanes, planes, stride=1, downsample=None):$/;"	m	class:Bottleneck
__init__	projects/DensePose/densepose/modeling/losses/chart.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:DensePoseChartLoss
__init__	projects/DensePose/densepose/modeling/losses/chart_with_confidences.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:DensePoseChartWithConfidenceLoss
__init__	projects/DensePose/densepose/modeling/losses/chart_with_confidences.py	/^    def __init__(self, sigma_lower_bound: float):$/;"	m	class:IIDIsotropicGaussianUVLoss
__init__	projects/DensePose/densepose/modeling/losses/chart_with_confidences.py	/^    def __init__(self, sigma_lower_bound: float):$/;"	m	class:IndepAnisotropicGaussianUVLoss
__init__	projects/DensePose/densepose/modeling/losses/cse.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:DensePoseCseLoss
__init__	projects/DensePose/densepose/modeling/losses/cycle_pix2shape.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:PixToShapeCycleLoss
__init__	projects/DensePose/densepose/modeling/losses/cycle_shape2shape.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:ShapeToShapeCycleLoss
__init__	projects/DensePose/densepose/modeling/losses/embed.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:EmbeddingLoss
__init__	projects/DensePose/densepose/modeling/losses/embed_utils.py	/^    def __init__(self):$/;"	m	class:CseAnnotationsAccumulator
__init__	projects/DensePose/densepose/modeling/losses/mask_or_segm.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:MaskOrSegmentationLoss
__init__	projects/DensePose/densepose/modeling/losses/segm.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:SegmentationLoss
__init__	projects/DensePose/densepose/modeling/losses/soft_embed.py	/^    def __init__(self, cfg: CfgNode):$/;"	m	class:SoftEmbeddingLoss
__init__	projects/DensePose/densepose/modeling/losses/utils.py	/^    def __init__($/;"	m	class:BilinearInterpolationHelper
__init__	projects/DensePose/densepose/modeling/losses/utils.py	/^    def __init__(self):$/;"	m	class:ChartBasedAnnotationsAccumulator
__init__	projects/DensePose/densepose/modeling/predictors/chart.py	/^    def __init__(self, cfg: CfgNode, input_channels: int):$/;"	m	class:DensePoseChartPredictor
__init__	projects/DensePose/densepose/modeling/predictors/chart_confidence.py	/^    def __init__(self, cfg: CfgNode, input_channels: int):$/;"	m	class:DensePoseChartConfidencePredictorMixin
__init__	projects/DensePose/densepose/modeling/predictors/cse.py	/^    def __init__(self, cfg: CfgNode, input_channels: int):$/;"	m	class:DensePoseEmbeddingPredictor
__init__	projects/DensePose/densepose/modeling/predictors/cse_confidence.py	/^    def __init__(self, cfg: CfgNode, input_channels: int):$/;"	m	class:DensePoseEmbeddingConfidencePredictorMixin
__init__	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def __init__($/;"	m	class:_NonLocalBlockND
__init__	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def __init__(self, cfg: CfgNode, input_channels: int):$/;"	m	class:DensePoseDeepLabHead
__init__	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def __init__(self, in_channels, atrous_rates, out_channels):$/;"	m	class:ASPP
__init__	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def __init__(self, in_channels, inter_channels=None, sub_sample=True, bn_layer=True):$/;"	m	class:NONLocalBlock2D
__init__	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def __init__(self, in_channels, out_channels):$/;"	m	class:ASPPPooling
__init__	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def __init__(self, in_channels, out_channels, dilation):$/;"	m	class:ASPPConv
__init__	projects/DensePose/densepose/modeling/roi_heads/roi_head.py	/^    def __init__(self, cfg, input_shape):$/;"	m	class:DensePoseROIHeads
__init__	projects/DensePose/densepose/modeling/roi_heads/roi_head.py	/^    def __init__(self, cfg, input_shape: Dict[str, ShapeSpec], in_features):$/;"	m	class:Decoder
__init__	projects/DensePose/densepose/modeling/roi_heads/v1convx.py	/^    def __init__(self, cfg: CfgNode, input_channels: int):$/;"	m	class:DensePoseV1ConvXHead
__init__	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^    def __init__(self, cfg):$/;"	m	class:DensePoseDatasetMapperTTA
__init__	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^    def __init__(self, cfg, model, transform_data, tta_mapper=None, batch_size=1):$/;"	m	class:DensePoseGeneralizedRCNNWithTTA
__init__	projects/DensePose/densepose/structures/data_relative.py	/^    def __init__(self, annotation, cleanup=False):$/;"	m	class:DensePoseDataRelative
__init__	projects/DensePose/densepose/structures/list.py	/^    def __init__(self, densepose_datas, boxes_xyxy_abs, image_size_hw, device=_TORCH_DEVICE_CPU):$/;"	m	class:DensePoseList
__init__	projects/DensePose/densepose/structures/mesh.py	/^    def __init__($/;"	m	class:Mesh
__init__	projects/DensePose/densepose/structures/transform_data.py	/^    def __init__(self, uv_symmetries: Dict[str, torch.Tensor], device: torch.device):$/;"	m	class:DensePoseTransformData
__init__	projects/DensePose/densepose/utils/dbhelper.py	/^        def __init__(self, name: str, typespec: Optional[str], value: str):$/;"	m	class:FieldEntrySelector._FieldEntryValuePredicate
__init__	projects/DensePose/densepose/utils/dbhelper.py	/^        def __init__(self, name: str, typespec: Optional[str], vmin: str, vmax: str):$/;"	m	class:FieldEntrySelector._FieldEntryRangePredicate
__init__	projects/DensePose/densepose/utils/dbhelper.py	/^    def __init__(self, spec: str):$/;"	m	class:FieldEntrySelector
__init__	projects/DensePose/densepose/vis/base.py	/^    def __init__($/;"	m	class:MatrixVisualizer
__init__	projects/DensePose/densepose/vis/base.py	/^    def __init__($/;"	m	class:TextVisualizer
__init__	projects/DensePose/densepose/vis/base.py	/^    def __init__(self, color=_COLOR_GREEN, thickness=1):$/;"	m	class:RectangleVisualizer
__init__	projects/DensePose/densepose/vis/base.py	/^    def __init__(self, color_bgr=_COLOR_GREEN, r=5):$/;"	m	class:PointsVisualizer
__init__	projects/DensePose/densepose/vis/base.py	/^    def __init__(self, visualizers):$/;"	m	class:CompoundVisualizer
__init__	projects/DensePose/densepose/vis/bounding_box.py	/^    def __init__(self):$/;"	m	class:BoundingBoxVisualizer
__init__	projects/DensePose/densepose/vis/bounding_box.py	/^    def __init__(self, bbox_visualizer_params=None, score_visualizer_params=None, **kwargs):$/;"	m	class:ScoredBoundingBoxVisualizer
__init__	projects/DensePose/densepose/vis/densepose_data_points.py	/^    def __init__(self, **kwargs):$/;"	m	class:DensePoseDataPointsIVisualizer
__init__	projects/DensePose/densepose/vis/densepose_data_points.py	/^    def __init__(self, **kwargs):$/;"	m	class:DensePoseDataPointsUVisualizer
__init__	projects/DensePose/densepose/vis/densepose_data_points.py	/^    def __init__(self, **kwargs):$/;"	m	class:DensePoseDataPointsVVisualizer
__init__	projects/DensePose/densepose/vis/densepose_data_points.py	/^    def __init__(self, densepose_data_to_value_fn=None, cmap=cv2.COLORMAP_PARULA, **kwargs):$/;"	m	class:DensePoseDataPointsVisualizer
__init__	projects/DensePose/densepose/vis/densepose_data_points.py	/^    def __init__(self, inplace=True, cmap=cv2.COLORMAP_PARULA, alpha=0.7, **kwargs):$/;"	m	class:DensePoseDataCoarseSegmentationVisualizer
__init__	projects/DensePose/densepose/vis/densepose_outputs_iuv.py	/^    def __init__($/;"	m	class:DensePoseOutputsVisualizer
__init__	projects/DensePose/densepose/vis/densepose_outputs_iuv.py	/^    def __init__(self, inplace=True, cmap=cv2.COLORMAP_PARULA, alpha=0.7, **kwargs):$/;"	m	class:DensePoseOutputsFineSegmentationVisualizer
__init__	projects/DensePose/densepose/vis/densepose_outputs_iuv.py	/^    def __init__(self, inplace=True, cmap=cv2.COLORMAP_PARULA, alpha=0.7, **kwargs):$/;"	m	class:DensePoseOutputsUVisualizer
__init__	projects/DensePose/densepose/vis/densepose_outputs_iuv.py	/^    def __init__(self, inplace=True, cmap=cv2.COLORMAP_PARULA, alpha=0.7, **kwargs):$/;"	m	class:DensePoseOutputsVVisualizer
__init__	projects/DensePose/densepose/vis/densepose_outputs_vertex.py	/^    def __init__($/;"	m	class:DensePoseOutputsTextureVisualizer
__init__	projects/DensePose/densepose/vis/densepose_outputs_vertex.py	/^    def __init__($/;"	m	class:DensePoseOutputsVertexVisualizer
__init__	projects/DensePose/densepose/vis/densepose_results.py	/^    def __init__($/;"	m	class:DensePoseMaskedColormapResultsVisualizer
__init__	projects/DensePose/densepose/vis/densepose_results.py	/^    def __init__(self, inplace=True, cmap=cv2.COLORMAP_PARULA, alpha=0.7, **kwargs):$/;"	m	class:DensePoseResultsFineSegmentationVisualizer
__init__	projects/DensePose/densepose/vis/densepose_results.py	/^    def __init__(self, inplace=True, cmap=cv2.COLORMAP_PARULA, alpha=0.7, **kwargs):$/;"	m	class:DensePoseResultsUVisualizer
__init__	projects/DensePose/densepose/vis/densepose_results.py	/^    def __init__(self, inplace=True, cmap=cv2.COLORMAP_PARULA, alpha=0.7, **kwargs):$/;"	m	class:DensePoseResultsVVisualizer
__init__	projects/DensePose/densepose/vis/densepose_results.py	/^    def __init__(self, levels=10, **kwargs):$/;"	m	class:DensePoseResultsCustomContourVisualizer
__init__	projects/DensePose/densepose/vis/densepose_results.py	/^    def __init__(self, levels=10, **kwargs):$/;"	m	class:DensePoseResultsMplContourVisualizer
__init__	projects/DensePose/densepose/vis/densepose_results_textures.py	/^    def __init__(self, texture_atlas, **kwargs):$/;"	m	class:DensePoseResultsVisualizerWithTexture
__init__	projects/DensePose/densepose/vis/extractor.py	/^    def __init__(self, extractor, iou_threshold):$/;"	m	class:NmsFilteredExtractor
__init__	projects/DensePose/densepose/vis/extractor.py	/^    def __init__(self, extractor, min_score):$/;"	m	class:ScoreThresholdedExtractor
__init__	projects/DensePose/densepose/vis/extractor.py	/^    def __init__(self, extractors):$/;"	m	class:CompoundExtractor
__init__	projects/Panoptic-DeepLab/panoptic_deeplab/dataset_mapper.py	/^    def __init__($/;"	m	class:PanopticDeeplabDatasetMapper
__init__	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def __init__($/;"	m	class:PanopticDeepLabInsEmbedHead
__init__	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def __init__($/;"	m	class:PanopticDeepLabSemSegHead
__init__	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def __init__(self, cfg):$/;"	m	class:PanopticDeepLab
__init__	projects/Panoptic-DeepLab/panoptic_deeplab/target_generator.py	/^    def __init__($/;"	m	class:PanopticDeepLabTargetGenerator
__init__	projects/PointRend/point_rend/color_augmentation.py	/^    def __init__($/;"	m	class:ColorAugSSDTransform
__init__	projects/PointRend/point_rend/mask_head.py	/^    def __init__($/;"	m	class:ConvFCHead
__init__	projects/PointRend/point_rend/mask_head.py	/^    def __init__(self, cfg, input_shape: Dict[str, ShapeSpec]):$/;"	m	class:ImplicitPointRendMaskHead
__init__	projects/PointRend/point_rend/mask_head.py	/^    def __init__(self, cfg, input_shape: Dict[str, ShapeSpec]):$/;"	m	class:PointRendMaskHead
__init__	projects/PointRend/point_rend/point_head.py	/^    def __init__(self, cfg, input_shape: ShapeSpec):$/;"	m	class:ImplicitPointHead
__init__	projects/PointRend/point_rend/point_head.py	/^    def __init__(self, cfg, input_shape: ShapeSpec):$/;"	m	class:StandardPointHead
__init__	projects/PointRend/point_rend/semantic_seg.py	/^    def __init__(self, cfg, input_shape: Dict[str, ShapeSpec]):$/;"	m	class:PointRendSemSegHead
__init__	projects/PointSup/point_sup/dataset_mapper.py	/^    def __init__($/;"	m	class:PointSupDatasetMapper
__init__	projects/TensorMask/tensormask/arch.py	/^    def __init__(self, cfg):$/;"	m	class:TensorMask
__init__	projects/TensorMask/tensormask/arch.py	/^    def __init__(self, cfg, num_levels, num_anchors, mask_sizes, input_shape: List[ShapeSpec]):$/;"	m	class:TensorMaskHead
__init__	projects/TensorMask/tensormask/layers/swap_align2nat.py	/^    def __init__(self, lambda_val, pad_val=-6.0):$/;"	m	class:SwapAlign2Nat
__init__	projects/TridentNet/tridentnet/trident_backbone.py	/^    def __init__($/;"	m	class:TridentBottleneckBlock
__init__	projects/TridentNet/tridentnet/trident_conv.py	/^    def __init__($/;"	m	class:TridentConv
__init__	projects/TridentNet/tridentnet/trident_rcnn.py	/^    def __init__(self, cfg, input_shape):$/;"	m	class:TridentRes5ROIHeads
__init__	projects/TridentNet/tridentnet/trident_rcnn.py	/^    def __init__(self, cfg, input_shape):$/;"	m	class:TridentStandardROIHeads
__init__	projects/TridentNet/tridentnet/trident_rpn.py	/^    def __init__(self, cfg, input_shape):$/;"	m	class:TridentRPN
__init__	tests/config/test_instantiate_config.py	/^    def __init__(self, int_arg, list_arg=None, dict_arg=None, extra_arg=None):$/;"	m	class:TestClass
__init__	tests/config/test_yacs_config.py	/^            def __init__(self, a=1, b=2):$/;"	m	class:TestConfigurable.testBadClass._BadClass1
__init__	tests/config/test_yacs_config.py	/^            def __init__(self, a=1, b=2):$/;"	m	class:TestConfigurable.testBadClass._BadClass2
__init__	tests/config/test_yacs_config.py	/^            def __init__(self, a=1, b=2):$/;"	m	class:TestConfigurable.testBadClass._BadClass3
__init__	tests/config/test_yacs_config.py	/^    def __init__(self, arg1, arg2, arg3=3):$/;"	m	class:_TestClassA
__init__	tests/config/test_yacs_config.py	/^    def __init__(self, cfg, input_shape, arg4=4):$/;"	m	class:_LegacySubClass
__init__	tests/config/test_yacs_config.py	/^    def __init__(self, config, input_shape):$/;"	m	class:_LegacySubClassNotCfg
__init__	tests/config/test_yacs_config.py	/^    def __init__(self, input_shape, arg1, arg2, arg3=3):$/;"	m	class:_TestClassB
__init__	tests/config/test_yacs_config.py	/^    def __init__(self, input_shape, arg4=4, **kwargs):$/;"	m	class:_NewSubClassNewInit
__init__	tests/config/test_yacs_config.py	/^    def __init__(self, input_shape: ShapeSpec, arg1: int, arg2, arg3=3):$/;"	m	class:_TestClassD
__init__	tests/modeling/test_fast_rcnn.py	/^            def __init__(self, output_layer):$/;"	m	class:FastRCNNTest.test_predict_boxes_tracing.Model
__init__	tests/modeling/test_fast_rcnn.py	/^            def __init__(self, output_layer):$/;"	m	class:FastRCNNTest.test_predict_probs_tracing.Model
__init__	tests/modeling/test_roi_pooler.py	/^            def __init__(self, roi):$/;"	m	class:TestROIPooler.test_roi_pooler_tracing.Model
__init__	tests/structures/test_instances.py	/^            def __init__(self):$/;"	m	class:TestInstances.test_script_new_fields.g2
__init__	tests/test_engine.py	/^    def __init__(self, sleep_sec=0):$/;"	m	class:_SimpleModel
__init__	tests/test_export_onnx.py	/^            def __init__(self):$/;"	m	class:TestONNXTracingExport.testKeypointHead.M
__init__	tests/test_export_torchscript.py	/^            def __init__(self):$/;"	m	class:TestTracing.testKeypointHead.M
__init__	tests/test_model_analysis.py	/^            def __init__(self):$/;"	m	class:UnusedParamTest.test_unused.TestMod
__init__	tools/deploy/export_model.py	/^        def __init__(self):$/;"	m	class:export_scripting.ScriptableAdapterBase
__init__	tools/lightning_train_net.py	/^    def __init__(self, cfg):$/;"	m	class:DataModule
__init__	tools/lightning_train_net.py	/^    def __init__(self, cfg):$/;"	m	class:TrainingModule
__iter__	detectron2/data/common.py	/^    def __iter__(self):$/;"	m	class:AspectRatioGroupedDataset	file:
__iter__	detectron2/data/common.py	/^    def __iter__(self):$/;"	m	class:ToIterableDataset	file:
__iter__	detectron2/data/common.py	/^    def __iter__(self):$/;"	m	class:_MapIterableDataset	file:
__iter__	detectron2/data/samplers/distributed_sampler.py	/^    def __iter__(self):$/;"	m	class:InferenceSampler	file:
__iter__	detectron2/data/samplers/distributed_sampler.py	/^    def __iter__(self):$/;"	m	class:RepeatFactorTrainingSampler	file:
__iter__	detectron2/data/samplers/distributed_sampler.py	/^    def __iter__(self):$/;"	m	class:TrainingSampler	file:
__iter__	detectron2/data/samplers/grouped_batch_sampler.py	/^    def __iter__(self):$/;"	m	class:GroupedBatchSampler	file:
__iter__	detectron2/modeling/anchor_generator.py	/^    def __iter__(self):$/;"	m	class:BufferList	file:
__iter__	detectron2/structures/boxes.py	/^    def __iter__(self):$/;"	m	class:Boxes	file:
__iter__	detectron2/structures/instances.py	/^    def __iter__(self):$/;"	m	class:Instances	file:
__iter__	detectron2/structures/masks.py	/^    def __iter__(self) -> Iterator[List[np.ndarray]]:$/;"	m	class:PolygonMasks	file:
__iter__	detectron2/structures/masks.py	/^    def __iter__(self) -> torch.Tensor:$/;"	m	class:BitMasks	file:
__iter__	detectron2/structures/rotated_boxes.py	/^    def __iter__(self):$/;"	m	class:RotatedBoxes	file:
__iter__	projects/DensePose/densepose/data/combined_loader.py	/^    def __iter__(self) -> Iterator[List[Any]]:$/;"	m	class:CombinedDataLoader	file:
__iter__	projects/DensePose/densepose/data/inference_based_loader.py	/^    def __iter__(self) -> Iterator[List[SampledData]]:$/;"	m	class:InferenceBasedLoader	file:
__iter__	projects/DensePose/densepose/engine/trainer.py	/^    def __iter__(self):$/;"	m	class:SampleCountingLoader	file:
__iter__	projects/DensePose/densepose/structures/list.py	/^    def __iter__(self):$/;"	m	class:DensePoseList	file:
__iter__	tests/data/test_dataset.py	/^            def __iter__(self):$/;"	m	class:TestMapDataset.test_iter_style.DS	file:
__iter__	tests/data/test_dataset.py	/^    def __iter__(self):$/;"	m	class:_MyData	file:
__len__	demo/predictor.py	/^    def __len__(self):$/;"	m	class:AsyncPredictor	file:
__len__	detectron2/data/benchmark.py	/^    def __len__(self):$/;"	m	class:_EmptyMapDataset	file:
__len__	detectron2/data/common.py	/^    def __len__(self):$/;"	m	class:DatasetFromList	file:
__len__	detectron2/data/common.py	/^    def __len__(self):$/;"	m	class:MapDataset	file:
__len__	detectron2/data/common.py	/^    def __len__(self):$/;"	m	class:ToIterableDataset	file:
__len__	detectron2/data/common.py	/^    def __len__(self):$/;"	m	class:_MapIterableDataset	file:
__len__	detectron2/data/common.py	/^    def __len__(self):$/;"	m	class:_TorchSerializedList	file:
__len__	detectron2/data/samplers/distributed_sampler.py	/^    def __len__(self):$/;"	m	class:InferenceSampler	file:
__len__	detectron2/data/samplers/grouped_batch_sampler.py	/^    def __len__(self):$/;"	m	class:GroupedBatchSampler	file:
__len__	detectron2/export/c10.py	/^    def __len__(self):$/;"	m	class:InstancesList	file:
__len__	detectron2/modeling/anchor_generator.py	/^    def __len__(self):$/;"	m	class:BufferList	file:
__len__	detectron2/structures/boxes.py	/^    def __len__(self) -> int:$/;"	m	class:Boxes	file:
__len__	detectron2/structures/image_list.py	/^    def __len__(self) -> int:$/;"	m	class:ImageList	file:
__len__	detectron2/structures/instances.py	/^    def __len__(self) -> int:$/;"	m	class:Instances	file:
__len__	detectron2/structures/keypoints.py	/^    def __len__(self) -> int:$/;"	m	class:Keypoints	file:
__len__	detectron2/structures/masks.py	/^    def __len__(self) -> int:$/;"	m	class:BitMasks	file:
__len__	detectron2/structures/masks.py	/^    def __len__(self) -> int:$/;"	m	class:PolygonMasks	file:
__len__	detectron2/structures/masks.py	/^    def __len__(self):$/;"	m	class:ROIMasks	file:
__len__	detectron2/structures/rotated_boxes.py	/^    def __len__(self) -> int:$/;"	m	class:RotatedBoxes	file:
__len__	projects/DensePose/densepose/data/image_list_dataset.py	/^    def __len__(self):$/;"	m	class:ImageListDataset	file:
__len__	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^    def __len__(self):$/;"	m	class:VideoKeyframeDataset	file:
__len__	projects/DensePose/densepose/structures/chart.py	/^    def __len__(self):$/;"	m	class:DensePoseChartPredictorOutput	file:
__len__	projects/DensePose/densepose/structures/cse.py	/^    def __len__(self):$/;"	m	class:DensePoseEmbeddingPredictorOutput	file:
__len__	projects/DensePose/densepose/structures/list.py	/^    def __len__(self):$/;"	m	class:DensePoseList	file:
__new__	detectron2/data/common.py	/^    def __new__(cls, dataset, map_func):$/;"	m	class:MapDataset	file:
__reduce__	detectron2/utils/serialize.py	/^    def __reduce__(self):$/;"	m	class:PicklableWrapper	file:
__repr__	detectron2/data/catalog.py	/^    __repr__ = __str__$/;"	v	class:_DatasetCatalog
__repr__	detectron2/data/catalog.py	/^    __repr__ = __str__$/;"	v	class:_MetadataCatalog
__repr__	detectron2/data/transforms/augmentation.py	/^    def __repr__(self):$/;"	m	class:Augmentation	file:
__repr__	detectron2/data/transforms/augmentation.py	/^    def __repr__(self):$/;"	m	class:AugmentationList	file:
__repr__	detectron2/data/transforms/augmentation.py	/^    def __repr__(self):$/;"	m	class:_TransformToAug	file:
__repr__	detectron2/layers/batch_norm.py	/^    def __repr__(self):$/;"	m	class:FrozenBatchNorm2d	file:
__repr__	detectron2/layers/roi_align.py	/^    def __repr__(self):$/;"	m	class:ROIAlign	file:
__repr__	detectron2/layers/roi_align_rotated.py	/^    def __repr__(self):$/;"	m	class:ROIAlignRotated	file:
__repr__	detectron2/structures/boxes.py	/^    def __repr__(self) -> str:$/;"	m	class:Boxes	file:
__repr__	detectron2/structures/instances.py	/^    __repr__ = __str__$/;"	v	class:Instances
__repr__	detectron2/structures/keypoints.py	/^    def __repr__(self) -> str:$/;"	m	class:Keypoints	file:
__repr__	detectron2/structures/masks.py	/^    def __repr__(self) -> str:$/;"	m	class:BitMasks	file:
__repr__	detectron2/structures/masks.py	/^    def __repr__(self) -> str:$/;"	m	class:PolygonMasks	file:
__repr__	detectron2/structures/masks.py	/^    def __repr__(self) -> str:$/;"	m	class:ROIMasks	file:
__repr__	detectron2/structures/rotated_boxes.py	/^    def __repr__(self) -> str:$/;"	m	class:RotatedBoxes	file:
__repr__	projects/DensePose/densepose/structures/list.py	/^    def __repr__(self):$/;"	m	class:DensePoseList	file:
__repr__	projects/TensorMask/tensormask/layers/swap_align2nat.py	/^    def __repr__(self):$/;"	m	class:SwapAlign2Nat	file:
__setattr__	detectron2/data/catalog.py	/^    def __setattr__(self, key, val):$/;"	m	class:Metadata	file:
__setattr__	detectron2/structures/instances.py	/^    def __setattr__(self, name: str, val: Any) -> None:$/;"	m	class:Instances	file:
__setitem__	projects/DensePose/densepose/data/meshes/catalog.py	/^    def __setitem__(self, key, value):$/;"	m	class:_MeshCatalog	file:
__slots__	detectron2/utils/video_visualizer.py	/^    __slots__ = ["label", "bbox", "mask_rle", "color", "ttl"]$/;"	v	class:_DetectedInstance
__str__	detectron2/data/catalog.py	/^    def __str__(self):$/;"	m	class:_DatasetCatalog	file:
__str__	detectron2/data/catalog.py	/^    def __str__(self):$/;"	m	class:_MetadataCatalog	file:
__str__	detectron2/data/transforms/augmentation.py	/^    __str__ = __repr__$/;"	v	class:Augmentation
__str__	detectron2/data/transforms/augmentation.py	/^    __str__ = __repr__$/;"	v	class:AugmentationList
__str__	detectron2/data/transforms/augmentation.py	/^    __str__ = __repr__$/;"	v	class:_TransformToAug
__str__	detectron2/evaluation/coco_evaluation.py	/^    def __str__(self):$/;"	m	class:COCOevalMaxDets	file:
__str__	detectron2/structures/instances.py	/^    def __str__(self) -> str:$/;"	m	class:Instances	file:
__str__	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def __str__(self):$/;"	m	class:DensePoseCocoEval	file:
__str__	projects/DensePose/densepose/vis/base.py	/^    def __str__(self):$/;"	m	class:CompoundVisualizer	file:
__version__	detectron2/__init__.py	/^__version__ = "0.6"$/;"	v
_a_slow_func	tests/data/test_dataset.py	/^def _a_slow_func(x):$/;"	f
_add_categories_metadata	projects/DensePose/densepose/data/datasets/coco.py	/^def _add_categories_metadata(dataset_name: str, categories: List[Dict[str, Any]]):$/;"	f
_add_categories_metadata	projects/DensePose/densepose/data/datasets/lvis.py	/^def _add_categories_metadata(dataset_name: str) -> None:$/;"	f
_add_category_id_to_contiguous_id_maps_to_metadata	projects/DensePose/densepose/data/build.py	/^def _add_category_id_to_contiguous_id_maps_to_metadata($/;"	f
_add_category_info_to_bootstrapping_metadata	projects/DensePose/densepose/data/build.py	/^def _add_category_info_to_bootstrapping_metadata(dataset_name: str, dataset_cfg: CfgNode) -> None:$/;"	f
_add_category_maps_to_metadata	projects/DensePose/densepose/data/build.py	/^def _add_category_maps_to_metadata(cfg: CfgNode) -> None:$/;"	f
_add_category_whitelists_to_metadata	projects/DensePose/densepose/data/build.py	/^def _add_category_whitelists_to_metadata(cfg: CfgNode) -> None:$/;"	f
_add_densepose_masks_as_segmentation	projects/DensePose/densepose/data/dataset_mapper.py	/^    def _add_densepose_masks_as_segmentation($/;"	m	class:DatasetMapper
_add_instances_conversion_methods	detectron2/export/torchscript_patch.py	/^def _add_instances_conversion_methods(newInstances):$/;"	f
_apply_exif_orientation	detectron2/data/detection_utils.py	/^def _apply_exif_orientation(image):$/;"	f
_args	detectron2/layers/deform_conv.py	/^    _args = ("detectron2._C", _msg)$/;"	v
_assert_strides_are_log2_contiguous	detectron2/modeling/backbone/fpn.py	/^def _assert_strides_are_log2_contiguous(strides):$/;"	f
_assign_colors	detectron2/utils/video_visualizer.py	/^    def _assign_colors(self, instances):$/;"	m	class:VideoVisualizer
_assign_colors_by_id	detectron2/utils/video_visualizer.py	/^    def _assign_colors_by_id(self, instances: Instances) -> List:$/;"	m	class:VideoVisualizer
_assign_device_option	detectron2/export/caffe2_export.py	/^def _assign_device_option($/;"	f
_assign_new_id	detectron2/tracking/bbox_iou_tracker.py	/^    def _assign_new_id(self, instances: Instances) -> Instances:$/;"	m	class:BBoxIOUTracker
_assign_op_device_option	detectron2/export/caffe2_export.py	/^    def _assign_op_device_option(net_proto, net_ssa, blob_device_types):$/;"	f	function:_assign_device_option
_assignment_rule	projects/TensorMask/tensormask/arch.py	/^def _assignment_rule($/;"	f
_batch_inference	detectron2/modeling/test_time_augmentation.py	/^    def _batch_inference(self, batched_inputs, detected_instances=None):$/;"	m	class:GeneralizedRCNNWithTTA
_benchmark	detectron2/data/benchmark.py	/^    def _benchmark(self, iterator, num_iter, warmup, msg=None):$/;"	m	class:DataLoaderBenchmark
_best_checking	detectron2/engine/hooks.py	/^    def _best_checking(self):$/;"	m	class:BestCheckpointer
_bin_code_2_lines	projects/DensePose/densepose/vis/densepose_results.py	/^    def _bin_code_2_lines(self, arr, v, bin_code, multi_idx, Nw, Nh, offset):$/;"	m	class:DensePoseResultsCustomContourVisualizer
_box_to_rotated_box	tests/layers/test_roi_align_rotated.py	/^    def _box_to_rotated_box(self, box, angle):$/;"	m	class:ROIAlignRotatedTest
_broadcast_params	detectron2/modeling/anchor_generator.py	/^def _broadcast_params(params, num_features, name):$/;"	f
_build_lazy_model	tests/test_model_zoo.py	/^    def _build_lazy_model(self, name):$/;"	m	class:TestModelZoo
_build_res5_block	detectron2/modeling/roi_heads/roi_heads.py	/^    def _build_res5_block(cls, cfg):$/;"	m	class:Res5ROIHeads
_build_weighted_sampler	detectron2/data/build.py	/^def _build_weighted_sampler(cfg, enable_category_balance=False):$/;"	f
_cached_log_stream	detectron2/utils/logger.py	/^def _cached_log_stream(filename):$/;"	f
_caffe2_preprocess_image	detectron2/export/caffe2_modeling.py	/^    def _caffe2_preprocess_image(self, inputs):$/;"	m	class:Caffe2MetaArch
_cal_im2col_step	detectron2/layers/deform_conv.py	/^    def _cal_im2col_step(input_size, default_size):$/;"	m	class:_DeformConv
_calculate_anchors	detectron2/modeling/anchor_generator.py	/^    def _calculate_anchors(self, sizes, aspect_ratios):$/;"	m	class:DefaultAnchorGenerator
_calculate_anchors	detectron2/modeling/anchor_generator.py	/^    def _calculate_anchors(self, sizes, aspect_ratios, angles):$/;"	m	class:RotatedAnchorGenerator
_calculate_record_field_size_b	projects/DensePose/densepose/evaluation/tensor_storage.py	/^def _calculate_record_field_size_b(data_schema: Dict[str, SizeData], field_name: str) -> int:$/;"	f
_calculate_record_field_sizes_b	projects/DensePose/densepose/evaluation/tensor_storage.py	/^def _calculate_record_field_sizes_b(data_schema: Dict[str, SizeData]) -> Dict[str, int]:$/;"	f
_calculate_record_size_b	projects/DensePose/densepose/evaluation/tensor_storage.py	/^def _calculate_record_size_b(data_schema: Dict[str, SizeData]) -> int:$/;"	f
_called_with_cfg	detectron2/config/config.py	/^def _called_with_cfg(*args, **kwargs):$/;"	f
_cast_to_config	detectron2/config/lazy.py	/^def _cast_to_config(obj):$/;"	f
_cast_to_f32	detectron2/export/caffe2_modeling.py	/^def _cast_to_f32(f64):$/;"	f
_change_color_brightness	detectron2/utils/visualizer.py	/^    def _change_color_brightness(self, color, brightness_factor):$/;"	m	class:Visualizer
_checkIgnore	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^        def _checkIgnore(dt, iregion):$/;"	f	function:DensePoseCocoEval._prepare
_check_and_update	detectron2/export/shared.py	/^    def _check_and_update(key, value):$/;"	f	function:_generic_status_identifier
_check_branches	projects/DensePose/densepose/modeling/hrnet.py	/^    def _check_branches(self, num_branches, blocks, num_blocks, num_inchannels, num_channels):$/;"	m	class:HighResolutionModule
_check_correspondence	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^    def _check_correspondence(self, packed_anns, instances_lst):$/;"	m	class:TestCseAnnotationsAccumulator
_check_eval	detectron2/export/caffe2_export.py	/^    def _check_eval(module):$/;"	f	function:export_onnx_model
_check_image	projects/DensePose/densepose/vis/base.py	/^    def _check_image(self, image_rgb):$/;"	m	class:MatrixVisualizer
_check_img_dtype	detectron2/data/transforms/augmentation.py	/^def _check_img_dtype(img):$/;"	f
_check_is_range	tests/data/test_dataset.py	/^    def _check_is_range(self, data_loader, N):$/;"	m	class:TestDataLoader
_check_mask_matrix	projects/DensePose/densepose/vis/base.py	/^    def _check_mask_matrix(self, mask, matrix):$/;"	m	class:MatrixVisualizer
_check_schema	tests/test_export_torchscript.py	/^    def _check_schema(self, schema):$/;"	m	class:TestTorchscriptUtils
_check_torchscript_no_hardcoded_device	tests/test_export_torchscript.py	/^    def _check_torchscript_no_hardcoded_device(self, jitfile, extract_dir, device):$/;"	m	class:TestTracing
_cityscapes_files_to_dict	detectron2/data/datasets/cityscapes.py	/^def _cityscapes_files_to_dict(files, from_json, to_polygons):$/;"	f
_clear_jit_cache	detectron2/export/torchscript_patch.py	/^def _clear_jit_cache():$/;"	f
_collect_config_files	projects/DensePose/tests/common.py	/^def _collect_config_files(config_dir):$/;"	f
_combine_images_with_annotations	projects/DensePose/densepose/data/datasets/coco.py	/^def _combine_images_with_annotations($/;"	f
_combine_images_with_annotations	projects/DensePose/densepose/data/datasets/lvis.py	/^def _combine_images_with_annotations($/;"	f
_compute_geodists	projects/DensePose/densepose/structures/mesh.py	/^    def _compute_geodists(self):$/;"	m	class:Mesh
_compute_num_images_per_worker	projects/DensePose/densepose/data/build.py	/^def _compute_num_images_per_worker(cfg: CfgNode) -> int:$/;"	f
_compute_values	detectron2/solver/lr_scheduler.py	/^    def _compute_values(self) -> List[float]:$/;"	m	class:WarmupCosineLR
_compute_values	detectron2/solver/lr_scheduler.py	/^    def _compute_values(self) -> List[float]:$/;"	m	class:WarmupMultiStepLR
_compute_values	projects/DeepLab/deeplab/lr_scheduler.py	/^    def _compute_values(self) -> List[float]:$/;"	m	class:WarmupPolyLR
_concat	detectron2/export/flatten.py	/^    def _concat(values):$/;"	m	class:Schema
_configure_libraries	detectron2/utils/env.py	/^def _configure_libraries():$/;"	f
_contours	projects/DensePose/densepose/vis/densepose_results.py	/^    def _contours(self, image_bgr, arr, segm, bbox_xywh):$/;"	m	class:DensePoseResultsCustomContourVisualizer
_convertDictPredictionToInstance	tests/tracking/test_bbox_iou_tracker.py	/^    def _convertDictPredictionToInstance(self, prediction: Dict) -> Instances:$/;"	m	class:TestBBoxIOUTracker
_convertDictPredictionToInstance	tests/tracking/test_hungarian_tracker.py	/^    def _convertDictPredictionToInstance(self, prediction: Dict) -> Instances:$/;"	m	class:TestBaseHungarianTracker
_convertDictPredictionToInstance	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^    def _convertDictPredictionToInstance(self, prediction: Dict) -> Instances:$/;"	m	class:TestIOUWeightedHungarianBBoxIOUTracker
_convertDictPredictionToInstance	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^    def _convertDictPredictionToInstance(self, prediction: Dict) -> Instances:$/;"	m	class:TestVanillaHungarianBBoxIOUTracker
_convert_boxes	detectron2/utils/visualizer.py	/^    def _convert_boxes(self, boxes):$/;"	m	class:Visualizer
_convert_boxes_to_pooler_format	detectron2/modeling/poolers.py	/^def _convert_boxes_to_pooler_format(boxes: torch.Tensor, sizes: torch.Tensor) -> torch.Tensor:$/;"	f
_convert_category_id	detectron2/data/datasets/cityscapes_panoptic.py	/^    def _convert_category_id(segment_info, meta):$/;"	f	function:load_cityscapes_panoptic
_convert_category_id	detectron2/data/datasets/coco_panoptic.py	/^    def _convert_category_id(segment_info, meta):$/;"	f	function:load_coco_panoptic_json
_convert_category_id	detectron2/evaluation/panoptic_evaluation.py	/^    def _convert_category_id(self, segment_info):$/;"	m	class:COCOPanopticEvaluator
_convert_inputs	detectron2/export/caffe2_inference.py	/^    def _convert_inputs(self, batched_inputs):$/;"	m	class:ProtobufDetectionModel
_convert_keypoints	detectron2/utils/visualizer.py	/^    def _convert_keypoints(self, keypoints):$/;"	m	class:Visualizer
_convert_masks	detectron2/utils/visualizer.py	/^    def _convert_masks(self, masks_or_polygons):$/;"	m	class:Visualizer
_convert_mmdet_result	detectron2/modeling/mmdet_wrapper.py	/^def _convert_mmdet_result(result, shape: Tuple[int, int]) -> Instances:$/;"	f
_convert_target_to_string	detectron2/utils/registry.py	/^def _convert_target_to_string(t: Any) -> str:$/;"	f
_convert_xy_to_wh	tests/structures/test_boxes.py	/^    def _convert_xy_to_wh(self, x):$/;"	m	class:TestBoxMode
_convert_xywh_to_xywha	tests/structures/test_boxes.py	/^    def _convert_xywh_to_xywha(self, x):$/;"	m	class:TestBoxMode
_convert_xywha_to_xyxy	tests/structures/test_boxes.py	/^    def _convert_xywha_to_xyxy(self, x):$/;"	m	class:TestBoxMode
_copy_cpu_to_gpu_updater	detectron2/export/shared.py	/^    def _copy_cpu_to_gpu_updater(op, input_types, output_types):$/;"	f	function:infer_device_type
_copy_gpu_to_cpu_updater	detectron2/export/shared.py	/^    def _copy_gpu_to_cpu_updater(op, input_types, output_types):$/;"	f	function:infer_device_type
_counter	detectron2/export/torchscript_patch.py	/^_counter = 0$/;"	v
_create_const_fill_op_from_c2_int8_tensor	detectron2/export/shared.py	/^def _create_const_fill_op_from_c2_int8_tensor(name, int8_tensor):$/;"	f
_create_const_fill_op_from_numpy	detectron2/export/shared.py	/^def _create_const_fill_op_from_numpy(name, tensor, device_option=None):$/;"	f
_create_dp_data	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^    def _create_dp_data(self, anns, blob_def=None):$/;"	m	class:TestCseAnnotationsAccumulator
_create_gradient_clipper	detectron2/solver/build.py	/^def _create_gradient_clipper(cfg: CfgNode) -> _GradientClipper:$/;"	f
_create_grayscale_image	detectron2/utils/visualizer.py	/^    def _create_grayscale_image(self, mask=None):$/;"	m	class:Visualizer
_create_grid_offsets	detectron2/modeling/anchor_generator.py	/^def _create_grid_offsets($/;"	f
_create_instances_fulldp	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^    def _create_instances_fulldp(self):$/;"	m	class:TestCseAnnotationsAccumulator
_create_instances_nodp	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^    def _create_instances_nodp(self):$/;"	m	class:TestCseAnnotationsAccumulator
_create_instances_sparsedp	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^    def _create_instances_sparsedp(self):$/;"	m	class:TestCseAnnotationsAccumulator
_create_output_instance	projects/DensePose/densepose/modeling/predictors/chart_confidence.py	/^    def _create_output_instance(self, base_predictor_outputs: Any):$/;"	m	class:DensePoseChartConfidencePredictorMixin
_create_output_instance	projects/DensePose/densepose/modeling/predictors/cse_confidence.py	/^    def _create_output_instance(self, base_predictor_outputs: Any):$/;"	m	class:DensePoseEmbeddingConfidencePredictorMixin
_create_pixel_dist_matrix	projects/DensePose/densepose/modeling/losses/cycle_pix2shape.py	/^def _create_pixel_dist_matrix(grid_size: int) -> torch.Tensor:$/;"	f
_create_prediction_pairs	detectron2/tracking/bbox_iou_tracker.py	/^    def _create_prediction_pairs(self, instances: Instances, iou_all: np.ndarray) -> List:$/;"	m	class:BBoxIOUTracker
_create_proposals_from_boxes	detectron2/modeling/roi_heads/cascade_rcnn.py	/^    def _create_proposals_from_boxes(self, boxes, image_sizes):$/;"	m	class:CascadeROIHeads
_create_tensors	tests/layers/test_nms.py	/^    def _create_tensors(self, N):$/;"	m	class:TestNMS
_create_tensors	tests/layers/test_nms_rotated.py	/^    def _create_tensors(self, N, device="cpu"):$/;"	m	class:TestNMSRotated
_create_text_labels	detectron2/utils/visualizer.py	/^def _create_text_labels(classes, scores, class_names, is_crowd=None):$/;"	f
_create_video_frames	projects/DensePose/tests/test_video_keyframe_dataset.py	/^def _create_video_frames(num_frames, height, width):$/;"	f
_create_wrapper	detectron2/export/flatten.py	/^    def _create_wrapper(self, traced_model):$/;"	m	class:TracingAdapter
_create_zeros	detectron2/modeling/poolers.py	/^def _create_zeros($/;"	f
_data_loader	tests/test_engine.py	/^    def _data_loader(self, device):$/;"	m	class:TestTrainer
_data_loader_iter	detectron2/engine/train_loop.py	/^    def _data_loader_iter(self):$/;"	m	class:SimpleTrainer
_decode_multi_level_predictions	detectron2/modeling/meta_arch/dense_detector.py	/^    def _decode_multi_level_predictions($/;"	m	class:DenseDetector
_decode_per_level_predictions	detectron2/modeling/meta_arch/dense_detector.py	/^    def _decode_per_level_predictions($/;"	m	class:DenseDetector
_decode_proposals	detectron2/modeling/proposal_generator/rpn.py	/^    def _decode_proposals(self, anchors: List[Boxes], pred_anchor_deltas: List[torch.Tensor]):$/;"	m	class:RPN
_del	detectron2/config/compat.py	/^    def _del(key_seq: List[str]) -> None:$/;"	f	function:_rename
_dense_box_regression_loss	detectron2/modeling/box_regression.py	/^def _dense_box_regression_loss($/;"	f
_densepose_data_i_for_cmap	projects/DensePose/densepose/vis/densepose_data_points.py	/^def _densepose_data_i_for_cmap(densepose_data):$/;"	f
_densepose_data_u_for_cmap	projects/DensePose/densepose/vis/densepose_data_points.py	/^def _densepose_data_u_for_cmap(densepose_data):$/;"	f
_densepose_data_v_for_cmap	projects/DensePose/densepose/vis/densepose_data_points.py	/^def _densepose_data_v_for_cmap(densepose_data):$/;"	f
_derive_coco_results	detectron2/evaluation/coco_evaluation.py	/^    def _derive_coco_results(self, coco_eval, iou_type, class_names=None):$/;"	m	class:COCOEvaluator
_derive_results_from_coco_eval	projects/DensePose/densepose/evaluation/evaluator.py	/^def _derive_results_from_coco_eval($/;"	f
_device_updater	detectron2/export/shared.py	/^    def _device_updater(op, *args, **kwargs):$/;"	f	function:infer_device_type
_distributed_worker	detectron2/engine/launch.py	/^def _distributed_worker($/;"	f
_do_accumulate	projects/DensePose/densepose/modeling/losses/embed_utils.py	/^    def _do_accumulate(self, box_xywh_gt: torch.Tensor, box_xywh_est: torch.Tensor, dp_gt: Any):$/;"	m	class:CseAnnotationsAccumulator
_do_accumulate	projects/DensePose/densepose/modeling/losses/utils.py	/^    def _do_accumulate($/;"	m	class:ChartBasedAnnotationsAccumulator
_do_assert_fx_safe	detectron2/utils/tracing.py	/^def _do_assert_fx_safe(condition: bool, message: str) -> torch.Tensor:$/;"	f
_do_eval	detectron2/engine/hooks.py	/^    def _do_eval(self):$/;"	m	class:EvalHook
_do_paste_mask	detectron2/layers/mask_ops.py	/^def _do_paste_mask(masks, boxes, img_h: int, img_w: int, skip_empty: bool = True):$/;"	f
_do_register	projects/DensePose/densepose/converters/base.py	/^    def _do_register(cls, from_type: Type, converter: Any):$/;"	m	class:BaseConverter
_draw_line	projects/DensePose/densepose/vis/densepose_results.py	/^    def _draw_line($/;"	m	class:DensePoseResultsCustomContourVisualizer
_draw_text_in_mask	detectron2/utils/visualizer.py	/^    def _draw_text_in_mask(self, binary_mask, text, color):$/;"	m	class:Visualizer
_dummy	detectron2/utils/develop.py	/^    def _dummy(*args, **kwargs):$/;"	f	function:create_dummy_func
_dynamic_mlp	projects/PointRend/point_rend/point_head.py	/^    def _dynamic_mlp(features, weights, biases, num_instances):$/;"	m	class:ImplicitPointHead
_ema_update	detectron2/modeling/meta_arch/dense_detector.py	/^    def _ema_update(self, name: str, value: float, initial_value: float, momentum: float = 0.9):$/;"	m	class:DenseDetector
_encode_anchor_generator_cfg	detectron2/export/caffe2_modeling.py	/^    def _encode_anchor_generator_cfg(self, predict_net):$/;"	m	class:Caffe2RetinaNet
_eval_box_proposals	detectron2/evaluation/coco_evaluation.py	/^    def _eval_box_proposals(self, predictions):$/;"	m	class:COCOEvaluator
_eval_box_proposals	detectron2/evaluation/lvis_evaluation.py	/^    def _eval_box_proposals(self, predictions):$/;"	m	class:LVISEvaluator
_eval_predictions	detectron2/evaluation/coco_evaluation.py	/^    def _eval_predictions(self, predictions, img_ids=None):$/;"	m	class:COCOEvaluator
_eval_predictions	detectron2/evaluation/lvis_evaluation.py	/^    def _eval_predictions(self, predictions):$/;"	m	class:LVISEvaluator
_eval_predictions	detectron2/evaluation/rotated_coco_evaluation.py	/^    def _eval_predictions(self, predictions, img_ids=None):  # img_ids: unused$/;"	m	class:RotatedCOCOEvaluator
_eval_predictions	projects/DensePose/densepose/evaluation/evaluator.py	/^    def _eval_predictions(self, predictions, multi_storage=None, img_ids=None):$/;"	m	class:DensePoseCOCOEvaluator
_evaluate_box_proposals	detectron2/evaluation/coco_evaluation.py	/^def _evaluate_box_proposals(dataset_predictions, coco_api, thresholds=None, area="all", limit=None):$/;"	f
_evaluate_box_proposals	detectron2/evaluation/lvis_evaluation.py	/^def _evaluate_box_proposals(dataset_predictions, lvis_api, thresholds=None, area="all", limit=None):$/;"	f
_evaluate_mesh_alignment	projects/DensePose/densepose/evaluation/evaluator.py	/^    def _evaluate_mesh_alignment(self):$/;"	m	class:DensePoseCOCOEvaluator
_evaluate_predictions_on_coco	detectron2/evaluation/coco_evaluation.py	/^def _evaluate_predictions_on_coco($/;"	f
_evaluate_predictions_on_coco	detectron2/evaluation/rotated_coco_evaluation.py	/^    def _evaluate_predictions_on_coco(self, coco_gt, coco_results):$/;"	m	class:RotatedCOCOEvaluator
_evaluate_predictions_on_coco	projects/DensePose/densepose/evaluation/evaluator.py	/^def _evaluate_predictions_on_coco($/;"	f
_evaluate_predictions_on_lvis	detectron2/evaluation/lvis_evaluation.py	/^def _evaluate_predictions_on_lvis($/;"	f
_expand_param_groups	detectron2/solver/build.py	/^def _expand_param_groups(params: List[Dict[str, Any]]) -> List[Dict[str, Any]]:$/;"	f
_extract_data_for_visualizers_from_entry	projects/DensePose/query_db.py	/^    def _extract_data_for_visualizers_from_entry($/;"	m	class:ShowAction
_extract_i_from_iuvarr	projects/DensePose/densepose/vis/densepose_results.py	/^def _extract_i_from_iuvarr(iuv_arr):$/;"	f
_extract_iuv	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def _extract_iuv($/;"	m	class:DensePoseCocoEval
_extract_mask	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def _extract_mask(self, dt: Dict[str, Any]) -> np.ndarray:$/;"	m	class:DensePoseCocoEval
_extract_u_from_iuvarr	projects/DensePose/densepose/vis/densepose_results.py	/^def _extract_u_from_iuvarr(iuv_arr):$/;"	f
_extract_v_from_iuvarr	projects/DensePose/densepose/vis/densepose_results.py	/^def _extract_v_from_iuvarr(iuv_arr):$/;"	f
_file_storage_gather	projects/DensePose/densepose/evaluation/tensor_storage.py	/^def _file_storage_gather($/;"	f
_find_caller	detectron2/utils/logger.py	/^def _find_caller():$/;"	f
_find_free_port	detectron2/engine/launch.py	/^def _find_free_port():$/;"	f
_find_free_port	projects/DensePose/tests/test_tensor_storage.py	/^def _find_free_port():$/;"	f
_flip_iuv_semantics	projects/DensePose/densepose/structures/data_relative.py	/^    def _flip_iuv_semantics(self, dp_transform_data: DensePoseTransformData) -> None:$/;"	m	class:DensePoseDataRelative
_flip_iuv_semantics_tensor	projects/DensePose/densepose/converters/chart_output_hflip.py	/^def _flip_iuv_semantics_tensor($/;"	f
_flip_segm_semantics	projects/DensePose/densepose/structures/data_relative.py	/^    def _flip_segm_semantics(self, dp_transform_data):$/;"	m	class:DensePoseDataRelative
_flip_segm_semantics_tensor	projects/DensePose/densepose/converters/chart_output_hflip.py	/^def _flip_segm_semantics_tensor($/;"	f
_flip_vertices	projects/DensePose/densepose/structures/data_relative.py	/^    def _flip_vertices(self):$/;"	m	class:DensePoseDataRelative
_fn	detectron2/export/caffe2_modeling.py	/^    def _fn(m):$/;"	f	function:set_caffe2_compatible_tensor_mode
_forward_box	detectron2/modeling/roi_heads/cascade_rcnn.py	/^    def _forward_box(self, features, proposals, targets=None):$/;"	m	class:CascadeROIHeads
_forward_box	detectron2/modeling/roi_heads/roi_heads.py	/^    def _forward_box(self, features: Dict[str, torch.Tensor], proposals: List[Instances]):$/;"	m	class:StandardROIHeads
_forward_densepose	projects/DensePose/densepose/modeling/roi_heads/roi_head.py	/^    def _forward_densepose(self, features: Dict[str, torch.Tensor], instances: List[Instances]):$/;"	m	class:DensePoseROIHeads
_forward_keypoint	detectron2/modeling/roi_heads/roi_heads.py	/^    def _forward_keypoint(self, features: Dict[str, torch.Tensor], instances: List[Instances]):$/;"	m	class:StandardROIHeads
_forward_mask	detectron2/modeling/roi_heads/roi_heads.py	/^    def _forward_mask(self, features: Dict[str, torch.Tensor], instances: List[Instances]):$/;"	m	class:StandardROIHeads
_forward_one_pair	projects/DensePose/densepose/modeling/losses/cycle_shape2shape.py	/^    def _forward_one_pair($/;"	m	class:ShapeToShapeCycleLoss
_frame_from_video	demo/predictor.py	/^    def _frame_from_video(self, video):$/;"	m	class:VisualizationDemo
_freeze_stages	detectron2/modeling/backbone/swin.py	/^    def _freeze_stages(self):$/;"	m	class:SwinTransformer
_fuse_once	detectron2/export/shared.py	/^    def _fuse_once(predict_net):$/;"	f	function:fuse_copy_between_cpu_and_gpu
_gen_instance_class	detectron2/export/torchscript_patch.py	/^def _gen_instance_class(fields):$/;"	f
_gen_instance_module	detectron2/export/torchscript_patch.py	/^def _gen_instance_module(fields):$/;"	f
_generate_optimizer_class_with_gradient_clipping	detectron2/solver/build.py	/^def _generate_optimizer_class_with_gradient_clipping($/;"	f
_generate_proposals	detectron2/export/c10.py	/^    def _generate_proposals($/;"	m	class:Caffe2RPN
_generate_rlemask_on_image	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def _generate_rlemask_on_image(self, mask, imgId, data):$/;"	m	class:DensePoseCocoEval
_generic_status_identifier	detectron2/export/shared.py	/^def _generic_status_identifier($/;"	f
_get	detectron2/config/compat.py	/^    def _get(key_seq: List[str]) -> CN:$/;"	f	function:_rename
_getIgnoreRegion	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^        def _getIgnoreRegion(iid, coco):$/;"	f	function:DensePoseCocoEval._prepare
_get_all_paths_util	detectron2/export/shared.py	/^        def _get_all_paths_util(graph, u, d, visited, path):$/;"	f	function:DiGraph.get_all_paths
_get_args_from_config	detectron2/config/config.py	/^def _get_args_from_config(from_config_func, *args, **kwargs):$/;"	f
_get_aug_input_args	detectron2/data/transforms/augmentation.py	/^def _get_aug_input_args(aug, aug_input) -> List[Any]:$/;"	f
_get_augmented_boxes	detectron2/modeling/test_time_augmentation.py	/^    def _get_augmented_boxes(self, augmented_inputs, tfms):$/;"	m	class:GeneralizedRCNNWithTTA
_get_augmented_boxes	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^    def _get_augmented_boxes(self, augmented_inputs, tfms):$/;"	m	class:DensePoseGeneralizedRCNNWithTTA
_get_augmented_inputs	detectron2/modeling/test_time_augmentation.py	/^    def _get_augmented_inputs(self, input):$/;"	m	class:GeneralizedRCNNWithTTA
_get_base_config_dir	projects/DensePose/tests/common.py	/^def _get_base_config_dir():$/;"	f
_get_builtin_metadata	detectron2/data/datasets/builtin_meta.py	/^def _get_builtin_metadata(dataset_name):$/;"	f
_get_c2_detectron_baseline	detectron2/checkpoint/catalog.py	/^    def _get_c2_detectron_baseline(name):$/;"	m	class:ModelCatalog
_get_c2_imagenet_pretrained	detectron2/checkpoint/catalog.py	/^    def _get_c2_imagenet_pretrained(name):$/;"	m	class:ModelCatalog
_get_cityscapes_files	detectron2/data/datasets/cityscapes.py	/^def _get_cityscapes_files(image_dir, gt_dir):$/;"	f
_get_coco_instances_meta	detectron2/data/datasets/builtin_meta.py	/^def _get_coco_instances_meta():$/;"	f
_get_coco_panoptic_separated_meta	detectron2/data/datasets/builtin_meta.py	/^def _get_coco_panoptic_separated_meta():$/;"	f
_get_crop	detectron2/data/transforms/augmentation_impl.py	/^    def _get_crop(self, image: np.ndarray) -> Transform:$/;"	m	class:FixedSizeCrop
_get_deconv_cfg	projects/DensePose/densepose/modeling/hrnet.py	/^    def _get_deconv_cfg(self, deconv_kernel):$/;"	m	class:PoseHigherResolutionNet
_get_densepose_metrics	projects/DensePose/densepose/evaluation/evaluator.py	/^def _get_densepose_metrics(min_threshold: float = 0.5):$/;"	f
_get_dependency_chain	detectron2/export/shared.py	/^def _get_dependency_chain(ssa, versioned_target, versioned_source):$/;"	f
_get_device_casting_test_cases	tests/test_export_torchscript.py	/^    def _get_device_casting_test_cases(self, model):$/;"	m	class:TestTracing
_get_device_option	detectron2/export/shared.py	/^    def _get_device_option(producer_op):$/;"	f	function:get_params_from_init_net
_get_device_type	detectron2/export/caffe2_export.py	/^    def _get_device_type(torch_tensor):$/;"	f	function:_assign_device_option
_get_device_type	detectron2/export/caffe2_inference.py	/^        def _get_device_type(torch_tensor):$/;"	f	function:ProtobufModel._infer_output_devices
_get_embeddings_and_geodists_for_mesh	projects/DensePose/densepose/modeling/losses/cycle_shape2shape.py	/^    def _get_embeddings_and_geodists_for_mesh($/;"	m	class:ShapeToShapeCycleLoss
_get_epoch_indices	detectron2/data/samplers/distributed_sampler.py	/^    def _get_epoch_indices(self, generator):$/;"	m	class:RepeatFactorTrainingSampler
_get_eta	detectron2/utils/events.py	/^    def _get_eta(self, storage) -> Optional[str]:$/;"	m	class:CommonMetricPrinter
_get_evolution_config_dir	projects/DensePose/tests/common.py	/^def _get_evolution_config_dir():$/;"	f
_get_global_gloo_group	detectron2/utils/comm.py	/^def _get_global_gloo_group():$/;"	f
_get_graph	detectron2/export/torchscript.py	/^    def _get_graph(model):$/;"	f	function:dump_torchscript_IR
_get_hrnet_config_dir	projects/DensePose/tests/common.py	/^def _get_hrnet_config_dir():$/;"	f
_get_input_file_list	projects/DensePose/apply_net.py	/^    def _get_input_file_list(cls: type, input_spec: str):$/;"	m	class:InferenceAction
_get_kwargs	tests/data/test_dataset.py	/^    def _get_kwargs(self):$/;"	m	class:TestDataLoader
_get_layer_name	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def _get_layer_name(self, i: int):$/;"	m	class:DensePoseDeepLabHead
_get_layer_name	projects/DensePose/densepose/modeling/roi_heads/v1convx.py	/^    def _get_layer_name(self, i: int):$/;"	m	class:DensePoseV1ConvXHead
_get_local_indices	detectron2/data/samplers/distributed_sampler.py	/^    def _get_local_indices(total_size, world_size, rank):$/;"	m	class:InferenceSampler
_get_local_path	detectron2/checkpoint/catalog.py	/^    def _get_local_path(self, path, **kwargs):$/;"	m	class:ModelCatalogHandler
_get_local_path	detectron2/utils/file_io.py	/^    def _get_local_path(self, path, **kwargs):$/;"	m	class:Detectron2Handler
_get_local_path	tests/test_checkpoint.py	/^                def _get_local_path(self, path, **kwargs):$/;"	m	class:TestCheckpointer.test_custom_path_manager_handler.CustomPathManagerHandler
_get_log_stream_buffer_size	detectron2/utils/logger.py	/^def _get_log_stream_buffer_size(filename: str) -> int:$/;"	f
_get_lvis_instances_meta_v0_5	detectron2/data/datasets/lvis.py	/^def _get_lvis_instances_meta_v0_5():$/;"	f
_get_lvis_instances_meta_v1	detectron2/data/datasets/lvis.py	/^def _get_lvis_instances_meta_v1():$/;"	f
_get_ns_op_name_from_custom_op	detectron2/utils/testing.py	/^            def _get_ns_op_name_from_custom_op(symbolic_name):$/;"	f	function:unregister_custom_op_onnx_export._unregister_custom_op_symbolic
_get_out_fname	projects/DensePose/apply_net.py	/^    def _get_out_fname(cls: type, entry_idx: int, fname_base: str):$/;"	m	class:ShowAction
_get_out_fname	projects/DensePose/query_db.py	/^    def _get_out_fname(cls: type, entry_idx: int, fname_base: str):$/;"	m	class:ShowAction
_get_pad	detectron2/data/transforms/augmentation_impl.py	/^    def _get_pad(self, image: np.ndarray) -> Transform:$/;"	m	class:FixedSizeCrop
_get_point_logits	projects/PointRend/point_rend/mask_head.py	/^    def _get_point_logits(self, fine_grained_features, point_coords, parameters):$/;"	m	class:ImplicitPointRendMaskHead
_get_point_logits	projects/PointRend/point_rend/mask_head.py	/^    def _get_point_logits(self, point_fine_grained_features, point_coords, coarse_mask):$/;"	m	class:PointRendMaskHead
_get_quick_schedules_config_dir	projects/DensePose/tests/common.py	/^def _get_quick_schedules_config_dir():$/;"	f
_get_range_spec	projects/DensePose/densepose/utils/dbhelper.py	/^    def _get_range_spec(self, field_value_or_range):$/;"	m	class:FieldEntrySelector
_get_resize	detectron2/data/transforms/augmentation_impl.py	/^    def _get_resize(self, image: np.ndarray, scale: float) -> Transform:$/;"	m	class:ResizeScale
_get_rpn_conv	detectron2/modeling/proposal_generator/rpn.py	/^    def _get_rpn_conv(self, in_channels, out_channels):$/;"	m	class:StandardRPNHead
_get_script_mod	detectron2/export/torchscript.py	/^    def _get_script_mod(mod):$/;"	f	function:dump_torchscript_IR
_get_supported_prefixes	detectron2/checkpoint/catalog.py	/^    def _get_supported_prefixes(self):$/;"	m	class:ModelCatalogHandler
_get_supported_prefixes	detectron2/utils/file_io.py	/^    def _get_supported_prefixes(self):$/;"	m	class:Detectron2Handler
_get_supported_prefixes	tests/test_checkpoint.py	/^                def _get_supported_prefixes(self):$/;"	m	class:TestCheckpointer.test_custom_path_manager_handler.CustomPathManagerHandler
_get_tensor_mode	detectron2/export/c10.py	/^    def _get_tensor_mode(self):$/;"	m	class:Caffe2Compatible
_get_test_keep_instance_predicate	projects/DensePose/densepose/data/build.py	/^def _get_test_keep_instance_predicate(cfg: CfgNode):$/;"	f
_get_train_datasets_repeat_factors	detectron2/data/build.py	/^def _get_train_datasets_repeat_factors(cfg) -> Dict[str, float]:$/;"	f
_get_train_keep_instance_predicate	projects/DensePose/densepose/data/build.py	/^def _get_train_keep_instance_predicate(cfg: CfgNode):$/;"	f
_get_warmup_factor_at_iter	detectron2/solver/lr_scheduler.py	/^def _get_warmup_factor_at_iter($/;"	f
_grid_anchors	detectron2/modeling/anchor_generator.py	/^    def _grid_anchors(self, grid_sizes):$/;"	m	class:RotatedAnchorGenerator
_grid_anchors	detectron2/modeling/anchor_generator.py	/^    def _grid_anchors(self, grid_sizes: List[List[int]]):$/;"	m	class:DefaultAnchorGenerator
_group_keys_by_module	detectron2/checkpoint/c2_model_loading.py	/^def _group_keys_by_module(keys: List[str], original_names: Dict[str, str]):$/;"	f
_group_str	detectron2/checkpoint/c2_model_loading.py	/^def _group_str(names: List[str]) -> str:$/;"	f
_grouper	projects/DensePose/densepose/data/inference_based_loader.py	/^def _grouper(iterable: Iterable[Any], n: int, fillvalue=None) -> Iterator[Tuple[Any]]:$/;"	f
_grouper	projects/DensePose/tests/test_combine_data_loader.py	/^def _grouper(iterable: Iterable[Any], n: int, fillvalue=None) -> Iterator[Tuple[Any]]:$/;"	f
_has	detectron2/config/compat.py	/^    def _has(name: str) -> bool:$/;"	f	function:guess_version
_highlight	detectron2/engine/defaults.py	/^def _highlight(code, filename):$/;"	f
_ids	detectron2/export/caffe2_inference.py	/^    _ids = count(0)$/;"	v	class:ProtobufModel
_ignore_torch_cuda_oom	detectron2/utils/memory.py	/^def _ignore_torch_cuda_oom():$/;"	f
_import	detectron2/export/torchscript_patch.py	/^def _import(path):$/;"	f
_import_file	detectron2/utils/env.py	/^def _import_file(module_name, file_path, make_importable=False):$/;"	f
_incremental_avg_dp	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^    def _incremental_avg_dp(self, avg, new_el, idx):$/;"	m	class:DensePoseGeneralizedRCNNWithTTA
_inf_tensor	tests/modeling/test_model_e2e.py	/^    def _inf_tensor(self, *shape):$/;"	m	class:InstanceModelE2ETest
_infer_output_devices	detectron2/export/caffe2_inference.py	/^    def _infer_output_devices(self, inputs):$/;"	m	class:ProtobufModel
_infer_shape	detectron2/layers/deform_conv.py	/^    def _infer_shape(ctx, input, weight):$/;"	m	class:_ModulatedDeformConv
_inference_one_image	detectron2/modeling/test_time_augmentation.py	/^    def _inference_one_image(self, input):$/;"	m	class:GeneralizedRCNNWithTTA
_inference_one_image	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^    def _inference_one_image(self, input):$/;"	m	class:DensePoseGeneralizedRCNNWithTTA
_infinite_indices	detectron2/data/samplers/distributed_sampler.py	/^    def _infinite_indices(self):$/;"	m	class:RandomSubsetTrainingSampler
_infinite_indices	detectron2/data/samplers/distributed_sampler.py	/^    def _infinite_indices(self):$/;"	m	class:RepeatFactorTrainingSampler
_infinite_indices	detectron2/data/samplers/distributed_sampler.py	/^    def _infinite_indices(self):$/;"	m	class:TrainingSampler
_init	detectron2/data/transforms/augmentation.py	/^    def _init(self, params=None):$/;"	m	class:Augmentation
_init_box_head	detectron2/modeling/roi_heads/cascade_rcnn.py	/^    def _init_box_head(cls, cfg, input_shape):$/;"	m	class:CascadeROIHeads
_init_box_head	detectron2/modeling/roi_heads/roi_heads.py	/^    def _init_box_head(cls, cfg, input_shape):$/;"	m	class:StandardROIHeads
_init_box_head	detectron2/modeling/roi_heads/rotated_fast_rcnn.py	/^    def _init_box_head(cls, cfg, input_shape):$/;"	m	class:RROIHeads
_init_densepose_head	projects/DensePose/densepose/modeling/roi_heads/roi_head.py	/^    def _init_densepose_head(self, cfg, input_shape):$/;"	m	class:DensePoseROIHeads
_init_keypoint_head	detectron2/modeling/roi_heads/roi_heads.py	/^    def _init_keypoint_head(cls, cfg, input_shape):$/;"	m	class:StandardROIHeads
_init_mask_head	detectron2/modeling/roi_heads/roi_heads.py	/^    def _init_mask_head(cls, cfg, input_shape):$/;"	m	class:StandardROIHeads
_init_mask_head	projects/PointRend/point_rend/roi_heads.py	/^    def _init_mask_head(cls, cfg, input_shape):$/;"	m	class:PointRendROIHeads
_init_point_head	projects/PointRend/point_rend/mask_head.py	/^    def _init_point_head(self, cfg, input_shape):$/;"	m	class:ImplicitPointRendMaskHead
_init_point_head	projects/PointRend/point_rend/mask_head.py	/^    def _init_point_head(self, cfg, input_shape):$/;"	m	class:PointRendMaskHead
_init_point_head	projects/PointRend/point_rend/semantic_seg.py	/^    def _init_point_head(self, cfg, input_shape: Dict[str, ShapeSpec]):$/;"	m	class:PointRendSemSegHead
_init_roi_head	projects/PointRend/point_rend/mask_head.py	/^    def _init_roi_head(self, cfg, input_shape):$/;"	m	class:ImplicitPointRendMaskHead
_init_roi_head	projects/PointRend/point_rend/mask_head.py	/^    def _init_roi_head(self, cfg, input_shape):$/;"	m	class:PointRendMaskHead
_init_weights	detectron2/modeling/backbone/mvit.py	/^    def _init_weights(self, m):$/;"	m	class:MViT
_init_weights	detectron2/modeling/backbone/swin.py	/^    def _init_weights(self, m):$/;"	m	class:SwinTransformer
_init_weights	detectron2/modeling/backbone/vit.py	/^    def _init_weights(self, m):$/;"	m	class:ViT
_initialize_confidence_estimation_layers	projects/DensePose/densepose/modeling/predictors/chart_confidence.py	/^    def _initialize_confidence_estimation_layers(self, cfg: CfgNode, dim_in: int):$/;"	m	class:DensePoseChartConfidencePredictorMixin
_initialize_confidence_estimation_layers	projects/DensePose/densepose/modeling/predictors/cse_confidence.py	/^    def _initialize_confidence_estimation_layers(self, cfg: CfgNode, dim_in: int):$/;"	m	class:DensePoseEmbeddingConfidencePredictorMixin
_initialize_extra_fields	detectron2/tracking/bbox_iou_tracker.py	/^    def _initialize_extra_fields(self, instances: Instances) -> Instances:$/;"	m	class:BBoxIOUTracker
_initialize_extra_fields	detectron2/tracking/hungarian_tracker.py	/^    def _initialize_extra_fields(self, instances: Instances) -> Instances:$/;"	m	class:BaseHungarianTracker
_inverse_rotation	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^def _inverse_rotation(densepose_attrs, boxes, transform):$/;"	f
_is_dead_end	detectron2/export/shared.py	/^    def _is_dead_end(versioned_blob):$/;"	f	function:remove_dead_end_ops
_is_range_spec	projects/DensePose/densepose/utils/dbhelper.py	/^    def _is_range_spec(self, field_value_or_range):$/;"	m	class:FieldEntrySelector
_is_tracing	detectron2/modeling/proposal_generator/proposal_utils.py	/^def _is_tracing():$/;"	f
_jitter	detectron2/utils/visualizer.py	/^    def _jitter(self, color):$/;"	m	class:Visualizer
_keypoints_to_heatmap	detectron2/structures/keypoints.py	/^def _keypoints_to_heatmap($/;"	f
_linear_interpolation_utilities	projects/DensePose/densepose/modeling/losses/utils.py	/^def _linear_interpolation_utilities(v_norm, v0_src, size_src, v0_dst, size_dst, size_z):$/;"	f
_list_to_str	detectron2/export/shared.py	/^    def _list_to_str(bsize):$/;"	f	function:_rename_blob
_loadGEval	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def _loadGEval(self):$/;"	m	class:DensePoseCocoEval
_load_coco_annotations	projects/DensePose/densepose/data/datasets/coco.py	/^def _load_coco_annotations(json_file: str):$/;"	f
_load_file	detectron2/checkpoint/detection_checkpoint.py	/^    def _load_file(self, filename):$/;"	m	class:DetectionCheckpointer
_load_file	projects/DensePose/densepose/modeling/densepose_checkpoint.py	/^    def _load_file(self, filename: str) -> object:$/;"	m	class:DensePoseCheckpointer
_load_from_state_dict	detectron2/layers/batch_norm.py	/^    def _load_from_state_dict($/;"	m	class:FrozenBatchNorm2d
_load_from_state_dict	projects/PointRend/point_rend/mask_head.py	/^    def _load_from_state_dict($/;"	m	class:ConvFCHead
_load_from_state_dict	projects/PointRend/point_rend/roi_heads.py	/^    def _load_from_state_dict($/;"	m	class:PointRendROIHeads
_load_lvis_annotations	projects/DensePose/densepose/data/datasets/lvis.py	/^def _load_lvis_annotations(json_file: str):$/;"	f
_load_model	detectron2/checkpoint/detection_checkpoint.py	/^    def _load_model(self, checkpoint):$/;"	m	class:DetectionCheckpointer
_log_api_usage	detectron2/utils/logger.py	/^def _log_api_usage(identifier: str):$/;"	f
_log_classification_stats	detectron2/modeling/roi_heads/fast_rcnn.py	/^def _log_classification_stats(pred_logits, gt_classes, prefix="fast_rcnn"):$/;"	f
_log_time	detectron2/data/benchmark.py	/^    def _log_time(self, msg, avg, all_times, distributed=False):$/;"	m	class:DataLoaderBenchmark
_longest_common_prefix	detectron2/checkpoint/c2_model_loading.py	/^def _longest_common_prefix(names: List[str]) -> str:$/;"	f
_longest_common_prefix_str	detectron2/checkpoint/c2_model_loading.py	/^def _longest_common_prefix_str(names: List[str]) -> str:$/;"	f
_lookup_converter	projects/DensePose/densepose/converters/base.py	/^    def _lookup_converter(cls, from_type: Type) -> Any:$/;"	m	class:BaseConverter
_make_array	detectron2/structures/masks.py	/^        def _make_array(t: Union[torch.Tensor, np.ndarray]) -> np.ndarray:$/;"	f	function:PolygonMasks.__init__
_make_branches	projects/DensePose/densepose/modeling/hrnet.py	/^    def _make_branches(self, num_branches, block, num_blocks, num_channels):$/;"	m	class:HighResolutionModule
_make_fuse_layers	projects/DensePose/densepose/modeling/hrnet.py	/^    def _make_fuse_layers(self):$/;"	m	class:HighResolutionModule
_make_layer	projects/DensePose/densepose/modeling/hrnet.py	/^    def _make_layer(self, block, planes, blocks, stride=1):$/;"	m	class:PoseHigherResolutionNet
_make_one_branch	projects/DensePose/densepose/modeling/hrnet.py	/^    def _make_one_branch(self, branch_index, block, num_blocks, num_channels, stride=1):$/;"	m	class:HighResolutionModule
_make_stage	projects/DensePose/densepose/modeling/hrnet.py	/^    def _make_stage(self, layer_config, num_inchannels, multi_scale_output=True):$/;"	m	class:PoseHigherResolutionNet
_make_transition_layer	projects/DensePose/densepose/modeling/hrnet.py	/^    def _make_transition_layer(self, num_channels_pre_layer, num_channels_cur_layer):$/;"	m	class:PoseHigherResolutionNet
_map_category_id_to_contiguous_id	projects/DensePose/densepose/data/build.py	/^def _map_category_id_to_contiguous_id(dataset_name: str, dataset_dicts: Iterable[Instance]) -> None:$/;"	f
_mask_to_boundary	detectron2/evaluation/sem_seg_evaluation.py	/^    def _mask_to_boundary(self, mask: np.ndarray, dilation_ratio=0.02):$/;"	m	class:SemSegEvaluator
_match_anchors	detectron2/modeling/meta_arch/fcos.py	/^    def _match_anchors(self, gt_boxes: Boxes, anchors: List[Boxes]):$/;"	m	class:FCOS
_match_and_label_boxes	detectron2/modeling/roi_heads/cascade_rcnn.py	/^    def _match_and_label_boxes(self, proposals, stage, targets):$/;"	m	class:CascadeROIHeads
_maybe_add_bbox	projects/DensePose/densepose/data/datasets/coco.py	/^def _maybe_add_bbox(obj: Dict[str, Any], ann_dict: Dict[str, Any]):$/;"	f
_maybe_add_bbox	projects/DensePose/densepose/data/datasets/lvis.py	/^def _maybe_add_bbox(obj: Dict[str, Any], ann_dict: Dict[str, Any]) -> None:$/;"	f
_maybe_add_class_to_mesh_name_map_to_metadata	projects/DensePose/densepose/data/build.py	/^def _maybe_add_class_to_mesh_name_map_to_metadata(dataset_names: List[str], cfg: CfgNode) -> None:$/;"	f
_maybe_add_densepose	projects/DensePose/densepose/data/datasets/coco.py	/^def _maybe_add_densepose(obj: Dict[str, Any], ann_dict: Dict[str, Any]):$/;"	f
_maybe_add_densepose	projects/DensePose/densepose/data/datasets/lvis.py	/^def _maybe_add_densepose(obj: Dict[str, Any], ann_dict: Dict[str, Any]) -> None:$/;"	f
_maybe_add_iscrowd_annotations	projects/DensePose/densepose/evaluation/d2_evaluator_adapter.py	/^def _maybe_add_iscrowd_annotations(cocoapi) -> None:$/;"	f
_maybe_add_keypoints	projects/DensePose/densepose/data/datasets/coco.py	/^def _maybe_add_keypoints(obj: Dict[str, Any], ann_dict: Dict[str, Any]):$/;"	f
_maybe_add_keypoints	projects/DensePose/densepose/data/datasets/lvis.py	/^def _maybe_add_keypoints(obj: Dict[str, Any], ann_dict: Dict[str, Any]) -> None:$/;"	f
_maybe_add_segm	projects/DensePose/densepose/data/datasets/coco.py	/^def _maybe_add_segm(obj: Dict[str, Any], ann_dict: Dict[str, Any]):$/;"	f
_maybe_add_segm	projects/DensePose/densepose/data/datasets/lvis.py	/^def _maybe_add_segm(obj: Dict[str, Any], ann_dict: Dict[str, Any]) -> None:$/;"	f
_maybe_copy_to_device	projects/DensePose/densepose/structures/mesh.py	/^def _maybe_copy_to_device($/;"	f
_maybe_create_densepose_keep_instance_predicate	projects/DensePose/densepose/data/build.py	/^def _maybe_create_densepose_keep_instance_predicate(cfg: CfgNode) -> Optional[InstancePredicate]:$/;"	f
_maybe_create_general_keep_instance_predicate	projects/DensePose/densepose/data/build.py	/^def _maybe_create_general_keep_instance_predicate(cfg: CfgNode) -> Optional[InstancePredicate]:$/;"	f
_maybe_create_keypoints_keep_instance_predicate	projects/DensePose/densepose/data/build.py	/^def _maybe_create_keypoints_keep_instance_predicate(cfg: CfgNode) -> Optional[InstancePredicate]:$/;"	f
_maybe_create_mask_keep_instance_predicate	projects/DensePose/densepose/data/build.py	/^def _maybe_create_mask_keep_instance_predicate(cfg: CfgNode) -> Optional[InstancePredicate]:$/;"	f
_maybe_create_specific_keep_instance_predicate	projects/DensePose/densepose/data/build.py	/^def _maybe_create_specific_keep_instance_predicate(cfg: CfgNode) -> Optional[InstancePredicate]:$/;"	f
_maybe_filter_and_map_categories	projects/DensePose/densepose/data/build.py	/^def _maybe_filter_and_map_categories($/;"	f
_maybe_read_image	detectron2/modeling/test_time_augmentation.py	/^        def _maybe_read_image(dataset_dict):$/;"	f	function:GeneralizedRCNNWithTTA.__call__
_maybe_substitute_metadata	projects/DensePose/densepose/evaluation/d2_evaluator_adapter.py	/^    def _maybe_substitute_metadata(self):$/;"	m	class:Detectron2COCOEvaluatorAdapter
_merge_categories	projects/DensePose/densepose/data/build.py	/^def _merge_categories(dataset_names: Collection[str]) -> _MergedCategoriesT:$/;"	f
_merge_cfg_str	tests/config/test_yacs_config.py	/^    def _merge_cfg_str(self, cfg, merge_str):$/;"	m	class:TestConfigVersioning
_merge_detections	detectron2/modeling/test_time_augmentation.py	/^    def _merge_detections(self, all_boxes, all_scores, all_classes, shape_hw):$/;"	m	class:GeneralizedRCNNWithTTA
_merge_untracked_instances	detectron2/tracking/bbox_iou_tracker.py	/^    def _merge_untracked_instances(self, instances: Instances) -> Instances:$/;"	m	class:BBoxIOUTracker
_mock_torch_nn_functional_interpolate	detectron2/export/shared.py	/^        def _mock_torch_nn_functional_interpolate(*args, **kwargs):$/;"	f	function:mock_torch_nn_functional_interpolate.decorator
_modify_blob_names	detectron2/export/shared.py	/^def _modify_blob_names(ops, blob_rename_f):$/;"	f
_move_to_current_device	detectron2/modeling/meta_arch/dense_detector.py	/^    def _move_to_current_device(self, x):$/;"	m	class:DenseDetector
_move_to_current_device	detectron2/modeling/meta_arch/rcnn.py	/^    def _move_to_current_device(self, x):$/;"	m	class:GeneralizedRCNN
_move_to_current_device	detectron2/modeling/meta_arch/rcnn.py	/^    def _move_to_current_device(self, x):$/;"	m	class:ProposalNetwork
_msg	detectron2/layers/deform_conv.py	/^    _msg = "detectron2 is not compiled successfully, please build following the instructions!"$/;"	v
_nan_tensor	tests/modeling/test_model_e2e.py	/^    def _nan_tensor(self, *shape):$/;"	m	class:InstanceModelE2ETest
_new_len	detectron2/export/torchscript_patch.py	/^    def _new_len(obj):$/;"	f	function:patch_builtin_len
_op_stats	detectron2/export/caffe2_export.py	/^def _op_stats(net_def):$/;"	f
_open	detectron2/checkpoint/catalog.py	/^    def _open(self, path, mode="r", **kwargs):$/;"	m	class:ModelCatalogHandler
_open	detectron2/utils/file_io.py	/^    def _open(self, path, mode="r", **kwargs):$/;"	m	class:Detectron2Handler
_open	tests/test_checkpoint.py	/^                def _open(self, path, mode="r", **kwargs):$/;"	m	class:TestCheckpointer.test_custom_path_manager_handler.CustomPathManagerHandler
_open_cfg	detectron2/config/config.py	/^    def _open_cfg(cls, filename):$/;"	m	class:CfgNode
_other_ops_updater	detectron2/export/shared.py	/^    def _other_ops_updater(op, input_types, output_types):$/;"	f	function:infer_device_type
_output_size	detectron2/layers/deform_conv.py	/^    def _output_size(input, weight, padding, dilation, stride):$/;"	m	class:_DeformConv
_parse_error	projects/DensePose/densepose/utils/dbhelper.py	/^    def _parse_error(self, msg):$/;"	m	class:FieldEntrySelector
_parse_field_name_type	projects/DensePose/densepose/utils/dbhelper.py	/^    def _parse_field_name_type(self, field_name_with_type: str) -> Tuple[str, Optional[str]]:$/;"	m	class:FieldEntrySelector
_parse_losses	detectron2/modeling/mmdet_wrapper.py	/^def _parse_losses(losses: Dict[str, Tensor]) -> Dict[str, Tensor]:$/;"	f
_parse_params	projects/PointRend/point_rend/point_head.py	/^    def _parse_params($/;"	m	class:ImplicitPointHead
_parse_specifier_into_predicates	projects/DensePose/densepose/utils/dbhelper.py	/^    def _parse_specifier_into_predicates(self, spec: str):$/;"	m	class:FieldEntrySelector
_paste_mask_lists_in_image	projects/TensorMask/tensormask/arch.py	/^def _paste_mask_lists_in_image(masks, boxes, image_shape, threshold=0.5):$/;"	f
_paste_masks_tensor_shape	detectron2/layers/mask_ops.py	/^def _paste_masks_tensor_shape($/;"	f
_patch_import	detectron2/config/lazy.py	/^def _patch_import():$/;"	f
_point_pooler	projects/PointRend/point_rend/mask_head.py	/^    def _point_pooler(self, features, proposal_boxes, point_coords):$/;"	m	class:PointRendMaskHead
_pooled_next	projects/DensePose/densepose/data/combined_loader.py	/^def _pooled_next(iterator: Iterator[Any], pool: Deque[Any]):$/;"	f
_postprocess	detectron2/modeling/meta_arch/rcnn.py	/^    def _postprocess(instances, batched_inputs: List[Dict[str, torch.Tensor]], image_sizes):$/;"	m	class:GeneralizedRCNN
_postprocess	projects/TensorMask/tensormask/arch.py	/^def _postprocess(results, result_mask_info, output_height, output_width, mask_threshold=0.5):$/;"	f
_prepare	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def _prepare(self):$/;"	m	class:DensePoseCocoEval
_print_mesh_alignment_results	projects/DensePose/densepose/evaluation/evaluator.py	/^    def _print_mesh_alignment_results(self, results: Dict[str, float], mesh_names: Iterable[str]):$/;"	m	class:DensePoseCOCOEvaluator
_print_panoptic_results	detectron2/evaluation/panoptic_evaluation.py	/^def _print_panoptic_results(pq_res):$/;"	f
_process_dataset_evaluation_results	tools/lightning_train_net.py	/^    def _process_dataset_evaluation_results(self) -> OrderedDict:$/;"	m	class:TrainingModule
_process_matched_idx	detectron2/tracking/hungarian_tracker.py	/^    def _process_matched_idx($/;"	m	class:BaseHungarianTracker
_process_panoptic_to_semantic	datasets/prepare_panoptic_fpn.py	/^def _process_panoptic_to_semantic(input_panoptic, output_semantic, segments, id_map):$/;"	f
_process_unmatched_idx	detectron2/tracking/hungarian_tracker.py	/^    def _process_unmatched_idx(self, instances: Instances, matched_idx: np.ndarray) -> Instances:$/;"	m	class:BaseHungarianTracker
_process_unmatched_prev_idx	detectron2/tracking/hungarian_tracker.py	/^    def _process_unmatched_prev_idx($/;"	m	class:BaseHungarianTracker
_produce_data	projects/DensePose/densepose/data/inference_based_loader.py	/^    def _produce_data($/;"	m	class:InferenceBasedLoader
_produce_index_sample	projects/DensePose/densepose/data/samplers/densepose_base.py	/^    def _produce_index_sample(self, values: torch.Tensor, count: int):$/;"	m	class:DensePoseBaseSampler
_produce_index_sample	projects/DensePose/densepose/data/samplers/densepose_confidence_based.py	/^    def _produce_index_sample(self, values: torch.Tensor, count: int):$/;"	m	class:DensePoseConfidenceBasedSampler
_produce_index_sample	projects/DensePose/densepose/data/samplers/densepose_cse_confidence_based.py	/^    def _produce_index_sample(self, values: torch.Tensor, count: int):$/;"	m	class:DensePoseCSEConfidenceBasedSampler
_produce_index_sample	projects/DensePose/densepose/data/samplers/densepose_uniform.py	/^    def _produce_index_sample(self, values: torch.Tensor, count: int):$/;"	m	class:DensePoseUniformSampler
_produce_labels_and_results	projects/DensePose/densepose/data/samplers/densepose_base.py	/^    def _produce_labels_and_results(self, instance: Instances) -> Tuple[torch.Tensor, torch.Tensor]:$/;"	m	class:DensePoseBaseSampler
_produce_labels_and_results	projects/DensePose/densepose/data/samplers/densepose_confidence_based.py	/^    def _produce_labels_and_results(self, instance) -> Tuple[torch.Tensor, torch.Tensor]:$/;"	m	class:DensePoseConfidenceBasedSampler
_produce_mask_and_results	projects/DensePose/densepose/data/samplers/densepose_cse_base.py	/^    def _produce_mask_and_results($/;"	m	class:DensePoseCSEBaseSampler
_produce_mask_and_results	projects/DensePose/densepose/data/samplers/densepose_cse_confidence_based.py	/^    def _produce_mask_and_results($/;"	m	class:DensePoseCSEConfidenceBasedSampler
_pytorch1111_symbolic_opset9_repeat_interleave	detectron2/utils/testing.py	/^def _pytorch1111_symbolic_opset9_repeat_interleave(g, self, repeats, dim=None, output_size=None):$/;"	f
_pytorch1111_symbolic_opset9_to	detectron2/utils/testing.py	/^def _pytorch1111_symbolic_opset9_to(g, self, *args):$/;"	f
_ram_storage_gather	projects/DensePose/densepose/evaluation/tensor_storage.py	/^def _ram_storage_gather($/;"	f
_rand_poly	tests/test_visualizer.py	/^        def _rand_poly():$/;"	f	function:TestVisualizer._random_data
_rand_range	detectron2/data/transforms/augmentation.py	/^    def _rand_range(self, low=1.0, high=None, size=None):$/;"	m	class:Augmentation
_random_data	tests/test_visualizer.py	/^    def _random_data(self):$/;"	m	class:TestVisualizer
_random_package_name	detectron2/config/lazy.py	/^def _random_package_name(filename):$/;"	f
_reduce_pred_densepose	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^    def _reduce_pred_densepose(self, outputs, tfms):$/;"	m	class:DensePoseGeneralizedRCNNWithTTA
_reduce_pred_masks	detectron2/modeling/test_time_augmentation.py	/^    def _reduce_pred_masks(self, outputs, tfms):$/;"	m	class:GeneralizedRCNNWithTTA
_rename	detectron2/config/compat.py	/^def _rename(cfg: CN, old: str, new: str) -> None:$/;"	f
_rename_HRNet_weights	projects/DensePose/densepose/modeling/densepose_checkpoint.py	/^def _rename_HRNet_weights(weights):$/;"	f
_rename_blob	detectron2/export/shared.py	/^def _rename_blob(name, blob_sizes, blob_ranges):$/;"	f
_rename_versioned_blob_in_proto	detectron2/export/shared.py	/^def _rename_versioned_blob_in_proto($/;"	f
_replace_list	detectron2/export/shared.py	/^    def _replace_list(blob_list, replaced_list):$/;"	f	function:_modify_blob_names
_replace_type_by_name	detectron2/config/lazy.py	/^            def _replace_type_by_name(x):$/;"	f	function:LazyConfig.save
_resample_mask	projects/DensePose/densepose/data/samplers/densepose_base.py	/^    def _resample_mask(self, output: Any) -> torch.Tensor:$/;"	m	class:DensePoseBaseSampler
_resample_mask	projects/DensePose/densepose/data/samplers/densepose_cse_base.py	/^    def _resample_mask(self, output: Any) -> torch.Tensor:$/;"	m	class:DensePoseCSEBaseSampler
_rescale_detected_boxes	detectron2/modeling/test_time_augmentation.py	/^    def _rescale_detected_boxes(self, augmented_inputs, merged_instances, tfms):$/;"	m	class:GeneralizedRCNNWithTTA
_reset_dataset_evaluators	tools/lightning_train_net.py	/^    def _reset_dataset_evaluators(self):$/;"	m	class:TrainingModule
_reset_fields	detectron2/tracking/bbox_iou_tracker.py	/^    def _reset_fields(self):$/;"	m	class:BBoxIOUTracker
_resize	projects/DensePose/densepose/vis/base.py	/^    def _resize(self, mask, matrix, w, h):$/;"	m	class:MatrixVisualizer
_roi_pooler	projects/PointRend/point_rend/mask_head.py	/^    def _roi_pooler(self, features: List[Tensor], boxes: List[Boxes]):$/;"	m	class:PointRendMaskHead
_root	detectron2/data/datasets/builtin.py	/^    _root = os.path.expanduser(os.getenv("DETECTRON2_DATASETS", "datasets"))$/;"	v
_rot90	tests/layers/test_roi_align_rotated.py	/^    def _rot90(self, img, num):$/;"	m	class:ROIAlignRotatedTest
_roundrobin	detectron2/data/common.py	/^def _roundrobin(*iterables):$/;"	f
_run_stage	detectron2/modeling/roi_heads/cascade_rcnn.py	/^    def _run_stage(self, features, proposals, stage):$/;"	m	class:CascadeROIHeads
_sample	projects/DensePose/densepose/data/samplers/densepose_base.py	/^    def _sample(self, instance: Instances, bbox_xywh: IntTupleBox) -> Dict[str, List[Any]]:$/;"	m	class:DensePoseBaseSampler
_sample	projects/DensePose/densepose/data/samplers/densepose_cse_base.py	/^    def _sample(self, instance: Instances, bbox_xywh: IntTupleBox) -> Dict[str, List[Any]]:$/;"	m	class:DensePoseCSEBaseSampler
_sample_fg_pixels_multinomial	projects/DensePose/densepose/modeling/losses/cycle_pix2shape.py	/^def _sample_fg_pixels_multinomial(fg_mask: torch.Tensor, sample_size: int) -> torch.Tensor:$/;"	f
_sample_fg_pixels_randperm	projects/DensePose/densepose/modeling/losses/cycle_pix2shape.py	/^def _sample_fg_pixels_randperm(fg_mask: torch.Tensor, sample_size: int) -> torch.Tensor:$/;"	f
_sample_proposals	detectron2/modeling/roi_heads/roi_heads.py	/^    def _sample_proposals($/;"	m	class:ROIHeads
_sample_random_pair	projects/DensePose/densepose/modeling/losses/cycle_shape2shape.py	/^    def _sample_random_pair(self) -> Tuple[str, str]:$/;"	m	class:ShapeToShapeCycleLoss
_sample_train_points	projects/PointRend/point_rend/mask_head.py	/^    def _sample_train_points(self, coarse_mask, instances):$/;"	m	class:PointRendMaskHead
_serialize	detectron2/data/common.py	/^        def _serialize(data):$/;"	f	function:_TorchSerializedList.__init__
_set	detectron2/config/compat.py	/^    def _set(key_seq: List[str], val: str) -> None:$/;"	f	function:_rename
_set_tensor_mode	detectron2/export/c10.py	/^    def _set_tensor_mode(self, v):$/;"	m	class:Caffe2Compatible
_setup_figure	detectron2/utils/visualizer.py	/^    def _setup_figure(self, img):$/;"	m	class:VisImage
_shard_iterator_dataloader_worker	detectron2/data/common.py	/^def _shard_iterator_dataloader_worker(iterable, chunk_size=1):$/;"	f
_shared_roi_transform	detectron2/modeling/roi_heads/roi_heads.py	/^    def _shared_roi_transform(self, features: List[torch.Tensor], boxes: List[Boxes]):$/;"	m	class:Res5ROIHeads
_simple_roi_align_rotated	tests/layers/test_roi_align_rotated.py	/^    def _simple_roi_align_rotated(self, img, box, resolution):$/;"	m	class:ROIAlignRotatedTest
_simple_roialign	tests/layers/test_roi_align.py	/^    def _simple_roialign(self, img, box, resolution, sampling_ratio=0, aligned=True):$/;"	m	class:ROIAlignTest
_simple_roialign_with_grad	tests/layers/test_roi_align.py	/^    def _simple_roialign_with_grad(self, img, box, resolution, device):$/;"	m	class:ROIAlignTest
_split	detectron2/export/flatten.py	/^    def _split(values, sizes):$/;"	m	class:Schema
_subdivision_inference	projects/PointRend/point_rend/mask_head.py	/^    def _subdivision_inference(self, features, mask_representations, instances):$/;"	m	class:PointRendMaskHead
_submodule_name	detectron2/checkpoint/c2_model_loading.py	/^    def _submodule_name(key):$/;"	f	function:_group_keys_by_module
_subsample_labels	detectron2/modeling/proposal_generator/rpn.py	/^    def _subsample_labels(self, label):$/;"	m	class:RPN
_summarize	detectron2/evaluation/coco_evaluation.py	/^        def _summarize(ap=1, iouThr=None, areaRng="all", maxDets=100):$/;"	f	function:COCOevalMaxDets.summarize
_summarize	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^        def _summarize(ap=1, iouThr=None, areaRng="all", maxDets=100):$/;"	f	function:DensePoseCocoEval.summarize
_summarizeDets	detectron2/evaluation/coco_evaluation.py	/^        def _summarizeDets():$/;"	f	function:COCOevalMaxDets.summarize
_summarizeDets	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^        def _summarizeDets():$/;"	f	function:DensePoseCocoEval.summarize
_summarizeKps	detectron2/evaluation/coco_evaluation.py	/^        def _summarizeKps():$/;"	f	function:COCOevalMaxDets.summarize
_summarizeKps	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^        def _summarizeKps():$/;"	f	function:DensePoseCocoEval.summarize
_summarizeUvs	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^        def _summarizeUvs():$/;"	f	function:DensePoseCocoEval.summarize
_summarizeUvsOld	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^        def _summarizeUvsOld():$/;"	f	function:DensePoseCocoEval.summarize
_swap_align2nat	projects/TensorMask/tests/test_swap_align2nat.py	/^    def _swap_align2nat(self, tensor, lambda_val):$/;"	m	class:SwapAlign2NatTest
_target_	configs/common/models/cascade_rcnn.py	/^    _target_=CascadeROIHeads,$/;"	v
_target_	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^    _target_=CascadeROIHeads,$/;"	v
_target_	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    _target_=CascadeROIHeads,$/;"	v
_target_	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^    _target_=CascadeROIHeads,$/;"	v
_target_	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^    _target_=CascadeROIHeads,$/;"	v
_target_	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^    _target_=CascadeROIHeads,$/;"	v
_target_	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^    _target_=CascadeROIHeads,$/;"	v
_tasks_from_predictions	detectron2/evaluation/coco_evaluation.py	/^    def _tasks_from_predictions(self, predictions):$/;"	m	class:COCOEvaluator
_tasks_from_predictions	detectron2/evaluation/lvis_evaluation.py	/^    def _tasks_from_predictions(self, predictions):$/;"	m	class:LVISEvaluator
_tensor	tests/structures/test_imagelist.py	/^        def _tensor(*shape):$/;"	f	function:TestImageList.test_imagelist_padding_tracing
_test	tests/data/test_dataset.py	/^        def _test(N, batch_size, num_workers):$/;"	f	function:TestDataLoader.test_build_batch_dataloader_inference_incomplete_batch
_test_end_value	tests/test_scheduler.py	/^        def _test_end_value(cfg_dict):$/;"	f	function:TestScheduler.test_warmup_cosine_end_value
_test_eval	projects/DensePose/tests/test_model_e2e.py	/^    def _test_eval(self, sizes):$/;"	m	class:ModelE2ETest
_test_eval	tests/modeling/test_model_e2e.py	/^    def _test_eval(self, input_sizes):$/;"	m	class:InstanceModelE2ETest
_test_eval	tests/modeling/test_model_e2e.py	/^    def _test_eval(self, input_sizes):$/;"	m	class:SemSegE2ETest
_test_func	tests/config/test_yacs_config.py	/^def _test_func(arg1, arg2=2, arg3=3, arg4=4):$/;"	f
_test_loader_from_config	detectron2/data/build.py	/^def _test_loader_from_config(cfg, dataset_name, mapper=None):$/;"	f
_test_model	tests/test_export_caffe2.py	/^    def _test_model(self, config_path, device="cpu"):$/;"	m	class:TestCaffe2Export
_test_model	tests/test_export_onnx.py	/^    def _test_model($/;"	m	class:TestONNXTracingExport
_test_model	tests/test_export_torchscript.py	/^    def _test_model(self, config_path, inference_func, batch=1):$/;"	m	class:TestTracing
_test_model_from_config_path	tests/test_export_onnx.py	/^    def _test_model_from_config_path($/;"	m	class:TestONNXTracingExport
_test_model_zoo_from_config_path	tests/test_export_onnx.py	/^    def _test_model_zoo_from_config_path($/;"	m	class:TestONNXTracingExport
_test_nccl_worker	detectron2/utils/collect_env.py	/^def _test_nccl_worker(rank, num_gpu, dist_url):$/;"	f
_test_obj	tests/test_registry.py	/^    def _test_obj(self, obj):$/;"	m	class:TestLocate
_test_rcnn_model	tests/test_export_torchscript.py	/^    def _test_rcnn_model(self, config_path):$/;"	m	class:TestScripting
_test_retinanet_model	tests/test_export_torchscript.py	/^    def _test_retinanet_model(self, config_path):$/;"	m	class:TestScripting
_test_roialignv2_roialignrotated_match	tests/modeling/test_roi_pooler.py	/^    def _test_roialignv2_roialignrotated_match(self, device):$/;"	m	class:TestROIPooler
_test_scriptability	tests/modeling/test_roi_pooler.py	/^    def _test_scriptability(self, device):$/;"	m	class:TestROIPooler
_test_setup	projects/DensePose/tests/test_setup.py	/^    def _test_setup(self, config_file):$/;"	m	class:TestSetup
_test_template	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^    def _test_template(self, instances_lst):$/;"	m	class:TestCseAnnotationsAccumulator
_test_train	tests/modeling/test_model_e2e.py	/^    def _test_train(self, input_sizes, instances):$/;"	m	class:InstanceModelE2ETest
_toMask	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^        def _toMask(anns, coco):$/;"	f	function:DensePoseCocoEval._prepare
_to_2tuple	detectron2/modeling/backbone/swin.py	/^_to_2tuple = nn.modules.utils._ntuple(2)$/;"	v
_to_container	detectron2/modeling/mmdet_wrapper.py	/^def _to_container(cfg):$/;"	f
_to_str	detectron2/config/lazy.py	/^        def _to_str(obj, prefix=None, inside_call=False):$/;"	f	function:LazyConfig.to_py
_torch_load	detectron2/checkpoint/detection_checkpoint.py	/^    def _torch_load(self, f):$/;"	m	class:DetectionCheckpointer
_train_loader_from_config	detectron2/data/build.py	/^def _train_loader_from_config(cfg, mapper=None, *, dataset=None, sampler=None):$/;"	f
_transform_annotations	detectron2/data/dataset_mapper.py	/^    def _transform_annotations(self, dataset_dict, transforms, image_shape):$/;"	m	class:DatasetMapper
_transform_densepose	projects/DensePose/densepose/data/dataset_mapper.py	/^    def _transform_densepose(self, annotation, transforms):$/;"	m	class:DatasetMapper
_transform_pts	projects/DensePose/densepose/structures/data_relative.py	/^    def _transform_pts(self, transforms, dp_transform_data):$/;"	m	class:DensePoseDataRelative
_transform_segm	projects/DensePose/densepose/structures/data_relative.py	/^    def _transform_segm(self, transforms, dp_transform_data):$/;"	m	class:DensePoseDataRelative
_transform_segm_rotation	projects/DensePose/densepose/structures/data_relative.py	/^    def _transform_segm_rotation(self, rotation):$/;"	m	class:DensePoseDataRelative
_transform_to_aug	detectron2/data/transforms/augmentation.py	/^def _transform_to_aug(tfm_or_aug):$/;"	f
_transpose_dense_predictions	detectron2/modeling/meta_arch/dense_detector.py	/^    def _transpose_dense_predictions($/;"	m	class:DenseDetector
_try_get_key	detectron2/engine/defaults.py	/^def _try_get_key(cfg, *keys, default=None):$/;"	f
_turn_off_roi_heads	detectron2/modeling/test_time_augmentation.py	/^    def _turn_off_roi_heads(self, attrs):$/;"	m	class:GeneralizedRCNNWithTTA
_uniform_sample_train_points	projects/PointRend/point_rend/mask_head.py	/^    def _uniform_sample_train_points(self, instances):$/;"	m	class:ImplicitPointRendMaskHead
_uniform_sample_train_points	projects/PointSup/point_sup/mask_head.py	/^    def _uniform_sample_train_points(self, instances):$/;"	m	class:ImplicitPointRendPointSupHead
_unregister_custom_op_symbolic	detectron2/utils/testing.py	/^        def _unregister_custom_op_symbolic(symbolic_name, opset_version):$/;"	f	function:unregister_custom_op_onnx_export
_unregister_op	detectron2/utils/testing.py	/^            def _unregister_op(opname: str, domain: str, version: int):$/;"	f	function:unregister_custom_op_onnx_export._unregister_custom_op_symbolic
_update_best	detectron2/engine/hooks.py	/^    def _update_best(self, val, iteration):$/;"	m	class:BestCheckpointer
_update_i	detectron2/export/shared.py	/^    def _update_i(op, ssa_i):$/;"	f	function:_generic_status_identifier
_updater_raise	detectron2/export/shared.py	/^def _updater_raise(op, input_types, output_types):$/;"	f
_validate_py_syntax	detectron2/config/lazy.py	/^def _validate_py_syntax(filename):$/;"	f
_verify_annotations_have_unique_ids	projects/DensePose/densepose/data/datasets/coco.py	/^def _verify_annotations_have_unique_ids(json_file: str, anns: List[List[Dict[str, Any]]]):$/;"	f
_verify_annotations_have_unique_ids	projects/DensePose/densepose/data/datasets/lvis.py	/^def _verify_annotations_have_unique_ids(json_file: str, anns: List[List[Dict[str, Any]]]) -> None:$/;"	f
_version	detectron2/layers/batch_norm.py	/^    _version = 3$/;"	v	class:FrozenBatchNorm2d
_version	projects/PointRend/point_rend/mask_head.py	/^    _version = 2$/;"	v	class:ConvFCHead
_version	projects/PointRend/point_rend/roi_heads.py	/^    _version = 2$/;"	v	class:PointRendROIHeads
_visit_dict_config	detectron2/config/lazy.py	/^def _visit_dict_config(cfg, func):$/;"	f
_warn_if_merged_different_categories	projects/DensePose/densepose/data/build.py	/^def _warn_if_merged_different_categories(merged_categories: _MergedCategoriesT) -> None:$/;"	f
_wrapper_count_operators	detectron2/utils/analysis.py	/^def _wrapper_count_operators($/;"	f
_write_metrics	detectron2/engine/train_loop.py	/^    def _write_metrics($/;"	m	class:SimpleTrainer
_writer	detectron2/utils/events.py	/^    def _writer(self):$/;"	m	class:TensorboardXWriter
abbrev_name	detectron2/utils/logger.py	/^                abbrev_name=str(abbrev_name),$/;"	v
accumulate	detectron2/evaluation/fast_eval_api.py	/^    def accumulate(self):$/;"	m	class:COCOeval_opt
accumulate	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def accumulate(self, p=None):$/;"	m	class:DensePoseCocoEval
accumulate	projects/DensePose/densepose/modeling/losses/embed_utils.py	/^    def accumulate(self, instances_one_image: Instances):$/;"	m	class:CseAnnotationsAccumulator
accumulate	projects/DensePose/densepose/modeling/losses/utils.py	/^    def accumulate(self, instances_one_image: Instances):$/;"	m	class:AnnotationsAccumulator
accumulate	projects/DensePose/densepose/modeling/losses/utils.py	/^    def accumulate(self, instances_one_image: Instances):$/;"	m	class:ChartBasedAnnotationsAccumulator
action	detectron2/engine/defaults.py	/^        action="store_true",$/;"	v
activation_count_operators	detectron2/utils/analysis.py	/^def activation_count_operators($/;"	f
adap	tests/test_export_torchscript.py	/^            adap = TracingAdapter(model, data, allow_non_tensor=False)$/;"	v	class:TestTorchscriptUtils.test_allow_non_tensor.M
add_arguments	projects/DensePose/apply_net.py	/^    def add_arguments(cls: type, parser: argparse.ArgumentParser):$/;"	m	class:Action
add_arguments	projects/DensePose/apply_net.py	/^    def add_arguments(cls: type, parser: argparse.ArgumentParser):$/;"	m	class:DumpAction
add_arguments	projects/DensePose/apply_net.py	/^    def add_arguments(cls: type, parser: argparse.ArgumentParser):$/;"	m	class:InferenceAction
add_arguments	projects/DensePose/apply_net.py	/^    def add_arguments(cls: type, parser: argparse.ArgumentParser):$/;"	m	class:ShowAction
add_arguments	projects/DensePose/query_db.py	/^    def add_arguments(cls: type, parser: argparse.ArgumentParser):$/;"	m	class:Action
add_arguments	projects/DensePose/query_db.py	/^    def add_arguments(cls: type, parser: argparse.ArgumentParser):$/;"	m	class:EntrywiseAction
add_arguments	projects/DensePose/query_db.py	/^    def add_arguments(cls: type, parser: argparse.ArgumentParser):$/;"	m	class:PrintAction
add_arguments	projects/DensePose/query_db.py	/^    def add_arguments(cls: type, parser: argparse.ArgumentParser):$/;"	m	class:ShowAction
add_bootstrap_config	projects/DensePose/densepose/config.py	/^def add_bootstrap_config(cfg: CN) -> None:$/;"	f
add_dataset_category_config	projects/DensePose/densepose/config.py	/^def add_dataset_category_config(cfg: CN) -> None:$/;"	f
add_decomposed_rel_pos	detectron2/modeling/backbone/utils.py	/^def add_decomposed_rel_pos(attn, q, rel_pos_h, rel_pos_w, q_size, k_size):$/;"	f
add_deeplab_config	projects/DeepLab/deeplab/config.py	/^def add_deeplab_config(cfg):$/;"	f
add_densepose_config	projects/DensePose/densepose/config.py	/^def add_densepose_config(cfg: CN) -> None:$/;"	f
add_densepose_head_config	projects/DensePose/densepose/config.py	/^def add_densepose_head_config(cfg: CN) -> None:$/;"	f
add_densepose_head_cse_config	projects/DensePose/densepose/config.py	/^def add_densepose_head_cse_config(cfg: CN) -> None:$/;"	f
add_edge	detectron2/export/shared.py	/^    def add_edge(self, u, v):$/;"	m	class:DiGraph
add_evaluation_config	projects/DensePose/densepose/config.py	/^def add_evaluation_config(cfg: CN) -> None:$/;"	f
add_export_config	detectron2/export/__init__.py	/^def add_export_config(cfg):$/;"	f
add_ground_truth_to_proposals	detectron2/modeling/proposal_generator/proposal_utils.py	/^def add_ground_truth_to_proposals($/;"	f
add_ground_truth_to_proposals_single_image	detectron2/modeling/proposal_generator/proposal_utils.py	/^def add_ground_truth_to_proposals_single_image($/;"	f
add_gt_as_proposals	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    add_gt_as_proposals=False,$/;"	v
add_gt_as_proposals	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    add_gt_as_proposals=True,$/;"	v
add_hrnet_config	projects/DensePose/densepose/config.py	/^def add_hrnet_config(cfg: CN) -> None:$/;"	f
add_panoptic_deeplab_config	projects/Panoptic-DeepLab/panoptic_deeplab/config.py	/^def add_panoptic_deeplab_config(cfg):$/;"	f
add_parser	projects/DensePose/apply_net.py	/^    def add_parser(cls: type, subparsers: argparse._SubParsersAction):$/;"	m	class:DumpAction
add_parser	projects/DensePose/apply_net.py	/^    def add_parser(cls: type, subparsers: argparse._SubParsersAction):$/;"	m	class:ShowAction
add_parser	projects/DensePose/query_db.py	/^    def add_parser(cls: type, subparsers: argparse._SubParsersAction):$/;"	m	class:PrintAction
add_parser	projects/DensePose/query_db.py	/^    def add_parser(cls: type, subparsers: argparse._SubParsersAction):$/;"	m	class:ShowAction
add_point_sup_config	projects/PointSup/point_sup/config.py	/^def add_point_sup_config(cfg):$/;"	f
add_pointrend_config	projects/PointRend/point_rend/config.py	/^def add_pointrend_config(cfg):$/;"	f
add_tensormask_config	projects/TensorMask/tensormask/config.py	/^def add_tensormask_config(cfg):$/;"	f
add_tridentnet_config	projects/TridentNet/tridentnet/config.py	/^def add_tridentnet_config(cfg):$/;"	f
adjust_block_compatibility	detectron2/modeling/backbone/regnet.py	/^def adjust_block_compatibility(ws, bs, gs):$/;"	f
after_backward	detectron2/engine/train_loop.py	/^    def after_backward(self):$/;"	m	class:HookBase
after_backward	detectron2/engine/train_loop.py	/^    def after_backward(self):$/;"	m	class:TrainerBase
after_step	detectron2/engine/hooks.py	/^    def after_step(self):$/;"	m	class:BestCheckpointer
after_step	detectron2/engine/hooks.py	/^    def after_step(self):$/;"	m	class:CallbackHook
after_step	detectron2/engine/hooks.py	/^    def after_step(self):$/;"	m	class:EvalHook
after_step	detectron2/engine/hooks.py	/^    def after_step(self):$/;"	m	class:IterationTimer
after_step	detectron2/engine/hooks.py	/^    def after_step(self):$/;"	m	class:LRScheduler
after_step	detectron2/engine/hooks.py	/^    def after_step(self):$/;"	m	class:PeriodicCheckpointer
after_step	detectron2/engine/hooks.py	/^    def after_step(self):$/;"	m	class:PeriodicWriter
after_step	detectron2/engine/hooks.py	/^    def after_step(self):$/;"	m	class:PreciseBN
after_step	detectron2/engine/hooks.py	/^    def after_step(self):$/;"	m	class:TorchMemoryStats
after_step	detectron2/engine/hooks.py	/^    def after_step(self):$/;"	m	class:TorchProfiler
after_step	detectron2/engine/train_loop.py	/^    def after_step(self):$/;"	m	class:HookBase
after_step	detectron2/engine/train_loop.py	/^    def after_step(self):$/;"	m	class:TrainerBase
after_train	detectron2/engine/hooks.py	/^    def after_train(self):$/;"	m	class:BestCheckpointer
after_train	detectron2/engine/hooks.py	/^    def after_train(self):$/;"	m	class:CallbackHook
after_train	detectron2/engine/hooks.py	/^    def after_train(self):$/;"	m	class:EvalHook
after_train	detectron2/engine/hooks.py	/^    def after_train(self):$/;"	m	class:IterationTimer
after_train	detectron2/engine/hooks.py	/^    def after_train(self):$/;"	m	class:PeriodicWriter
after_train	detectron2/engine/train_loop.py	/^    def after_train(self):$/;"	m	class:HookBase
after_train	detectron2/engine/train_loop.py	/^    def after_train(self):$/;"	m	class:SimpleTrainer
after_train	detectron2/engine/train_loop.py	/^    def after_train(self):$/;"	m	class:TrainerBase
alias	detectron2/export/shared.py	/^def alias(x, name, is_backward=False):$/;"	f
align_and_update_state_dicts	detectron2/checkpoint/c2_model_loading.py	/^def align_and_update_state_dicts(model_state_dict, ckpt_state_dict, c2_conversion=True):$/;"	f
all_gather	detectron2/utils/comm.py	/^def all_gather(data, group=None):$/;"	f
allowed_border	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                allowed_border=-1,$/;"	v
amp	configs/common/train.py	/^    amp=dict(enabled=False),  # options for Automatic Mixed Precision$/;"	v
anchor	projects/TensorMask/tensormask/arch.py	/^    anchor = dummy_gt_boxes[:, None, :] + anchor_boxes[:, :]  # [N,M,4]$/;"	v
anchor_center	projects/TensorMask/tensormask/arch.py	/^    anchor_center = (anchor_boxes[:, 2:] + anchor_boxes[:, :2]) \/ 2  # [M,2]$/;"	v
anchor_generator	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            anchor_generator=dict($/;"	v
anchor_generator	configs/common/models/mask_rcnn_c4.py	/^        anchor_generator=L(DefaultAnchorGenerator)($/;"	v
anchor_generator	configs/common/models/mask_rcnn_fpn.py	/^        anchor_generator=L(DefaultAnchorGenerator)($/;"	v
anchor_generator	configs/common/models/retinanet.py	/^    anchor_generator=L(DefaultAnchorGenerator)($/;"	v
anchor_matcher	configs/common/models/mask_rcnn_c4.py	/^        anchor_matcher=L(Matcher)($/;"	v
anchor_matcher	configs/common/models/mask_rcnn_fpn.py	/^        anchor_matcher=L(Matcher)($/;"	v
anchor_matcher	configs/common/models/retinanet.py	/^    anchor_matcher=L(Matcher)($/;"	v
anchor_size	projects/TensorMask/tensormask/arch.py	/^    anchor_size = ($/;"	v
anchors	detectron2/modeling/box_regression.py	/^        anchors = cat(anchors)$/;"	v
anchors	detectron2/modeling/box_regression.py	/^        anchors = type(anchors[0]).cat(anchors).tensor  # (R, 4)$/;"	v
ann_ids	detectron2/data/datasets/coco.py	/^        ann_ids = [ann["id"] for anns_per_image in anns for ann in anns_per_image]$/;"	v
ann_keys	detectron2/data/datasets/coco.py	/^    ann_keys = ["iscrowd", "bbox", "keypoints", "category_id"] + ($/;"	v
annotation_category_id	detectron2/data/datasets/coco.py	/^                annotation_category_id = obj["category_id"]$/;"	v
annotation_dir	datasets/prepare_ade20k_sem_seg.py	/^        annotation_dir = dataset_dir \/ "annotations" \/ name$/;"	v
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco\/annotations\/densepose_minival2014.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco\/annotations\/densepose_minival2014_100.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco\/annotations\/densepose_train2014.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco\/annotations\/densepose_valminusminival2014.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco\/annotations\/instances_train2017.json",$/;"	v
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco\/annotations\/instances_val2017.json",$/;"	v
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco\/annotations\/instances_val2017_100.json",$/;"	v
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco_cse\/densepose_minival2014_100_cse.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco_cse\/densepose_minival2014_cse.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco_cse\/densepose_train2014_cse.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="coco_cse\/densepose_valminusminival2014_cse.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="densepose_chimps\/densepose_chimps_cse_train.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="densepose_chimps\/densepose_chimps_cse_val.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="densepose_chimps\/densepose_chimps_densepose.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="lvis\/lvis_v0.5_plus_dp_train.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="lvis\/lvis_v0.5_plus_dp_val.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="posetrack2017\/densepose_posetrack_train2017.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/coco.py	/^        annotations_fpath="posetrack2017\/densepose_posetrack_val2017.json",$/;"	v	class:CocoDatasetInfo
annotations_fpath	projects/DensePose/densepose/data/datasets/lvis.py	/^        annotations_fpath="lvis\/densepose_lvis_v1_ds1_train_v1.json",$/;"	v
annotations_fpath	projects/DensePose/densepose/data/datasets/lvis.py	/^        annotations_fpath="lvis\/densepose_lvis_v1_ds1_val_v1.json",$/;"	v
annotations_fpath	projects/DensePose/densepose/data/datasets/lvis.py	/^        annotations_fpath="lvis\/densepose_lvis_v1_ds2_train_v1.json",$/;"	v
annotations_fpath	projects/DensePose/densepose/data/datasets/lvis.py	/^        annotations_fpath="lvis\/densepose_lvis_v1_ds2_val_v1.json",$/;"	v
annotations_fpath	projects/DensePose/densepose/data/datasets/lvis.py	/^        annotations_fpath="lvis\/densepose_lvis_v1_val_animals_100_v2.json",$/;"	v
annotations_to_instances	detectron2/data/detection_utils.py	/^def annotations_to_instances(annos, image_size, mask_format="polygon"):$/;"	f
annotations_to_instances	projects/PointSup/point_sup/detection_utils.py	/^def annotations_to_instances(annos, image_size, sample_points=0):$/;"	f
annotations_to_instances_rotated	detectron2/data/detection_utils.py	/^def annotations_to_instances_rotated(annos, image_size):$/;"	f
anns	detectron2/data/datasets/coco.py	/^    anns = [coco_api.imgToAnns[img_id] for img_id in img_ids]$/;"	v
apply_augmentations	detectron2/data/transforms/augmentation.py	/^    def apply_augmentations($/;"	m	class:AugInput
apply_augmentations	detectron2/data/transforms/augmentation.py	/^def apply_augmentations(augmentations: List[Union[Transform, Augmentation]], inputs):$/;"	f
apply_box	detectron2/data/transforms/transform.py	/^    def apply_box(self, box: np.ndarray) -> np.ndarray:$/;"	m	class:AlbumentationsTransform
apply_coords	detectron2/data/transforms/transform.py	/^    def apply_coords(self, coords):$/;"	m	class:ColorTransform
apply_coords	detectron2/data/transforms/transform.py	/^    def apply_coords(self, coords):$/;"	m	class:ExtentTransform
apply_coords	detectron2/data/transforms/transform.py	/^    def apply_coords(self, coords):$/;"	m	class:ResizeTransform
apply_coords	detectron2/data/transforms/transform.py	/^    def apply_coords(self, coords):$/;"	m	class:RotationTransform
apply_coords	detectron2/data/transforms/transform.py	/^    def apply_coords(self, coords: np.ndarray) -> np.ndarray:$/;"	m	class:AlbumentationsTransform
apply_coords	projects/PointRend/point_rend/color_augmentation.py	/^    def apply_coords(self, coords):$/;"	m	class:ColorAugSSDTransform
apply_deltas	detectron2/modeling/box_regression.py	/^    def apply_deltas(self, deltas, boxes):$/;"	m	class:Box2BoxTransform
apply_deltas	detectron2/modeling/box_regression.py	/^    def apply_deltas(self, deltas, boxes):$/;"	m	class:Box2BoxTransformLinear
apply_deltas	detectron2/modeling/box_regression.py	/^    def apply_deltas(self, deltas, boxes):$/;"	m	class:Box2BoxTransformRotated
apply_image	detectron2/data/transforms/transform.py	/^    def apply_image(self, image):$/;"	m	class:AlbumentationsTransform
apply_image	detectron2/data/transforms/transform.py	/^    def apply_image(self, img):$/;"	m	class:ColorTransform
apply_image	detectron2/data/transforms/transform.py	/^    def apply_image(self, img):$/;"	m	class:PILColorTransform
apply_image	detectron2/data/transforms/transform.py	/^    def apply_image(self, img, interp=None):$/;"	m	class:ExtentTransform
apply_image	detectron2/data/transforms/transform.py	/^    def apply_image(self, img, interp=None):$/;"	m	class:ResizeTransform
apply_image	detectron2/data/transforms/transform.py	/^    def apply_image(self, img, interp=None):$/;"	m	class:RotationTransform
apply_image	projects/PointRend/point_rend/color_augmentation.py	/^    def apply_image(self, img, interp=None):$/;"	m	class:ColorAugSSDTransform
apply_overrides	detectron2/config/lazy.py	/^    def apply_overrides(cfg, overrides: List[str]):$/;"	m	class:LazyConfig
apply_segmentation	detectron2/data/transforms/transform.py	/^    def apply_segmentation(self, segmentation):$/;"	m	class:ColorTransform
apply_segmentation	detectron2/data/transforms/transform.py	/^    def apply_segmentation(self, segmentation):$/;"	m	class:ExtentTransform
apply_segmentation	detectron2/data/transforms/transform.py	/^    def apply_segmentation(self, segmentation):$/;"	m	class:ResizeTransform
apply_segmentation	detectron2/data/transforms/transform.py	/^    def apply_segmentation(self, segmentation):$/;"	m	class:RotationTransform
apply_segmentation	detectron2/data/transforms/transform.py	/^    def apply_segmentation(self, segmentation: np.ndarray) -> np.ndarray:$/;"	m	class:AlbumentationsTransform
apply_segmentation	projects/PointRend/point_rend/color_augmentation.py	/^    def apply_segmentation(self, segmentation):$/;"	m	class:ColorAugSSDTransform
apply_sequential	projects/Rethinking-BatchNorm/configs/retinanet_SyncBNhead_SharedTraining.py	/^def apply_sequential(inputs, modules):$/;"	f
apply_transform	projects/DensePose/densepose/structures/data_relative.py	/^    def apply_transform(self, transforms, densepose_transform_data):$/;"	m	class:DensePoseDataRelative
apply_transform_gens	detectron2/data/transforms/augmentation.py	/^apply_transform_gens = apply_augmentations$/;"	v
area	detectron2/structures/boxes.py	/^    def area(self) -> torch.Tensor:$/;"	m	class:Boxes
area	detectron2/structures/masks.py	/^    def area(self):$/;"	m	class:PolygonMasks
area	detectron2/structures/rotated_boxes.py	/^    def area(self) -> torch.Tensor:$/;"	m	class:RotatedBoxes
area	detectron2/utils/visualizer.py	/^    def area(self):$/;"	m	class:GenericMask
args	detectron2/engine/launch.py	/^            args=($/;"	v
args	detectron2/evaluation/panoptic_evaluation.py	/^    args = parser.parse_args()$/;"	v
args	tools/analyze_model.py	/^    args = parser.parse_args()$/;"	v
as_dict	detectron2/data/catalog.py	/^    def as_dict(self):$/;"	m	class:Metadata
aspect_ratio_grouping	detectron2/data/build.py	/^        aspect_ratio_grouping=aspect_ratio_grouping,$/;"	v
aspect_ratios	configs/common/models/mask_rcnn_c4.py	/^            aspect_ratios=[0.5, 1.0, 2.0],$/;"	v
aspect_ratios	configs/common/models/mask_rcnn_fpn.py	/^            aspect_ratios=[0.5, 1.0, 2.0],$/;"	v
aspect_ratios	configs/common/models/retinanet.py	/^        aspect_ratios=[0.5, 1.0, 2.0],$/;"	v
assemble_rcnn_outputs_by_name	detectron2/export/caffe2_modeling.py	/^def assemble_rcnn_outputs_by_name(image_sizes, tensor_outputs, force_mask_on=False):$/;"	f
assertEqualsArrays	tests/data/test_rotation_transform.py	/^    def assertEqualsArrays(self, a1, a2):$/;"	m	class:TestRotationTransform
assert_fx_safe	detectron2/utils/tracing.py	/^def assert_fx_safe(condition: bool, message: str) -> torch.Tensor:$/;"	f
assert_instances_allclose	detectron2/utils/testing.py	/^def assert_instances_allclose(input, other, *, rtol=1e-5, msg="", size_as_tensor=False):$/;"	f
assign_boxes_to_levels	detectron2/modeling/poolers.py	/^def assign_boxes_to_levels($/;"	f
assign_cost_matrix_values	detectron2/tracking/iou_weighted_hungarian_bbox_iou_tracker.py	/^    def assign_cost_matrix_values(self, cost_matrix: np.ndarray, bbox_pairs: List) -> np.ndarray:$/;"	m	class:IOUWeightedHungarianBBoxIOUTracker
assign_cost_matrix_values	detectron2/tracking/vanilla_hungarian_bbox_iou_tracker.py	/^    def assign_cost_matrix_values(self, cost_matrix: np.ndarray, bbox_pairs: List) -> np.ndarray:$/;"	m	class:VanillaHungarianBBoxIOUTracker
assign_matrix	projects/TensorMask/tensormask/arch.py	/^    assign_matrix = (contain_matrix & scale_matrix & spatial_matrix).int()$/;"	v
assigner	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                assigner=dict($/;"	v
attention_pool	detectron2/modeling/backbone/mvit.py	/^def attention_pool(x, pool, norm=None):$/;"	f
augmentations	configs/common/data/coco.py	/^        augmentations=[$/;"	v
augmentations	projects/MViTv2/configs/common/coco_loader.py	/^        augmentations=[$/;"	v
augs	projects/MViTv2/configs/common/coco_loader.py	/^                    augs=[$/;"	v
author	docs/conf.py	/^author = "detectron2 contributors"$/;"	v
author	projects/DensePose/setup.py	/^    author="FAIR",$/;"	v
author	projects/TensorMask/setup.py	/^    author="FAIR",$/;"	v
author	setup.py	/^    author="FAIR",$/;"	v
auto_scale_workers	detectron2/engine/defaults.py	/^    def auto_scale_workers(cfg, num_workers: int):$/;"	f
autodoc_inherit_docstrings	docs/conf.py	/^autodoc_inherit_docstrings = False$/;"	v
autodoc_member_order	docs/conf.py	/^autodoc_member_order = "bysource"$/;"	v
autodoc_skip_member	docs/conf.py	/^def autodoc_skip_member(app, what, name, obj, skip, options):$/;"	f
av	projects/DensePose/tests/test_video_keyframe_dataset.py	/^    av = None$/;"	v
available_datasets	detectron2/data/build.py	/^    available_datasets = DatasetCatalog.keys()$/;"	v
backbone	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^        backbone=dict($/;"	v
backbone	configs/common/models/mask_rcnn_c4.py	/^    backbone=L(ResNet)($/;"	v
backbone	configs/common/models/mask_rcnn_fpn.py	/^    backbone=L(FPN)($/;"	v
backbone	configs/common/models/retinanet.py	/^    backbone=L(FPN)($/;"	v
backend	detectron2/engine/launch.py	/^            backend="NCCL" if has_gpu else "GLOO",$/;"	v
backward	detectron2/layers/deform_conv.py	/^    def backward(ctx, grad_output):$/;"	m	class:_DeformConv
backward	detectron2/layers/deform_conv.py	/^    def backward(ctx, grad_output):$/;"	m	class:_ModulatedDeformConv
backward	detectron2/layers/roi_align_rotated.py	/^    def backward(ctx, grad_output):$/;"	m	class:_ROIAlignRotated
backward	detectron2/layers/wrappers.py	/^    def backward(ctx, grad):$/;"	m	class:_NewEmptyTensorOp
backward	detectron2/modeling/roi_heads/cascade_rcnn.py	/^    def backward(ctx, grad_output):$/;"	m	class:_ScaleGradient
backward	projects/TensorMask/tensormask/layers/swap_align2nat.py	/^    def backward(ctx, gY):$/;"	m	class:_SwapAlign2Nat
base_lr	configs/common/optim.py	/^        base_lr="${..lr}",$/;"	v
batch_shuffle	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead_shuffle.py	/^def batch_shuffle(x):$/;"	f
batch_size	configs/Misc/torchvision_imagenet_R_50.py	/^    batch_size=256 \/\/ 8,$/;"	v
batch_size	configs/Misc/torchvision_imagenet_R_50.py	/^    batch_size=256 \/\/ 8,$/;"	v	class:ClassificationAcc
batch_size	detectron2/data/build.py	/^            batch_size=batch_size,$/;"	v
batch_size	detectron2/data/build.py	/^        batch_size = single_gpu_batch_size$/;"	v
batch_size	detectron2/data/build.py	/^        batch_size = total_batch_size \/\/ world_size$/;"	v
batch_size_per_image	configs/common/models/mask_rcnn_c4.py	/^        batch_size_per_image=256,$/;"	v
batch_size_per_image	configs/common/models/mask_rcnn_c4.py	/^        batch_size_per_image=512,$/;"	v
batch_size_per_image	configs/common/models/mask_rcnn_fpn.py	/^        batch_size_per_image=256,$/;"	v
batch_size_per_image	configs/common/models/mask_rcnn_fpn.py	/^        batch_size_per_image=512,$/;"	v
batch_unshuffle	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead_shuffle.py	/^def batch_unshuffle(x, idx_unshuffle):$/;"	f
batched_nms	detectron2/layers/nms.py	/^def batched_nms($/;"	f
batched_nms_rotated	detectron2/layers/nms.py	/^def batched_nms_rotated($/;"	f
bbox	detectron2/utils/visualizer.py	/^    def bbox(self):$/;"	m	class:GenericMask
bbox_coder	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                bbox_coder=dict($/;"	v
bbox_coder	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            bbox_coder=dict($/;"	v
bbox_head	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            bbox_head=dict($/;"	v
bbox_roi_extractor	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            bbox_roi_extractor=dict($/;"	v
before_step	detectron2/engine/hooks.py	/^    def before_step(self):$/;"	m	class:AutogradProfiler
before_step	detectron2/engine/hooks.py	/^    def before_step(self):$/;"	m	class:CallbackHook
before_step	detectron2/engine/hooks.py	/^    def before_step(self):$/;"	m	class:IterationTimer
before_step	detectron2/engine/hooks.py	/^    def before_step(self):$/;"	m	class:TorchProfiler
before_step	detectron2/engine/train_loop.py	/^    def before_step(self):$/;"	m	class:HookBase
before_step	detectron2/engine/train_loop.py	/^    def before_step(self):$/;"	m	class:TrainerBase
before_train	detectron2/engine/hooks.py	/^    def before_train(self):$/;"	m	class:CallbackHook
before_train	detectron2/engine/hooks.py	/^    def before_train(self):$/;"	m	class:IterationTimer
before_train	detectron2/engine/hooks.py	/^    def before_train(self):$/;"	m	class:LRScheduler
before_train	detectron2/engine/hooks.py	/^    def before_train(self):$/;"	m	class:PeriodicCheckpointer
before_train	detectron2/engine/train_loop.py	/^    def before_train(self):$/;"	m	class:HookBase
before_train	detectron2/engine/train_loop.py	/^    def before_train(self):$/;"	m	class:TrainerBase
bench	tests/layers/test_mask_ops.py	/^        def bench():$/;"	f	function:benchmark_paste.func
bench	tests/layers/test_roi_align.py	/^        def bench():$/;"	f	function:benchmark_roi_align.func
bench	tests/structures/test_rotated_boxes.py	/^        def bench():$/;"	f	function:benchmark_rotated_iou.func
benchmark_IPC	detectron2/data/benchmark.py	/^    def benchmark_IPC(self, num_iter, warmup=10):$/;"	m	class:DataLoaderBenchmark
benchmark_data	tools/benchmark.py	/^def benchmark_data(args):$/;"	f
benchmark_data_advanced	tools/benchmark.py	/^def benchmark_data_advanced(args):$/;"	f
benchmark_dataset	detectron2/data/benchmark.py	/^    def benchmark_dataset(self, num_iter, warmup=5):$/;"	m	class:DataLoaderBenchmark
benchmark_distributed	detectron2/data/benchmark.py	/^    def benchmark_distributed(self, num_iter, warmup=10):$/;"	m	class:DataLoaderBenchmark
benchmark_eval	tools/benchmark.py	/^def benchmark_eval(args):$/;"	f
benchmark_mapper	detectron2/data/benchmark.py	/^    def benchmark_mapper(self, num_iter, warmup=5):$/;"	m	class:DataLoaderBenchmark
benchmark_paste	tests/layers/test_mask_ops.py	/^def benchmark_paste():$/;"	f
benchmark_roi_align	tests/layers/test_roi_align.py	/^def benchmark_roi_align():$/;"	f
benchmark_rotated_iou	tests/structures/test_rotated_boxes.py	/^def benchmark_rotated_iou():$/;"	f
benchmark_train	tools/benchmark.py	/^def benchmark_train(args):$/;"	f
benchmark_workers	detectron2/data/benchmark.py	/^    def benchmark_workers(self, num_iter, warmup=10):$/;"	m	class:DataLoaderBenchmark
beta	detectron2/modeling/box_regression.py	/^            beta=smooth_l1_beta,$/;"	v
betas	configs/common/optim.py	/^    betas=(0.9, 0.999),$/;"	v
block_class	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    block_class=ResBottleneckBlock,$/;"	v
block_class	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    block_class=ResBottleneckBlock,$/;"	v
block_class	configs/common/models/mask_rcnn_c4.py	/^            block_class=BottleneckBlock,$/;"	v
block_class	configs/new_baselines/mask_rcnn_regnetx_4gf_dds_FPN_100ep_LSJ.py	/^    block_class=ResBottleneckBlock,$/;"	v
block_class	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    block_class=ResBottleneckBlock,$/;"	v
blocks_dict	projects/DensePose/densepose/modeling/hrnet.py	/^blocks_dict = {"BASIC": BasicBlock, "BOTTLENECK": Bottleneck}$/;"	v
bottleneck_channels	configs/common/models/mask_rcnn_c4.py	/^            bottleneck_channels=512,$/;"	v
bottom_up	configs/common/models/mask_rcnn_fpn.py	/^        bottom_up=L(ResNet)($/;"	v
bottom_up	configs/common/models/retinanet.py	/^        bottom_up=L(ResNet)($/;"	v
box2box_transform	configs/common/models/cascade_rcnn.py	/^            box2box_transform=L(Box2BoxTransform)(weights=(w1, w1, w2, w2)),$/;"	v
box2box_transform	configs/common/models/mask_rcnn_c4.py	/^            box2box_transform=L(Box2BoxTransform)(weights=(10, 10, 5, 5)),$/;"	v
box2box_transform	configs/common/models/mask_rcnn_c4.py	/^        box2box_transform=L(Box2BoxTransform)(weights=[1.0, 1.0, 1.0, 1.0]),$/;"	v
box2box_transform	configs/common/models/mask_rcnn_fpn.py	/^            box2box_transform=L(Box2BoxTransform)(weights=(10, 10, 5, 5)),$/;"	v
box2box_transform	configs/common/models/mask_rcnn_fpn.py	/^        box2box_transform=L(Box2BoxTransform)(weights=[1.0, 1.0, 1.0, 1.0]),$/;"	v
box2box_transform	configs/common/models/retinanet.py	/^    box2box_transform=L(Box2BoxTransform)(weights=[1.0, 1.0, 1.0, 1.0]),$/;"	v
box2box_transform	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^            box2box_transform=L(Box2BoxTransform)(weights=(w1, w1, w2, w2)),$/;"	v
box2box_transform	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^            box2box_transform=L(Box2BoxTransform)(weights=(w1, w1, w2, w2)),$/;"	v
box2box_transform	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^            box2box_transform=L(Box2BoxTransform)(weights=(w1, w1, w2, w2)),$/;"	v
box2box_transform	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            box2box_transform=L(Box2BoxTransform)(weights=(w1, w1, w2, w2)),$/;"	v
box2box_transform	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            box2box_transform=L(Box2BoxTransform)(weights=(w1, w1, w2, w2)),$/;"	v
box2box_transform	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            box2box_transform=L(Box2BoxTransform)(weights=(w1, w1, w2, w2)),$/;"	v
box2box_transform	tests/modeling/test_fast_rcnn.py	/^            box2box_transform=Box2BoxTransform(weights=(10, 10, 5, 5)),$/;"	v	class:FastRCNNTest.test_predict_boxes_tracing.Model
box2box_transform	tests/modeling/test_fast_rcnn.py	/^            box2box_transform=Box2BoxTransform(weights=(10, 10, 5, 5)),$/;"	v	class:FastRCNNTest.test_predict_probs_tracing.Model
box_head	configs/common/models/mask_rcnn_fpn.py	/^        box_head=L(FastRCNNConvFCHead)($/;"	v
box_heads	configs/common/models/cascade_rcnn.py	/^    box_heads=[$/;"	v
box_heads	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^    box_heads=[$/;"	v
box_heads	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    box_heads=[$/;"	v
box_heads	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^    box_heads=[$/;"	v
box_heads	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^    box_heads=[$/;"	v
box_heads	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^    box_heads=[$/;"	v
box_heads	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^    box_heads=[$/;"	v
box_in_features	configs/common/models/mask_rcnn_fpn.py	/^        box_in_features=["p2", "p3", "p4", "p5"],$/;"	v
box_pooler	configs/common/models/mask_rcnn_fpn.py	/^        box_pooler=L(ROIPooler)($/;"	v
box_predictor	configs/common/models/mask_rcnn_c4.py	/^        box_predictor=L(FastRCNNOutputLayers)($/;"	v
box_predictor	configs/common/models/mask_rcnn_fpn.py	/^        box_predictor=L(FastRCNNOutputLayers)($/;"	v
box_predictors	configs/common/models/cascade_rcnn.py	/^    box_predictors=[$/;"	v
box_predictors	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^    box_predictors=[$/;"	v
box_predictors	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    box_predictors=[$/;"	v
box_predictors	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^    box_predictors=[$/;"	v
box_predictors	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^    box_predictors=[$/;"	v
box_predictors	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^    box_predictors=[$/;"	v
box_predictors	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^    box_predictors=[$/;"	v
box_reg_loss	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def box_reg_loss(self, proposal_boxes, gt_boxes, pred_deltas, gt_classes):$/;"	m	class:FastRCNNOutputLayers
box_tensors	tests/structures/test_instances.py	/^            box_tensors = torch.tensor([[5, 5, 10, 10], [1, 1, 2, 3]])$/;"	v	class:TestInstances.test_script_has.f
box_tensors	tests/structures/test_instances.py	/^            box_tensors = torch.tensor([[5, 5, 10, 10], [1, 1, 2, 3]])$/;"	v	class:TestInstances.test_script_len.g
box_tensors	tests/structures/test_instances.py	/^            box_tensors = torch.tensor([[5, 5, 10, 10], [1, 1, 2, 3]])$/;"	v	class:TestInstances.test_script_to.f
boxlist_to_tensor	detectron2/evaluation/rotated_coco_evaluation.py	/^    def boxlist_to_tensor(boxlist, output_box_dim):$/;"	m	class:RotatedCOCOeval
brightness	projects/PointRend/point_rend/color_augmentation.py	/^    def brightness(self, img):$/;"	m	class:ColorAugSSDTransform
broadcast_buffers	configs/common/train.py	/^        broadcast_buffers=False,$/;"	v
build_anchor_generator	detectron2/modeling/anchor_generator.py	/^def build_anchor_generator(cfg, input_shape):$/;"	f
build_augmentation	detectron2/data/detection_utils.py	/^def build_augmentation(cfg, is_train):$/;"	f
build_augmentation	projects/DensePose/densepose/data/dataset_mapper.py	/^def build_augmentation(cfg, is_train):$/;"	f
build_backbone	detectron2/modeling/backbone/build.py	/^def build_backbone(cfg, input_shape=None):$/;"	f
build_batch_data_loader	detectron2/data/build.py	/^def build_batch_data_loader($/;"	f
build_bootstrap_dataset	projects/DensePose/densepose/data/build.py	/^def build_bootstrap_dataset(dataset_name: str, cfg: CfgNode) -> Sequence[torch.Tensor]:$/;"	f
build_box_head	detectron2/modeling/roi_heads/box_head.py	/^def build_box_head(cfg, input_shape):$/;"	f
build_combined_loader	projects/DensePose/densepose/data/build.py	/^def build_combined_loader(cfg: CfgNode, loaders: Collection[Loader], ratios: Sequence[float]):$/;"	f
build_cost_matrix	detectron2/tracking/hungarian_tracker.py	/^    def build_cost_matrix(self, instances: Instances, prev_instances: Instances) -> np.ndarray:$/;"	m	class:BaseHungarianTracker
build_cost_matrix	detectron2/tracking/vanilla_hungarian_bbox_iou_tracker.py	/^    def build_cost_matrix(self, instances: Instances, prev_instances: Instances) -> np.ndarray:$/;"	m	class:VanillaHungarianBBoxIOUTracker
build_data_filter	projects/DensePose/densepose/data/build.py	/^def build_data_filter(cfg: CfgNode):$/;"	f
build_data_loader	configs/Misc/torchvision_imagenet_R_50.py	/^def build_data_loader(dataset, batch_size, num_workers, training=True):$/;"	f
build_data_sampler	projects/DensePose/densepose/data/build.py	/^def build_data_sampler(cfg: CfgNode, sampler_cfg: CfgNode, embedder: Optional[torch.nn.Module]):$/;"	f
build_densepose_data_filter	projects/DensePose/densepose/modeling/build.py	/^def build_densepose_data_filter(cfg: CfgNode):$/;"	f
build_densepose_embedder	projects/DensePose/densepose/modeling/build.py	/^def build_densepose_embedder(cfg: CfgNode) -> Optional[nn.Module]:$/;"	f
build_densepose_evaluator_storage	projects/DensePose/densepose/evaluation/evaluator.py	/^def build_densepose_evaluator_storage(cfg: CfgNode, output_folder: str):$/;"	f
build_densepose_head	projects/DensePose/densepose/modeling/build.py	/^def build_densepose_head(cfg: CfgNode, input_channels: int):$/;"	f
build_densepose_losses	projects/DensePose/densepose/modeling/build.py	/^def build_densepose_losses(cfg: CfgNode):$/;"	f
build_densepose_predictor	projects/DensePose/densepose/modeling/build.py	/^def build_densepose_predictor(cfg: CfgNode, input_channels: int):$/;"	f
build_detection_test_loader	detectron2/data/build.py	/^def build_detection_test_loader($/;"	f
build_detection_test_loader	projects/DensePose/densepose/data/build.py	/^def build_detection_test_loader(cfg, dataset_name, mapper=None):$/;"	f
build_detection_train_loader	detectron2/data/build.py	/^def build_detection_train_loader($/;"	f
build_detection_train_loader	projects/DensePose/densepose/data/build.py	/^def build_detection_train_loader(cfg: CfgNode, mapper=None):$/;"	f
build_evaluator	detectron2/engine/defaults.py	/^    def build_evaluator(cls, cfg, dataset_name):$/;"	m	class:DefaultTrainer
build_evaluator	projects/DeepLab/train_net.py	/^    def build_evaluator(cls, cfg, dataset_name, output_folder=None):$/;"	m	class:Trainer
build_evaluator	projects/DensePose/densepose/engine/trainer.py	/^    def build_evaluator($/;"	m	class:Trainer
build_evaluator	projects/Panoptic-DeepLab/train_net.py	/^    def build_evaluator(cls, cfg, dataset_name, output_folder=None):$/;"	m	class:Trainer
build_evaluator	projects/PointRend/train_net.py	/^    def build_evaluator(cls, cfg, dataset_name, output_folder=None):$/;"	m	class:Trainer
build_evaluator	projects/PointSup/train_net.py	/^    def build_evaluator(cls, cfg, dataset_name, output_folder=None):$/;"	m	class:Trainer
build_evaluator	projects/TensorMask/train_net.py	/^    def build_evaluator(cls, cfg, dataset_name, output_folder=None):$/;"	m	class:Trainer
build_evaluator	projects/TridentNet/train_net.py	/^    def build_evaluator(cls, cfg, dataset_name, output_folder=None):$/;"	m	class:Trainer
build_evaluator	tools/train_net.py	/^    def build_evaluator(cls, cfg, dataset_name, output_folder=None):$/;"	m	class:Trainer
build_evaluator	tools/train_net.py	/^def build_evaluator(cfg, dataset_name, output_folder=None):$/;"	f
build_frame_selector	projects/DensePose/densepose/data/build.py	/^def build_frame_selector(cfg: CfgNode):$/;"	f
build_hooks	detectron2/engine/defaults.py	/^    def build_hooks(self):$/;"	m	class:DefaultTrainer
build_hrfpn_backbone	projects/DensePose/densepose/modeling/hrfpn.py	/^def build_hrfpn_backbone(cfg, input_shape: ShapeSpec) -> HRFPN:$/;"	f
build_inference_based_loader	projects/DensePose/densepose/data/build.py	/^def build_inference_based_loader($/;"	f
build_inference_based_loaders	projects/DensePose/densepose/data/build.py	/^def build_inference_based_loaders($/;"	f
build_ins_embed_branch	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^def build_ins_embed_branch(cfg, input_shape):$/;"	f
build_keypoint_head	detectron2/modeling/roi_heads/keypoint_head.py	/^def build_keypoint_head(cfg, input_shape):$/;"	f
build_lr_scheduler	detectron2/engine/defaults.py	/^    def build_lr_scheduler(cls, cfg, optimizer):$/;"	m	class:DefaultTrainer
build_lr_scheduler	detectron2/solver/build.py	/^def build_lr_scheduler(cfg: CfgNode, optimizer: torch.optim.Optimizer) -> LRScheduler:$/;"	f
build_lr_scheduler	projects/DeepLab/deeplab/build_solver.py	/^def build_lr_scheduler(cfg: CfgNode, optimizer: torch.optim.Optimizer) -> LRScheduler:$/;"	f
build_lr_scheduler	projects/DeepLab/train_net.py	/^    def build_lr_scheduler(cls, cfg, optimizer):$/;"	m	class:Trainer
build_lr_scheduler	projects/Panoptic-DeepLab/train_net.py	/^    def build_lr_scheduler(cls, cfg, optimizer):$/;"	m	class:Trainer
build_mask_head	detectron2/modeling/roi_heads/mask_head.py	/^def build_mask_head(cfg, input_shape):$/;"	f
build_model	detectron2/engine/defaults.py	/^    def build_model(cls, cfg):$/;"	m	class:DefaultTrainer
build_model	detectron2/modeling/meta_arch/build.py	/^def build_model(cfg):$/;"	f
build_optimizer	detectron2/engine/defaults.py	/^    def build_optimizer(cls, cfg, model):$/;"	m	class:DefaultTrainer
build_optimizer	detectron2/solver/build.py	/^def build_optimizer(cfg: CfgNode, model: torch.nn.Module) -> torch.optim.Optimizer:$/;"	f
build_optimizer	projects/DensePose/densepose/engine/trainer.py	/^    def build_optimizer(cls, cfg: CfgNode, model: nn.Module):$/;"	m	class:Trainer
build_optimizer	projects/Panoptic-DeepLab/train_net.py	/^    def build_optimizer(cls, cfg, model):$/;"	m	class:Trainer
build_point_head	projects/PointRend/point_rend/point_head.py	/^def build_point_head(cfg, input_channels):$/;"	f
build_pose_hrnet_backbone	projects/DensePose/densepose/modeling/hrnet.py	/^def build_pose_hrnet_backbone(cfg, input_shape: ShapeSpec):$/;"	f
build_proposal_generator	detectron2/modeling/proposal_generator/build.py	/^def build_proposal_generator(cfg, input_shape):$/;"	f
build_resnet_backbone	detectron2/modeling/backbone/resnet.py	/^def build_resnet_backbone(cfg, input_shape):$/;"	f
build_resnet_deeplab_backbone	projects/DeepLab/deeplab/resnet.py	/^def build_resnet_deeplab_backbone(cfg, input_shape):$/;"	f
build_resnet_fpn_backbone	detectron2/modeling/backbone/fpn.py	/^def build_resnet_fpn_backbone(cfg, input_shape: ShapeSpec):$/;"	f
build_retinanet_resnet_fpn_backbone	detectron2/modeling/backbone/fpn.py	/^def build_retinanet_resnet_fpn_backbone(cfg, input_shape: ShapeSpec):$/;"	f
build_roi_heads	detectron2/modeling/roi_heads/roi_heads.py	/^def build_roi_heads(cfg, input_shape):$/;"	f
build_rpn_head	detectron2/modeling/proposal_generator/rpn.py	/^def build_rpn_head(cfg, input_shape):$/;"	f
build_sem_seg_head	detectron2/modeling/meta_arch/semantic_seg.py	/^def build_sem_seg_head(cfg, input_shape):$/;"	f
build_sem_seg_train_aug	projects/DeepLab/train_net.py	/^def build_sem_seg_train_aug(cfg):$/;"	f
build_sem_seg_train_aug	projects/Panoptic-DeepLab/train_net.py	/^def build_sem_seg_train_aug(cfg):$/;"	f
build_sem_seg_train_aug	projects/PointRend/train_net.py	/^def build_sem_seg_train_aug(cfg):$/;"	f
build_test_loader	detectron2/engine/defaults.py	/^    def build_test_loader(cls, cfg, dataset_name):$/;"	m	class:DefaultTrainer
build_test_loader	projects/DensePose/densepose/engine/trainer.py	/^    def build_test_loader(cls, cfg: CfgNode, dataset_name):$/;"	m	class:Trainer
build_tracker_head	detectron2/tracking/base_tracker.py	/^def build_tracker_head(cfg: CfgNode_) -> BaseTracker:$/;"	f
build_train_loader	detectron2/engine/defaults.py	/^    def build_train_loader(cls, cfg):$/;"	m	class:DefaultTrainer
build_train_loader	projects/DeepLab/train_net.py	/^    def build_train_loader(cls, cfg):$/;"	m	class:Trainer
build_train_loader	projects/DensePose/densepose/engine/trainer.py	/^    def build_train_loader(cls, cfg: CfgNode):$/;"	m	class:Trainer
build_train_loader	projects/Panoptic-DeepLab/train_net.py	/^    def build_train_loader(cls, cfg):$/;"	m	class:Trainer
build_train_loader	projects/PointRend/train_net.py	/^    def build_train_loader(cls, cfg):$/;"	m	class:Trainer
build_train_loader	projects/PointSup/train_net.py	/^    def build_train_loader(cls, cfg):$/;"	m	class:Trainer
build_transform	projects/DensePose/densepose/data/build.py	/^def build_transform(cfg: CfgNode, data_type: str):$/;"	f
build_transform_gen	detectron2/data/detection_utils.py	/^build_transform_gen = build_augmentation$/;"	v
build_trident_resnet_backbone	projects/TridentNet/tridentnet/trident_backbone.py	/^def build_trident_resnet_backbone(cfg, input_shape):$/;"	f
build_video_list_dataset	projects/DensePose/densepose/data/build.py	/^def build_video_list_dataset(meta: Metadata, cfg: CfgNode):$/;"	f
build_writers	detectron2/engine/defaults.py	/^    def build_writers(self):$/;"	m	class:DefaultTrainer
build_writers	projects/DensePose/densepose/engine/trainer.py	/^    def build_writers(self):$/;"	m	class:Trainer
c2_postprocess	detectron2/export/c10.py	/^    def c2_postprocess(im_info, rpn_rois, rpn_roi_probs, tensor_mode):$/;"	m	class:Caffe2RPN
c2_preprocess	detectron2/export/c10.py	/^    def c2_preprocess(box_lists):$/;"	m	class:Caffe2ROIPooler
caffe2_fast_rcnn_outputs_inference	detectron2/export/c10.py	/^def caffe2_fast_rcnn_outputs_inference(tensor_mode, box_predictor, predictions, proposals):$/;"	f
caffe2_keypoint_rcnn_inference	detectron2/export/c10.py	/^def caffe2_keypoint_rcnn_inference(use_heatmap_max_keypoint, pred_keypoint_logits, pred_instances):$/;"	f
caffe2_mask_rcnn_inference	detectron2/export/c10.py	/^def caffe2_mask_rcnn_inference(pred_mask_logits, pred_instances):$/;"	f
calculate_uncertainty	projects/PointRend/point_rend/mask_head.py	/^def calculate_uncertainty(logits, classes):$/;"	f
calculate_uncertainty	projects/PointRend/point_rend/semantic_seg.py	/^def calculate_uncertainty(sem_seg_logits):$/;"	f
canvas	detectron2/utils/colormap.py	/^    canvas = np.random.rand(H * size, W * size, 3).astype("float32")$/;"	v
cat	detectron2/layers/wrappers.py	/^def cat(tensors: List[torch.Tensor], dim: int = 0):$/;"	f
cat	detectron2/structures/boxes.py	/^    def cat(cls, boxes_list: List["Boxes"]) -> "Boxes":$/;"	m	class:Boxes
cat	detectron2/structures/instances.py	/^    def cat(instance_lists: List["Instances"]) -> "Instances":$/;"	m	class:Instances
cat	detectron2/structures/keypoints.py	/^    def cat(keypoints_list: List["Keypoints"]) -> "Keypoints":$/;"	m	class:Keypoints
cat	detectron2/structures/masks.py	/^    def cat(bitmasks_list: List["BitMasks"]) -> "BitMasks":$/;"	m	class:BitMasks
cat	detectron2/structures/masks.py	/^    def cat(polymasks_list: List["PolygonMasks"]) -> "PolygonMasks":$/;"	m	class:PolygonMasks
cat	detectron2/structures/rotated_boxes.py	/^    def cat(cls, boxes_list: List["RotatedBoxes"]) -> "RotatedBoxes":$/;"	m	class:RotatedBoxes
center_losses	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def center_losses(self, predictions, targets, weights):$/;"	m	class:PanopticDeepLabInsEmbedHead
cfg	projects/Rethinking-BatchNorm/retinanet-eval-domain-specific.py	/^    cfg = LazyConfig.load_rel(".\/configs\/retinanet_SyncBNhead.py")$/;"	v
cfg	tools/analyze_model.py	/^    cfg = setup(args)$/;"	v
ch	detectron2/utils/logger.py	/^        ch = logging.StreamHandler(stream=sys.stdout)$/;"	v
channels	configs/common/models/mask_rcnn_c4.py	/^                channels="${...res5.out_channels}",$/;"	v
check_if_dynamo_compiling	detectron2/layers/wrappers.py	/^def check_if_dynamo_compiling():$/;"	f
check_image_size	detectron2/data/detection_utils.py	/^def check_image_size(dataset_dict, image):$/;"	f
check_metadata_consistency	detectron2/data/detection_utils.py	/^def check_metadata_consistency(key, dataset_names):$/;"	f
check_set_pb_arg	detectron2/export/shared.py	/^def check_set_pb_arg(pb, arg_name, arg_attr, arg_value, allow_override=False):$/;"	f
checkpoint	projects/Rethinking-BatchNorm/retinanet-eval-domain-specific.py	/^    checkpoint = sys.argv[1]$/;"	v
checkpointer	configs/common/train.py	/^    checkpointer=dict(period=5000, max_to_keep=100),  # options for PeriodicCheckpointer$/;"	v
choices	tools/analyze_model.py	/^        choices=["flop", "activation", "parameter", "structure"],$/;"	v
ciou_loss	detectron2/layers/losses.py	/^def ciou_loss($/;"	f
class_names	detectron2/data/build.py	/^            class_names = MetadataCatalog.get(names[0]).thing_classes$/;"	v
cleanup_annotation	projects/DensePose/densepose/structures/data_relative.py	/^    def cleanup_annotation(annotation):$/;"	m	class:DensePoseDataRelative
clear_histograms	detectron2/utils/events.py	/^    def clear_histograms(self):$/;"	m	class:EventStorage
clear_images	detectron2/utils/events.py	/^    def clear_images(self):$/;"	m	class:EventStorage
clip	detectron2/structures/boxes.py	/^    def clip(self, box_size: Tuple[int, int]) -> None:$/;"	m	class:Boxes
clip	detectron2/structures/rotated_boxes.py	/^    def clip(self, box_size: Tuple[int, int], clip_angle_threshold: float = 1.0) -> None:$/;"	m	class:RotatedBoxes
clip_grad_norm	detectron2/solver/build.py	/^    def clip_grad_norm(p: _GradientClipperInput):$/;"	f	function:_create_gradient_clipper
clip_grad_value	detectron2/solver/build.py	/^    def clip_grad_value(p: _GradientClipperInput):$/;"	f	function:_create_gradient_clipper
clone	detectron2/structures/boxes.py	/^    def clone(self) -> "Boxes":$/;"	m	class:Boxes
clone	detectron2/structures/rotated_boxes.py	/^    def clone(self) -> "RotatedBoxes":$/;"	m	class:RotatedBoxes
close	detectron2/utils/events.py	/^    def close(self):$/;"	m	class:EventWriter
close	detectron2/utils/events.py	/^    def close(self):$/;"	m	class:JSONWriter
close	detectron2/utils/events.py	/^    def close(self):$/;"	m	class:TensorboardXWriter
cls_agnostic_bbox_reg	configs/common/models/cascade_rcnn.py	/^            cls_agnostic_bbox_reg=True,$/;"	v
cls_agnostic_bbox_reg	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^            cls_agnostic_bbox_reg=True,$/;"	v
cls_agnostic_bbox_reg	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^            cls_agnostic_bbox_reg=True,$/;"	v
cls_agnostic_bbox_reg	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^            cls_agnostic_bbox_reg=True,$/;"	v
cls_agnostic_bbox_reg	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            cls_agnostic_bbox_reg=True,$/;"	v
cls_agnostic_bbox_reg	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            cls_agnostic_bbox_reg=True,$/;"	v
cls_agnostic_bbox_reg	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            cls_agnostic_bbox_reg=True,$/;"	v
cmdclass	projects/TensorMask/setup.py	/^    cmdclass={"build_ext": torch.utils.cpp_extension.BuildExtension},$/;"	v
cmdclass	setup.py	/^    cmdclass={"build_ext": torch.utils.cpp_extension.BuildExtension},$/;"	v
coco_dt	detectron2/evaluation/coco_evaluation.py	/^    coco_dt = coco_gt.loadRes(coco_results)$/;"	v
coco_dt	projects/DensePose/densepose/evaluation/evaluator.py	/^    coco_dt = coco_gt.loadRes(coco_results)$/;"	v
coco_eval	detectron2/evaluation/coco_evaluation.py	/^            coco_eval = COCOevalMaxDets(coco_gt, coco_dt, iou_type)$/;"	v
coco_eval	detectron2/evaluation/coco_evaluation.py	/^    coco_eval = cocoeval_fn(coco_gt, coco_dt, iou_type)$/;"	v
coco_eval	projects/DensePose/densepose/evaluation/evaluator.py	/^        coco_eval = DensePoseCocoEval($/;"	v
coco_results	detectron2/evaluation/coco_evaluation.py	/^        coco_results = copy.deepcopy(coco_results)$/;"	v
coco_test_fun	projects/DensePose/tests/test_dataset_loaded_annotations.py	/^def coco_test_fun(dataset_info):$/;"	f
cocofy_lvis	datasets/prepare_cocofied_lvis.py	/^def cocofy_lvis(input_filename, output_filename):$/;"	f
collate_fn	detectron2/data/build.py	/^            collate_fn=operator.itemgetter(0),  # don't batch, but yield individual elements$/;"	v
collate_fn	detectron2/data/build.py	/^            collate_fn=trivial_batch_collator if collate_fn is None else collate_fn,$/;"	v
collate_fn	detectron2/data/build.py	/^        collate_fn=collate_fn,$/;"	v
collect_env_info	detectron2/utils/collect_env.py	/^def collect_env_info():$/;"	f
collect_torch_env	detectron2/utils/collect_env.py	/^def collect_torch_env():$/;"	f
colormap	detectron2/utils/colormap.py	/^def colormap(rgb=False, maximum=255):$/;"	f
combine_detection_dataset_dicts	projects/DensePose/densepose/data/build.py	/^def combine_detection_dataset_dicts($/;"	f
combine_semantic_and_instance_outputs	detectron2/modeling/meta_arch/panoptic_fpn.py	/^def combine_semantic_and_instance_outputs($/;"	f
combined_general_specific_keep_predicate	projects/DensePose/densepose/data/build.py	/^    def combined_general_specific_keep_predicate(instance: Instance) -> bool:$/;"	f	function:_get_train_keep_instance_predicate
combined_predicate	projects/DensePose/densepose/data/build.py	/^    def combined_predicate(instance: Instance) -> bool:$/;"	f	function:_maybe_create_specific_keep_instance_predicate
common_stride	configs/common/models/panoptic_fpn.py	/^    common_stride=4,$/;"	v
compress_quantized_densepose_chart_result	projects/DensePose/densepose/structures/chart_result.py	/^def compress_quantized_densepose_chart_result($/;"	f
computeDPIoU	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def computeDPIoU(self, imgId, catId):$/;"	m	class:DensePoseCocoEval
computeIoU	detectron2/evaluation/rotated_coco_evaluation.py	/^    def computeIoU(self, imgId: int, catId: int):$/;"	m	class:RotatedCOCOeval
computeIoU	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def computeIoU(self, imgId, catId):$/;"	m	class:DensePoseCocoEval
computeOgps	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def computeOgps(self, imgId, catId):$/;"	m	class:DensePoseCocoEval
computeOgps_single_pair	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def computeOgps_single_pair(self, dt, gt, py, px, pt_mask):$/;"	m	class:DensePoseCocoEval
computeOgps_single_pair_cse	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def computeOgps_single_pair_cse($/;"	m	class:DensePoseCocoEval
computeOgps_single_pair_iuv	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def computeOgps_single_pair_iuv(self, dt, gt, ipoints, upoints, vpoints):$/;"	m	class:DensePoseCocoEval
computeOks	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def computeOks(self, imgId, catId):$/;"	m	class:DensePoseCocoEval
compute_ctrness_targets	detectron2/modeling/meta_arch/fcos.py	/^    def compute_ctrness_targets(self, anchors: List[Boxes], gt_boxes: List[torch.Tensor]):$/;"	m	class:FCOS
compute_iou_dt_gt	detectron2/evaluation/rotated_coco_evaluation.py	/^    def compute_iou_dt_gt(self, dt, gt, is_crowd):$/;"	m	class:RotatedCOCOeval
compute_seconds_per_iter	detectron2/evaluation/evaluator.py	/^            compute_seconds_per_iter = total_compute_time \/ iters_after_start$/;"	v
concat_all_gather	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead_shuffle.py	/^def concat_all_gather(input):$/;"	f
configurable	detectron2/config/config.py	/^def configurable(init_func=None, *, from_config=None):$/;"	f
configure_optimizers	tools/lightning_train_net.py	/^    def configure_optimizers(self):$/;"	m	class:TrainingModule
constants	configs/common/data/constants.py	/^constants = dict($/;"	v
constants	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^constants = model_zoo.get_config("common\/data\/constants.py").constants$/;"	v
constants	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^constants = model_zoo.get_config("common\/data\/constants.py").constants$/;"	v
construct_init_net_from_params	detectron2/export/shared.py	/^def construct_init_net_from_params($/;"	f
contain_matrix	projects/TensorMask/tensormask/arch.py	/^    contain_matrix = torch.all(union == anchor, dim=2)  # [N,M]$/;"	v
contain_targets	detectron2/export/shared.py	/^    def contain_targets(op_ssa):$/;"	f	function:rename_op_input
context_to_image_bgr	projects/DensePose/densepose/vis/densepose_results.py	/^    def context_to_image_bgr(self, context):$/;"	m	class:DensePoseMaskedColormapResultsVisualizer
context_to_image_bgr	projects/DensePose/densepose/vis/densepose_results.py	/^    def context_to_image_bgr(self, context):$/;"	m	class:DensePoseResultsMplContourVisualizer
context_to_image_bgr	projects/DensePose/densepose/vis/densepose_results.py	/^    def context_to_image_bgr(self, context):$/;"	m	class:DensePoseResultsVisualizer
contrast	projects/PointRend/point_rend/color_augmentation.py	/^    def contrast(self, img):$/;"	m	class:ColorAugSSDTransform
conv2d	detectron2/modeling/backbone/regnet.py	/^def conv2d(w_in, w_out, k, *, stride=1, groups=1, bias=False):$/;"	f
conv3x3	projects/DensePose/densepose/modeling/hrnet.py	/^def conv3x3(in_planes, out_planes, stride=1):$/;"	f
conv_dims	configs/common/models/cascade_rcnn.py	/^            conv_dims=[],$/;"	v
conv_dims	configs/common/models/keypoint_rcnn_fpn.py	/^        conv_dims=[512] * 8,$/;"	v
conv_dims	configs/common/models/mask_rcnn_c4.py	/^            conv_dims=[256],$/;"	v
conv_dims	configs/common/models/mask_rcnn_fpn.py	/^            conv_dims=[256, 256, 256, 256, 256],$/;"	v
conv_dims	configs/common/models/mask_rcnn_fpn.py	/^            conv_dims=[],$/;"	v
conv_dims	configs/common/models/panoptic_fpn.py	/^    conv_dims=128,$/;"	v
conv_dims	configs/common/models/retinanet.py	/^        conv_dims=[256, 256, 256, 256],$/;"	v
conv_dims	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^            conv_dims=[256, 256, 256, 256],$/;"	v
conv_dims	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^            conv_dims=[256, 256, 256, 256],$/;"	v
conv_dims	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^            conv_dims=[256, 256, 256, 256],$/;"	v
conv_dims	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            conv_dims=[256, 256, 256, 256],$/;"	v
conv_dims	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            conv_dims=[256, 256, 256, 256],$/;"	v
conv_dims	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            conv_dims=[256, 256, 256, 256],$/;"	v
conv_norm	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^            conv_norm=lambda c: NaiveSyncBatchNorm(c, stats_mode="N"),$/;"	v
conv_norm	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^            conv_norm="LN",$/;"	v
conv_norm	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^            conv_norm="LN",$/;"	v
conv_norm	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            conv_norm="LN",$/;"	v
conv_norm	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            conv_norm="LN",$/;"	v
conv_norm	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            conv_norm="LN",$/;"	v
conv_out_channels	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                conv_out_channels=256,$/;"	v
convert	datasets/prepare_ade20k_sem_seg.py	/^def convert(input, output):$/;"	f
convert	detectron2/structures/boxes.py	/^    def convert(box: _RawBoxType, from_mode: "BoxMode", to_mode: "BoxMode") -> _RawBoxType:$/;"	m	class:BoxMode
convert	projects/DensePose/densepose/converters/base.py	/^    def convert(cls, instance: Any, *args, **kwargs):$/;"	m	class:BaseConverter
convert	projects/DensePose/densepose/converters/hflip.py	/^    def convert(cls, predictor_outputs: Any, transform_data: Any, *args, **kwargs):$/;"	m	class:HFlipConverter
convert	projects/DensePose/densepose/converters/to_chart_result.py	/^    def convert($/;"	m	class:ToChartResultConverterWithConfidences
convert	projects/DensePose/densepose/converters/to_chart_result.py	/^    def convert(cls, predictor_outputs: Any, boxes: Boxes, *args, **kwargs) -> DensePoseChartResult:$/;"	m	class:ToChartResultConverter
convert	projects/DensePose/densepose/converters/to_mask.py	/^    def convert($/;"	m	class:ToMaskConverter
convert	projects/PointRend/point_rend/color_augmentation.py	/^    def convert(self, img, alpha=1, beta=0):$/;"	m	class:ColorAugSSDTransform
convert_PIL_to_numpy	detectron2/data/detection_utils.py	/^def convert_PIL_to_numpy(image, format):$/;"	f
convert_basic_c2_names	detectron2/checkpoint/c2_model_loading.py	/^def convert_basic_c2_names(original_keys):$/;"	f
convert_batched_inputs_to_c2_format	detectron2/export/caffe2_modeling.py	/^def convert_batched_inputs_to_c2_format(batched_inputs, size_divisibility, device):$/;"	f
convert_boxes_to_pooler_format	detectron2/modeling/poolers.py	/^def convert_boxes_to_pooler_format(box_lists: List[Boxes]):$/;"	f
convert_c2_detectron_names	detectron2/checkpoint/c2_model_loading.py	/^def convert_c2_detectron_names(weights):$/;"	f
convert_frozen_batchnorm	detectron2/layers/batch_norm.py	/^    def convert_frozen_batchnorm(cls, module):$/;"	m	class:FrozenBatchNorm2d
convert_frozenbatchnorm2d_to_batchnorm2d	detectron2/layers/batch_norm.py	/^    def convert_frozenbatchnorm2d_to_batchnorm2d(cls, module: nn.Module) -> nn.Module:$/;"	m	class:FrozenBatchNorm2d
convert_image_to_rgb	detectron2/data/detection_utils.py	/^def convert_image_to_rgb(image, format):$/;"	f
convert_instances_to_cpp	detectron2/evaluation/fast_eval_api.py	/^        def convert_instances_to_cpp(instances, is_det=False):$/;"	f	function:COCOeval_opt.evaluate
convert_mask	detectron2/modeling/mmdet_wrapper.py	/^                def convert_mask(m, shape):$/;"	f	function:MMDetDetector.forward
convert_scripted_instances	detectron2/utils/testing.py	/^def convert_scripted_instances(instances):$/;"	f
convert_to_coco_dict	detectron2/data/datasets/coco.py	/^def convert_to_coco_dict(dataset_name):$/;"	f
convert_to_coco_json	detectron2/data/datasets/coco.py	/^def convert_to_coco_json(dataset_name, output_file, allow_cached=True):$/;"	f
copyright	docs/conf.py	/^copyright = "2019-2020, detectron2 contributors"$/;"	v
count_samples	detectron2/utils/events.py	/^    def count_samples(self, name, window_size=20):$/;"	m	class:EventStorage
create_argument_parser	projects/DensePose/apply_net.py	/^def create_argument_parser() -> argparse.ArgumentParser:$/;"	f
create_argument_parser	projects/DensePose/query_db.py	/^def create_argument_parser() -> argparse.ArgumentParser:$/;"	f
create_boxes	tests/structures/test_boxes.py	/^    def create_boxes(self):$/;"	m	class:TestBoxIOU
create_complex_model	tests/test_checkpoint.py	/^    def create_complex_model(self):$/;"	m	class:TestCheckpointer
create_const_fill_op	detectron2/export/shared.py	/^def create_const_fill_op($/;"	f
create_context	projects/DensePose/apply_net.py	/^    def create_context(cls: type, args: argparse.Namespace, cfg: CfgNode) -> Dict[str, Any]:$/;"	m	class:ShowAction
create_context	projects/DensePose/apply_net.py	/^    def create_context(cls: type, args: argparse.Namespace, cfg: CfgNode):$/;"	m	class:DumpAction
create_context	projects/DensePose/query_db.py	/^    def create_context(cls: type, args: argparse.Namespace) -> Dict[str, Any]:$/;"	m	class:EntrywiseAction
create_context	projects/DensePose/query_db.py	/^    def create_context(cls: type, args: argparse.Namespace) -> Dict[str, Any]:$/;"	m	class:ShowAction
create_data_benchmark	tools/benchmark.py	/^def create_data_benchmark(cfg, args):$/;"	f
create_ddp_model	detectron2/engine/defaults.py	/^def create_ddp_model(model, *, fp16_compression=False, **kwargs):$/;"	f
create_dummy_class	detectron2/utils/develop.py	/^def create_dummy_class(klass, dependency, message=""):$/;"	f
create_dummy_func	detectron2/utils/develop.py	/^def create_dummy_func(func, dependency, message=""):$/;"	f
create_embed_loss	projects/DensePose/densepose/modeling/losses/cse.py	/^    def create_embed_loss(cls, cfg: CfgNode):$/;"	m	class:DensePoseCseLoss
create_embedder	projects/DensePose/densepose/modeling/cse/embedder.py	/^def create_embedder(embedder_spec: CfgNode, embedder_dim: int) -> nn.Module:$/;"	f
create_extractor	projects/DensePose/densepose/vis/extractor.py	/^def create_extractor(visualizer: object):$/;"	f
create_from	detectron2/export/caffe2_patch.py	/^    def create_from(self, module):$/;"	m	class:Caffe2CompatibleConverter
create_instances	tools/visualize_json_results.py	/^def create_instances(predictions, image_size):$/;"	f
create_keypoint_hflip_indices	detectron2/data/detection_utils.py	/^def create_keypoint_hflip_indices(dataset_names: Union[str, List[str]]) -> List[int]:$/;"	f
create_local_process_group	detectron2/utils/comm.py	/^def create_local_process_group(num_workers_per_machine: int) -> None:$/;"	f
create_mesh	projects/DensePose/densepose/structures/mesh.py	/^def create_mesh(mesh_name: str, device: Optional[torch.device] = None) -> Mesh:$/;"	f
create_model_input	tests/modeling/test_model_e2e.py	/^def create_model_input(img, inst=None):$/;"	f
create_prediction_pairs	detectron2/tracking/utils.py	/^def create_prediction_pairs($/;"	f
create_rotation_matrix	detectron2/data/transforms/transform.py	/^    def create_rotation_matrix(self, offset=0):$/;"	m	class:RotationTransform
create_small_table	detectron2/utils/logger.py	/^def create_small_table(small_dict):$/;"	f
create_video_frame_mapping	projects/DensePose/densepose/data/datasets/coco.py	/^def create_video_frame_mapping(dataset_name, dataset_dicts):$/;"	f
create_visualization_context	projects/DensePose/densepose/vis/densepose_results.py	/^    def create_visualization_context(self, image_bgr: Image):$/;"	m	class:DensePoseResultsMplContourVisualizer
create_visualization_context	projects/DensePose/densepose/vis/densepose_results.py	/^    def create_visualization_context(self, image_bgr: Image):$/;"	m	class:DensePoseResultsVisualizer
crop_and_resize	detectron2/structures/masks.py	/^    def crop_and_resize(self, boxes: torch.Tensor, mask_size: int) -> torch.Tensor:$/;"	m	class:BitMasks
crop_and_resize	detectron2/structures/masks.py	/^    def crop_and_resize(self, boxes: torch.Tensor, mask_size: int) -> torch.Tensor:$/;"	m	class:PolygonMasks
cross_entropy	detectron2/layers/wrappers.py	/^cross_entropy = empty_input_loss_func_wrapper(F.cross_entropy)$/;"	v
daemon	detectron2/engine/launch.py	/^            daemon=False,$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="bear_4936.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="cat_5001.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="cat_7466.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="chimp_5029.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="cow_5002.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="dog_5002.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="dog_7466.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="elephant_5002.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="giraffe_5002.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="horse_5004.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="sheep_5004.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="smpl_27554.pkl",$/;"	v
data	projects/DensePose/densepose/data/meshes/builtin.py	/^        data="zebra_5002.pkl",$/;"	v
data_loader	detectron2/data/build.py	/^        data_loader = AspectRatioGroupedDataset(data_loader, batch_size)$/;"	v
data_loader	detectron2/data/build.py	/^        data_loader = torchdata.DataLoader($/;"	v
data_loader	detectron2/engine/hooks.py	/^        def data_loader():$/;"	f	function:PreciseBN.update_stats
data_seconds_per_iter	detectron2/evaluation/evaluator.py	/^            data_seconds_per_iter = total_data_time \/ iters_after_start$/;"	v
dataloader	configs/Misc/torchvision_imagenet_R_50.py	/^dataloader = OmegaConf.create()$/;"	v
dataloader	configs/common/data/coco.py	/^dataloader = OmegaConf.create()$/;"	v
dataloader	projects/MViTv2/configs/common/coco_loader.py	/^dataloader = OmegaConf.create()$/;"	v
dataloader	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead.py	/^dataloader = get_config("common\/data\/coco.py").dataloader$/;"	v
dataloader	projects/Rethinking-BatchNorm/configs/retinanet_SyncBNhead.py	/^dataloader = get_config("common\/data\/coco.py").dataloader$/;"	v
dataloader	projects/ViTDet/configs/common/coco_loader_lsj.py	/^dataloader = model_zoo.get_config("common\/data\/coco.py").dataloader$/;"	v
dataset	configs/Misc/torchvision_imagenet_R_50.py	/^    dataset=L(torchvision.datasets.ImageNet)($/;"	v
dataset	configs/Misc/torchvision_imagenet_R_50.py	/^    dataset=L(torchvision.datasets.ImageNet)($/;"	v	class:ClassificationAcc
dataset	configs/common/data/coco.py	/^    dataset=L(get_detection_dataset_dicts)(names="coco_2017_train"),$/;"	v
dataset	configs/common/data/coco.py	/^    dataset=L(get_detection_dataset_dicts)(names="coco_2017_val", filter_empty=False),$/;"	v
dataset	detectron2/data/build.py	/^        dataset = DatasetFromList(dataset, copy=False)$/;"	v
dataset	detectron2/data/build.py	/^        dataset = MapDataset(dataset, mapper)$/;"	v
dataset	detectron2/data/build.py	/^        dataset = ToIterableDataset(dataset, sampler, shard_chunk_size=batch_size)$/;"	v
dataset	projects/MViTv2/configs/common/coco_loader.py	/^    dataset=L(get_detection_dataset_dicts)(names="coco_2017_train"),$/;"	v
dataset	projects/MViTv2/configs/common/coco_loader.py	/^    dataset=L(get_detection_dataset_dicts)(names="coco_2017_val", filter_empty=False),$/;"	v
dataset_dicts	detectron2/data/build.py	/^        dataset_dicts = [$/;"	v
dataset_dicts	detectron2/data/build.py	/^        dataset_dicts = filter_images_with_few_keypoints(dataset_dicts, min_keypoints)$/;"	v
dataset_dicts	detectron2/data/build.py	/^        dataset_dicts = filter_images_with_only_crowd_annotations(dataset_dicts)$/;"	v
dataset_dicts	detectron2/data/build.py	/^    dataset_dicts = [DatasetCatalog.get(dataset_name) for dataset_name in names]$/;"	v
dataset_dicts	detectron2/data/build.py	/^    dataset_dicts = list(itertools.chain.from_iterable(dataset_dicts))$/;"	v
dataset_dicts	detectron2/data/datasets/coco.py	/^    dataset_dicts = []$/;"	v
dataset_dir	datasets/prepare_ade20k_sem_seg.py	/^    dataset_dir = Path(os.getenv("DETECTRON2_DATASETS", "datasets")) \/ "ADEChallengeData2016"$/;"	v
dataset_dir	datasets/prepare_cocofied_lvis.py	/^    dataset_dir = os.path.join(os.getenv("DETECTRON2_DATASETS", "datasets"), "lvis")$/;"	v
dataset_dir	projects/PointSup/tools/prepare_coco_point_annotations_without_masks.py	/^    dataset_dir = os.path.join(os.getenv("DETECTRON2_DATASETS", "datasets"), "coco\/annotations")$/;"	v
dataset_id_map	tools/visualize_json_results.py	/^        def dataset_id_map(ds_id):$/;"	f	function:main
dataset_name	configs/common/data/coco.py	/^    dataset_name="${..test.dataset.names}",$/;"	v
dataset_name	configs/common/data/coco_panoptic_separated.py	/^        dataset_name="${...test.dataset.names}",$/;"	v
dataset_name	projects/MViTv2/configs/common/coco_loader.py	/^    dataset_name="${..test.dataset.names}",$/;"	v
dataset_name	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    dataset_name="${..test.dataset.names}",$/;"	v
dataset_name	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^    dataset_name="${..test.dataset.names}",$/;"	v
dataset_name	projects/ViTDet/configs/LVIS/mask_rcnn_vitdet_b_100ep.py	/^    dataset_name="${..test.dataset.names}",$/;"	v
datefmt	detectron2/utils/logger.py	/^                datefmt="%m\/%d %H:%M:%S",$/;"	v
ddp	configs/common/train.py	/^    ddp=dict(  # options for DistributedDataParallel$/;"	v
debug	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                debug=False,$/;"	v
decompress_compressed_densepose_chart_result	projects/DensePose/densepose/structures/chart_result.py	/^def decompress_compressed_densepose_chart_result($/;"	f
decorate_cse_predictor_output_class_with_confidences	projects/DensePose/densepose/structures/cse_confidence.py	/^def decorate_cse_predictor_output_class_with_confidences(BasePredictorOutput: type) -> type:$/;"	f
decorate_predictor_output_class_with_confidences	projects/DensePose/densepose/structures/chart_confidence.py	/^def decorate_predictor_output_class_with_confidences(BasePredictorOutput: type) -> type:$/;"	f
decorator	detectron2/export/shared.py	/^    def decorator(func):$/;"	f	function:mock_torch_nn_functional_interpolate
default	detectron2/engine/defaults.py	/^        default="tcp:\/\/127.0.0.1:{}".format(port),$/;"	v
default	detectron2/engine/defaults.py	/^        default=None,$/;"	v
default	tools/analyze_model.py	/^        default=100,$/;"	v
default_X_scheduler	configs/common/coco_schedule.py	/^def default_X_scheduler(num_X):$/;"	f
default_activation_class	detectron2/modeling/backbone/regnet.py	/^        def default_activation_class():$/;"	f	function:RegNet.__init__
default_argument_parser	detectron2/engine/defaults.py	/^def default_argument_parser(epilog=None):$/;"	f
default_buffer_size	demo/predictor.py	/^    def default_buffer_size(self):$/;"	m	class:AsyncPredictor
default_setup	detectron2/engine/defaults.py	/^def default_setup(cfg, args):$/;"	f
default_writers	detectron2/engine/defaults.py	/^def default_writers(output_dir: str, max_iter: Optional[int] = None):$/;"	f
deform_conv	detectron2/layers/deform_conv.py	/^    deform_conv = create_dummy_func("deform_conv", *_args)$/;"	v
deform_conv	detectron2/layers/deform_conv.py	/^deform_conv = _DeformConv.apply$/;"	v
densepose_chart_predictions_to_dict	projects/DensePose/densepose/evaluation/evaluator.py	/^def densepose_chart_predictions_to_dict(instances):$/;"	f
densepose_chart_predictions_to_storage_dict	projects/DensePose/densepose/evaluation/evaluator.py	/^def densepose_chart_predictions_to_storage_dict(instances):$/;"	f
densepose_chart_predictor_output_hflip	projects/DensePose/densepose/converters/chart_output_hflip.py	/^def densepose_chart_predictor_output_hflip($/;"	f
densepose_chart_predictor_output_to_result	projects/DensePose/densepose/converters/chart_output_to_chart_result.py	/^def densepose_chart_predictor_output_to_result($/;"	f
densepose_chart_predictor_output_to_result_with_confidences	projects/DensePose/densepose/converters/chart_output_to_chart_result.py	/^def densepose_chart_predictor_output_to_result_with_confidences($/;"	f
densepose_cse_predictions_to_dict	projects/DensePose/densepose/evaluation/evaluator.py	/^def densepose_cse_predictions_to_dict(instances, embedder, class_to_mesh_name, use_storage):$/;"	f
densepose_inference	projects/DensePose/densepose/modeling/inference.py	/^def densepose_inference(densepose_predictor_output: Any, detections: List[Instances]) -> None:$/;"	f
densepose_metrics	projects/DensePose/densepose/evaluation/evaluator.py	/^    densepose_metrics = _get_densepose_metrics(min_threshold)$/;"	v
depth	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    depth=23,$/;"	v
depth	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    depth=22,$/;"	v
depth	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            depth=50,$/;"	v
depth	configs/common/models/mask_rcnn_c4.py	/^            depth=50,$/;"	v
depth	configs/common/models/mask_rcnn_fpn.py	/^                depth=50,$/;"	v
depth	configs/common/models/mask_rcnn_vitdet.py	/^        depth=depth,$/;"	v
depth	configs/common/models/retinanet.py	/^                depth=50,$/;"	v
depth	configs/new_baselines/mask_rcnn_regnetx_4gf_dds_FPN_100ep_LSJ.py	/^    depth=23,$/;"	v
depth	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    depth=22,$/;"	v
depth	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    depth=10,$/;"	v
depth	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    depth=24,$/;"	v
depths	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^    depths=[2, 2, 18, 2],$/;"	v
description	setup.py	/^    description="Detectron2 is FAIR's next-generation research "$/;"	v
detect_compute_compatibility	detectron2/utils/collect_env.py	/^def detect_compute_compatibility(CUDA_HOME, so_file):$/;"	f
detector	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^    detector=dict($/;"	v
detector_postprocess	detectron2/modeling/postprocessing.py	/^def detector_postprocess($/;"	f
device	configs/Misc/torchvision_imagenet_R_50.py	/^    def device(self):$/;"	m	class:ClassificationNet
device	configs/common/train.py	/^    device="cuda"$/;"	v
device	detectron2/modeling/meta_arch/dense_detector.py	/^    def device(self):$/;"	m	class:DenseDetector
device	detectron2/modeling/meta_arch/rcnn.py	/^    def device(self):$/;"	m	class:GeneralizedRCNN
device	detectron2/modeling/meta_arch/rcnn.py	/^    def device(self):$/;"	m	class:ProposalNetwork
device	detectron2/modeling/meta_arch/semantic_seg.py	/^    def device(self):$/;"	m	class:SemanticSegmentor
device	detectron2/modeling/mmdet_wrapper.py	/^    def device(self):$/;"	m	class:MMDetDetector
device	detectron2/structures/boxes.py	/^    def device(self) -> device:$/;"	m	class:Boxes
device	detectron2/structures/image_list.py	/^    def device(self) -> device:$/;"	m	class:ImageList
device	detectron2/structures/keypoints.py	/^    def device(self) -> torch.device:$/;"	m	class:Keypoints
device	detectron2/structures/masks.py	/^    def device(self) -> device:$/;"	m	class:ROIMasks
device	detectron2/structures/masks.py	/^    def device(self) -> torch.device:$/;"	m	class:BitMasks
device	detectron2/structures/masks.py	/^    def device(self) -> torch.device:$/;"	m	class:PolygonMasks
device	detectron2/structures/rotated_boxes.py	/^    def device(self) -> torch.device:$/;"	m	class:RotatedBoxes
device	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def device(self):$/;"	m	class:PanopticDeepLab
device	projects/TensorMask/tensormask/arch.py	/^    def device(self):$/;"	m	class:TensorMask
dicts	detectron2/data/datasets/coco_panoptic.py	/^    dicts = load_coco_panoptic_json(sys.argv[3], sys.argv[1], sys.argv[2], meta.as_dict())$/;"	v
diou_loss	detectron2/layers/losses.py	/^def diou_loss($/;"	f
dir1a_dict	tests/config/dir1/dir1_a.py	/^dir1a_dict = {"a": 1, "b": 2}$/;"	v
dir1a_str	tests/config/dir1/dir1_a.py	/^dir1a_str = "base_a_1"$/;"	v
dir1b_dict	tests/config/dir1/dir1_b.py	/^dir1b_dict = dir1a_dict$/;"	v
dir1b_str	tests/config/dir1/dir1_b.py	/^dir1b_str = dir1a_str + "_from_b"$/;"	v
dirname	detectron2/data/datasets/coco_panoptic.py	/^    dirname = "coco-data-vis"$/;"	v
dist_url	detectron2/engine/launch.py	/^            dist_url = f"tcp:\/\/127.0.0.1:{port}"$/;"	v
distributed_worker	projects/DensePose/tests/test_tensor_storage.py	/^def distributed_worker(local_rank, main_func, nprocs, dist_url, args):$/;"	f
do_activation	tools/analyze_model.py	/^def do_activation(cfg):$/;"	f
do_flop	tools/analyze_model.py	/^def do_flop(cfg):$/;"	f
do_parameter	tools/analyze_model.py	/^def do_parameter(cfg):$/;"	f
do_structure	tools/analyze_model.py	/^def do_structure(cfg):$/;"	f
do_test	tools/lazyconfig_train_net.py	/^def do_test(cfg, model):$/;"	f
do_test	tools/plain_train_net.py	/^def do_test(cfg, model):$/;"	f
do_train	tools/lazyconfig_train_net.py	/^def do_train(args, cfg):$/;"	f
do_train	tools/plain_train_net.py	/^def do_train(cfg, model, resume=False):$/;"	f
downgrade	detectron2/config/compat.py	/^    def downgrade(cls, cfg: CN) -> None:$/;"	m	class:ConverterV2
downgrade	detectron2/config/compat.py	/^    def downgrade(cls, cfg: CN) -> None:$/;"	m	class:_RenameConverter
downgrade_config	detectron2/config/compat.py	/^def downgrade_config(cfg: CN, to_version: int) -> CN:$/;"	f
draw_and_connect_keypoints	detectron2/utils/visualizer.py	/^    def draw_and_connect_keypoints(self, keypoints):$/;"	m	class:Visualizer
draw_binary_mask	detectron2/utils/visualizer.py	/^    def draw_binary_mask($/;"	m	class:Visualizer
draw_box	detectron2/utils/visualizer.py	/^    def draw_box(self, box_coord, alpha=0.5, edge_color="g", line_style="-"):$/;"	m	class:Visualizer
draw_circle	detectron2/utils/visualizer.py	/^    def draw_circle(self, circle_coord, color, radius=3):$/;"	m	class:Visualizer
draw_dataset_dict	detectron2/utils/visualizer.py	/^    def draw_dataset_dict(self, dic):$/;"	m	class:Visualizer
draw_instance_predictions	detectron2/utils/video_visualizer.py	/^    def draw_instance_predictions(self, frame, predictions):$/;"	m	class:VideoVisualizer
draw_instance_predictions	detectron2/utils/visualizer.py	/^    def draw_instance_predictions(self, predictions, jittering: bool = True):$/;"	m	class:Visualizer
draw_line	detectron2/utils/visualizer.py	/^    def draw_line(self, x_data, y_data, color, linestyle="-", linewidth=None):$/;"	m	class:Visualizer
draw_panoptic_seg	detectron2/utils/visualizer.py	/^    def draw_panoptic_seg(self, panoptic_seg, segments_info, area_threshold=None, alpha=0.7):$/;"	m	class:Visualizer
draw_panoptic_seg_predictions	detectron2/utils/video_visualizer.py	/^    def draw_panoptic_seg_predictions($/;"	m	class:VideoVisualizer
draw_panoptic_seg_predictions	detectron2/utils/visualizer.py	/^    draw_panoptic_seg_predictions = draw_panoptic_seg  # backward compatibility$/;"	v	class:Visualizer
draw_polygon	detectron2/utils/visualizer.py	/^    def draw_polygon(self, segment, color, edge_color=None, alpha=0.5):$/;"	m	class:Visualizer
draw_rotated_box_with_label	detectron2/utils/visualizer.py	/^    def draw_rotated_box_with_label($/;"	m	class:Visualizer
draw_sem_seg	detectron2/utils/video_visualizer.py	/^    def draw_sem_seg(self, frame, sem_seg, area_threshold=None):$/;"	m	class:VideoVisualizer
draw_sem_seg	detectron2/utils/visualizer.py	/^    def draw_sem_seg(self, sem_seg, area_threshold=None, alpha=0.8):$/;"	m	class:Visualizer
draw_soft_mask	detectron2/utils/visualizer.py	/^    def draw_soft_mask(self, soft_mask, color=None, *, text=None, alpha=0.5):$/;"	m	class:Visualizer
draw_text	detectron2/utils/visualizer.py	/^    def draw_text($/;"	m	class:Visualizer
drop_last	detectron2/data/build.py	/^            drop_last=drop_last,$/;"	v
drop_path_rate	configs/common/models/mask_rcnn_vitdet.py	/^        drop_path_rate=dp,$/;"	v
drop_path_rate	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    drop_path_rate=0.2,$/;"	v
drop_path_rate	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    drop_path_rate=0.4,$/;"	v
drop_path_rate	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^    drop_path_rate=0.4,$/;"	v
dst_type	projects/DensePose/densepose/converters/hflip.py	/^    dst_type = None$/;"	v	class:HFlipConverter
dst_type	projects/DensePose/densepose/converters/to_chart_result.py	/^    dst_type = DensePoseChartResult$/;"	v	class:ToChartResultConverter
dst_type	projects/DensePose/densepose/converters/to_chart_result.py	/^    dst_type = DensePoseChartResultWithConfidences$/;"	v	class:ToChartResultConverterWithConfidences
dst_type	projects/DensePose/densepose/converters/to_mask.py	/^    dst_type = BitMasks$/;"	v	class:ToMaskConverter
dummy_gt_boxes	projects/TensorMask/tensormask/arch.py	/^    dummy_gt_boxes = torch.zeros_like(gt_boxes)$/;"	v
dump	detectron2/config/config.py	/^    def dump(self, *args, **kwargs):$/;"	m	class:CfgNode
dump_code	detectron2/export/torchscript.py	/^        def dump_code(prefix, mod):$/;"	f	function:dump_torchscript_IR._get_script_mod
dump_dataclass	detectron2/config/instantiate.py	/^def dump_dataclass(obj: Any):$/;"	f
dump_torchscript_IR	detectron2/export/torchscript.py	/^def dump_torchscript_IR(model, dir):$/;"	f
embed_dim	configs/common/models/mask_rcnn_vitdet.py	/^        embed_dim=embed_dim,$/;"	v
embed_dim	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    embed_dim=96,$/;"	v
embed_dim	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    embed_dim=96,$/;"	v
embed_dim	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^    embed_dim=128,$/;"	v
empty_input_loss_func_wrapper	detectron2/layers/wrappers.py	/^def empty_input_loss_func_wrapper(loss_func):$/;"	f
empty_load_callback	projects/DensePose/densepose/data/datasets/chimpnsee.py	/^    def empty_load_callback():$/;"	f	function:register_dataset
encode_additional_info	detectron2/export/caffe2_modeling.py	/^    def encode_additional_info(self, predict_net, init_net):$/;"	m	class:Caffe2GeneralizedRCNN
encode_additional_info	detectron2/export/caffe2_modeling.py	/^    def encode_additional_info(self, predict_net, init_net):$/;"	m	class:Caffe2MetaArch
encode_additional_info	detectron2/export/caffe2_modeling.py	/^    def encode_additional_info(self, predict_net, init_net):$/;"	m	class:Caffe2RetinaNet
encode_json_sem_seg	detectron2/evaluation/sem_seg_evaluation.py	/^    def encode_json_sem_seg(self, sem_seg, input_file_name):$/;"	m	class:SemSegEvaluator
eta	detectron2/evaluation/evaluator.py	/^                eta = datetime.timedelta(seconds=int(total_seconds_per_iter * (total - idx - 1)))$/;"	v
eval_mode	projects/DensePose/densepose/evaluation/evaluator.py	/^        eval_mode = getattr(DensePoseEvalMode, eval_mode_name)$/;"	v
eval_period	configs/common/train.py	/^    eval_period=5000,$/;"	v
eval_seconds_per_iter	detectron2/evaluation/evaluator.py	/^            eval_seconds_per_iter = total_eval_time \/ iters_after_start$/;"	v
eval_wrapper	tools/deploy/export_model.py	/^    def eval_wrapper(inputs):$/;"	f	function:export_tracing
evaluate	configs/Misc/torchvision_imagenet_R_50.py	/^    def evaluate(self):$/;"	m	class:ClassificationAcc
evaluate	detectron2/evaluation/cityscapes_evaluation.py	/^    def evaluate(self):$/;"	m	class:CityscapesInstanceEvaluator
evaluate	detectron2/evaluation/cityscapes_evaluation.py	/^    def evaluate(self):$/;"	m	class:CityscapesSemSegEvaluator
evaluate	detectron2/evaluation/coco_evaluation.py	/^    def evaluate(self, img_ids=None):$/;"	m	class:COCOEvaluator
evaluate	detectron2/evaluation/evaluator.py	/^    def evaluate(self):$/;"	m	class:DatasetEvaluator
evaluate	detectron2/evaluation/evaluator.py	/^    def evaluate(self):$/;"	m	class:DatasetEvaluators
evaluate	detectron2/evaluation/fast_eval_api.py	/^    def evaluate(self):$/;"	m	class:COCOeval_opt
evaluate	detectron2/evaluation/lvis_evaluation.py	/^    def evaluate(self):$/;"	m	class:LVISEvaluator
evaluate	detectron2/evaluation/panoptic_evaluation.py	/^    def evaluate(self):$/;"	m	class:COCOPanopticEvaluator
evaluate	detectron2/evaluation/pascal_voc_evaluation.py	/^    def evaluate(self):$/;"	m	class:PascalVOCDetectionEvaluator
evaluate	detectron2/evaluation/sem_seg_evaluation.py	/^    def evaluate(self):$/;"	m	class:SemSegEvaluator
evaluate	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def evaluate(self):$/;"	m	class:DensePoseCocoEval
evaluate	projects/DensePose/densepose/evaluation/evaluator.py	/^    def evaluate(self, img_ids=None):$/;"	m	class:DensePoseCOCOEvaluator
evaluate	projects/DensePose/densepose/evaluation/mesh_alignment_evaluator.py	/^    def evaluate(self):$/;"	m	class:MeshAlignmentEvaluator
evaluateImg	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def evaluateImg(self, imgId, catId, aRng, maxDet):$/;"	m	class:DensePoseCocoEval
evaluator	detectron2/evaluation/evaluator.py	/^        evaluator = DatasetEvaluators([])$/;"	v
evaluator	detectron2/evaluation/evaluator.py	/^        evaluator = DatasetEvaluators(evaluator)$/;"	v
exclude_patterns	docs/conf.py	/^exclude_patterns = ["_build", "Thumbs.db", ".DS_Store", "build", "README.md", "tutorials\/README.md"]$/;"	v
execute	projects/DensePose/apply_net.py	/^    def execute(cls: type, args: argparse.Namespace):$/;"	m	class:InferenceAction
execute	projects/DensePose/query_db.py	/^    def execute(cls: type, args: argparse.Namespace):$/;"	m	class:EntrywiseAction
execute_on_entry	projects/DensePose/query_db.py	/^    def execute_on_entry(cls: type, entry: Dict[str, Any], context: Dict[str, Any]):$/;"	m	class:PrintAction
execute_on_entry	projects/DensePose/query_db.py	/^    def execute_on_entry(cls: type, entry: Dict[str, Any], context: Dict[str, Any]):$/;"	m	class:ShowAction
execute_on_outputs	projects/DensePose/apply_net.py	/^    def execute_on_outputs($/;"	m	class:DumpAction
execute_on_outputs	projects/DensePose/apply_net.py	/^    def execute_on_outputs($/;"	m	class:ShowAction
expansion	projects/DensePose/densepose/modeling/hrnet.py	/^    expansion = 1$/;"	v	class:BasicBlock
expansion	projects/DensePose/densepose/modeling/hrnet.py	/^    expansion = 4$/;"	v	class:Bottleneck
export_caffe2	detectron2/export/api.py	/^    def export_caffe2(self):$/;"	m	class:Caffe2Tracer
export_caffe2_detection_model	detectron2/export/caffe2_export.py	/^def export_caffe2_detection_model(model: torch.nn.Module, tensor_inputs: List[torch.Tensor]):$/;"	f
export_caffe2_tracing	tools/deploy/export_model.py	/^def export_caffe2_tracing(cfg, torch_model, inputs):$/;"	f
export_onnx	detectron2/export/api.py	/^    def export_onnx(self):$/;"	m	class:Caffe2Tracer
export_onnx_model	detectron2/export/caffe2_export.py	/^def export_onnx_model(model, inputs):$/;"	f
export_scripting	tools/deploy/export_model.py	/^def export_scripting(torch_model):$/;"	f
export_torchscript	detectron2/export/api.py	/^    def export_torchscript(self):$/;"	m	class:Caffe2Tracer
export_torchscript_with_instances	detectron2/export/torchscript.py	/^export_torchscript_with_instances = scripting_with_instances$/;"	v
export_tracing	tools/deploy/export_model.py	/^def export_tracing(torch_model, inputs):$/;"	f
ext_modules	projects/TensorMask/setup.py	/^    ext_modules=get_extensions(),$/;"	v
ext_modules	setup.py	/^    ext_modules=get_extensions(),$/;"	v
extensions	docs/conf.py	/^extensions = [$/;"	v
extra_repr	detectron2/layers/batch_norm.py	/^    def extra_repr(self):$/;"	m	class:CycleBatchNormList
extra_repr	detectron2/layers/deform_conv.py	/^    def extra_repr(self):$/;"	m	class:DeformConv
extra_repr	detectron2/layers/deform_conv.py	/^    def extra_repr(self):$/;"	m	class:ModulatedDeformConv
extra_repr	projects/TridentNet/tridentnet/trident_conv.py	/^    def extra_repr(self):$/;"	m	class:TridentConv
extract_and_check_outputs_and_boxes	projects/DensePose/densepose/vis/densepose_outputs_vertex.py	/^    def extract_and_check_outputs_and_boxes(self, outputs_boxes_xywh_classes):$/;"	m	class:DensePoseOutputsVertexVisualizer
extract_at_points	projects/DensePose/densepose/modeling/losses/utils.py	/^    def extract_at_points($/;"	m	class:BilinearInterpolationHelper
extract_boxes_xywh_from_instances	projects/DensePose/densepose/vis/extractor.py	/^def extract_boxes_xywh_from_instances(instances: Instances, select=None):$/;"	f
extract_data_for_mask_loss_from_matches	projects/DensePose/densepose/modeling/losses/mask.py	/^def extract_data_for_mask_loss_from_matches($/;"	f
extract_embedder_from_model	projects/DensePose/densepose/engine/trainer.py	/^    def extract_embedder_from_model(cls, model: nn.Module) -> Optional[Embedder]:$/;"	m	class:Trainer
extract_iuv_from_quantized	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def extract_iuv_from_quantized(self, dt, gt, py, px, pt_mask):$/;"	m	class:DensePoseCocoEval
extract_iuv_from_raw	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def extract_iuv_from_raw(self, dt, gt, py, px, pt_mask):$/;"	m	class:DensePoseCocoEval
extract_packed_annotations_from_matches	projects/DensePose/densepose/modeling/losses/utils.py	/^def extract_packed_annotations_from_matches($/;"	f
extract_scores_from_instances	projects/DensePose/densepose/vis/extractor.py	/^def extract_scores_from_instances(instances: Instances, select=None):$/;"	f
extract_segmentation_mask	projects/DensePose/densepose/structures/data_relative.py	/^    def extract_segmentation_mask(annotation):$/;"	m	class:DensePoseDataRelative
extras_require	setup.py	/^    extras_require={$/;"	v
f	detectron2/export/caffe2_modeling.py	/^        def f(batched_inputs, c2_inputs, c2_results):$/;"	f	function:Caffe2GeneralizedRCNN.get_outputs_converter
f	detectron2/export/caffe2_modeling.py	/^        def f(batched_inputs, c2_inputs, c2_results):$/;"	f	function:Caffe2RetinaNet.get_outputs_converter
f	projects/DensePose/densepose/structures/transform_data.py	/^    def f(p):$/;"	f	function:normalized_coords_transform
f	tests/data/test_transforms.py	/^        def f(image):$/;"	f	function:TestTransforms.test_resize_shorted_edge_scriptable
f	tests/modeling/test_matcher.py	/^        def f(thresholds: List[float], labels: List[int]):$/;"	f	function:TestMatcher.test_scriptability
f	tests/structures/test_imagelist.py	/^        def f(image_tensor, image_shape: List[Tuple[int, int]]):$/;"	f	function:TestImageList.test_imagelist_scriptability
f	tests/structures/test_imagelist.py	/^        def f(image_tensor: List[torch.Tensor]):$/;"	f	function:TestImageList.test_imagelist_from_tensors_scriptability
f	tests/structures/test_instances.py	/^        class f(torch.nn.Module):$/;"	c	function:TestInstances.test_script_access_fields
f	tests/structures/test_instances.py	/^        class f(torch.nn.Module):$/;"	c	function:TestInstances.test_script_getitem
f	tests/structures/test_instances.py	/^        class f(torch.nn.Module):$/;"	c	function:TestInstances.test_script_has
f	tests/structures/test_instances.py	/^        class f(torch.nn.Module):$/;"	c	function:TestInstances.test_script_len
f	tests/structures/test_instances.py	/^        class f(torch.nn.Module):$/;"	c	function:TestInstances.test_script_new_fields
f	tests/structures/test_instances.py	/^        class f(torch.nn.Module):$/;"	c	function:TestInstances.test_script_to
f	tests/structures/test_instances.py	/^        def f(x: Tensor):$/;"	f	function:TestInstances.test_script_cat
f	tests/structures/test_instances.py	/^        def f(x: Tensor):$/;"	f	function:TestInstances.test_script_init_args
f	tools/benchmark.py	/^    def f():$/;"	f	function:benchmark_eval
f	tools/benchmark.py	/^    def f():$/;"	f	function:benchmark_train
faces	projects/DensePose/densepose/structures/mesh.py	/^    def faces(self):$/;"	m	class:Mesh
fake_value	projects/DensePose/densepose/modeling/losses/cycle_pix2shape.py	/^    def fake_value(self, densepose_predictor_outputs: Any, embedder: nn.Module):$/;"	m	class:PixToShapeCycleLoss
fake_value	projects/DensePose/densepose/modeling/losses/cycle_shape2shape.py	/^    def fake_value(self, embedder: nn.Module):$/;"	m	class:ShapeToShapeCycleLoss
fake_value	projects/DensePose/densepose/modeling/losses/embed.py	/^    def fake_value(self, densepose_predictor_outputs: Any, embedder: nn.Module, mesh_name: str):$/;"	m	class:EmbeddingLoss
fake_value	projects/DensePose/densepose/modeling/losses/mask.py	/^    def fake_value(self, densepose_predictor_outputs: Any) -> torch.Tensor:$/;"	m	class:MaskLoss
fake_value	projects/DensePose/densepose/modeling/losses/mask_or_segm.py	/^    def fake_value(self, densepose_predictor_outputs: Any) -> torch.Tensor:$/;"	m	class:MaskOrSegmentationLoss
fake_value	projects/DensePose/densepose/modeling/losses/segm.py	/^    def fake_value(self, densepose_predictor_outputs: Any) -> torch.Tensor:$/;"	m	class:SegmentationLoss
fake_value	projects/DensePose/densepose/modeling/losses/soft_embed.py	/^    def fake_value(self, densepose_predictor_outputs: Any, embedder: nn.Module, mesh_name: str):$/;"	m	class:SoftEmbeddingLoss
fake_values	projects/DensePose/densepose/modeling/losses/embed.py	/^    def fake_values(self, densepose_predictor_outputs: Any, embedder: nn.Module):$/;"	m	class:EmbeddingLoss
fake_values	projects/DensePose/densepose/modeling/losses/soft_embed.py	/^    def fake_values(self, densepose_predictor_outputs: Any, embedder: nn.Module):$/;"	m	class:SoftEmbeddingLoss
fast_rcnn_inference	detectron2/modeling/roi_heads/fast_rcnn.py	/^def fast_rcnn_inference($/;"	f
fast_rcnn_inference_rotated	detectron2/modeling/roi_heads/rotated_fast_rcnn.py	/^def fast_rcnn_inference_rotated($/;"	f
fast_rcnn_inference_single_image	detectron2/modeling/roi_heads/fast_rcnn.py	/^def fast_rcnn_inference_single_image($/;"	f
fast_rcnn_inference_single_image_rotated	detectron2/modeling/roi_heads/rotated_fast_rcnn.py	/^def fast_rcnn_inference_single_image_rotated($/;"	f
fc_dims	configs/common/models/cascade_rcnn.py	/^            fc_dims=[1024, 1024],$/;"	v
fc_dims	configs/common/models/mask_rcnn_fpn.py	/^            fc_dims=[1024, 1024],$/;"	v
fc_dims	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^            fc_dims=[1024],$/;"	v
fc_dims	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^            fc_dims=[1024],$/;"	v
fc_dims	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^            fc_dims=[1024],$/;"	v
fc_dims	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            fc_dims=[1024],$/;"	v
fc_dims	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            fc_dims=[1024],$/;"	v
fc_dims	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            fc_dims=[1024],$/;"	v
fc_out_channels	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                fc_out_channels=1024,$/;"	v
feat_channels	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            feat_channels=256,$/;"	v
featmap_strides	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                featmap_strides=[4, 8, 16, 32],$/;"	v
fetch_any_blob	detectron2/export/shared.py	/^def fetch_any_blob(name):$/;"	f
fh	detectron2/utils/logger.py	/^        fh = logging.StreamHandler(_cached_log_stream(filename))$/;"	v
file2id	detectron2/data/datasets/coco.py	/^    def file2id(folder_path, file_path):$/;"	f	function:load_sem_seg
file_read_write_worker	projects/DensePose/tests/test_tensor_storage.py	/^def file_read_write_worker(rank_to_fpath):$/;"	f
filename	detectron2/utils/logger.py	/^            filename = filename + ".rank{}".format(distributed_rank)$/;"	v
filename	detectron2/utils/logger.py	/^            filename = os.path.join(output, "log.txt")$/;"	v
filename	detectron2/utils/logger.py	/^            filename = output$/;"	v
filter_empty_instances	detectron2/data/detection_utils.py	/^def filter_empty_instances($/;"	f
filter_images_with_few_keypoints	detectron2/data/build.py	/^def filter_images_with_few_keypoints(dataset_dicts, min_keypoints_per_image):$/;"	f
filter_images_with_only_crowd_annotations	detectron2/data/build.py	/^def filter_images_with_only_crowd_annotations(dataset_dicts):$/;"	f
findAllClosestVertsGT	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def findAllClosestVertsGT(self, gt):$/;"	m	class:DensePoseCocoEval
findAllClosestVertsUV	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def findAllClosestVertsUV(self, U_points, V_points, Index_points):$/;"	m	class:DensePoseCocoEval
findClosestVertsCse	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def findClosestVertsCse(self, embedding, py, px, mask, mesh_name):$/;"	m	class:DensePoseCocoEval
find_instance_center	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^def find_instance_center(center_heatmap, threshold=0.1, nms_kernel=3, top_k=None):$/;"	f
find_relative_file	detectron2/config/lazy.py	/^    def find_relative_file(original_file, relative_import_path, level):$/;"	f	function:_patch_import
find_spec	detectron2/projects/__init__.py	/^        def find_spec(self, name, path, target=None):$/;"	m	class:_D2ProjectsFinder
find_top_rpn_proposals	detectron2/modeling/proposal_generator/proposal_utils.py	/^def find_top_rpn_proposals($/;"	f
find_top_rrpn_proposals	detectron2/modeling/proposal_generator/rrpn.py	/^def find_top_rrpn_proposals($/;"	f
find_unused_parameters	configs/common/train.py	/^        find_unused_parameters=False,$/;"	v
find_unused_parameters	detectron2/utils/analysis.py	/^def find_unused_parameters(model: nn.Module, inputs: Any) -> List[str]:$/;"	f
fix_one	detectron2/utils/env.py	/^    def fix_one(qualname, name, obj):$/;"	f	function:fixup_module_metadata
fixup_module_metadata	detectron2/utils/env.py	/^def fixup_module_metadata(module_name, namespace, keys=None):$/;"	f
flatten	detectron2/export/c10.py	/^    def flatten(self):$/;"	m	class:InstancesList
flatten	detectron2/export/flatten.py	/^    def flatten(cls, obj):$/;"	m	class:DictSchema
flatten	detectron2/export/flatten.py	/^    def flatten(cls, obj):$/;"	m	class:IdentitySchema
flatten	detectron2/export/flatten.py	/^    def flatten(cls, obj):$/;"	m	class:InstancesSchema
flatten	detectron2/export/flatten.py	/^    def flatten(cls, obj):$/;"	m	class:ListSchema
flatten	detectron2/export/flatten.py	/^    def flatten(cls, obj):$/;"	m	class:Schema
flatten	detectron2/export/flatten.py	/^    def flatten(cls, obj):$/;"	m	class:TensorWrapSchema
flatten	tests/modeling/test_model_e2e.py	/^    def flatten(x):$/;"	f	function:typecheck_hook
flatten_results_dict	detectron2/evaluation/testing.py	/^def flatten_results_dict(results):$/;"	f
flatten_to_tuple	detectron2/export/flatten.py	/^def flatten_to_tuple(obj):$/;"	f
flop_count_operators	detectron2/utils/analysis.py	/^def flop_count_operators(model: nn.Module, inputs: list) -> typing.DefaultDict[str, float]:$/;"	f
focal_loss_alpha	configs/common/models/retinanet.py	/^    focal_loss_alpha=0.25,$/;"	v
focal_loss_gamma	configs/common/models/retinanet.py	/^    focal_loss_gamma=2.0,$/;"	v
formatMessage	detectron2/utils/logger.py	/^    def formatMessage(self, record):$/;"	m	class:_ColorfulFormatter
formatter	detectron2/utils/logger.py	/^            formatter = _ColorfulFormatter($/;"	v
formatter	detectron2/utils/logger.py	/^            formatter = plain_formatter$/;"	v
formatter_class	detectron2/engine/defaults.py	/^        formatter_class=argparse.RawDescriptionHelpFormatter,$/;"	v
forward	configs/Misc/torchvision_imagenet_R_50.py	/^    def forward(self, inputs):$/;"	m	class:ClassificationNet
forward	detectron2/export/c10.py	/^    def forward(self, images, features, gt_instances=None):$/;"	m	class:Caffe2RPN
forward	detectron2/export/c10.py	/^    def forward(self, x, box_lists):$/;"	m	class:Caffe2ROIPooler
forward	detectron2/export/caffe2_inference.py	/^    def forward(self, batched_inputs):$/;"	m	class:ProtobufDetectionModel
forward	detectron2/export/caffe2_inference.py	/^    def forward(self, inputs):$/;"	m	class:ProtobufModel
forward	detectron2/export/caffe2_modeling.py	/^    def forward(self, inputs):$/;"	m	class:Caffe2GeneralizedRCNN
forward	detectron2/export/caffe2_modeling.py	/^    def forward(self, inputs):$/;"	m	class:Caffe2MetaArch
forward	detectron2/export/caffe2_modeling.py	/^    def forward(self, inputs):$/;"	m	class:Caffe2RetinaNet
forward	detectron2/export/flatten.py	/^        def forward(*args):$/;"	f	function:TracingAdapter._create_wrapper
forward	detectron2/export/flatten.py	/^    def forward(self, *args: torch.Tensor):$/;"	m	class:TracingAdapter
forward	detectron2/layers/aspp.py	/^    def forward(self, x):$/;"	m	class:ASPP
forward	detectron2/layers/batch_norm.py	/^    def forward(self, input):$/;"	m	class:NaiveSyncBatchNorm
forward	detectron2/layers/batch_norm.py	/^    def forward(self, x):$/;"	m	class:CycleBatchNormList
forward	detectron2/layers/batch_norm.py	/^    def forward(self, x):$/;"	m	class:FrozenBatchNorm2d
forward	detectron2/layers/batch_norm.py	/^    def forward(self, x):$/;"	m	class:LayerNorm
forward	detectron2/layers/blocks.py	/^    def forward(self, x):$/;"	m	class:DepthwiseSeparableConv2d
forward	detectron2/layers/deform_conv.py	/^    def forward($/;"	m	class:_DeformConv
forward	detectron2/layers/deform_conv.py	/^    def forward($/;"	m	class:_ModulatedDeformConv
forward	detectron2/layers/deform_conv.py	/^    def forward(self, x, offset):$/;"	m	class:DeformConv
forward	detectron2/layers/deform_conv.py	/^    def forward(self, x, offset, mask):$/;"	m	class:ModulatedDeformConv
forward	detectron2/layers/roi_align.py	/^    def forward(self, input, rois):$/;"	m	class:ROIAlign
forward	detectron2/layers/roi_align_rotated.py	/^    def forward(ctx, input, roi, output_size, spatial_scale, sampling_ratio):$/;"	m	class:_ROIAlignRotated
forward	detectron2/layers/roi_align_rotated.py	/^    def forward(self, input, rois):$/;"	m	class:ROIAlignRotated
forward	detectron2/layers/wrappers.py	/^    def forward(ctx, x, new_shape):$/;"	m	class:_NewEmptyTensorOp
forward	detectron2/layers/wrappers.py	/^    def forward(self, x):$/;"	m	class:Conv2d
forward	detectron2/modeling/anchor_generator.py	/^    def forward(self, features):$/;"	m	class:RotatedAnchorGenerator
forward	detectron2/modeling/anchor_generator.py	/^    def forward(self, features: List[torch.Tensor]):$/;"	m	class:DefaultAnchorGenerator
forward	detectron2/modeling/backbone/backbone.py	/^    def forward(self):$/;"	m	class:Backbone
forward	detectron2/modeling/backbone/fpn.py	/^    def forward(self, c5):$/;"	m	class:LastLevelP6P7
forward	detectron2/modeling/backbone/fpn.py	/^    def forward(self, x):$/;"	m	class:FPN
forward	detectron2/modeling/backbone/fpn.py	/^    def forward(self, x):$/;"	m	class:LastLevelMaxPool
forward	detectron2/modeling/backbone/mvit.py	/^    def forward(self, x):$/;"	m	class:MViT
forward	detectron2/modeling/backbone/mvit.py	/^    def forward(self, x):$/;"	m	class:MultiScaleAttention
forward	detectron2/modeling/backbone/mvit.py	/^    def forward(self, x):$/;"	m	class:MultiScaleBlock
forward	detectron2/modeling/backbone/regnet.py	/^    def forward(self, x):$/;"	m	class:AnyNet
forward	detectron2/modeling/backbone/regnet.py	/^    def forward(self, x):$/;"	m	class:AnyStage
forward	detectron2/modeling/backbone/regnet.py	/^    def forward(self, x):$/;"	m	class:BasicTransform
forward	detectron2/modeling/backbone/regnet.py	/^    def forward(self, x):$/;"	m	class:BottleneckTransform
forward	detectron2/modeling/backbone/regnet.py	/^    def forward(self, x):$/;"	m	class:ResBasicBlock
forward	detectron2/modeling/backbone/regnet.py	/^    def forward(self, x):$/;"	m	class:ResBottleneckBlock
forward	detectron2/modeling/backbone/regnet.py	/^    def forward(self, x):$/;"	m	class:ResStem
forward	detectron2/modeling/backbone/regnet.py	/^    def forward(self, x):$/;"	m	class:SE
forward	detectron2/modeling/backbone/regnet.py	/^    def forward(self, x):$/;"	m	class:SimpleStem
forward	detectron2/modeling/backbone/regnet.py	/^    def forward(self, x):$/;"	m	class:VanillaBlock
forward	detectron2/modeling/backbone/resnet.py	/^    def forward(self, x):$/;"	m	class:BasicBlock
forward	detectron2/modeling/backbone/resnet.py	/^    def forward(self, x):$/;"	m	class:BasicStem
forward	detectron2/modeling/backbone/resnet.py	/^    def forward(self, x):$/;"	m	class:BottleneckBlock
forward	detectron2/modeling/backbone/resnet.py	/^    def forward(self, x):$/;"	m	class:DeformBottleneckBlock
forward	detectron2/modeling/backbone/resnet.py	/^    def forward(self, x):$/;"	m	class:ResNet
forward	detectron2/modeling/backbone/swin.py	/^    def forward(self, x):$/;"	m	class:Mlp
forward	detectron2/modeling/backbone/swin.py	/^    def forward(self, x):$/;"	m	class:PatchEmbed
forward	detectron2/modeling/backbone/swin.py	/^    def forward(self, x):$/;"	m	class:SwinTransformer
forward	detectron2/modeling/backbone/swin.py	/^    def forward(self, x, H, W):$/;"	m	class:BasicLayer
forward	detectron2/modeling/backbone/swin.py	/^    def forward(self, x, H, W):$/;"	m	class:PatchMerging
forward	detectron2/modeling/backbone/swin.py	/^    def forward(self, x, mask=None):$/;"	m	class:WindowAttention
forward	detectron2/modeling/backbone/swin.py	/^    def forward(self, x, mask_matrix):$/;"	m	class:SwinTransformerBlock
forward	detectron2/modeling/backbone/utils.py	/^    def forward(self, x):$/;"	m	class:PatchEmbed
forward	detectron2/modeling/backbone/vit.py	/^    def forward(self, x):$/;"	m	class:Attention
forward	detectron2/modeling/backbone/vit.py	/^    def forward(self, x):$/;"	m	class:Block
forward	detectron2/modeling/backbone/vit.py	/^    def forward(self, x):$/;"	m	class:ResBottleneckBlock
forward	detectron2/modeling/backbone/vit.py	/^    def forward(self, x):$/;"	m	class:SimpleFeaturePyramid
forward	detectron2/modeling/backbone/vit.py	/^    def forward(self, x):$/;"	m	class:ViT
forward	detectron2/modeling/meta_arch/dense_detector.py	/^    def forward(self, batched_inputs: List[Dict[str, Tensor]]):$/;"	m	class:DenseDetector
forward	detectron2/modeling/meta_arch/fcos.py	/^    def forward(self, features):$/;"	m	class:FCOSHead
forward	detectron2/modeling/meta_arch/panoptic_fpn.py	/^    def forward(self, batched_inputs):$/;"	m	class:PanopticFPN
forward	detectron2/modeling/meta_arch/rcnn.py	/^    def forward(self, batched_inputs):$/;"	m	class:ProposalNetwork
forward	detectron2/modeling/meta_arch/rcnn.py	/^    def forward(self, batched_inputs: List[Dict[str, torch.Tensor]]):$/;"	m	class:GeneralizedRCNN
forward	detectron2/modeling/meta_arch/retinanet.py	/^    def forward(self, features: List[Tensor]):$/;"	m	class:RetinaNetHead
forward	detectron2/modeling/meta_arch/semantic_seg.py	/^    def forward(self, batched_inputs):$/;"	m	class:SemanticSegmentor
forward	detectron2/modeling/meta_arch/semantic_seg.py	/^    def forward(self, features, targets=None):$/;"	m	class:SemSegFPNHead
forward	detectron2/modeling/mmdet_wrapper.py	/^    def forward(self, batched_inputs: List[Dict[str, torch.Tensor]]):$/;"	m	class:MMDetDetector
forward	detectron2/modeling/mmdet_wrapper.py	/^    def forward(self, x) -> Dict[str, Tensor]:$/;"	m	class:MMDetBackbone
forward	detectron2/modeling/poolers.py	/^    def forward(self, x: List[torch.Tensor], box_lists: List[Boxes]):$/;"	m	class:ROIPooler
forward	detectron2/modeling/proposal_generator/rpn.py	/^    def forward($/;"	m	class:RPN
forward	detectron2/modeling/proposal_generator/rpn.py	/^    def forward(self, features: List[torch.Tensor]):$/;"	m	class:StandardRPNHead
forward	detectron2/modeling/roi_heads/box_head.py	/^    def forward(self, x):$/;"	m	class:FastRCNNConvFCHead
forward	detectron2/modeling/roi_heads/cascade_rcnn.py	/^    def forward(ctx, input, scale):$/;"	m	class:_ScaleGradient
forward	detectron2/modeling/roi_heads/cascade_rcnn.py	/^    def forward(self, images, features, proposals, targets=None):$/;"	m	class:CascadeROIHeads
forward	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def forward(self, x):$/;"	m	class:FastRCNNOutputLayers
forward	detectron2/modeling/roi_heads/keypoint_head.py	/^    def forward(self, x, instances: List[Instances]):$/;"	m	class:BaseKeypointRCNNHead
forward	detectron2/modeling/roi_heads/mask_head.py	/^    def forward(self, x, instances: List[Instances]):$/;"	m	class:BaseMaskRCNNHead
forward	detectron2/modeling/roi_heads/roi_heads.py	/^    def forward($/;"	m	class:ROIHeads
forward	detectron2/modeling/roi_heads/roi_heads.py	/^    def forward($/;"	m	class:Res5ROIHeads
forward	detectron2/modeling/roi_heads/roi_heads.py	/^    def forward($/;"	m	class:StandardROIHeads
forward	projects/DeepLab/deeplab/loss.py	/^    def forward(self, logits, labels, weights=None):$/;"	m	class:DeepLabCE
forward	projects/DeepLab/deeplab/resnet.py	/^    def forward(self, x):$/;"	m	class:DeepLabStem
forward	projects/DeepLab/deeplab/semantic_seg.py	/^    def forward(self, features, targets=None):$/;"	m	class:DeepLabV3Head
forward	projects/DeepLab/deeplab/semantic_seg.py	/^    def forward(self, features, targets=None):$/;"	m	class:DeepLabV3PlusHead
forward	projects/DensePose/densepose/modeling/cse/embedder.py	/^    def forward(self, mesh_name: str) -> torch.Tensor:$/;"	m	class:Embedder
forward	projects/DensePose/densepose/modeling/cse/vertex_direct_embedder.py	/^    def forward(self) -> torch.Tensor:$/;"	m	class:VertexDirectEmbedder
forward	projects/DensePose/densepose/modeling/cse/vertex_feature_embedder.py	/^    def forward(self) -> torch.Tensor:$/;"	m	class:VertexFeatureEmbedder
forward	projects/DensePose/densepose/modeling/hrfpn.py	/^    def forward(self, inputs):$/;"	m	class:HRFPN
forward	projects/DensePose/densepose/modeling/hrnet.py	/^    def forward(self, x):$/;"	m	class:BasicBlock
forward	projects/DensePose/densepose/modeling/hrnet.py	/^    def forward(self, x):$/;"	m	class:Bottleneck
forward	projects/DensePose/densepose/modeling/hrnet.py	/^    def forward(self, x):$/;"	m	class:HighResolutionModule
forward	projects/DensePose/densepose/modeling/hrnet.py	/^    def forward(self, x):$/;"	m	class:PoseHigherResolutionNet
forward	projects/DensePose/densepose/modeling/losses/chart_with_confidences.py	/^    def forward($/;"	m	class:IIDIsotropicGaussianUVLoss
forward	projects/DensePose/densepose/modeling/losses/chart_with_confidences.py	/^    def forward($/;"	m	class:IndepAnisotropicGaussianUVLoss
forward	projects/DensePose/densepose/modeling/losses/cycle_pix2shape.py	/^    def forward($/;"	m	class:PixToShapeCycleLoss
forward	projects/DensePose/densepose/modeling/losses/cycle_shape2shape.py	/^    def forward(self, embedder: nn.Module):$/;"	m	class:ShapeToShapeCycleLoss
forward	projects/DensePose/densepose/modeling/predictors/chart.py	/^    def forward(self, head_outputs: torch.Tensor):$/;"	m	class:DensePoseChartPredictor
forward	projects/DensePose/densepose/modeling/predictors/chart_confidence.py	/^    def forward(self, head_outputs: torch.Tensor):$/;"	m	class:DensePoseChartConfidencePredictorMixin
forward	projects/DensePose/densepose/modeling/predictors/cse.py	/^    def forward(self, head_outputs):$/;"	m	class:DensePoseEmbeddingPredictor
forward	projects/DensePose/densepose/modeling/predictors/cse_confidence.py	/^    def forward(self, head_outputs: torch.Tensor):$/;"	m	class:DensePoseEmbeddingConfidencePredictorMixin
forward	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def forward(self, features):$/;"	m	class:DensePoseDeepLabHead
forward	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def forward(self, x):$/;"	m	class:ASPP
forward	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def forward(self, x):$/;"	m	class:ASPPPooling
forward	projects/DensePose/densepose/modeling/roi_heads/deeplab.py	/^    def forward(self, x):$/;"	m	class:_NonLocalBlockND
forward	projects/DensePose/densepose/modeling/roi_heads/roi_head.py	/^    def forward($/;"	m	class:DensePoseROIHeads
forward	projects/DensePose/densepose/modeling/roi_heads/roi_head.py	/^    def forward(self, features: List[torch.Tensor]):$/;"	m	class:Decoder
forward	projects/DensePose/densepose/modeling/roi_heads/v1convx.py	/^    def forward(self, features: torch.Tensor):$/;"	m	class:DensePoseV1ConvXHead
forward	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def forward($/;"	m	class:PanopticDeepLabInsEmbedHead
forward	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def forward(self, batched_inputs):$/;"	m	class:PanopticDeepLab
forward	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def forward(self, features, targets=None, weights=None):$/;"	m	class:PanopticDeepLabSemSegHead
forward	projects/PointRend/point_rend/mask_head.py	/^    def forward(self, features, instances):$/;"	m	class:ImplicitPointRendMaskHead
forward	projects/PointRend/point_rend/mask_head.py	/^    def forward(self, features, instances):$/;"	m	class:PointRendMaskHead
forward	projects/PointRend/point_rend/mask_head.py	/^    def forward(self, x):$/;"	m	class:ConvFCHead
forward	projects/PointRend/point_rend/point_head.py	/^    def forward(self, fine_grained_features, coarse_features):$/;"	m	class:StandardPointHead
forward	projects/PointRend/point_rend/point_head.py	/^    def forward(self, fine_grained_features, point_coords, parameters):$/;"	m	class:ImplicitPointHead
forward	projects/PointRend/point_rend/semantic_seg.py	/^    def forward(self, features, targets=None):$/;"	m	class:PointRendSemSegHead
forward	projects/PointSup/point_sup/mask_head.py	/^    def forward(self, x, instances: List[Instances]) -> Any:$/;"	m	class:MaskRCNNConvUpsamplePointSupHead
forward	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead_batch_stats.py	/^    def forward(self, input):$/;"	m	class:BatchNormBatchStat
forward	projects/Rethinking-BatchNorm/configs/retinanet_SyncBNhead_SharedTraining.py	/^    def forward(self, features: List[Tensor]):$/;"	m	class:RetinaNetHead_SharedTrainingBN
forward	projects/TensorMask/tensormask/arch.py	/^    def forward(self, batched_inputs):$/;"	m	class:TensorMask
forward	projects/TensorMask/tensormask/arch.py	/^    def forward(self, features):$/;"	m	class:TensorMaskAnchorGenerator
forward	projects/TensorMask/tensormask/arch.py	/^    def forward(self, features):$/;"	m	class:TensorMaskHead
forward	projects/TensorMask/tensormask/layers/swap_align2nat.py	/^    def forward(ctx, X, lambda_val, pad_val):$/;"	m	class:_SwapAlign2Nat
forward	projects/TensorMask/tensormask/layers/swap_align2nat.py	/^    def forward(self, X):$/;"	m	class:SwapAlign2Nat
forward	projects/TridentNet/tridentnet/trident_backbone.py	/^    def forward(self, x):$/;"	m	class:TridentBottleneckBlock
forward	projects/TridentNet/tridentnet/trident_conv.py	/^    def forward(self, inputs):$/;"	m	class:TridentConv
forward	projects/TridentNet/tridentnet/trident_rcnn.py	/^    def forward(self, images, features, proposals, targets=None):$/;"	m	class:TridentRes5ROIHeads
forward	projects/TridentNet/tridentnet/trident_rcnn.py	/^    def forward(self, images, features, proposals, targets=None):$/;"	m	class:TridentStandardROIHeads
forward	projects/TridentNet/tridentnet/trident_rpn.py	/^    def forward(self, images, features, gt_instances=None):$/;"	m	class:TridentRPN
forward	tests/layers/test_nms_rotated.py	/^            def forward(self, boxes, scores, threshold):$/;"	m	class:TestScriptable.setUp.TestingModule
forward	tests/modeling/test_fast_rcnn.py	/^            def forward(self, proposal_deltas, proposal_boxes):$/;"	m	class:FastRCNNTest.test_predict_boxes_tracing.Model
forward	tests/modeling/test_fast_rcnn.py	/^            def forward(self, scores, proposal_boxes):$/;"	m	class:FastRCNNTest.test_predict_probs_tracing.Model
forward	tests/modeling/test_roi_heads.py	/^            def forward(self, p2, p3, boxes):$/;"	m	class:ROIHeadsTest.test_PointRend_mask_head_tracing.Wrap
forward	tests/modeling/test_roi_pooler.py	/^            def forward(self, x, boxes):$/;"	m	class:TestROIPooler.test_roi_pooler_tracing.Model
forward	tests/structures/test_instances.py	/^            def forward(self, x: Instances):$/;"	m	class:TestInstances.test_script_access_fields.f
forward	tests/structures/test_instances.py	/^            def forward(self, x: Instances):$/;"	m	class:TestInstances.test_script_has.f
forward	tests/structures/test_instances.py	/^            def forward(self, x: Instances):$/;"	m	class:TestInstances.test_script_len.f
forward	tests/structures/test_instances.py	/^            def forward(self, x: Instances):$/;"	m	class:TestInstances.test_script_len.g
forward	tests/structures/test_instances.py	/^            def forward(self, x: Instances):$/;"	m	class:TestInstances.test_script_new_fields.f
forward	tests/structures/test_instances.py	/^            def forward(self, x: Instances):$/;"	m	class:TestInstances.test_script_new_fields.g
forward	tests/structures/test_instances.py	/^            def forward(self, x: Instances):$/;"	m	class:TestInstances.test_script_new_fields.g2
forward	tests/structures/test_instances.py	/^            def forward(self, x: Instances):$/;"	m	class:TestInstances.test_script_to.f
forward	tests/structures/test_instances.py	/^            def forward(self, x: Instances, idx):$/;"	m	class:TestInstances.test_script_getitem.f
forward	tests/test_engine.py	/^    def forward(self, x):$/;"	m	class:_SimpleModel
forward	tests/test_export_onnx.py	/^            def forward(self, x, predbox1, predbox2):$/;"	m	class:TestONNXTracingExport.testKeypointHead.M
forward	tests/test_export_torchscript.py	/^            def forward(self, input, number):$/;"	m	class:TestTorchscriptUtils.test_allow_non_tensor.M
forward	tests/test_export_torchscript.py	/^            def forward(self, x):$/;"	m	class:TestTorchscriptUtils.test_dump_IR_tracing.Mod
forward	tests/test_export_torchscript.py	/^            def forward(self, x, predbox1, predbox2):$/;"	m	class:TestTracing.testKeypointHead.M
forward	tests/test_model_analysis.py	/^            def forward(self, x):$/;"	m	class:UnusedParamTest.test_unused.TestMod
forward	tools/deploy/export_model.py	/^            def forward($/;"	m	class:export_scripting.ScriptableAdapterBase.ScriptableAdapter
forward_inference	detectron2/modeling/meta_arch/fcos.py	/^    def forward_inference($/;"	m	class:FCOS
forward_inference	detectron2/modeling/meta_arch/retinanet.py	/^    def forward_inference($/;"	m	class:RetinaNet
forward_training	detectron2/modeling/meta_arch/dense_detector.py	/^    def forward_training(self, images, features, predictions, gt_instances):$/;"	m	class:DenseDetector
forward_training	detectron2/modeling/meta_arch/fcos.py	/^    def forward_training(self, images, features, predictions, gt_instances):$/;"	m	class:FCOS
forward_training	detectron2/modeling/meta_arch/retinanet.py	/^    def forward_training(self, images, features, predictions, gt_instances):$/;"	m	class:RetinaNet
forward_with_given_boxes	detectron2/modeling/roi_heads/roi_heads.py	/^    def forward_with_given_boxes($/;"	m	class:Res5ROIHeads
forward_with_given_boxes	detectron2/modeling/roi_heads/roi_heads.py	/^    def forward_with_given_boxes($/;"	m	class:StandardROIHeads
forward_with_given_boxes	projects/DensePose/densepose/modeling/roi_heads/roi_head.py	/^    def forward_with_given_boxes($/;"	m	class:DensePoseROIHeads
fp16_compression	configs/common/train.py	/^        fp16_compression=False,$/;"	v
fpath	detectron2/data/datasets/coco_panoptic.py	/^        fpath = os.path.join(dirname, os.path.basename(d["file_name"]))$/;"	v
fpn_map	detectron2/checkpoint/c2_model_loading.py	/^    def fpn_map(name):$/;"	f	function:convert_c2_detectron_names
freeze	detectron2/layers/blocks.py	/^    def freeze(self):$/;"	m	class:CNNBlockBase
freeze	detectron2/modeling/backbone/regnet.py	/^    def freeze(self, freeze_at=0):$/;"	m	class:AnyNet
freeze	detectron2/modeling/backbone/resnet.py	/^    def freeze(self, freeze_at=0):$/;"	m	class:ResNet
freeze_at	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    freeze_at=2,$/;"	v
freeze_at	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    freeze_at=2,$/;"	v
freeze_training_mode	detectron2/export/torchscript_patch.py	/^def freeze_training_mode(model):$/;"	f
from_cfg	projects/DensePose/densepose/modeling/confidence.py	/^    def from_cfg(cfg: CfgNode) -> "DensePoseConfidenceModelConfig":$/;"	m	class:DensePoseConfidenceModelConfig
from_config	detectron2/data/dataset_mapper.py	/^    def from_config(cls, cfg, is_train: bool = True):$/;"	m	class:DatasetMapper
from_config	detectron2/export/c10.py	/^    def from_config(cls, cfg, input_shape: Dict[str, ShapeSpec]):$/;"	m	class:Caffe2RPN
from_config	detectron2/modeling/anchor_generator.py	/^    def from_config(cls, cfg, input_shape: List[ShapeSpec]):$/;"	m	class:DefaultAnchorGenerator
from_config	detectron2/modeling/anchor_generator.py	/^    def from_config(cls, cfg, input_shape: List[ShapeSpec]):$/;"	m	class:RotatedAnchorGenerator
from_config	detectron2/modeling/meta_arch/panoptic_fpn.py	/^    def from_config(cls, cfg):$/;"	m	class:PanopticFPN
from_config	detectron2/modeling/meta_arch/rcnn.py	/^    def from_config(cls, cfg):$/;"	m	class:GeneralizedRCNN
from_config	detectron2/modeling/meta_arch/rcnn.py	/^    def from_config(cls, cfg):$/;"	m	class:ProposalNetwork
from_config	detectron2/modeling/meta_arch/retinanet.py	/^    def from_config(cls, cfg):$/;"	m	class:RetinaNet
from_config	detectron2/modeling/meta_arch/retinanet.py	/^    def from_config(cls, cfg, input_shape: List[ShapeSpec]):$/;"	m	class:RetinaNetHead
from_config	detectron2/modeling/meta_arch/semantic_seg.py	/^    def from_config(cls, cfg):$/;"	m	class:SemanticSegmentor
from_config	detectron2/modeling/meta_arch/semantic_seg.py	/^    def from_config(cls, cfg, input_shape: Dict[str, ShapeSpec]):$/;"	m	class:SemSegFPNHead
from_config	detectron2/modeling/proposal_generator/rpn.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:StandardRPNHead
from_config	detectron2/modeling/proposal_generator/rpn.py	/^    def from_config(cls, cfg, input_shape: Dict[str, ShapeSpec]):$/;"	m	class:RPN
from_config	detectron2/modeling/proposal_generator/rrpn.py	/^    def from_config(cls, cfg, input_shape: Dict[str, ShapeSpec]):$/;"	m	class:RRPN
from_config	detectron2/modeling/roi_heads/box_head.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:FastRCNNConvFCHead
from_config	detectron2/modeling/roi_heads/cascade_rcnn.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:CascadeROIHeads
from_config	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:FastRCNNOutputLayers
from_config	detectron2/modeling/roi_heads/keypoint_head.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:BaseKeypointRCNNHead
from_config	detectron2/modeling/roi_heads/keypoint_head.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:KRCNNConvDeconvUpsampleHead
from_config	detectron2/modeling/roi_heads/mask_head.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:BaseMaskRCNNHead
from_config	detectron2/modeling/roi_heads/mask_head.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:MaskRCNNConvUpsampleHead
from_config	detectron2/modeling/roi_heads/roi_heads.py	/^    def from_config(cls, cfg):$/;"	m	class:ROIHeads
from_config	detectron2/modeling/roi_heads/roi_heads.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:Res5ROIHeads
from_config	detectron2/modeling/roi_heads/roi_heads.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:StandardROIHeads
from_config	detectron2/modeling/roi_heads/rotated_fast_rcnn.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:RotatedFastRCNNOutputLayers
from_config	detectron2/modeling/test_time_augmentation.py	/^    def from_config(cls, cfg):$/;"	m	class:DatasetMapperTTA
from_config	detectron2/tracking/base_tracker.py	/^    def from_config(cls, cfg: CfgNode_):$/;"	m	class:BaseTracker
from_config	detectron2/tracking/bbox_iou_tracker.py	/^    def from_config(cls, cfg: CfgNode_):$/;"	m	class:BBoxIOUTracker
from_config	detectron2/tracking/hungarian_tracker.py	/^    def from_config(cls, cfg: CfgNode_) -> Dict:$/;"	m	class:BaseHungarianTracker
from_config	detectron2/tracking/iou_weighted_hungarian_bbox_iou_tracker.py	/^    def from_config(cls, cfg: CfgNode_):$/;"	m	class:IOUWeightedHungarianBBoxIOUTracker
from_config	detectron2/tracking/vanilla_hungarian_bbox_iou_tracker.py	/^    def from_config(cls, cfg: CfgNode_):$/;"	m	class:VanillaHungarianBBoxIOUTracker
from_config	projects/DeepLab/deeplab/semantic_seg.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:DeepLabV3PlusHead
from_config	projects/Panoptic-DeepLab/panoptic_deeplab/dataset_mapper.py	/^    def from_config(cls, cfg):$/;"	m	class:PanopticDeeplabDatasetMapper
from_config	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:PanopticDeepLabInsEmbedHead
from_config	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:PanopticDeepLabSemSegHead
from_config	projects/PointRend/point_rend/mask_head.py	/^    def from_config(cls, cfg, input_shape):$/;"	m	class:ConvFCHead
from_config	projects/PointSup/point_sup/dataset_mapper.py	/^    def from_config(cls, cfg, is_train: bool = True):$/;"	m	class:PointSupDatasetMapper
from_config	tests/config/test_yacs_config.py	/^            def from_config(cls, config):  # noqa$/;"	m	class:TestConfigurable.testBadClass._BadClass3
from_config	tests/config/test_yacs_config.py	/^            def from_config(self, cfg):  # noqa$/;"	m	class:TestConfigurable.testBadClass._BadClass2
from_config	tests/config/test_yacs_config.py	/^    def from_config(cls, cfg):$/;"	m	class:_TestClassA
from_config	tests/config/test_yacs_config.py	/^    def from_config(cls, cfg, input_shape):  # test extra positional arg in from_config$/;"	m	class:_TestClassB
from_config	tests/config/test_yacs_config.py	/^    def from_config(cls, cfg, input_shape, **kwargs):  # test extra kwarg overwrite$/;"	m	class:_TestClassC
from_config	tests/test_engine.py	/^    def from_config(cls, cfg):$/;"	m	class:_SimpleModel
from_instances	detectron2/export/torchscript_patch.py	/^    def from_instances(instances: Instances):$/;"	f	function:_add_instances_conversion_methods
from_matches	projects/DensePose/densepose/modeling/losses/utils.py	/^    def from_matches($/;"	m	class:BilinearInterpolationHelper
from_polygon_masks	detectron2/structures/masks.py	/^    def from_polygon_masks($/;"	m	class:BitMasks
from_roi_masks	detectron2/structures/masks.py	/^    def from_roi_masks(roi_masks: "ROIMasks", height: int, width: int) -> "BitMasks":$/;"	m	class:BitMasks
from_ssa	detectron2/export/shared.py	/^    def from_ssa(ssa):$/;"	m	class:DiGraph
from_string	projects/DensePose/densepose/utils/dbhelper.py	/^    def from_string(spec: str) -> "EntrySelector":$/;"	m	class:EntrySelector
from_tensors	detectron2/structures/image_list.py	/^    def from_tensors($/;"	m	class:ImageList
frozen_stages	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            frozen_stages=1,$/;"	v
func	tests/layers/test_mask_ops.py	/^    def func(device, n=3):$/;"	f	function:benchmark_paste
func	tests/layers/test_roi_align.py	/^    def func(shape, nboxes_per_img, sampling_ratio, device, box_size="large"):$/;"	f	function:benchmark_roi_align
func	tests/layers/test_roi_align_rotated.py	/^        def func(input):$/;"	f	function:ROIAlignRotatedTest.test_roi_align_rotated_gradcheck_cpu
func	tests/modeling/test_fast_rcnn.py	/^            func = torch.jit.trace(model, (torch.randn(10, 20), torch.randn(10, 4)))$/;"	v	class:FastRCNNTest.test_predict_boxes_tracing.Model
func	tests/modeling/test_fast_rcnn.py	/^            func = torch.jit.trace(model, (torch.randn(10, 6), torch.rand(10, 4)))$/;"	v	class:FastRCNNTest.test_predict_probs_tracing.Model
func	tests/modeling/test_roi_pooler.py	/^            func = torch.jit.trace(model, (feature, rois))$/;"	v	class:TestROIPooler.test_roi_pooler_tracing.Model
func	tests/modeling/test_rpn.py	/^        def func(proposal, logit, image_size):$/;"	f	function:RPNTest.test_find_rpn_proposals_tracing
func	tests/structures/test_boxes.py	/^        def func(x):$/;"	f	function:TestBoxes.test_scriptability
func	tests/structures/test_rotated_boxes.py	/^        def func(x):$/;"	f	function:TestRotatedBoxesStructure.test_scriptability
func	tests/structures/test_rotated_boxes.py	/^    def func(dev, n=1):$/;"	f	function:benchmark_rotated_iou
func	tests/test_export_torchscript.py	/^        def func(x, y):$/;"	f	function:TestTorchscriptUtils.test_dump_IR_function
func_cat	tests/structures/test_boxes.py	/^        def func_cat(x: torch.Tensor):$/;"	f	function:TestBoxes.test_scriptability
func_cat	tests/structures/test_rotated_boxes.py	/^        def func_cat(x: torch.Tensor):$/;"	f	function:TestRotatedBoxesStructure.test_scriptability
fuse_alias_placeholder	detectron2/export/shared.py	/^def fuse_alias_placeholder(predict_net, init_net):$/;"	f
fuse_copy_between_cpu_and_gpu	detectron2/export/shared.py	/^def fuse_copy_between_cpu_and_gpu(predict_net: caffe2_pb2.NetDef):$/;"	f
g	tests/structures/test_instances.py	/^        class g(torch.nn.Module):$/;"	c	function:TestInstances.test_script_len
g	tests/structures/test_instances.py	/^        class g(torch.nn.Module):$/;"	c	function:TestInstances.test_script_new_fields
g2	tests/structures/test_instances.py	/^        class g2(torch.nn.Module):$/;"	c	function:TestInstances.test_script_new_fields
gap2d	detectron2/modeling/backbone/regnet.py	/^def gap2d():$/;"	f
gather	detectron2/utils/comm.py	/^def gather(data, dst=0, group=None):$/;"	f
gen_args	tests/layers/test_roi_align.py	/^    def gen_args(arg):$/;"	f	function:benchmark_roi_align
gen_crop_transform_with_instance	detectron2/data/detection_utils.py	/^def gen_crop_transform_with_instance(crop_size, image_size, instance):$/;"	f
gen_header	dev/packaging/gen_install_table.py	/^def gen_header(torch_versions):$/;"	f
gen_input	tests/test_export_onnx.py	/^        def gen_input(num1, num2):$/;"	f	function:TestONNXTracingExport.testKeypointHead
gen_input	tests/test_export_torchscript.py	/^        def gen_input(num1, num2):$/;"	f	function:TestTracing.testKeypointHead
gen_inputs	tests/modeling/test_roi_heads.py	/^        def gen_inputs(h, w, N):$/;"	f	function:ROIHeadsTest.test_PointRend_mask_head_tracing
general_keep_instance_predicate	projects/DensePose/densepose/data/build.py	/^    def general_keep_instance_predicate(instance: Instance) -> bool:$/;"	f	function:_maybe_create_general_keep_instance_predicate
generate_cell_anchors	detectron2/modeling/anchor_generator.py	/^    def generate_cell_anchors($/;"	m	class:RotatedAnchorGenerator
generate_cell_anchors	detectron2/modeling/anchor_generator.py	/^    def generate_cell_anchors(self, sizes=(32, 64, 128, 256, 512), aspect_ratios=(0.5, 1, 2)):$/;"	m	class:DefaultAnchorGenerator
generate_data	tests/data/test_coco.py	/^    def generate_data():$/;"	m	class:TestConvertCOCO
generate_image_with_texture	projects/DensePose/densepose/vis/densepose_outputs_vertex.py	/^    def generate_image_with_texture(self, bbox_image_bgr, uv_array, mask, mesh_name):$/;"	m	class:DensePoseOutputsTextureVisualizer
generate_image_with_texture	projects/DensePose/densepose/vis/densepose_results_textures.py	/^    def generate_image_with_texture(self, texture_image, alpha, bbox_image_bgr, iuv_array):$/;"	m	class:DensePoseResultsVisualizerWithTexture
generate_regnet_parameters	detectron2/modeling/backbone/regnet.py	/^def generate_regnet_parameters(w_a, w_0, w_m, d, q=8):$/;"	f
generate_regular_grid_point_coords	projects/PointRend/point_rend/point_features.py	/^def generate_regular_grid_point_coords(R, side_size, device):$/;"	f
generator	detectron2/data/build.py	/^            generator=generator,$/;"	v
generator	detectron2/data/build.py	/^        generator = torch.Generator()$/;"	v
generator	detectron2/data/build.py	/^    generator = None$/;"	v
generic_coco_test	projects/DensePose/tests/test_dataset_loaded_annotations.py	/^    def generic_coco_test(self, dataset_info):$/;"	m	class:TestDatasetLoadedAnnotations
generic_lvis_test	projects/DensePose/tests/test_dataset_loaded_annotations.py	/^    def generic_lvis_test(self, dataset_info):$/;"	m	class:TestDatasetLoadedAnnotations
generic_test	projects/DensePose/tests/test_dataset_loaded_annotations.py	/^    def generic_test(self, dataset_info, n_inst, loader_fun):$/;"	m	class:TestDatasetLoadedAnnotations
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_bear_4936.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_cat_5001.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_cat_7466.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_chimp_5029.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_cow_5002.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_dog_5002.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_dog_7466.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_elephant_5002.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_giraffe_5002.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_horse_5004.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_sheep_5004.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_smpl_27554.pkl",$/;"	v
geodists	projects/DensePose/densepose/data/meshes/builtin.py	/^        geodists="geodists\/geodists_zebra_5002.pkl",$/;"	v
geodists	projects/DensePose/densepose/structures/mesh.py	/^    def geodists(self):$/;"	m	class:Mesh
get	demo/predictor.py	/^    def get(self):$/;"	m	class:AsyncPredictor
get	detectron2/checkpoint/catalog.py	/^    def get(name):$/;"	m	class:ModelCatalog
get	detectron2/data/catalog.py	/^    def get(self, key, default=None):$/;"	m	class:Metadata
get	detectron2/data/catalog.py	/^    def get(self, name):$/;"	m	class:_DatasetCatalog
get	detectron2/data/catalog.py	/^    def get(self, name):$/;"	m	class:_MetadataCatalog
get	detectron2/model_zoo/model_zoo.py	/^def get(config_path, trained: bool = False, device: Optional[str] = None):$/;"	f
get	detectron2/structures/instances.py	/^    def get(self, name: str) -> Any:$/;"	m	class:Instances
get	projects/DensePose/densepose/evaluation/tensor_storage.py	/^    def get(self, rank: int, record_id: int) -> Dict[str, torch.Tensor]:$/;"	m	class:MultiProcessTensorStorage
get	projects/DensePose/densepose/evaluation/tensor_storage.py	/^    def get(self, record_id: int) -> Dict[str, torch.Tensor]:$/;"	m	class:SingleProcessTensorStorage
getDensePoseMask	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def getDensePoseMask(self, polys):$/;"	m	class:DensePoseCocoEval
getDistancesCse	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def getDistancesCse(self, cVertsGT, cVerts, mesh_name):$/;"	m	class:DensePoseCocoEval
getDistancesUV	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def getDistancesUV(self, cVertsGT, cVerts):$/;"	m	class:DensePoseCocoEval
get_abs_pos	detectron2/modeling/backbone/utils.py	/^def get_abs_pos(abs_pos, has_cls_token, hw):$/;"	f
get_all_paths	detectron2/export/shared.py	/^    def get_all_paths(self, s, d):$/;"	m	class:DiGraph
get_bbox	detectron2/data/detection_utils.py	/^def get_bbox(annotation):$/;"	f
get_best_param_group_id	detectron2/engine/hooks.py	/^    def get_best_param_group_id(optimizer):$/;"	m	class:LRScheduler
get_bootstrap_dataset_config	projects/DensePose/densepose/config.py	/^def get_bootstrap_dataset_config() -> CN:$/;"	f
get_bounding_boxes	detectron2/structures/masks.py	/^    def get_bounding_boxes(self) -> Boxes:$/;"	m	class:BitMasks
get_bounding_boxes	detectron2/structures/masks.py	/^    def get_bounding_boxes(self) -> Boxes:$/;"	m	class:PolygonMasks
get_caffe2_inputs	detectron2/export/caffe2_modeling.py	/^    def get_caffe2_inputs(self, batched_inputs):$/;"	m	class:Caffe2MetaArch
get_category_to_class_mapping	projects/DensePose/densepose/data/utils.py	/^def get_category_to_class_mapping(dataset_cfg: CfgNode) -> Dict[str, int]:$/;"	f
get_centers	detectron2/structures/boxes.py	/^    def get_centers(self) -> torch.Tensor:$/;"	m	class:Boxes
get_centers	detectron2/structures/rotated_boxes.py	/^    def get_centers(self) -> torch.Tensor:$/;"	m	class:RotatedBoxes
get_cfg	detectron2/config/config.py	/^def get_cfg() -> CfgNode:$/;"	f
get_checkpoint_url	detectron2/model_zoo/model_zoo.py	/^def get_checkpoint_url(config_path):$/;"	f
get_cityscapes_panoptic_files	detectron2/data/datasets/cityscapes_panoptic.py	/^def get_cityscapes_panoptic_files(image_dir, gt_dir, json_info):$/;"	f
get_class_to_mesh_name_mapping	projects/DensePose/densepose/data/utils.py	/^def get_class_to_mesh_name_mapping(cfg: CfgNode) -> Dict[int, str]:$/;"	f
get_closest_vertices_mask_from_ES	projects/DensePose/densepose/modeling/cse/utils.py	/^def get_closest_vertices_mask_from_ES($/;"	f
get_code	detectron2/export/torchscript.py	/^        def get_code(mod):$/;"	f	function:dump_torchscript_IR._get_script_mod
get_config	detectron2/model_zoo/model_zoo.py	/^def get_config(config_path, trained: bool = False):$/;"	f
get_config_file	detectron2/model_zoo/model_zoo.py	/^def get_config_file(config_path):$/;"	f
get_config_files	projects/DensePose/tests/common.py	/^def get_config_files():$/;"	f
get_consumer_map	detectron2/export/shared.py	/^def get_consumer_map(ssa):$/;"	f
get_contiguous_id_to_category_id_map	projects/DensePose/densepose/data/datasets/coco.py	/^def get_contiguous_id_to_category_id_map(metadata):$/;"	f
get_crop_size	detectron2/data/transforms/augmentation_impl.py	/^    def get_crop_size(self, image_size):$/;"	m	class:RandomCrop
get_default_optimizer_params	detectron2/solver/build.py	/^def get_default_optimizer_params($/;"	f
get_deltas	detectron2/modeling/box_regression.py	/^    def get_deltas(self, src_boxes, target_boxes):$/;"	m	class:Box2BoxTransform
get_deltas	detectron2/modeling/box_regression.py	/^    def get_deltas(self, src_boxes, target_boxes):$/;"	m	class:Box2BoxTransformLinear
get_deltas	detectron2/modeling/box_regression.py	/^    def get_deltas(self, src_boxes, target_boxes):$/;"	m	class:Box2BoxTransformRotated
get_detection_dataset_dicts	detectron2/data/build.py	/^def get_detection_dataset_dicts($/;"	f
get_detectron2_current_version	projects/DensePose/setup.py	/^def get_detectron2_current_version():$/;"	f
get_empty_instance	tests/modeling/test_model_e2e.py	/^def get_empty_instance(h, w):$/;"	f
get_env_module	detectron2/utils/collect_env.py	/^def get_env_module():$/;"	f
get_evaluator	tools/plain_train_net.py	/^def get_evaluator(cfg, dataset_name, output_folder=None):$/;"	f
get_event_storage	detectron2/utils/events.py	/^def get_event_storage():$/;"	f
get_evolution_config_files	projects/DensePose/tests/common.py	/^def get_evolution_config_files():$/;"	f
get_extensions	projects/TensorMask/setup.py	/^def get_extensions():$/;"	f
get_extensions	setup.py	/^def get_extensions():$/;"	f
get_fed_loss_classes	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def get_fed_loss_classes(self, gt_classes, num_fed_loss_classes, num_classes, weight):$/;"	m	class:FastRCNNOutputLayers
get_fed_loss_cls_weights	detectron2/data/detection_utils.py	/^def get_fed_loss_cls_weights(dataset_names: Union[str, List[str]], freq_weight_power=1.0):$/;"	f
get_fed_loss_cls_weights	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            get_fed_loss_cls_weights=lambda: get_fed_loss_cls_weights($/;"	v
get_fed_loss_cls_weights	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            get_fed_loss_cls_weights=lambda: get_fed_loss_cls_weights($/;"	v
get_fed_loss_cls_weights	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            get_fed_loss_cls_weights=lambda: get_fed_loss_cls_weights($/;"	v
get_fields	detectron2/export/c10.py	/^    def get_fields(self):$/;"	m	class:InstancesList
get_fields	detectron2/structures/instances.py	/^    def get_fields(self) -> Dict[str, Any]:$/;"	m	class:Instances
get_file_name	detectron2/data/datasets/lvis.py	/^    def get_file_name(img_root, img_dict):$/;"	f	function:load_lvis_json
get_file_name	projects/DensePose/densepose/data/datasets/lvis.py	/^    def get_file_name(img_root, img_dict):$/;"	f	function:_combine_images_with_annotations
get_geodists	projects/DensePose/densepose/structures/mesh.py	/^    def get_geodists(self):$/;"	m	class:Mesh
get_ground_truth	projects/TensorMask/tensormask/arch.py	/^    def get_ground_truth(self, anchors, unit_lengths, indexes, targets):$/;"	m	class:TensorMask
get_gt_and_features	tests/modeling/test_rpn.py	/^    def get_gt_and_features(self):$/;"	m	class:RPNTest
get_hrnet_config_files	projects/DensePose/tests/common.py	/^def get_hrnet_config_files():$/;"	f
get_image	detectron2/utils/visualizer.py	/^    def get_image(self):$/;"	m	class:VisImage
get_image_bgr_from_context	projects/DensePose/densepose/vis/densepose_results.py	/^    def get_image_bgr_from_context(self, context):$/;"	m	class:DensePoseResultsVisualizer
get_instance_segmentation	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^def get_instance_segmentation($/;"	f
get_local_process_group	detectron2/utils/comm.py	/^def get_local_process_group():$/;"	f
get_local_rank	detectron2/utils/comm.py	/^def get_local_rank() -> int:$/;"	f
get_local_size	detectron2/utils/comm.py	/^def get_local_size() -> int:$/;"	f
get_lr	detectron2/solver/lr_scheduler.py	/^    def get_lr(self) -> List[float]:$/;"	m	class:LRMultiplier
get_lr	detectron2/solver/lr_scheduler.py	/^    def get_lr(self) -> List[float]:$/;"	m	class:WarmupCosineLR
get_lr	detectron2/solver/lr_scheduler.py	/^    def get_lr(self) -> List[float]:$/;"	m	class:WarmupMultiStepLR
get_lr	projects/DeepLab/deeplab/lr_scheduler.py	/^    def get_lr(self) -> List[float]:$/;"	m	class:WarmupPolyLR
get_lvis_instances_meta	detectron2/data/datasets/lvis.py	/^def get_lvis_instances_meta(dataset_name):$/;"	f
get_mask	tests/structures/test_instances.py	/^        def get_mask(x: Instances) -> torch.Tensor:$/;"	f	function:TestInstances.test_script_new_fields
get_mesh_id	projects/DensePose/densepose/data/meshes/catalog.py	/^    def get_mesh_id(self, shape_name: str) -> int:$/;"	m	class:_MeshCatalog
get_mesh_name	projects/DensePose/densepose/data/meshes/catalog.py	/^    def get_mesh_name(self, mesh_id: int) -> str:$/;"	m	class:_MeshCatalog
get_metadata	projects/DensePose/densepose/data/datasets/coco.py	/^def get_metadata(base_path: Optional[str]) -> Dict[str, Any]:$/;"	f
get_model	projects/DensePose/tests/common.py	/^def get_model(config_file):$/;"	f
get_model_config	projects/DensePose/tests/common.py	/^def get_model_config(config_file):$/;"	f
get_model_no_weights	detectron2/utils/testing.py	/^def get_model_no_weights(config_path):$/;"	f
get_model_zoo_configs	setup.py	/^def get_model_zoo_configs() -> List[str]:$/;"	f
get_norm	detectron2/layers/batch_norm.py	/^def get_norm(norm, out_channels):$/;"	f
get_num_inchannels	projects/DensePose/densepose/modeling/hrnet.py	/^    def get_num_inchannels(self):$/;"	m	class:HighResolutionModule
get_output	detectron2/utils/visualizer.py	/^    def get_output(self):$/;"	m	class:Visualizer
get_output_shape	detectron2/data/transforms/augmentation_impl.py	/^    def get_output_shape($/;"	m	class:ResizeShortestEdge
get_outputs_converter	detectron2/export/caffe2_modeling.py	/^    def get_outputs_converter(predict_net, init_net):$/;"	m	class:Caffe2GeneralizedRCNN
get_outputs_converter	detectron2/export/caffe2_modeling.py	/^    def get_outputs_converter(predict_net, init_net):$/;"	m	class:Caffe2MetaArch
get_outputs_converter	detectron2/export/caffe2_modeling.py	/^    def get_outputs_converter(predict_net, init_net):$/;"	m	class:Caffe2RetinaNet
get_panoptic_segmentation	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^def get_panoptic_segmentation($/;"	f
get_params_from_init_net	detectron2/export/shared.py	/^def get_params_from_init_net($/;"	f
get_parser	demo/demo.py	/^def get_parser():$/;"	f
get_pb_arg	detectron2/export/shared.py	/^def get_pb_arg(pb, arg_name):$/;"	f
get_pb_arg_floats	detectron2/export/shared.py	/^def get_pb_arg_floats(pb, arg_name, default_val):$/;"	f
get_pb_arg_ints	detectron2/export/shared.py	/^def get_pb_arg_ints(pb, arg_name, default_val):$/;"	f
get_pb_arg_valf	detectron2/export/shared.py	/^def get_pb_arg_valf(pb, arg_name, default_val):$/;"	f
get_pb_arg_vali	detectron2/export/shared.py	/^def get_pb_arg_vali(pb, arg_name, default_val):$/;"	f
get_pb_arg_vals	detectron2/export/shared.py	/^def get_pb_arg_vals(pb, arg_name, default_val):$/;"	f
get_pb_arg_valstrings	detectron2/export/shared.py	/^def get_pb_arg_valstrings(pb, arg_name, default_val):$/;"	f
get_point_annotations	projects/PointSup/tools/prepare_coco_point_annotations_without_masks.py	/^def get_point_annotations(input_filename, output_filename, num_points_per_instance):$/;"	f
get_point_coords_from_point_annotation	projects/PointSup/point_sup/point_utils.py	/^def get_point_coords_from_point_annotation(instances):$/;"	f
get_point_coords_wrt_box	projects/PointSup/point_sup/point_utils.py	/^def get_point_coords_wrt_box(boxes_coords, point_coords):$/;"	f
get_point_coords_wrt_image	projects/PointRend/point_rend/point_features.py	/^def get_point_coords_wrt_image(boxes_coords, point_coords):$/;"	f
get_producer_map	detectron2/export/shared.py	/^def get_producer_map(ssa):$/;"	f
get_quick_schedules_config_files	projects/DensePose/tests/common.py	/^def get_quick_schedules_config_files():$/;"	f
get_rank	detectron2/utils/comm.py	/^def get_rank() -> int:$/;"	f
get_regular_bitmask_instances	tests/modeling/test_model_e2e.py	/^def get_regular_bitmask_instances(h, w):$/;"	f
get_rel_pos	detectron2/modeling/backbone/utils.py	/^def get_rel_pos(q_size, k_size, rel_pos):$/;"	f
get_sample_coco_image	detectron2/utils/testing.py	/^def get_sample_coco_image(tensor=True):$/;"	f
get_sample_inputs	tools/deploy/export_model.py	/^def get_sample_inputs(args):$/;"	f
get_sub_graph_external_input_output	detectron2/export/shared.py	/^def get_sub_graph_external_input_output($/;"	f
get_text_size_wh	projects/DensePose/densepose/vis/base.py	/^    def get_text_size_wh(self, txt):$/;"	m	class:TextVisualizer
get_texture	projects/DensePose/densepose/vis/densepose_results_textures.py	/^    def get_texture(self):$/;"	m	class:DensePoseResultsVisualizerWithTexture
get_texture_atlas	projects/DensePose/densepose/vis/densepose_results_textures.py	/^def get_texture_atlas(path: Optional[str]) -> Optional[np.ndarray]:$/;"	f
get_texture_atlases	projects/DensePose/densepose/vis/densepose_outputs_vertex.py	/^def get_texture_atlases(json_str: Optional[str]) -> Optional[Dict[str, Optional[np.ndarray]]]:$/;"	f
get_transform	detectron2/data/transforms/augmentation.py	/^    def get_transform(self, *args) -> Transform:$/;"	m	class:Augmentation
get_transform	detectron2/data/transforms/augmentation.py	/^    def get_transform(self, *args):$/;"	m	class:_TransformToAug
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, *args):$/;"	m	class:RandomApply
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:Albumentations
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:RandomBrightness
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:RandomContrast
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:RandomCrop
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:RandomExtent
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:RandomFlip
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:RandomLighting
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:RandomResize
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:RandomRotation
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:RandomSaturation
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:Resize
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image):$/;"	m	class:ResizeShortestEdge
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image, boxes):$/;"	m	class:MinIoURandomCrop
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image, sem_seg):$/;"	m	class:RandomCrop_CategoryAreaConstraint
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image: np.ndarray) -> Transform:$/;"	m	class:ResizeScale
get_transform	detectron2/data/transforms/augmentation_impl.py	/^    def get_transform(self, image: np.ndarray) -> TransformList:$/;"	m	class:FixedSizeCrop
get_transform	tests/data/test_transforms.py	/^            def get_transform(self, image):$/;"	m	class:TestTransforms.test_augmentation_input_args.TG2
get_transform	tests/data/test_transforms.py	/^            def get_transform(self, image, nonexist):$/;"	m	class:TestTransforms.test_augmentation_input_args.TG3
get_transform	tests/data/test_transforms.py	/^            def get_transform(self, image, sem_seg):$/;"	m	class:TestTransforms.test_augmentation_input_args.TG1
get_uncertain_point_coords_on_grid	projects/PointRend/point_rend/point_features.py	/^def get_uncertain_point_coords_on_grid(uncertainty_map, num_points):$/;"	f
get_uncertain_point_coords_with_randomness	projects/PointRend/point_rend/point_features.py	/^def get_uncertain_point_coords_with_randomness($/;"	f
get_version	detectron2/utils/env.py	/^    def get_version(module, digit=2):$/;"	f	function:_configure_libraries
get_version	setup.py	/^def get_version():$/;"	f
get_vit_lr_decay_rate	detectron2/modeling/backbone/vit.py	/^def get_vit_lr_decay_rate(name, lr_decay_rate=1.0, num_layers=12):$/;"	f
get_world_size	detectron2/utils/comm.py	/^def get_world_size() -> int:$/;"	f
get_xyz_vertex_embedding	projects/DensePose/densepose/vis/densepose_outputs_vertex.py	/^def get_xyz_vertex_embedding(mesh_name: str, device: torch.device):$/;"	f
global_cfg	detectron2/config/config.py	/^global_cfg = CfgNode()$/;"	v
global_rank	detectron2/engine/launch.py	/^    global_rank = machine_rank * num_gpus_per_machine + local_rank$/;"	v
grid_anchors_with_unit_lengths_and_indexes	projects/TensorMask/tensormask/arch.py	/^    def grid_anchors_with_unit_lengths_and_indexes(self, grid_sizes):$/;"	m	class:TensorMaskAnchorGenerator
grid_sample_roi_align	tests/layers/test_roi_align.py	/^def grid_sample_roi_align(input, boxes, output_size, scale, sampling_ratio):$/;"	f
group_norm_replace_aten_with_caffe2	detectron2/export/shared.py	/^def group_norm_replace_aten_with_caffe2(predict_net: caffe2_pb2.NetDef):$/;"	f
group_pixels	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^def group_pixels(center_points, offsets):$/;"	f
group_width	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    group_width=40,$/;"	v
group_width	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    group_width=64,$/;"	v
group_width	configs/new_baselines/mask_rcnn_regnetx_4gf_dds_FPN_100ep_LSJ.py	/^    group_width=40,$/;"	v
group_width	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    group_width=64,$/;"	v
gt_anchor_deltas	detectron2/modeling/box_regression.py	/^        gt_anchor_deltas = [box2box_transform.get_deltas(anchors, k) for k in gt_boxes]$/;"	v
gt_anchor_deltas	detectron2/modeling/box_regression.py	/^        gt_anchor_deltas = torch.stack(gt_anchor_deltas)  # (N, R, 4)$/;"	v
gt_center	projects/TensorMask/tensormask/arch.py	/^    gt_center = (gt_boxes[:, 2:] + gt_boxes[:, :2]) \/ 2  # [N,2]$/;"	v
gt_size_lower	projects/TensorMask/tensormask/arch.py	/^    gt_size_lower = torch.max(gt_boxes[:, 2:] - gt_boxes[:, :2], dim=1)[0]  # [N]$/;"	v
gt_size_upper	projects/TensorMask/tensormask/arch.py	/^    gt_size_upper = gt_size_lower * scale_thresh  # [N]$/;"	v
guess_version	detectron2/config/compat.py	/^def guess_version(cfg: CN, filename: str) -> int:$/;"	f
gunc	tests/test_export_torchscript.py	/^        def gunc(x, y):$/;"	f	function:TestTorchscriptUtils.test_dump_IR_function
has	detectron2/export/c10.py	/^    def has(self, name):$/;"	m	class:InstancesList
has	detectron2/structures/instances.py	/^    def has(self, name: str) -> bool:$/;"	m	class:Instances
has_annotations	projects/DensePose/densepose/data/build.py	/^    def has_annotations(instance: Instance) -> bool:$/;"	f	function:_maybe_create_general_keep_instance_predicate
has_densepose_annotations	projects/DensePose/densepose/data/build.py	/^    def has_densepose_annotations(instance: Instance) -> bool:$/;"	f	function:_maybe_create_densepose_keep_instance_predicate
has_dynamic_axes	detectron2/utils/testing.py	/^def has_dynamic_axes(onnx_model):$/;"	f
has_embeddings	projects/DensePose/densepose/modeling/cse/embedder.py	/^    def has_embeddings(self, mesh_name: str) -> bool:$/;"	m	class:Embedder
has_event_storage	detectron2/utils/events.py	/^def has_event_storage():$/;"	f
has_gpu	detectron2/engine/launch.py	/^    has_gpu = torch.cuda.is_available()$/;"	v
has_holes	detectron2/utils/visualizer.py	/^    def has_holes(self):$/;"	m	class:GenericMask
has_inference_based_loaders	projects/DensePose/densepose/data/build.py	/^def has_inference_based_loaders(cfg: CfgNode) -> bool:$/;"	f
has_instances	detectron2/data/build.py	/^    has_instances = "annotations" in dataset_dicts[0]$/;"	v
has_mask_annotations	projects/DensePose/densepose/data/build.py	/^    def has_mask_annotations(instance: Instance) -> bool:$/;"	f	function:_maybe_create_mask_keep_instance_predicate
has_only_crowd_anotations	projects/DensePose/densepose/data/build.py	/^    def has_only_crowd_anotations(instance: Instance) -> bool:$/;"	f	function:_maybe_create_general_keep_instance_predicate
has_sufficient_num_keypoints	projects/DensePose/densepose/data/build.py	/^    def has_sufficient_num_keypoints(instance: Instance) -> bool:$/;"	f	function:_maybe_create_keypoints_keep_instance_predicate
head	configs/common/models/mask_rcnn_c4.py	/^        head=L(StandardRPNHead)(in_channels=1024, num_anchors=15),$/;"	v
head	configs/common/models/mask_rcnn_fpn.py	/^        head=L(StandardRPNHead)(in_channels=256, num_anchors=3),$/;"	v
head	configs/common/models/retinanet.py	/^    head=L(RetinaNetHead)($/;"	v
head_in_features	configs/common/models/retinanet.py	/^    head_in_features=["p3", "p4", "p5", "p6", "p7"],$/;"	v
heatmaps_to_keypoints	detectron2/structures/keypoints.py	/^def heatmaps_to_keypoints(maps: torch.Tensor, rois: torch.Tensor) -> torch.Tensor:$/;"	f
height	configs/common/models/mask_rcnn_c4.py	/^                height="${...pooler.output_size}",$/;"	v
help	detectron2/engine/defaults.py	/^        help="Whether to attempt to resume from the checkpoint directory. "$/;"	v
help	detectron2/engine/defaults.py	/^        help="initialization URL for pytorch distributed backend. See "$/;"	v
help	tools/analyze_model.py	/^        help="number of inputs used to compute statistics for flops\/activations, "$/;"	v
histories	detectron2/utils/events.py	/^    def histories(self):$/;"	m	class:EventStorage
history	detectron2/utils/events.py	/^    def history(self, name):$/;"	m	class:EventStorage
hook	tests/modeling/test_model_e2e.py	/^    def hook(module, input, output):$/;"	f	function:typecheck_hook
html_css_files	docs/conf.py	/^html_css_files = ["css\/custom.css"]$/;"	v
html_static_path	docs/conf.py	/^html_static_path = ["_static"]$/;"	v
html_theme	docs/conf.py	/^html_theme = "sphinx_rtd_theme"$/;"	v
html_theme_path	docs/conf.py	/^html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]$/;"	v
htmlhelp_basename	docs/conf.py	/^htmlhelp_basename = "detectron2doc"$/;"	v
hue	projects/PointRend/point_rend/color_augmentation.py	/^    def hue(self, img):$/;"	m	class:ColorAugSSDTransform
id_map	detectron2/data/datasets/coco.py	/^        id_map = {v: i for i, v in enumerate(cat_ids)}$/;"	v
identify_reshape_sub_graph	detectron2/export/shared.py	/^def identify_reshape_sub_graph(predict_net: caffe2_pb2.NetDef) -> List[List[int]]:$/;"	f
idx	detectron2/utils/colormap.py	/^            idx = h * W + w$/;"	v
ignore_iof_thr	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    ignore_iof_thr=-1,$/;"	v
ignore_value	configs/common/models/panoptic_fpn.py	/^    ignore_value=255,$/;"	v
image_format	configs/common/data/coco.py	/^        image_format="${...train.mapper.image_format}",$/;"	v
image_format	configs/common/data/coco.py	/^        image_format="BGR",$/;"	v
image_format	projects/MViTv2/configs/common/coco_loader.py	/^        image_format="${...train.mapper.image_format}",$/;"	v
image_format	projects/MViTv2/configs/common/coco_loader.py	/^        image_format="RGB",$/;"	v
image_shape	projects/DensePose/tests/test_chart_based_annotations_accumulator.py	/^image_shape = (100, 100)$/;"	v
image_size	configs/new_baselines/mask_rcnn_R_50_FPN_100ep_LSJ.py	/^image_size = 1024$/;"	v
image_size	detectron2/structures/instances.py	/^    def image_size(self) -> Tuple[int, int]:$/;"	m	class:Instances
image_size	projects/MViTv2/configs/common/coco_loader_lsj.py	/^image_size = 1024$/;"	v
image_size	projects/ViTDet/configs/common/coco_loader_lsj.py	/^image_size = 1024$/;"	v
imagenet_bgr256_mean	configs/common/data/constants.py	/^    imagenet_bgr256_mean=[103.530, 116.280, 123.675],$/;"	v
imagenet_bgr256_std	configs/common/data/constants.py	/^    imagenet_bgr256_std=[1.0, 1.0, 1.0],$/;"	v
imagenet_rgb256_mean	configs/common/data/constants.py	/^    imagenet_rgb256_mean=[123.675, 116.28, 103.53],$/;"	v
imagenet_rgb256_std	configs/common/data/constants.py	/^    imagenet_rgb256_std=[58.395, 57.12, 57.375],$/;"	v
images_root	projects/DensePose/densepose/data/datasets/coco.py	/^        images_root="coco\/train2014",$/;"	v	class:CocoDatasetInfo
images_root	projects/DensePose/densepose/data/datasets/coco.py	/^        images_root="coco\/train2017",$/;"	v
images_root	projects/DensePose/densepose/data/datasets/coco.py	/^        images_root="coco\/train2017",$/;"	v	class:CocoDatasetInfo
images_root	projects/DensePose/densepose/data/datasets/coco.py	/^        images_root="coco\/val2014",$/;"	v	class:CocoDatasetInfo
images_root	projects/DensePose/densepose/data/datasets/coco.py	/^        images_root="coco\/val2017",$/;"	v
images_root	projects/DensePose/densepose/data/datasets/coco.py	/^        images_root="coco\/val2017",$/;"	v	class:CocoDatasetInfo
images_root	projects/DensePose/densepose/data/datasets/coco.py	/^        images_root="densepose_chimps\/images",$/;"	v	class:CocoDatasetInfo
images_root	projects/DensePose/densepose/data/datasets/coco.py	/^        images_root="posetrack2017\/posetrack_data_2017",$/;"	v	class:CocoDatasetInfo
images_root	projects/DensePose/densepose/data/datasets/lvis.py	/^        images_root="coco_",$/;"	v
img	detectron2/data/datasets/coco_panoptic.py	/^        img = np.array(Image.open(d["file_name"]))$/;"	v
img_ids	detectron2/data/datasets/coco.py	/^    img_ids = sorted(coco_api.imgs.keys())$/;"	v
img_size	configs/common/models/mask_rcnn_vitdet.py	/^        img_size=1024,$/;"	v
imgs	detectron2/data/datasets/coco.py	/^    imgs = coco_api.loadImgs(img_ids)$/;"	v
imgs_anns	detectron2/data/datasets/coco.py	/^    imgs_anns = list(zip(imgs, anns))$/;"	v
in_channels	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                in_channels=256,$/;"	v
in_channels	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            in_channels=256,$/;"	v
in_channels	configs/common/models/mask_rcnn_c4.py	/^            in_channels=1024,$/;"	v
in_feature	configs/common/models/mask_rcnn_vitdet.py	/^    in_feature="${.net.out_feature}",$/;"	v
in_features	configs/common/models/mask_rcnn_c4.py	/^        in_features=["res4"],$/;"	v
in_features	configs/common/models/mask_rcnn_fpn.py	/^        in_features="${.bottom_up.out_features}",$/;"	v
in_features	configs/common/models/mask_rcnn_fpn.py	/^        in_features=["p2", "p3", "p4", "p5", "p6"],$/;"	v
in_features	configs/common/models/retinanet.py	/^        in_features=["res3", "res4", "res5"],$/;"	v
indent	detectron2/export/torchscript_patch.py	/^    def indent(level, s):$/;"	f	function:_gen_instance_class
infer_device_type	detectron2/export/shared.py	/^def infer_device_type($/;"	f
inference	detectron2/modeling/meta_arch/panoptic_fpn.py	/^    def inference(self, batched_inputs: List[Dict[str, torch.Tensor]], do_postprocess: bool = True):$/;"	m	class:PanopticFPN
inference	detectron2/modeling/meta_arch/rcnn.py	/^    def inference($/;"	m	class:GeneralizedRCNN
inference	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def inference(self, predictions: Tuple[torch.Tensor, torch.Tensor], proposals: List[Instances]):$/;"	m	class:FastRCNNOutputLayers
inference	detectron2/modeling/roi_heads/rotated_fast_rcnn.py	/^    def inference(self, predictions, proposals):$/;"	m	class:RotatedFastRCNNOutputLayers
inference	projects/TensorMask/tensormask/arch.py	/^    def inference(self, pred_logits, pred_deltas, pred_masks, anchors, indexes, images):$/;"	m	class:TensorMask
inference	tools/deploy/export_model.py	/^        def inference(model, inputs):$/;"	f	function:export_tracing
inference_context	detectron2/evaluation/evaluator.py	/^def inference_context(model):$/;"	f
inference_func	tests/test_export_onnx.py	/^        def inference_func(model, image):$/;"	f	function:TestONNXTracingExport.testCascadeRCNN
inference_func	tests/test_export_onnx.py	/^        def inference_func(model, image):$/;"	f	function:TestONNXTracingExport.testMaskRCNNC4
inference_func	tests/test_export_onnx.py	/^        def inference_func(model, image):$/;"	f	function:TestONNXTracingExport.testMaskRCNNFPN_with_postproc
inference_func	tests/test_export_onnx.py	/^        def inference_func(model, image):$/;"	f	function:TestONNXTracingExport.testRetinaNet
inference_func	tests/test_export_onnx.py	/^        def inference_func(model, image1, image2):$/;"	f	function:TestONNXTracingExport.testMaskRCNNFPN_batched
inference_func	tests/test_export_onnx.py	/^        def inference_func(model, images):$/;"	f	function:TestONNXTracingExport.testMaskRCNNFPN
inference_func	tests/test_export_torchscript.py	/^        def inference_func(model, image):$/;"	f	function:TestTracing.testCascadeRCNN
inference_func	tests/test_export_torchscript.py	/^        def inference_func(model, image):$/;"	f	function:TestTracing.testMaskRCNNC4
inference_func	tests/test_export_torchscript.py	/^        def inference_func(model, image):$/;"	f	function:TestTracing.testMaskRCNNFPN
inference_func	tests/test_export_torchscript.py	/^        def inference_func(model, image):$/;"	f	function:TestTracing.testMaskRCNNFPN_with_postproc
inference_func	tests/test_export_torchscript.py	/^        def inference_func(model, image):$/;"	f	function:TestTracing.testRetinaNet
inference_func	tests/test_export_torchscript.py	/^        def inference_func(model, image1, image2):$/;"	f	function:TestTracing.testMaskRCNNFPN_batched
inference_on_dataset	detectron2/evaluation/evaluator.py	/^def inference_on_dataset($/;"	f
inference_single_image	detectron2/modeling/meta_arch/fcos.py	/^    def inference_single_image($/;"	m	class:FCOS
inference_single_image	detectron2/modeling/meta_arch/retinanet.py	/^    def inference_single_image($/;"	m	class:RetinaNet
inference_single_image	projects/TensorMask/tensormask/arch.py	/^    def inference_single_image($/;"	m	class:TensorMask
init_checkpoint	configs/common/train.py	/^    init_checkpoint="",$/;"	v
init_method	detectron2/engine/launch.py	/^            init_method=dist_url,$/;"	v
init_net	detectron2/export/api.py	/^    def init_net(self):$/;"	m	class:Caffe2Model
init_weights	detectron2/modeling/backbone/regnet.py	/^def init_weights(m):$/;"	f
init_weights	projects/DensePose/densepose/modeling/hrfpn.py	/^    def init_weights(self):$/;"	m	class:HRFPN
initialize_module_params	projects/DensePose/densepose/modeling/utils.py	/^def initialize_module_params(module: nn.Module) -> None:$/;"	f
input	tools/convert-torchvision-to-d2.py	/^    input = sys.argv[1]$/;"	v
input_format	configs/common/models/mask_rcnn_c4.py	/^    input_format="BGR",$/;"	v
input_format	configs/common/models/mask_rcnn_fpn.py	/^    input_format="BGR",$/;"	v
input_format	configs/common/models/retinanet.py	/^    input_format="BGR",$/;"	v
input_shape	configs/common/models/cascade_rcnn.py	/^            input_shape=ShapeSpec(channels=1024),$/;"	v
input_shape	configs/common/models/cascade_rcnn.py	/^            input_shape=ShapeSpec(channels=256, height=7, width=7),$/;"	v
input_shape	configs/common/models/keypoint_rcnn_fpn.py	/^        input_shape=ShapeSpec(channels=256, width=14, height=14),$/;"	v
input_shape	configs/common/models/mask_rcnn_c4.py	/^            input_shape=L(ShapeSpec)($/;"	v
input_shape	configs/common/models/mask_rcnn_c4.py	/^            input_shape=L(ShapeSpec)(channels="${...res5.out_channels}", height=1, width=1),$/;"	v
input_shape	configs/common/models/mask_rcnn_fpn.py	/^            input_shape=ShapeSpec(channels=1024),$/;"	v
input_shape	configs/common/models/mask_rcnn_fpn.py	/^            input_shape=ShapeSpec(channels=256, height=7, width=7),$/;"	v
input_shape	configs/common/models/mask_rcnn_fpn.py	/^            input_shape=ShapeSpec(channels=256, width=14, height=14),$/;"	v
input_shape	configs/common/models/panoptic_fpn.py	/^    input_shape={$/;"	v
input_shape	configs/common/models/retinanet.py	/^        input_shape=[ShapeSpec(channels=256)] * 5,$/;"	v
input_shape	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^            input_shape=ShapeSpec(channels=1024),$/;"	v
input_shape	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^            input_shape=ShapeSpec(channels=256, height=7, width=7),$/;"	v
input_shape	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^            input_shape=ShapeSpec(channels=1024),$/;"	v
input_shape	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^            input_shape=ShapeSpec(channels=256, height=7, width=7),$/;"	v
input_shape	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^            input_shape=ShapeSpec(channels=1024),$/;"	v
input_shape	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^            input_shape=ShapeSpec(channels=256, height=7, width=7),$/;"	v
input_shape	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            input_shape=ShapeSpec(channels=1024),$/;"	v
input_shape	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            input_shape=ShapeSpec(channels=256, height=7, width=7),$/;"	v
input_shape	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            input_shape=ShapeSpec(channels=1024),$/;"	v
input_shape	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            input_shape=ShapeSpec(channels=256, height=7, width=7),$/;"	v
input_shape	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            input_shape=ShapeSpec(channels=1024),$/;"	v
input_shape	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            input_shape=ShapeSpec(channels=256, height=7, width=7),$/;"	v
inputs	tests/modeling/test_roi_heads.py	/^            inputs = gen_inputs(100, 120, 30)$/;"	v	class:ROIHeadsTest.test_PointRend_mask_head_tracing.Wrap
inside_box	detectron2/structures/boxes.py	/^    def inside_box(self, box_size: Tuple[int, int], boundary_threshold: int = 0) -> torch.Tensor:$/;"	m	class:Boxes
inside_box	detectron2/structures/rotated_boxes.py	/^    def inside_box(self, box_size: Tuple[int, int], boundary_threshold: int = 0) -> torch.Tensor:$/;"	m	class:RotatedBoxes
install_requires	projects/DensePose/setup.py	/^    install_requires=[$/;"	v
install_requires	setup.py	/^    install_requires=[$/;"	v
instance_masks	detectron2/utils/visualizer.py	/^    def instance_masks(self):$/;"	m	class:_PanopticPrediction
instances	projects/DensePose/tests/test_chart_based_annotations_accumulator.py	/^instances = Instances(image_shape)$/;"	v
instances_to_coco_json	detectron2/evaluation/coco_evaluation.py	/^def instances_to_coco_json(instances, img_id):$/;"	f
instances_to_json	detectron2/evaluation/rotated_coco_evaluation.py	/^    def instances_to_json(self, instances, img_id):$/;"	m	class:RotatedCOCOEvaluator
instantiate	detectron2/config/instantiate.py	/^def instantiate(cfg):$/;"	f
interp2d	projects/DensePose/densepose/modeling/predictors/chart.py	/^    def interp2d(self, tensor_nchw: torch.Tensor):$/;"	m	class:DensePoseChartPredictor
interp2d	projects/DensePose/densepose/modeling/predictors/cse.py	/^    def interp2d(self, tensor_nchw: torch.Tensor):$/;"	m	class:DensePoseEmbeddingPredictor
interpolate	detectron2/layers/wrappers.py	/^interpolate = F.interpolate$/;"	v
intersphinx_mapping	docs/conf.py	/^intersphinx_mapping = {$/;"	v
intersphinx_timeout	docs/conf.py	/^    intersphinx_timeout = 0.5$/;"	v
intersphinx_timeout	docs/conf.py	/^    intersphinx_timeout = 10$/;"	v
inverse	detectron2/data/transforms/transform.py	/^    def inverse(self):$/;"	m	class:ColorTransform
inverse	detectron2/data/transforms/transform.py	/^    def inverse(self):$/;"	m	class:ResizeTransform
inverse	detectron2/data/transforms/transform.py	/^    def inverse(self):$/;"	m	class:RotationTransform
invoke_main	projects/DeepLab/train_net.py	/^def invoke_main() -> None:$/;"	f
invoke_main	projects/DensePose/train_net.py	/^def invoke_main() -> None:$/;"	f
invoke_main	projects/Panoptic-DeepLab/train_net.py	/^def invoke_main() -> None:$/;"	f
invoke_main	projects/PointRend/train_net.py	/^def invoke_main() -> None:$/;"	f
invoke_main	projects/PointSup/train_net.py	/^def invoke_main() -> None:$/;"	f
invoke_main	projects/TensorMask/train_net.py	/^def invoke_main() -> None:$/;"	f
invoke_main	projects/TridentNet/train_net.py	/^def invoke_main() -> None:$/;"	f
invoke_main	tools/lazyconfig_train_net.py	/^def invoke_main() -> None:$/;"	f
invoke_main	tools/lightning_train_net.py	/^def invoke_main() -> None:$/;"	f
invoke_main	tools/plain_train_net.py	/^def invoke_main() -> None:$/;"	f
invoke_main	tools/train_net.py	/^def invoke_main() -> None:$/;"	f
iou_between_full_image_bit_masks	tests/layers/test_mask_ops.py	/^def iou_between_full_image_bit_masks(a, b):$/;"	f
is_aten_to_device_only	detectron2/utils/testing.py	/^    def is_aten_to_device_only(args):$/;"	f	function:_pytorch1111_symbolic_opset9_to
is_center_of_bboxes_in_patch	detectron2/data/transforms/augmentation_impl.py	/^                    def is_center_of_bboxes_in_patch(boxes, patch):$/;"	f	function:MinIoURandomCrop.get_transform
is_fx_tracing	detectron2/utils/tracing.py	/^def is_fx_tracing() -> bool:$/;"	f
is_fx_tracing_legacy	detectron2/utils/tracing.py	/^def is_fx_tracing_legacy() -> bool:$/;"	f
is_main_process	detectron2/utils/comm.py	/^def is_main_process() -> bool:$/;"	f
is_relative_local_path	projects/DensePose/densepose/data/utils.py	/^def is_relative_local_path(path: str) -> bool:$/;"	f
is_rotated	detectron2/evaluation/rotated_coco_evaluation.py	/^    def is_rotated(box_list):$/;"	m	class:RotatedCOCOeval
is_train	configs/common/data/coco.py	/^        is_train=False,$/;"	v
is_train	configs/common/data/coco.py	/^        is_train=True,$/;"	v
is_train	projects/MViTv2/configs/common/coco_loader.py	/^        is_train=False,$/;"	v
is_train	projects/MViTv2/configs/common/coco_loader.py	/^        is_train=True,$/;"	v
iter	detectron2/utils/events.py	/^    def iter(self):$/;"	m	class:EventStorage
iter	detectron2/utils/events.py	/^    def iter(self, val):$/;"	m	class:EventStorage
iter_annotations	datasets/prepare_panoptic_fpn.py	/^    def iter_annotations():$/;"	f	function:separate_coco_semantic_from_panoptic
iter_benchmark	detectron2/data/benchmark.py	/^def iter_benchmark($/;"	f
iteration	detectron2/utils/events.py	/^    def iteration(self):$/;"	m	class:EventStorage
iters_after_start	detectron2/evaluation/evaluator.py	/^            iters_after_start = idx + 1 - num_warmup * int(idx >= num_warmup)$/;"	v
k	tools/convert-torchvision-to-d2.py	/^            k = "stem." + k$/;"	v
k	tools/convert-torchvision-to-d2.py	/^            k = k.replace("bn{}".format(t), "conv{}.norm".format(t))$/;"	v
k	tools/convert-torchvision-to-d2.py	/^            k = k.replace("layer{}".format(t), "res{}".format(t + 1))$/;"	v
k	tools/convert-torchvision-to-d2.py	/^        k = k.replace("downsample.0", "shortcut")$/;"	v
k	tools/convert-torchvision-to-d2.py	/^        k = k.replace("downsample.1", "shortcut.norm")$/;"	v
keypoint_head	configs/common/models/keypoint_rcnn_fpn.py	/^    keypoint_head=L(KRCNNConvDeconvUpsampleHead)($/;"	v
keypoint_hflip_indices	configs/common/data/coco_keypoint.py	/^    keypoint_hflip_indices=create_keypoint_hflip_indices(dataloader.train.dataset.names),$/;"	v
keypoint_in_features	configs/common/models/keypoint_rcnn_fpn.py	/^    keypoint_in_features=["p2", "p3", "p4", "p5"],$/;"	v
keypoint_pooler	configs/common/models/keypoint_rcnn_fpn.py	/^    keypoint_pooler=L(ROIPooler)($/;"	v
keypoint_rcnn_inference	detectron2/modeling/roi_heads/keypoint_head.py	/^def keypoint_rcnn_inference(pred_keypoint_logits: torch.Tensor, pred_instances: List[Instances]):$/;"	f
keypoint_rcnn_loss	detectron2/modeling/roi_heads/keypoint_head.py	/^def keypoint_rcnn_loss(pred_keypoint_logits, instances, normalizer):$/;"	f
keypts	detectron2/data/datasets/coco.py	/^            keypts = anno.get("keypoints", None)$/;"	v
label_anchors	detectron2/modeling/meta_arch/fcos.py	/^    def label_anchors(self, anchors: List[Boxes], gt_instances: List[Instances]):$/;"	m	class:FCOS
label_anchors	detectron2/modeling/meta_arch/retinanet.py	/^    def label_anchors(self, anchors, gt_instances):$/;"	m	class:RetinaNet
label_and_sample_anchors	detectron2/modeling/proposal_generator/rpn.py	/^    def label_and_sample_anchors($/;"	m	class:RPN
label_and_sample_anchors	detectron2/modeling/proposal_generator/rrpn.py	/^    def label_and_sample_anchors(self, anchors: List[RotatedBoxes], gt_instances: List[Instances]):$/;"	m	class:RRPN
label_and_sample_proposals	detectron2/modeling/roi_heads/roi_heads.py	/^    def label_and_sample_proposals($/;"	m	class:ROIHeads
label_and_sample_proposals	detectron2/modeling/roi_heads/rotated_fast_rcnn.py	/^    def label_and_sample_proposals(self, proposals, targets):$/;"	m	class:RROIHeads
language	docs/conf.py	/^language = None$/;"	v
last_block_indexes	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    last_block_indexes=(0, 2, 7, 9),$/;"	v
last_block_indexes	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    last_block_indexes=(1, 4, 20, 23),$/;"	v
latest	detectron2/utils/events.py	/^    def latest(self):$/;"	m	class:EventStorage
latest_with_smoothing_hint	detectron2/utils/events.py	/^    def latest_with_smoothing_hint(self, window_size=20):$/;"	m	class:EventStorage
latex_documents	docs/conf.py	/^latex_documents = [$/;"	v
latex_elements	docs/conf.py	/^latex_elements = {$/;"	v
launch	detectron2/engine/launch.py	/^def launch($/;"	f
launch	projects/DensePose/tests/test_tensor_storage.py	/^def launch(main_func, nprocs, args=()):$/;"	f
layers	detectron2/modeling/meta_arch/semantic_seg.py	/^    def layers(self, features):$/;"	m	class:SemSegFPNHead
layers	detectron2/modeling/roi_heads/keypoint_head.py	/^    def layers(self, x):$/;"	m	class:BaseKeypointRCNNHead
layers	detectron2/modeling/roi_heads/keypoint_head.py	/^    def layers(self, x):$/;"	m	class:KRCNNConvDeconvUpsampleHead
layers	detectron2/modeling/roi_heads/mask_head.py	/^    def layers(self, x):$/;"	m	class:BaseMaskRCNNHead
layers	detectron2/modeling/roi_heads/mask_head.py	/^    def layers(self, x):$/;"	m	class:MaskRCNNConvUpsampleHead
layers	projects/DeepLab/deeplab/semantic_seg.py	/^    def layers(self, features):$/;"	m	class:DeepLabV3PlusHead
layers	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def layers(self, features):$/;"	m	class:PanopticDeepLabInsEmbedHead
layers	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def layers(self, features):$/;"	m	class:PanopticDeepLabSemSegHead
lazyobj	tests/config/root_cfg.py	/^lazyobj = L(count)(x=dir1a_str, y=dir1b_str)$/;"	v
length	tests/structures/test_instances.py	/^            length = script_module(x)$/;"	v	class:TestInstances.test_script_len.g
link_val100	datasets/prepare_panoptic_fpn.py	/^    def link_val100(dir_full, dir_100):$/;"	f	function:separate_coco_semantic_from_panoptic
list	detectron2/data/catalog.py	/^    def list(self) -> List[str]:$/;"	m	class:_DatasetCatalog
list	detectron2/data/catalog.py	/^    def list(self):$/;"	m	class:_MetadataCatalog
list_keyframes	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^def list_keyframes(video_fpath: str, video_stream_idx: int = 0) -> FrameTsList:$/;"	f
load	detectron2/checkpoint/detection_checkpoint.py	/^    def load(self, path, *args, **kwargs):$/;"	m	class:DetectionCheckpointer
load	detectron2/config/lazy.py	/^    def load(filename: str, keys: Union[None, str, Tuple[str, ...]] = None):$/;"	m	class:LazyConfig
load	projects/DensePose/densepose/modeling/cse/vertex_direct_embedder.py	/^    def load(self, fpath: str):$/;"	m	class:VertexDirectEmbedder
load	projects/DensePose/densepose/modeling/cse/vertex_feature_embedder.py	/^    def load(self, fpath: str):$/;"	m	class:VertexFeatureEmbedder
load	projects/DensePose/densepose/structures/transform_data.py	/^    def load(io: Union[str, BinaryIO]):$/;"	m	class:DensePoseTransformData
load_annotations	projects/DensePose/densepose/data/datasets/coco.py	/^    def load_annotations():$/;"	f	function:register_dataset
load_annotations	projects/DensePose/densepose/data/datasets/lvis.py	/^    def load_annotations():$/;"	f	function:register_dataset
load_bootstrap_config	projects/DensePose/densepose/config.py	/^def load_bootstrap_config(cfg: CN) -> None:$/;"	f
load_cityscapes_instances	detectron2/data/datasets/cityscapes.py	/^def load_cityscapes_instances(image_dir, gt_dir, from_json=True, to_polygons=True):$/;"	f
load_cityscapes_panoptic	detectron2/data/datasets/cityscapes_panoptic.py	/^def load_cityscapes_panoptic(image_dir, gt_dir, gt_json, meta):$/;"	f
load_cityscapes_semantic	detectron2/data/datasets/cityscapes.py	/^def load_cityscapes_semantic(image_dir, gt_dir):$/;"	f
load_coco_json	detectron2/data/datasets/coco.py	/^def load_coco_json($/;"	f
load_coco_json	projects/DensePose/densepose/data/datasets/coco.py	/^def load_coco_json(annotations_json_file: str, image_root: str, dataset_name: str):$/;"	f
load_coco_panoptic_json	detectron2/data/datasets/coco_panoptic.py	/^def load_coco_panoptic_json(json_file, image_dir, gt_dir, meta):$/;"	f
load_for_dataset	projects/DensePose/densepose/utils/transform.py	/^def load_for_dataset(dataset_name):$/;"	f
load_from_cfg	projects/DensePose/densepose/utils/transform.py	/^def load_from_cfg(cfg):$/;"	f
load_from_model_checkpoint	projects/DensePose/densepose/modeling/cse/embedder.py	/^    def load_from_model_checkpoint(self, fpath: str, prefix: Optional[str] = None):$/;"	m	class:Embedder
load_image_into_numpy_array	detectron2/evaluation/sem_seg_evaluation.py	/^def load_image_into_numpy_array($/;"	f
load_lvis_json	detectron2/data/datasets/lvis.py	/^def load_lvis_json($/;"	f
load_lvis_json	projects/DensePose/densepose/data/datasets/lvis.py	/^def load_lvis_json(annotations_json_file: str, image_root: str, dataset_name: str):$/;"	f
load_mesh_auxiliary_data	projects/DensePose/densepose/structures/mesh.py	/^def load_mesh_auxiliary_data($/;"	f
load_mesh_data	projects/DensePose/densepose/structures/mesh.py	/^def load_mesh_data($/;"	f
load_mesh_symmetry	projects/DensePose/densepose/structures/mesh.py	/^def load_mesh_symmetry($/;"	f
load_proposals_into_dataset	detectron2/data/build.py	/^def load_proposals_into_dataset(dataset_dicts, proposal_file):$/;"	f
load_protobuf	detectron2/export/api.py	/^    def load_protobuf(dir):$/;"	m	class:Caffe2Model
load_rel	detectron2/config/lazy.py	/^    def load_rel(filename: str, keys: Union[None, str, Tuple[str, ...]] = None):$/;"	m	class:LazyConfig
load_sem_seg	detectron2/data/datasets/coco.py	/^def load_sem_seg(gt_root, image_root, gt_ext="png", image_ext="jpg"):$/;"	f
load_state_dict	detectron2/engine/defaults.py	/^    def load_state_dict(self, state_dict):$/;"	m	class:DefaultTrainer
load_state_dict	detectron2/engine/hooks.py	/^    def load_state_dict(self, state_dict):$/;"	m	class:LRScheduler
load_state_dict	detectron2/engine/train_loop.py	/^    def load_state_dict(self, state_dict):$/;"	m	class:AMPTrainer
load_state_dict	detectron2/engine/train_loop.py	/^    def load_state_dict(self, state_dict):$/;"	m	class:SimpleTrainer
load_state_dict	detectron2/engine/train_loop.py	/^    def load_state_dict(self, state_dict):$/;"	m	class:TrainerBase
load_voc_instances	detectron2/data/datasets/pascal_voc.py	/^def load_voc_instances(dirname: str, split: str, class_names: Union[List[str], Tuple[str, ...]]):$/;"	f
loader	detectron2/data/benchmark.py	/^        def loader():$/;"	f	function:DataLoaderBenchmark.benchmark_dataset
loader	detectron2/data/benchmark.py	/^        def loader():$/;"	f	function:DataLoaderBenchmark.benchmark_mapper
locate	detectron2/utils/registry.py	/^def locate(name: str) -> Any:$/;"	f
log_every_n	detectron2/utils/logger.py	/^def log_every_n(lvl, msg, n=1, *, name=None):$/;"	f
log_every_n_seconds	detectron2/utils/logger.py	/^def log_every_n_seconds(lvl, msg, n=1, *, name=None):$/;"	f
log_first_n	detectron2/utils/logger.py	/^def log_first_n(lvl, msg, n=1, *, name=None, key="caller"):$/;"	f
log_period	configs/common/train.py	/^    log_period=20,$/;"	v
logger	detectron2/data/benchmark.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/data/build.py	/^        logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/data/build.py	/^    logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/data/common.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/data/datasets/cityscapes.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/data/datasets/cityscapes_panoptic.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/data/datasets/coco.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/data/datasets/coco_panoptic.py	/^    logger = setup_logger(name=__name__)$/;"	v
logger	detectron2/data/datasets/lvis.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/data/samplers/distributed_sampler.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/engine/launch.py	/^            logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/engine/launch.py	/^        logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/evaluation/evaluator.py	/^    logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/evaluation/fast_eval_api.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/evaluation/panoptic_evaluation.py	/^    logger = setup_logger()$/;"	v
logger	detectron2/evaluation/panoptic_evaluation.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/export/caffe2_export.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/export/caffe2_inference.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/export/shared.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/modeling/backbone/mvit.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/modeling/backbone/vit.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/modeling/meta_arch/fcos.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/modeling/meta_arch/retinanet.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/modeling/mmdet_wrapper.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/modeling/proposal_generator/proposal_utils.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/modeling/proposal_generator/rrpn.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/modeling/roi_heads/fast_rcnn.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/modeling/roi_heads/roi_heads.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/modeling/roi_heads/rotated_fast_rcnn.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/solver/lr_scheduler.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	detectron2/utils/logger.py	/^    logger = logging.getLogger(name)$/;"	v
logger	detectron2/utils/visualizer.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	projects/DensePose/apply_net.py	/^logger = logging.getLogger(LOGGER_NAME)$/;"	v
logger	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	projects/DensePose/densepose/evaluation/evaluator.py	/^    logger = logging.getLogger(__name__)$/;"	v
logger	projects/DensePose/densepose/modeling/hrnet.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	projects/DensePose/densepose/vis/densepose_results.py	/^    logger = logging.getLogger(__name__)$/;"	v
logger	projects/DensePose/query_db.py	/^logger = logging.getLogger(LOGGER_NAME)$/;"	v
logger	projects/PointSup/point_sup/register_point_annotations.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	projects/Rethinking-BatchNorm/retinanet-eval-domain-specific.py	/^logger = setup_logger()$/;"	v
logger	tests/data/test_transforms.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tests/layers/test_roi_align_rotated.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tests/modeling/test_anchor_generator.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tests/modeling/test_box2box_transform.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tests/modeling/test_fast_rcnn.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tests/modeling/test_roi_heads.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tests/modeling/test_roi_pooler.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tests/modeling/test_rpn.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tests/structures/test_rotated_boxes.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tests/test_model_zoo.py	/^logger = logging.getLogger(__name__)$/;"	v
logger	tools/analyze_model.py	/^logger = logging.getLogger("detectron2")$/;"	v
logger	tools/benchmark.py	/^logger = logging.getLogger("detectron2")$/;"	v
logger	tools/lazyconfig_train_net.py	/^logger = logging.getLogger("detectron2")$/;"	v
logger	tools/lightning_train_net.py	/^logger = logging.getLogger("detectron2")$/;"	v
logger	tools/plain_train_net.py	/^logger = logging.getLogger("detectron2")$/;"	v
loss_bbox	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                loss_bbox=dict(type="L1Loss", loss_weight=1.0),$/;"	v
loss_bbox	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            loss_bbox=dict(type="L1Loss", loss_weight=1.0),$/;"	v
loss_box_reg	detectron2/modeling/box_regression.py	/^        loss_box_reg = ciou_loss($/;"	v
loss_box_reg	detectron2/modeling/box_regression.py	/^        loss_box_reg = diou_loss($/;"	v
loss_box_reg	detectron2/modeling/box_regression.py	/^        loss_box_reg = giou_loss($/;"	v
loss_box_reg	detectron2/modeling/box_regression.py	/^        loss_box_reg = smooth_l1_loss($/;"	v
loss_cls	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                loss_cls=dict(type="CrossEntropyLoss", use_sigmoid=False, loss_weight=1.0),$/;"	v
loss_cls	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            loss_cls=dict(type="CrossEntropyLoss", use_sigmoid=True, loss_weight=1.0),$/;"	v
loss_mask	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                loss_mask=dict(type="CrossEntropyLoss", use_mask=True, loss_weight=1.0),$/;"	v
loss_normalizer	configs/common/models/keypoint_rcnn_fpn.py	/^        loss_normalizer="visible",$/;"	v
loss_weight	configs/common/models/panoptic_fpn.py	/^    loss_weight=0.5,$/;"	v
losses	detectron2/modeling/meta_arch/fcos.py	/^    def losses($/;"	m	class:FCOS
losses	detectron2/modeling/meta_arch/retinanet.py	/^    def losses(self, anchors, pred_logits, gt_labels, pred_anchor_deltas, gt_boxes):$/;"	m	class:RetinaNet
losses	detectron2/modeling/meta_arch/semantic_seg.py	/^    def losses(self, predictions, targets):$/;"	m	class:SemSegFPNHead
losses	detectron2/modeling/proposal_generator/rpn.py	/^    def losses($/;"	m	class:RPN
losses	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def losses(self, predictions, proposals):$/;"	m	class:FastRCNNOutputLayers
losses	projects/DeepLab/deeplab/semantic_seg.py	/^    def losses(self, predictions, targets):$/;"	m	class:DeepLabV3Head
losses	projects/DeepLab/deeplab/semantic_seg.py	/^    def losses(self, predictions, targets):$/;"	m	class:DeepLabV3PlusHead
losses	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def losses(self, predictions, targets, weights=None):$/;"	m	class:PanopticDeepLabSemSegHead
losses	projects/TensorMask/tensormask/arch.py	/^    def losses($/;"	m	class:TensorMask
lr	configs/Misc/torchvision_imagenet_R_50.py	/^    lr=0.1,$/;"	v
lr	configs/common/optim.py	/^    lr=0.02,$/;"	v
lr	configs/common/optim.py	/^    lr=1e-4,$/;"	v
lr_multiplier	configs/Misc/torchvision_imagenet_R_50.py	/^lr_multiplier = L(WarmupParamScheduler)($/;"	v
lr_multiplier	configs/new_baselines/mask_rcnn_R_50_FPN_100ep_LSJ.py	/^lr_multiplier = L(WarmupParamScheduler)($/;"	v
lr_multiplier	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_l_in21k_lsj_50ep.py	/^lr_multiplier = L(WarmupParamScheduler)($/;"	v
lr_multiplier	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^lr_multiplier = L(WarmupParamScheduler)($/;"	v
lr_multiplier	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead.py	/^lr_multiplier = get_config("common\/coco_schedule.py").lr_multiplier_3x$/;"	v
lr_multiplier	projects/Rethinking-BatchNorm/configs/retinanet_SyncBNhead.py	/^lr_multiplier = get_config("common\/coco_schedule.py").lr_multiplier_3x$/;"	v
lr_multiplier	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^lr_multiplier = L(WarmupParamScheduler)($/;"	v
lr_multiplier	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_h_in21k_36ep.py	/^lr_multiplier = L(WarmupParamScheduler)($/;"	v
lr_multiplier	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^lr_multiplier = L(WarmupParamScheduler)($/;"	v
lr_multiplier	projects/ViTDet/configs/COCO/mask_rcnn_vitdet_b_100ep.py	/^lr_multiplier = L(WarmupParamScheduler)($/;"	v
lr_multiplier_1x	configs/common/coco_schedule.py	/^lr_multiplier_1x = default_X_scheduler(1)$/;"	v
lr_multiplier_2x	configs/common/coco_schedule.py	/^lr_multiplier_2x = default_X_scheduler(2)$/;"	v
lr_multiplier_3x	configs/common/coco_schedule.py	/^lr_multiplier_3x = default_X_scheduler(3)$/;"	v
lr_multiplier_6x	configs/common/coco_schedule.py	/^lr_multiplier_6x = default_X_scheduler(6)$/;"	v
lr_multiplier_9x	configs/common/coco_schedule.py	/^lr_multiplier_9x = default_X_scheduler(9)$/;"	v
lt	projects/TensorMask/tensormask/arch.py	/^    lt = torch.min(gt_boxes[:, None, :2], anchor_boxes[:, :2])  # [N,M,2]$/;"	v
lvis_test_fun	projects/DensePose/tests/test_dataset_loaded_annotations.py	/^def lvis_test_fun(dataset_info):$/;"	f
main	demo/demo.py	/^def main() -> None:$/;"	f
main	detectron2/data/datasets/cityscapes.py	/^def main() -> None:$/;"	f
main	detectron2/data/datasets/coco.py	/^def main() -> None:$/;"	f
main	detectron2/data/datasets/lvis.py	/^def main() -> None:$/;"	f
main	detectron2/utils/collect_env.py	/^def main() -> None:$/;"	f
main	projects/DeepLab/train_net.py	/^def main(args):$/;"	f
main	projects/DensePose/apply_net.py	/^def main():$/;"	f
main	projects/DensePose/query_db.py	/^def main():$/;"	f
main	projects/DensePose/train_net.py	/^def main(args):$/;"	f
main	projects/Panoptic-DeepLab/train_net.py	/^def main(args):$/;"	f
main	projects/PointRend/train_net.py	/^def main(args):$/;"	f
main	projects/PointSup/train_net.py	/^def main(args):$/;"	f
main	projects/TensorMask/train_net.py	/^def main(args):$/;"	f
main	projects/TridentNet/train_net.py	/^def main(args):$/;"	f
main	tools/analyze_model.py	/^def main() -> None:$/;"	f
main	tools/benchmark.py	/^def main() -> None:$/;"	f
main	tools/deploy/export_model.py	/^def main() -> None:$/;"	f
main	tools/lazyconfig_train_net.py	/^def main(args):$/;"	f
main	tools/lightning_train_net.py	/^def main(args):$/;"	f
main	tools/plain_train_net.py	/^def main(args):$/;"	f
main	tools/train_net.py	/^def main(args):$/;"	f
main	tools/visualize_data.py	/^def main() -> None:$/;"	f
main	tools/visualize_json_results.py	/^def main() -> None:$/;"	f
make_dataset_dicts	tests/data/test_coco.py	/^def make_dataset_dicts(mask, compressed: bool = True):$/;"	f
make_default_stages	detectron2/modeling/backbone/resnet.py	/^    def make_default_stages(depth, block_class=None, **kwargs):$/;"	m	class:ResNet
make_empty_instances	projects/DensePose/tests/test_model_e2e.py	/^def make_empty_instances(h, w):$/;"	f
make_int_box	projects/DensePose/densepose/converters/base.py	/^def make_int_box(box: torch.Tensor) -> IntTupleBox:$/;"	f
make_mask	tests/data/test_coco.py	/^def make_mask():$/;"	f
make_model_inputs	projects/DensePose/tests/test_model_e2e.py	/^def make_model_inputs(image, instances=None):$/;"	f
make_stage	detectron2/modeling/backbone/resnet.py	/^    def make_stage(block_class, num_blocks, *, in_channels, out_channels, **kwargs):$/;"	m	class:ResNet
make_stage	detectron2/modeling/backbone/resnet.py	/^def make_stage(*args, **kwargs):$/;"	f
make_trident_stage	projects/TridentNet/tridentnet/trident_backbone.py	/^def make_trident_stage(block_class, num_blocks, **kwargs):$/;"	f
man_pages	docs/conf.py	/^man_pages = [(master_doc, "detectron2", "detectron2 Documentation", [author], 1)]$/;"	v
map_func	tests/data/test_dataset.py	/^    def map_func(x):$/;"	m	class:TestMapDataset
mapper	configs/common/data/coco.py	/^    mapper=L(DatasetMapper)($/;"	v
mapper	projects/MViTv2/configs/common/coco_loader.py	/^    mapper=L(DatasetMapper)($/;"	v
mask	detectron2/utils/visualizer.py	/^    def mask(self):$/;"	m	class:GenericMask
mask_head	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            mask_head=dict($/;"	v
mask_head	configs/common/models/mask_rcnn_c4.py	/^        mask_head=L(MaskRCNNConvUpsampleHead)($/;"	v
mask_head	configs/common/models/mask_rcnn_fpn.py	/^        mask_head=L(MaskRCNNConvUpsampleHead)($/;"	v
mask_in_features	configs/common/models/mask_rcnn_fpn.py	/^        mask_in_features=["p2", "p3", "p4", "p5"],$/;"	v
mask_pooler	configs/common/models/mask_rcnn_fpn.py	/^        mask_pooler=L(ROIPooler)($/;"	v
mask_rcnn_inference	detectron2/modeling/roi_heads/mask_head.py	/^def mask_rcnn_inference(pred_mask_logits: torch.Tensor, pred_instances: List[Instances]):$/;"	f
mask_rcnn_loss	detectron2/modeling/roi_heads/mask_head.py	/^def mask_rcnn_loss(pred_mask_logits: torch.Tensor, instances: List[Instances], vis_period: int = 0):$/;"	f
mask_roi_extractor	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            mask_roi_extractor=dict($/;"	v
mask_size	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                mask_size=28,$/;"	v
mask_thr_binary	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                mask_thr_binary=0.5,$/;"	v
mask_to_polygons	detectron2/utils/visualizer.py	/^    def mask_to_polygons(self, mask):$/;"	m	class:GenericMask
master_doc	docs/conf.py	/^master_doc = "index"$/;"	v
match	detectron2/checkpoint/c2_model_loading.py	/^    def match(a, b):$/;"	f	function:align_and_update_state_dicts
match_labels	projects/TensorMask/tensormask/arch.py	/^    match_labels = matches.new_full(matches.size(), 1, dtype=torch.int8)$/;"	v
match_low_quality	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    match_low_quality=True,$/;"	v
matched_pairwise_iou	detectron2/structures/boxes.py	/^def matched_pairwise_iou(boxes1: Boxes, boxes2: Boxes) -> torch.Tensor:$/;"	f
max_dets_per_image	detectron2/evaluation/coco_evaluation.py	/^        max_dets_per_image = [1, 10, 100]  # Default from COCOEval$/;"	v
max_dets_per_image	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    max_dets_per_image=300,$/;"	v
max_dets_per_image	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^    max_dets_per_image=300,$/;"	v
max_dets_per_image	projects/ViTDet/configs/LVIS/mask_rcnn_vitdet_b_100ep.py	/^    max_dets_per_image=300,$/;"	v
max_iter	configs/common/train.py	/^    max_iter=90000,$/;"	v
max_per_img	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                max_per_img=100,$/;"	v
max_per_img	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                max_per_img=1000,$/;"	v
max_size	configs/common/data/coco.py	/^                max_size=1333,$/;"	v
max_size	projects/MViTv2/configs/common/coco_loader.py	/^                max_size=1333,$/;"	v
maybe_add_gradient_clipping	detectron2/solver/build.py	/^def maybe_add_gradient_clipping($/;"	f
maybe_filter_and_map_categories_cocoapi	projects/DensePose/densepose/data/datasets/coco.py	/^def maybe_filter_and_map_categories_cocoapi(dataset_name, coco_api):$/;"	f
maybe_filter_categories_cocoapi	projects/DensePose/densepose/data/datasets/coco.py	/^def maybe_filter_categories_cocoapi(dataset_name, coco_api):$/;"	f
maybe_prepend_base_path	projects/DensePose/densepose/data/utils.py	/^def maybe_prepend_base_path(base_path: Optional[str], path: str):$/;"	f
maybe_to_cpu	detectron2/utils/memory.py	/^    def maybe_to_cpu(x):$/;"	f	function:retry_if_cuda_oom
merge_branch_instances	projects/TridentNet/tridentnet/trident_rcnn.py	/^def merge_branch_instances(instances, num_branch, nms_thresh, topk_per_image):$/;"	f
merge_from_file	detectron2/config/config.py	/^    def merge_from_file(self, cfg_filename: str, allow_unsafe: bool = True) -> None:$/;"	m	class:CfgNode
merge_semantic_and_instance	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^def merge_semantic_and_instance($/;"	f
merge_to_panoptic	detectron2/data/datasets/coco_panoptic.py	/^def merge_to_panoptic(detection_dicts, sem_seg_dicts):$/;"	f
meta	detectron2/data/datasets/coco_panoptic.py	/^    meta = MetadataCatalog.get(sys.argv[4])$/;"	v
metadata	tests/test_visualizer.py	/^    def metadata(self):$/;"	m	class:TestVisualizer
milestones	configs/new_baselines/mask_rcnn_R_50_FPN_100ep_LSJ.py	/^        milestones=[163889, 177546],$/;"	v
milestones	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_l_in21k_lsj_50ep.py	/^        milestones=[163889 \/\/ 2, 177546 \/\/ 2],$/;"	v
milestones	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^        milestones=[52500, 62500, 67500],$/;"	v
milestones	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^        milestones=[163889, 177546],$/;"	v
milestones	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_h_in21k_36ep.py	/^        milestones=[$/;"	v
milestones	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^        milestones=[163889, 177546],$/;"	v
milestones	projects/ViTDet/configs/COCO/mask_rcnn_vitdet_b_100ep.py	/^        milestones=[163889, 177546],$/;"	v
min_bbox_size	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                min_bbox_size=0,$/;"	v
min_pos_iou	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    min_pos_iou=0.3,$/;"	v
min_pos_iou	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    min_pos_iou=0.5,$/;"	v
min_torch_version	detectron2/utils/testing.py	/^def min_torch_version(min_version: str) -> bool:$/;"	f
mlp_ratio	configs/common/models/mask_rcnn_vitdet.py	/^        mlp_ratio=4,$/;"	v
mock_fastrcnn_outputs_inference	detectron2/export/caffe2_patch.py	/^def mock_fastrcnn_outputs_inference($/;"	f
mock_keypoint_rcnn_inference	detectron2/export/caffe2_patch.py	/^def mock_keypoint_rcnn_inference(tensor_mode, patched_module, use_heatmap_max_keypoint, check=True):$/;"	f
mock_mask_rcnn_inference	detectron2/export/caffe2_patch.py	/^def mock_mask_rcnn_inference(tensor_mode, patched_module, check=True):$/;"	f
mock_roi_heads	detectron2/export/caffe2_patch.py	/^    def mock_roi_heads(self, tensor_mode=True):$/;"	m	class:ROIHeadsPatcher
mock_torch_nn_functional_interpolate	detectron2/export/shared.py	/^def mock_torch_nn_functional_interpolate():$/;"	f
model	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^model = L(MMDetDetector)($/;"	v
model	configs/Misc/torchvision_imagenet_R_50.py	/^    model=(ResNet)(block=Bottleneck, layers=[3, 4, 6, 3], zero_init_residual=True)$/;"	v
model	configs/Misc/torchvision_imagenet_R_50.py	/^model = L(ClassificationNet)($/;"	v
model	configs/common/models/mask_rcnn_c4.py	/^model = L(GeneralizedRCNN)($/;"	v
model	configs/common/models/mask_rcnn_fpn.py	/^model = L(GeneralizedRCNN)($/;"	v
model	configs/common/models/retinanet.py	/^model = L(RetinaNet)($/;"	v
model	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^model = model_zoo.get_config("common\/models\/mask_rcnn_fpn.py").model$/;"	v
model	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead.py	/^model = get_config("common\/models\/mask_rcnn_fpn.py").model$/;"	v
model	projects/Rethinking-BatchNorm/configs/retinanet_SyncBNhead.py	/^model = get_config("common\/models\/retinanet.py").model$/;"	v
model	projects/Rethinking-BatchNorm/retinanet-eval-domain-specific.py	/^    model = cfg.model$/;"	v
model	projects/Rethinking-BatchNorm/retinanet-eval-domain-specific.py	/^    model = instantiate(model)$/;"	v
model	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^model = model_zoo.get_config("common\/models\/mask_rcnn_fpn.py").model$/;"	v
model	projects/ViTDet/configs/COCO/mask_rcnn_vitdet_b_100ep.py	/^model = model_zoo.get_config("common\/models\/mask_rcnn_vitdet.py").model$/;"	v
modulated_deform_conv	detectron2/layers/deform_conv.py	/^    modulated_deform_conv = create_dummy_func("modulated_deform_conv", *_args)$/;"	v
modulated_deform_conv	detectron2/layers/deform_conv.py	/^modulated_deform_conv = _ModulatedDeformConv.apply$/;"	v
momentum	configs/Misc/torchvision_imagenet_R_50.py	/^    momentum=0.9,$/;"	v
momentum	configs/common/optim.py	/^    momentum=0.9,$/;"	v
move_device_like	detectron2/layers/wrappers.py	/^def move_device_like(src: torch.Tensor, dst: torch.Tensor) -> torch.Tensor:$/;"	f
n	detectron2/evaluation/evaluator.py	/^                    n=5,$/;"	v
n_instances	projects/DensePose/tests/test_chart_based_annotations_accumulator.py	/^n_instances = 3$/;"	v
name	docs/conf.py	/^    name = "githuburl"$/;"	v	class:GithubURLDomain
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="base_coco_2017_train",$/;"	v
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="base_coco_2017_val",$/;"	v
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="base_coco_2017_val_100",$/;"	v
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_chimps",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_chimps_cse_train",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_chimps_cse_val",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_coco_2014_minival",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_coco_2014_minival_100",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_coco_2014_minival_100_cse",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_coco_2014_minival_cse",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_coco_2014_train",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_coco_2014_train_cse",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_coco_2014_valminusminival",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="densepose_coco_2014_valminusminival_cse",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="lvis_v05_train",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="lvis_v05_val",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="posetrack2017_train",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/coco.py	/^        name="posetrack2017_val",$/;"	v	class:CocoDatasetInfo
name	projects/DensePose/densepose/data/datasets/lvis.py	/^        name="densepose_lvis_v1_ds1_train_v1",$/;"	v
name	projects/DensePose/densepose/data/datasets/lvis.py	/^        name="densepose_lvis_v1_ds1_val_animals_100",$/;"	v
name	projects/DensePose/densepose/data/datasets/lvis.py	/^        name="densepose_lvis_v1_ds1_val_v1",$/;"	v
name	projects/DensePose/densepose/data/datasets/lvis.py	/^        name="densepose_lvis_v1_ds2_train_v1",$/;"	v
name	projects/DensePose/densepose/data/datasets/lvis.py	/^        name="densepose_lvis_v1_ds2_val_v1",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="bear_4936",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="cat_5001",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="cat_7466",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="chimp_5029",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="cow_5002",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="dog_5002",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="dog_7466",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="elephant_5002",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="giraffe_5002",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="horse_5004",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="sheep_5004",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="smpl_27554",$/;"	v
name	projects/DensePose/densepose/data/meshes/builtin.py	/^        name="zebra_5002",$/;"	v
name	projects/DensePose/setup.py	/^    name="detectron2-densepose",$/;"	v
name	projects/TensorMask/setup.py	/^    name="tensormask",$/;"	v
name	setup.py	/^    name="detectron2",$/;"	v
name_scope	detectron2/utils/events.py	/^    def name_scope(self, name):$/;"	m	class:EventStorage
names	detectron2/data/build.py	/^        names = [names]$/;"	v
names_set	detectron2/data/build.py	/^    names_set = set(names)$/;"	v
napoleon_google_docstring	docs/conf.py	/^napoleon_google_docstring = True$/;"	v
napoleon_include_init_with_doc	docs/conf.py	/^napoleon_include_init_with_doc = True$/;"	v
napoleon_include_special_with_doc	docs/conf.py	/^napoleon_include_special_with_doc = True$/;"	v
napoleon_numpy_docstring	docs/conf.py	/^napoleon_numpy_docstring = False$/;"	v
napoleon_use_rtype	docs/conf.py	/^napoleon_use_rtype = False$/;"	v
nargs	detectron2/engine/defaults.py	/^        nargs=argparse.REMAINDER,$/;"	v
nargs	tools/analyze_model.py	/^        nargs="+",$/;"	v
neck	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^        neck=dict(type="FPN", in_channels=[256, 512, 1024, 2048], out_channels=256, num_outs=5),$/;"	v
needs_sphinx	docs/conf.py	/^needs_sphinx = "3.0"$/;"	v
neg_iou_thr	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    neg_iou_thr=0.3,$/;"	v
neg_iou_thr	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    neg_iou_thr=0.5,$/;"	v
neg_pos_ub	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    neg_pos_ub=-1,$/;"	v
net	configs/common/models/mask_rcnn_vitdet.py	/^    net=L(ViT)(  # Single-scale ViT backbone$/;"	v
new_import	detectron2/config/lazy.py	/^    def new_import(name, globals=None, locals=None, fromlist=(), level=0):$/;"	f
new_method	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead_shuffle.py	/^    def new_method(self, x):$/;"	f	function:wrap_shuffle
newmodel	tools/convert-torchvision-to-d2.py	/^    newmodel = {}$/;"	v
nms	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                nms=dict(type="nms", iou_threshold=0.5),$/;"	v
nms	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                nms=dict(type="nms", iou_threshold=0.7),$/;"	v
nms_edit_distance	tests/layers/test_nms_rotated.py	/^def nms_edit_distance(keep1, keep2):$/;"	f
nms_kernel	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^        nms_kernel=nms_kernel,$/;"	v
nms_pre	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                nms_pre=1000,$/;"	v
nms_pre	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                nms_pre=2000,$/;"	v
nms_rotated	detectron2/layers/nms.py	/^def nms_rotated(boxes: torch.Tensor, scores: torch.Tensor, iou_threshold: float):$/;"	f
nms_thresh	configs/common/models/mask_rcnn_c4.py	/^        nms_thresh=0.7,$/;"	v
nms_thresh	configs/common/models/mask_rcnn_fpn.py	/^        nms_thresh=0.7,$/;"	v
non_empty_mask	detectron2/utils/visualizer.py	/^    def non_empty_mask(self):$/;"	m	class:_PanopticPrediction
none_args	detectron2/export/torchscript_patch.py	/^    none_args = ", None" * len(fields)$/;"	v
nonempty	detectron2/structures/boxes.py	/^    def nonempty(self, threshold: float = 0.0) -> torch.Tensor:$/;"	m	class:Boxes
nonempty	detectron2/structures/masks.py	/^    def nonempty(self) -> torch.Tensor:$/;"	m	class:BitMasks
nonempty	detectron2/structures/masks.py	/^    def nonempty(self) -> torch.Tensor:$/;"	m	class:PolygonMasks
nonempty	detectron2/structures/rotated_boxes.py	/^    def nonempty(self, threshold: float = 0.0) -> torch.Tensor:$/;"	m	class:RotatedBoxes
nonzero_tuple	detectron2/layers/wrappers.py	/^def nonzero_tuple(x):$/;"	f
norm	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    norm="FrozenBN",$/;"	v
norm	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    norm="FrozenBN",$/;"	v
norm	configs/common/models/mask_rcnn_c4.py	/^            norm="FrozenBN",$/;"	v
norm	configs/common/models/mask_rcnn_fpn.py	/^                norm="FrozenBN",$/;"	v
norm	configs/common/models/mask_rcnn_vitdet.py	/^    norm="LN",$/;"	v
norm	configs/common/models/panoptic_fpn.py	/^    norm="GN",$/;"	v
norm	configs/common/models/retinanet.py	/^                norm="FrozenBN",$/;"	v
norm	configs/new_baselines/mask_rcnn_regnetx_4gf_dds_FPN_100ep_LSJ.py	/^    norm="SyncBN",$/;"	v
norm	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    norm="SyncBN",$/;"	v
norm	detectron2/modeling/meta_arch/retinanet.py	/^            def norm(c):$/;"	f	function:RetinaNetHead.__init__
norm_cfg	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            norm_cfg=dict(type="BN", requires_grad=True),$/;"	v
norm_eval	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            norm_eval=True,$/;"	v
norm_layer	configs/common/models/mask_rcnn_vitdet.py	/^        norm_layer=partial(nn.LayerNorm, eps=1e-6),$/;"	v
norm_layer	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    norm_layer=partial(nn.LayerNorm, eps=1e-6),$/;"	v
norm_layer	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    norm_layer=partial(nn.LayerNorm, eps=1e-6),$/;"	v
normalize_angles	detectron2/structures/rotated_boxes.py	/^    def normalize_angles(self) -> None:$/;"	m	class:RotatedBoxes
normalize_embeddings	projects/DensePose/densepose/modeling/cse/utils.py	/^def normalize_embeddings(embeddings: torch.Tensor, epsilon: float = 1e-6) -> torch.Tensor:$/;"	f
normalized_coords_transform	projects/DensePose/densepose/structures/transform_data.py	/^def normalized_coords_transform(x0, y0, w, h):$/;"	f
not_unique_idxs	projects/TensorMask/tensormask/arch.py	/^    not_unique_idxs = assign_matrix.sum(dim=0) > 1$/;"	v
nprocs	detectron2/engine/launch.py	/^            nprocs=num_gpus_per_machine,$/;"	v
num	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    num=256,$/;"	v
num	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    num=512,$/;"	v
num_anchors	configs/common/models/retinanet.py	/^        num_anchors=9,$/;"	v
num_anchors	detectron2/modeling/anchor_generator.py	/^    def num_anchors(self):$/;"	m	class:DefaultAnchorGenerator
num_anchors	detectron2/modeling/anchor_generator.py	/^    def num_anchors(self):$/;"	m	class:RotatedAnchorGenerator
num_blocks	configs/common/models/mask_rcnn_c4.py	/^            num_blocks=3,$/;"	v
num_cell_anchors	detectron2/modeling/anchor_generator.py	/^    def num_cell_anchors(self):$/;"	m	class:DefaultAnchorGenerator
num_cell_anchors	detectron2/modeling/anchor_generator.py	/^    def num_cell_anchors(self):$/;"	m	class:RotatedAnchorGenerator
num_classes	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                num_classes=80,$/;"	v
num_classes	configs/common/models/cascade_rcnn.py	/^            num_classes="${...num_classes}",$/;"	v
num_classes	configs/common/models/keypoint_rcnn_fpn.py	/^    num_classes=1,$/;"	v
num_classes	configs/common/models/mask_rcnn_c4.py	/^            num_classes="${..num_classes}",$/;"	v
num_classes	configs/common/models/mask_rcnn_c4.py	/^        num_classes=80,$/;"	v
num_classes	configs/common/models/mask_rcnn_fpn.py	/^            num_classes="${..num_classes}",$/;"	v
num_classes	configs/common/models/mask_rcnn_fpn.py	/^        num_classes=80,$/;"	v
num_classes	configs/common/models/panoptic_fpn.py	/^    num_classes=54,  # COCO stuff + 1$/;"	v
num_classes	configs/common/models/retinanet.py	/^        num_classes="${..num_classes}",$/;"	v
num_classes	configs/common/models/retinanet.py	/^    num_classes=80,$/;"	v
num_classes	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^            num_classes="${...num_classes}",$/;"	v
num_classes	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^            num_classes="${...num_classes}",$/;"	v
num_classes	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^            num_classes="${...num_classes}",$/;"	v
num_classes	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            num_classes="${...num_classes}",$/;"	v
num_classes	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^    num_classes=1203,$/;"	v
num_classes	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            num_classes="${...num_classes}",$/;"	v
num_classes	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^    num_classes=1203,$/;"	v
num_classes	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            num_classes="${...num_classes}",$/;"	v
num_classes	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^    num_classes=1203,$/;"	v
num_classes	tests/modeling/test_fast_rcnn.py	/^            num_classes=5,$/;"	v	class:FastRCNNTest.test_predict_boxes_tracing.Model
num_classes	tests/modeling/test_fast_rcnn.py	/^            num_classes=5,$/;"	v	class:FastRCNNTest.test_predict_probs_tracing.Model
num_convs	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                num_convs=4,$/;"	v
num_devices	detectron2/evaluation/evaluator.py	/^    num_devices = get_world_size()$/;"	v
num_heads	configs/common/models/mask_rcnn_vitdet.py	/^        num_heads=num_heads,$/;"	v
num_heads	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    num_heads=1,$/;"	v
num_heads	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    num_heads=1,$/;"	v
num_heads	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^    num_heads=[4, 8, 16, 32],$/;"	v
num_imgs_to_vis	detectron2/data/datasets/coco_panoptic.py	/^    num_imgs_to_vis = int(sys.argv[5])$/;"	v
num_instances_without_valid_segmentation	detectron2/data/datasets/coco.py	/^    num_instances_without_valid_segmentation = 0$/;"	v
num_keypoints	configs/common/models/keypoint_rcnn_fpn.py	/^        num_keypoints=17,$/;"	v
num_keypoints_dt	detectron2/evaluation/coco_evaluation.py	/^        num_keypoints_dt = len(coco_results[0]["keypoints"]) \/\/ 3$/;"	v
num_keypoints_gt	detectron2/evaluation/coco_evaluation.py	/^        num_keypoints_gt = len(next(iter(coco_gt.anns.values()))["keypoints"]) \/\/ 3$/;"	v
num_keypoints_oks	detectron2/evaluation/coco_evaluation.py	/^        num_keypoints_oks = len(coco_eval.params.kpt_oks_sigmas)$/;"	v
num_points_per_instance	projects/PointSup/tools/prepare_coco_point_annotations_without_masks.py	/^    num_points_per_instance = int(sys.argv[1])$/;"	v
num_stages	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            num_stages=4,$/;"	v
num_updates	configs/new_baselines/mask_rcnn_R_50_FPN_100ep_LSJ.py	/^        num_updates=train.max_iter,$/;"	v
num_updates	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_l_in21k_lsj_50ep.py	/^        num_updates=train.max_iter,$/;"	v
num_updates	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^        num_updates=train.max_iter,$/;"	v
num_updates	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^        num_updates=train.max_iter,$/;"	v
num_updates	projects/ViTDet/configs/COCO/mask_rcnn_vitdet_b_100ep.py	/^        num_updates=train.max_iter,$/;"	v
num_warmup	detectron2/evaluation/evaluator.py	/^    num_warmup = min(5, total - 1)$/;"	v
num_workers	configs/Misc/torchvision_imagenet_R_50.py	/^    num_workers=4,$/;"	v
num_workers	configs/Misc/torchvision_imagenet_R_50.py	/^    num_workers=4,$/;"	v	class:ClassificationAcc
num_workers	configs/common/data/coco.py	/^    num_workers=4,$/;"	v
num_workers	detectron2/data/build.py	/^            num_workers=num_workers,$/;"	v
num_workers	detectron2/data/build.py	/^        num_workers=num_workers,$/;"	v
num_workers	projects/MViTv2/configs/common/coco_loader.py	/^    num_workers=4,$/;"	v
o	tests/modeling/test_fast_rcnn.py	/^            o = func(torch.randn(10, 20), torch.randn(10, 4))$/;"	v	class:FastRCNNTest.test_predict_boxes_tracing.Model
o	tests/modeling/test_fast_rcnn.py	/^            o = func(torch.randn(10, 6), torch.randn(10, 4))$/;"	v	class:FastRCNNTest.test_predict_probs_tracing.Model
o	tests/modeling/test_fast_rcnn.py	/^            o = func(torch.randn(20, 20), torch.randn(20, 4))$/;"	v	class:FastRCNNTest.test_predict_boxes_tracing.Model
o	tests/modeling/test_fast_rcnn.py	/^            o = func(torch.randn(20, 6), torch.randn(20, 4))$/;"	v	class:FastRCNNTest.test_predict_probs_tracing.Model
o	tests/modeling/test_fast_rcnn.py	/^            o = func(torch.randn(5, 20), torch.randn(5, 4))$/;"	v	class:FastRCNNTest.test_predict_boxes_tracing.Model
o	tests/modeling/test_fast_rcnn.py	/^            o = func(torch.randn(5, 6), torch.randn(5, 4))$/;"	v	class:FastRCNNTest.test_predict_probs_tracing.Model
o	tests/modeling/test_roi_pooler.py	/^            o = func(feature, random_boxes(20, W * canonical_scale_factor))$/;"	v	class:TestROIPooler.test_roi_pooler_tracing.Model
o	tests/modeling/test_roi_pooler.py	/^            o = func(feature, rois)$/;"	v	class:TestROIPooler.test_roi_pooler_tracing.Model
o	tests/modeling/test_roi_pooler.py	/^            o = func(feature, rois[:5])$/;"	v	class:TestROIPooler.test_roi_pooler_tracing.Model
obj	detectron2/data/datasets/coco.py	/^            obj = {key: anno[key] for key in ann_keys if key in anno}$/;"	v
obj	tools/convert-torchvision-to-d2.py	/^    obj = torch.load(input, map_location="cpu")$/;"	v
objectness_logits	tests/structures/test_instances.py	/^            objectness_logits = torch.tensor([1.0]).reshape(1, 1)$/;"	v	class:TestInstances.test_script_len.g
objs	detectron2/data/datasets/coco.py	/^        objs = []$/;"	v
offset	configs/common/models/mask_rcnn_c4.py	/^            offset=0.0,$/;"	v
offset	configs/common/models/mask_rcnn_fpn.py	/^            offset=0.0,$/;"	v
offset	configs/common/models/retinanet.py	/^        offset=0.0,$/;"	v
offset_center	projects/TensorMask/tensormask/arch.py	/^    offset_center = gt_center[:, None, :] - anchor_center[:, :]  # [N,M,2]$/;"	v
offset_losses	projects/Panoptic-DeepLab/panoptic_deeplab/panoptic_seg.py	/^    def offset_losses(self, predictions, targets, weights):$/;"	m	class:PanopticDeepLabInsEmbedHead
old_k	tools/convert-torchvision-to-d2.py	/^        old_k = k$/;"	v
on_load_checkpoint	tools/lightning_train_net.py	/^    def on_load_checkpoint(self, checkpointed_state: Dict[str, Any]) -> None:$/;"	m	class:TrainingModule
on_save_checkpoint	tools/lightning_train_net.py	/^    def on_save_checkpoint(self, checkpoint: Dict[str, Any]) -> None:$/;"	m	class:TrainingModule
on_validation_epoch_start	tools/lightning_train_net.py	/^    def on_validation_epoch_start(self, _outputs):$/;"	m	class:TrainingModule
onnx_compatibale_interpolate	detectron2/export/shared.py	/^def onnx_compatibale_interpolate($/;"	f
opset_version	tests/test_export_onnx.py	/^    opset_version = STABLE_ONNX_OPSET_VERSION$/;"	v	class:TestONNXTracingExport
optimizer	configs/Misc/torchvision_imagenet_R_50.py	/^optimizer = L(torch.optim.SGD)($/;"	v
optimizer	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^optimizer = model_zoo.get_config("common\/optim.py").AdamW$/;"	v
optimizer	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead.py	/^optimizer = get_config("common\/optim.py").SGD$/;"	v
optimizer	projects/Rethinking-BatchNorm/configs/retinanet_SyncBNhead.py	/^optimizer = get_config("common\/optim.py").SGD$/;"	v
optimizer	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^optimizer = model_zoo.get_config("common\/optim.py").AdamW$/;"	v
optimizer	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^optimizer = model_zoo.get_config("common\/optim.py").AdamW$/;"	v
optimizer	projects/ViTDet/configs/COCO/mask_rcnn_vitdet_b_100ep.py	/^optimizer = model_zoo.get_config("common\/optim.py").AdamW$/;"	v
optimizer_wgc_step	detectron2/solver/build.py	/^    def optimizer_wgc_step(self, closure=None):$/;"	f	function:_generate_optimizer_class_with_gradient_clipping
out	tests/structures/test_instances.py	/^            out = f()(inst, idx)$/;"	v	class:TestInstances.test_script_getitem.f
out_channels	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                out_channels=256,$/;"	v
out_channels	configs/common/models/mask_rcnn_c4.py	/^            out_channels=2048,$/;"	v
out_channels	configs/common/models/mask_rcnn_fpn.py	/^        out_channels=256,$/;"	v
out_channels	configs/common/models/mask_rcnn_vitdet.py	/^    out_channels=256,$/;"	v
out_channels	configs/common/models/retinanet.py	/^        out_channels=256,$/;"	v
out_eager	tests/modeling/test_roi_heads.py	/^            out_eager = model(*inputs)$/;"	v	class:ROIHeadsTest.test_PointRend_mask_head_tracing.Wrap
out_feature	configs/common/models/mask_rcnn_vitdet.py	/^        out_feature="last_feat",$/;"	v
out_features	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    out_features=["s1", "s2", "s3", "s4"],$/;"	v
out_features	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    out_features=["s1", "s2", "s3", "s4"],$/;"	v
out_features	configs/common/models/mask_rcnn_c4.py	/^        out_features=["res4"],$/;"	v
out_features	configs/common/models/mask_rcnn_fpn.py	/^            out_features=["res2", "res3", "res4", "res5"],$/;"	v
out_features	configs/common/models/retinanet.py	/^            out_features=["res3", "res4", "res5"],$/;"	v
out_features	configs/new_baselines/mask_rcnn_regnetx_4gf_dds_FPN_100ep_LSJ.py	/^    out_features=["s1", "s2", "s3", "s4"],$/;"	v
out_features	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    out_features=["s1", "s2", "s3", "s4"],$/;"	v
out_features	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    out_features=("scale2", "scale3", "scale4", "scale5"),$/;"	v
out_features	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    out_features=("scale2", "scale3", "scale4", "scale5"),$/;"	v
out_indices	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            out_indices=(0, 1, 2, 3),$/;"	v
out_scripted	tests/structures/test_instances.py	/^            out_scripted = script_module(new_instance.from_instances(inst), idx)$/;"	v	class:TestInstances.test_script_getitem.f
out_trace	tests/modeling/test_roi_heads.py	/^            out_trace = traced(*inputs)$/;"	v	class:ROIHeadsTest.test_PointRend_mask_head_tracing.Wrap
output	tools/visualize_data.py	/^    def output(vis, fname):$/;"	f	function:main
output_dir	configs/common/train.py	/^    output_dir=".\/output",$/;"	v
output_dir	datasets/prepare_ade20k_sem_seg.py	/^        output_dir = dataset_dir \/ "annotations_detectron2" \/ name$/;"	v
output_file	datasets/prepare_ade20k_sem_seg.py	/^            output_file = output_dir \/ file.name$/;"	v
output_shape	detectron2/modeling/backbone/backbone.py	/^    def output_shape(self):$/;"	m	class:Backbone
output_shape	detectron2/modeling/backbone/fpn.py	/^    def output_shape(self):$/;"	m	class:FPN
output_shape	detectron2/modeling/backbone/regnet.py	/^    def output_shape(self):$/;"	m	class:AnyNet
output_shape	detectron2/modeling/backbone/resnet.py	/^    def output_shape(self):$/;"	m	class:ResNet
output_shape	detectron2/modeling/mmdet_wrapper.py	/^    def output_shape(self) -> Dict[str, ShapeSpec]:$/;"	m	class:MMDetBackbone
output_shape	detectron2/modeling/roi_heads/box_head.py	/^    def output_shape(self):$/;"	m	class:FastRCNNConvFCHead
output_size	configs/common/models/keypoint_rcnn_fpn.py	/^        output_size=14,$/;"	v
output_size	configs/common/models/mask_rcnn_c4.py	/^            output_size=14,$/;"	v
output_size	configs/common/models/mask_rcnn_fpn.py	/^            output_size=14,$/;"	v
output_size	configs/common/models/mask_rcnn_fpn.py	/^            output_size=7,$/;"	v
outputs	detectron2/evaluation/evaluator.py	/^            outputs = model(inputs)$/;"	v
overlay_instances	detectron2/utils/visualizer.py	/^    def overlay_instances($/;"	m	class:Visualizer
overlay_rotated_instances	detectron2/utils/visualizer.py	/^    def overlay_rotated_instances(self, boxes=None, labels=None, assigned_colors=None):$/;"	m	class:Visualizer
pack	projects/DensePose/densepose/modeling/losses/embed_utils.py	/^    def pack(self) -> Optional[PackedCseAnnotations]:$/;"	m	class:CseAnnotationsAccumulator
pack	projects/DensePose/densepose/modeling/losses/utils.py	/^    def pack(self) -> Any:$/;"	m	class:AnnotationsAccumulator
pack	projects/DensePose/densepose/modeling/losses/utils.py	/^    def pack(self) -> Optional[PackedChartBasedAnnotations]:$/;"	m	class:ChartBasedAnnotationsAccumulator
package_data	setup.py	/^    package_data={"detectron2.model_zoo": get_model_zoo_configs()},$/;"	v
package_dir	setup.py	/^    package_dir=PROJECTS,$/;"	v
packages	projects/DensePose/setup.py	/^    packages=find_packages(),$/;"	v
packages	projects/TensorMask/setup.py	/^    packages=find_packages(exclude=("configs", "tests")),$/;"	v
packages	setup.py	/^    packages=find_packages(exclude=("configs", "tests*")) + list(PROJECTS.keys()),$/;"	v
pad_masks	detectron2/layers/mask_ops.py	/^def pad_masks(masks, padding):$/;"	f
padding_constraints	detectron2/modeling/backbone/backbone.py	/^    def padding_constraints(self) -> Dict[str, int]:$/;"	m	class:Backbone
padding_constraints	detectron2/modeling/backbone/fpn.py	/^    def padding_constraints(self):$/;"	m	class:FPN
padding_constraints	detectron2/modeling/backbone/vit.py	/^    def padding_constraints(self):$/;"	m	class:SimpleFeaturePyramid
pairwise_intersection	detectron2/structures/boxes.py	/^def pairwise_intersection(boxes1: Boxes, boxes2: Boxes) -> torch.Tensor:$/;"	f
pairwise_ioa	detectron2/structures/boxes.py	/^def pairwise_ioa(boxes1: Boxes, boxes2: Boxes) -> torch.Tensor:$/;"	f
pairwise_iou	detectron2/structures/boxes.py	/^def pairwise_iou(boxes1: Boxes, boxes2: Boxes) -> torch.Tensor:$/;"	f
pairwise_iou	detectron2/structures/rotated_boxes.py	/^def pairwise_iou(boxes1: RotatedBoxes, boxes2: RotatedBoxes) -> None:$/;"	f
pairwise_iou_rotated	detectron2/layers/rotated_boxes.py	/^def pairwise_iou_rotated(boxes1, boxes2):$/;"	f
pairwise_point_box_distance	detectron2/structures/boxes.py	/^def pairwise_point_box_distance(points: torch.Tensor, boxes: Boxes):$/;"	f
panoptic	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^    panoptic = merge_semantic_and_instance($/;"	v
paper_ref_role	docs/conf.py	/^def paper_ref_role($/;"	f
params	configs/Misc/torchvision_imagenet_R_50.py	/^    params=L(get_default_optimizer_params)(),$/;"	v
params	configs/common/optim.py	/^    params=L(get_default_optimizer_params)($/;"	v
parse_args	tools/visualize_data.py	/^def parse_args(in_args=None):$/;"	f
parse_rec	detectron2/evaluation/pascal_voc_evaluation.py	/^def parse_rec(filename):$/;"	f
parser	detectron2/evaluation/panoptic_evaluation.py	/^    parser = argparse.ArgumentParser()$/;"	v
paste_mask_in_image_old	detectron2/layers/mask_ops.py	/^def paste_mask_in_image_old(mask, box, img_h, img_w, threshold):$/;"	f
paste_masks_in_image	detectron2/layers/mask_ops.py	/^def paste_masks_in_image($/;"	f
patch	detectron2/export/caffe2_patch.py	/^def patch(model, target, updater, *args, **kwargs):$/;"	f
patch_builtin_len	detectron2/export/torchscript_patch.py	/^def patch_builtin_len(modules=()):$/;"	f
patch_generalized_rcnn	detectron2/export/caffe2_patch.py	/^def patch_generalized_rcnn(model):$/;"	f
patch_instances	detectron2/export/torchscript_patch.py	/^def patch_instances(fields):$/;"	f
patch_nonscriptable_classes	detectron2/export/torchscript_patch.py	/^def patch_nonscriptable_classes():$/;"	f
patch_roi_heads	detectron2/export/caffe2_patch.py	/^    def patch_roi_heads(self, tensor_mode=True):$/;"	m	class:ROIHeadsPatcher
patch_size	configs/common/models/mask_rcnn_vitdet.py	/^        patch_size=16,$/;"	v
patched_fastrcnn_outputs_inference	detectron2/export/caffe2_patch.py	/^        def patched_fastrcnn_outputs_inference(predictions, proposal):$/;"	f	function:ROIHeadsPatcher.patch_roi_heads
patched_keypoint_rcnn_inference	detectron2/export/caffe2_patch.py	/^            def patched_keypoint_rcnn_inference(pred_keypoint_logits, pred_instances):$/;"	f	function:ROIHeadsPatcher.patch_roi_heads.patched_fastrcnn_outputs_inference
patched_mask_rcnn_inference	detectron2/export/caffe2_patch.py	/^            def patched_mask_rcnn_inference(pred_mask_logits, pred_instances):$/;"	f	function:ROIHeadsPatcher.patch_roi_heads.patched_fastrcnn_outputs_inference
permute_all_cls_and_box_to_N_HWA_K_and_concat	projects/TensorMask/tensormask/arch.py	/^def permute_all_cls_and_box_to_N_HWA_K_and_concat(pred_logits, pred_anchor_deltas, num_classes=80):$/;"	f
permute_to_N_HWA_K	detectron2/modeling/meta_arch/dense_detector.py	/^def permute_to_N_HWA_K(tensor, K: int):$/;"	f
pixel_mean	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^    pixel_mean=constants.imagenet_rgb256_mean,$/;"	v
pixel_mean	configs/common/models/mask_rcnn_c4.py	/^    pixel_mean=constants.imagenet_bgr256_mean,$/;"	v
pixel_mean	configs/common/models/mask_rcnn_fpn.py	/^    pixel_mean=constants.imagenet_bgr256_mean,$/;"	v
pixel_mean	configs/common/models/retinanet.py	/^    pixel_mean=constants.imagenet_bgr256_mean,$/;"	v
pixel_std	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^    pixel_std=constants.imagenet_rgb256_std,$/;"	v
pixel_std	configs/common/models/mask_rcnn_c4.py	/^    pixel_std=constants.imagenet_bgr256_std,$/;"	v
pixel_std	configs/common/models/mask_rcnn_fpn.py	/^    pixel_std=constants.imagenet_bgr256_std,$/;"	v
pixel_std	configs/common/models/retinanet.py	/^    pixel_std=constants.imagenet_bgr256_std,$/;"	v
plain_formatter	detectron2/utils/logger.py	/^    plain_formatter = logging.Formatter($/;"	v
point_sample	projects/PointRend/point_rend/point_features.py	/^def point_sample(input, point_coords, **kwargs):$/;"	f
point_sample_fine_grained_features	projects/PointRend/point_rend/point_features.py	/^def point_sample_fine_grained_features(features_list, feature_scales, boxes, point_coords):$/;"	f
polygon_allclose	tests/data/test_transforms.py	/^def polygon_allclose(poly1, poly2):$/;"	f
polygon_area	detectron2/structures/masks.py	/^def polygon_area(x, y):$/;"	f
polygons	detectron2/utils/visualizer.py	/^    def polygons(self):$/;"	m	class:GenericMask
polygons_to_bitmask	detectron2/structures/masks.py	/^def polygons_to_bitmask(polygons: List[np.ndarray], height: int, width: int) -> np.ndarray:$/;"	f
polygons_to_mask	detectron2/utils/visualizer.py	/^    def polygons_to_mask(self, polygons):$/;"	m	class:GenericMask
pool2d	detectron2/modeling/backbone/regnet.py	/^def pool2d(k, *, stride=1):$/;"	f
pooler	configs/common/models/mask_rcnn_c4.py	/^        pooler=L(ROIPooler)($/;"	v
pooler_type	configs/common/models/keypoint_rcnn_fpn.py	/^        pooler_type="ROIAlignV2",$/;"	v
pooler_type	configs/common/models/mask_rcnn_c4.py	/^            pooler_type="ROIAlignV2",$/;"	v
pooler_type	configs/common/models/mask_rcnn_fpn.py	/^            pooler_type="ROIAlignV2",$/;"	v
port	detectron2/engine/defaults.py	/^    port = 2**15 + 2**14 + hash(os.getuid() if sys.platform != "win32" else 1) % 2**14$/;"	v
port	detectron2/engine/launch.py	/^            port = _find_free_port()$/;"	v
pos_fraction	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    pos_fraction=0.25,$/;"	v
pos_fraction	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    pos_fraction=0.5,$/;"	v
pos_iou_thr	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    pos_iou_thr=0.5,$/;"	v
pos_iou_thr	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    pos_iou_thr=0.7,$/;"	v
pos_weight	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                pos_weight=-1,$/;"	v
positive_fraction	configs/common/models/mask_rcnn_c4.py	/^        positive_fraction=0.25,$/;"	v
positive_fraction	configs/common/models/mask_rcnn_c4.py	/^        positive_fraction=0.5,$/;"	v
positive_fraction	configs/common/models/mask_rcnn_fpn.py	/^        positive_fraction=0.25,$/;"	v
positive_fraction	configs/common/models/mask_rcnn_fpn.py	/^        positive_fraction=0.5,$/;"	v
post_nms_topk	configs/common/models/mask_rcnn_c4.py	/^        post_nms_topk=(2000, 1000),$/;"	v
post_nms_topk	configs/common/models/mask_rcnn_fpn.py	/^        post_nms_topk=(1000, 1000),$/;"	v
postexecute	projects/DensePose/apply_net.py	/^    def postexecute(cls: type, context: Dict[str, Any]):$/;"	m	class:DumpAction
postexecute	projects/DensePose/apply_net.py	/^    def postexecute(cls: type, context: Dict[str, Any]):$/;"	m	class:ShowAction
pq_res	detectron2/evaluation/panoptic_evaluation.py	/^        pq_res = pq_compute($/;"	v
pre_nms_topk	configs/common/models/mask_rcnn_c4.py	/^        pre_nms_topk=(12000, 6000),$/;"	v
pre_nms_topk	configs/common/models/mask_rcnn_fpn.py	/^        pre_nms_topk=(2000, 1000),$/;"	v
pred_boxes	detectron2/modeling/box_regression.py	/^        pred_boxes = [$/;"	v
predict_boxes	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def predict_boxes($/;"	m	class:FastRCNNOutputLayers
predict_boxes_for_gt_classes	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def predict_boxes_for_gt_classes(self, predictions, proposals):$/;"	m	class:FastRCNNOutputLayers
predict_net	detectron2/export/api.py	/^    def predict_net(self):$/;"	m	class:Caffe2Model
predict_probs	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def predict_probs($/;"	m	class:FastRCNNOutputLayers
predict_proposals	detectron2/modeling/proposal_generator/rpn.py	/^    def predict_proposals($/;"	m	class:RPN
predict_proposals	detectron2/modeling/proposal_generator/rrpn.py	/^    def predict_proposals(self, anchors, pred_objectness_logits, pred_anchor_deltas, image_sizes):$/;"	m	class:RRPN
prediction_to_dict	projects/DensePose/densepose/evaluation/evaluator.py	/^def prediction_to_dict(instances, img_id, embedder, class_to_mesh_name, use_storage):$/;"	f
predictor_output_with_coarse_segm_to_mask	projects/DensePose/densepose/converters/segm_to_mask.py	/^def predictor_output_with_coarse_segm_to_mask($/;"	f
predictor_output_with_fine_and_coarse_segm_to_mask	projects/DensePose/densepose/converters/segm_to_mask.py	/^def predictor_output_with_fine_and_coarse_segm_to_mask($/;"	f
prepare_fpn	detectron2/export/torchscript_patch.py	/^    def prepare_fpn(self):$/;"	f	function:patch_nonscriptable_classes
prepare_params	detectron2/data/transforms/augmentation_impl.py	/^    def prepare_params(self, image):$/;"	m	class:Albumentations
prepare_resnet	detectron2/export/torchscript_patch.py	/^    def prepare_resnet(self):$/;"	f	function:patch_nonscriptable_classes
preprocess_image	detectron2/modeling/meta_arch/dense_detector.py	/^    def preprocess_image(self, batched_inputs: List[Dict[str, Tensor]]):$/;"	m	class:DenseDetector
preprocess_image	detectron2/modeling/meta_arch/rcnn.py	/^    def preprocess_image(self, batched_inputs: List[Dict[str, torch.Tensor]]):$/;"	m	class:GeneralizedRCNN
preprocess_image	projects/TensorMask/tensormask/arch.py	/^    def preprocess_image(self, batched_inputs):$/;"	m	class:TensorMask
pretrained	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^        pretrained="torchvision:\/\/resnet50",$/;"	v
print_csv_format	detectron2/evaluation/testing.py	/^def print_csv_format(results):$/;"	f
print_instances_class_histogram	detectron2/data/build.py	/^def print_instances_class_histogram(dataset_dicts, class_names):$/;"	f
prior_prob	configs/common/models/retinanet.py	/^        prior_prob=0.01,$/;"	v
prob	projects/MViTv2/configs/common/coco_loader.py	/^                prob=0.5,$/;"	v
process	configs/Misc/torchvision_imagenet_R_50.py	/^    def process(self, inputs, outputs):$/;"	m	class:ClassificationAcc
process	detectron2/evaluation/cityscapes_evaluation.py	/^    def process(self, inputs, outputs):$/;"	m	class:CityscapesInstanceEvaluator
process	detectron2/evaluation/cityscapes_evaluation.py	/^    def process(self, inputs, outputs):$/;"	m	class:CityscapesSemSegEvaluator
process	detectron2/evaluation/coco_evaluation.py	/^    def process(self, inputs, outputs):$/;"	m	class:COCOEvaluator
process	detectron2/evaluation/evaluator.py	/^    def process(self, inputs, outputs):$/;"	m	class:DatasetEvaluator
process	detectron2/evaluation/evaluator.py	/^    def process(self, inputs, outputs):$/;"	m	class:DatasetEvaluators
process	detectron2/evaluation/lvis_evaluation.py	/^    def process(self, inputs, outputs):$/;"	m	class:LVISEvaluator
process	detectron2/evaluation/panoptic_evaluation.py	/^    def process(self, inputs, outputs):$/;"	m	class:COCOPanopticEvaluator
process	detectron2/evaluation/pascal_voc_evaluation.py	/^    def process(self, inputs, outputs):$/;"	m	class:PascalVOCDetectionEvaluator
process	detectron2/evaluation/rotated_coco_evaluation.py	/^    def process(self, inputs, outputs):$/;"	m	class:RotatedCOCOEvaluator
process	detectron2/evaluation/sem_seg_evaluation.py	/^    def process(self, inputs, outputs):$/;"	m	class:SemSegEvaluator
process	projects/DensePose/densepose/evaluation/evaluator.py	/^    def process(self, inputs, outputs):$/;"	m	class:DensePoseCOCOEvaluator
process_annotation	tests/layers/test_mask_ops.py	/^    def process_annotation(self, ann, mask_side_len=28):$/;"	m	class:TestMaskCropPaste
process_polygons	detectron2/structures/masks.py	/^        def process_polygons($/;"	f	function:PolygonMasks.__init__
process_predictions	demo/predictor.py	/^        def process_predictions(frame, predictions):$/;"	f	function:VisualizationDemo.run_on_video
produce_densepose_losses_segm	projects/DensePose/densepose/modeling/losses/chart.py	/^    def produce_densepose_losses_segm($/;"	m	class:DensePoseChartLoss
produce_densepose_losses_uv	projects/DensePose/densepose/modeling/losses/chart.py	/^    def produce_densepose_losses_uv($/;"	m	class:DensePoseChartLoss
produce_densepose_losses_uv	projects/DensePose/densepose/modeling/losses/chart_with_confidences.py	/^    def produce_densepose_losses_uv($/;"	m	class:DensePoseChartWithConfidenceLoss
produce_fake_densepose_losses	projects/DensePose/densepose/modeling/losses/chart.py	/^    def produce_fake_densepose_losses(self, densepose_predictor_outputs: Any) -> LossDict:$/;"	m	class:DensePoseChartLoss
produce_fake_densepose_losses_segm	projects/DensePose/densepose/modeling/losses/chart.py	/^    def produce_fake_densepose_losses_segm(self, densepose_predictor_outputs: Any) -> LossDict:$/;"	m	class:DensePoseChartLoss
produce_fake_densepose_losses_uv	projects/DensePose/densepose/modeling/losses/chart.py	/^    def produce_fake_densepose_losses_uv(self, densepose_predictor_outputs: Any) -> LossDict:$/;"	m	class:DensePoseChartLoss
produce_fake_densepose_losses_uv	projects/DensePose/densepose/modeling/losses/chart_with_confidences.py	/^    def produce_fake_densepose_losses_uv(self, densepose_predictor_outputs: Any) -> LossDict:$/;"	m	class:DensePoseChartWithConfidenceLoss
produce_fake_losses	projects/DensePose/densepose/modeling/losses/cse.py	/^    def produce_fake_losses($/;"	m	class:DensePoseCseLoss
project	docs/conf.py	/^project = "detectron2"$/;"	v
proposal_generator	configs/common/models/mask_rcnn_c4.py	/^    proposal_generator=L(RPN)($/;"	v
proposal_generator	configs/common/models/mask_rcnn_fpn.py	/^    proposal_generator=L(RPN)($/;"	v
proposal_matcher	configs/common/models/mask_rcnn_c4.py	/^        proposal_matcher=L(Matcher)($/;"	v
proposal_matcher	configs/common/models/mask_rcnn_fpn.py	/^        proposal_matcher=L(Matcher)($/;"	v
proposal_matchers	configs/common/models/cascade_rcnn.py	/^    proposal_matchers=[$/;"	v
proposal_matchers	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^    proposal_matchers=[$/;"	v
proposal_matchers	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    proposal_matchers=[$/;"	v
proposal_matchers	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^    proposal_matchers=[$/;"	v
proposal_matchers	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^    proposal_matchers=[$/;"	v
proposal_matchers	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^    proposal_matchers=[$/;"	v
proposal_matchers	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^    proposal_matchers=[$/;"	v
put	demo/predictor.py	/^    def put(self, image):$/;"	m	class:AsyncPredictor
put	projects/DensePose/densepose/evaluation/tensor_storage.py	/^    def put(self, data: Dict[str, torch.Tensor]) -> int:$/;"	m	class:SingleProcessTensorStorage
put	projects/DensePose/densepose/evaluation/tensor_storage.py	/^    def put(self, rank: int, data: Dict[str, torch.Tensor]) -> int:$/;"	m	class:MultiProcessTensorStorage
put_histogram	detectron2/utils/events.py	/^    def put_histogram(self, hist_name, hist_tensor, bins=1000):$/;"	m	class:EventStorage
put_image	detectron2/utils/events.py	/^    def put_image(self, img_name, img_tensor):$/;"	m	class:EventStorage
put_scalar	detectron2/utils/events.py	/^    def put_scalar(self, name, value, smoothing_hint=True, cur_iter=None):$/;"	m	class:EventStorage
put_scalars	detectron2/utils/events.py	/^    def put_scalars(self, *, smoothing_hint=True, cur_iter=None, **kwargs):$/;"	m	class:EventStorage
pygments_style	docs/conf.py	/^pygments_style = "sphinx"$/;"	v
qkv_bias	configs/common/models/mask_rcnn_vitdet.py	/^        qkv_bias=True,$/;"	v
quantize_densepose_chart_result	projects/DensePose/densepose/structures/chart_result.py	/^def quantize_densepose_chart_result(result: DensePoseChartResult) -> DensePoseChartResultQuantized:$/;"	f
query	detectron2/model_zoo/model_zoo.py	/^    def query(config_path: str) -> Optional[str]:$/;"	m	class:_ModelZooUrls
ram_read_write_worker	projects/DensePose/tests/test_tensor_storage.py	/^def ram_read_write_worker():$/;"	f
randomData	tests/data/test_rotation_transform.py	/^    def randomData(self, h=5, w=5):$/;"	m	class:TestRotationTransform
random_boxes	detectron2/utils/testing.py	/^def random_boxes(num_boxes, max_coord=100, device="cpu"):$/;"	f
random_boxes	tests/layers/test_roi_align.py	/^    def random_boxes(mean_box, stdev, N, maxsize):$/;"	f	function:benchmark_roi_align
random_color	detectron2/utils/colormap.py	/^def random_color(rgb=False, maximum=255):$/;"	f
random_colors	detectron2/utils/colormap.py	/^def random_colors(N, rgb=False, maximum=255):$/;"	f
random_rotated_boxes	tests/modeling/test_box2box_transform.py	/^def random_rotated_boxes(mean_box, std_length, std_angle, N):$/;"	f
rank	detectron2/engine/launch.py	/^            rank=global_rank,$/;"	v
rasterize_polygons_with_grid_sample	tests/layers/test_mask_ops.py	/^def rasterize_polygons_with_grid_sample(full_image_bit_mask, box, mask_size, threshold=0.5):$/;"	f
rasterize_polygons_within_box	detectron2/structures/masks.py	/^def rasterize_polygons_within_box($/;"	f
ratios	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                ratios=[0.5, 1.0, 2.0],$/;"	v
rb	projects/TensorMask/tensormask/arch.py	/^    rb = torch.max(gt_boxes[:, None, 2:], anchor_boxes[:, 2:])  # [N,M,2]$/;"	v
rcnn	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            rcnn=dict($/;"	v
read_image	detectron2/data/detection_utils.py	/^def read_image(file_name, format=None):$/;"	f
read_keyframe_helper_data	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^def read_keyframe_helper_data(fpath: str):$/;"	f
read_keyframes	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^def read_keyframes($/;"	f
record	detectron2/data/datasets/coco.py	/^        record = {}$/;"	v
reduce_dict	detectron2/utils/comm.py	/^def reduce_dict(input_dict, average=True):$/;"	f
reduce_param_groups	detectron2/solver/build.py	/^def reduce_param_groups(params: List[Dict[str, Any]]) -> List[Dict[str, Any]]:$/;"	f
reduction	detectron2/modeling/box_regression.py	/^            reduction="sum",$/;"	v
reference_horizontal_nms	tests/layers/test_nms_rotated.py	/^    def reference_horizontal_nms(self, boxes, scores, iou_threshold):$/;"	m	class:TestNMSRotated
reg_class_agnostic	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                reg_class_agnostic=False,$/;"	v
register	detectron2/data/catalog.py	/^    def register(self, name, func):$/;"	m	class:_DatasetCatalog
register	projects/DensePose/densepose/converters/base.py	/^    def register(cls, from_type: Type, converter: Any = None):$/;"	m	class:BaseConverter
register	projects/DensePose/densepose/data/build.py	/^    def register(self, dataset_type: DatasetType, factory: Callable[[Metadata, CfgNode], Dataset]):$/;"	m	class:_BootstrapDatasetFactoryCatalog
register_action	projects/DensePose/apply_net.py	/^def register_action(cls: type):$/;"	f
register_action	projects/DensePose/query_db.py	/^def register_action(cls: type):$/;"	f
register_all_ade20k	detectron2/data/datasets/builtin.py	/^def register_all_ade20k(root):$/;"	f
register_all_cityscapes	detectron2/data/datasets/builtin.py	/^def register_all_cityscapes(root):$/;"	f
register_all_cityscapes_panoptic	detectron2/data/datasets/cityscapes_panoptic.py	/^def register_all_cityscapes_panoptic(root):$/;"	f
register_all_coco	detectron2/data/datasets/builtin.py	/^def register_all_coco(root):$/;"	f
register_all_coco_train_points	projects/PointSup/point_sup/register_point_annotations.py	/^def register_all_coco_train_points(root):$/;"	f
register_all_lvis	detectron2/data/datasets/builtin.py	/^def register_all_lvis(root):$/;"	f
register_all_pascal_voc	detectron2/data/datasets/builtin.py	/^def register_all_pascal_voc(root):$/;"	f
register_coco_instances	detectron2/data/datasets/coco.py	/^def register_coco_instances(name, metadata, json_file, image_root):$/;"	f
register_coco_instances_with_points	projects/PointSup/point_sup/register_point_annotations.py	/^def register_coco_instances_with_points(name, metadata, json_file, image_root):$/;"	f
register_coco_panoptic	detectron2/data/datasets/coco_panoptic.py	/^def register_coco_panoptic($/;"	f
register_coco_panoptic_separated	detectron2/data/datasets/coco_panoptic.py	/^def register_coco_panoptic_separated($/;"	f
register_custom_op_onnx_export	detectron2/utils/testing.py	/^def register_custom_op_onnx_export($/;"	f
register_dataset	projects/DensePose/densepose/data/datasets/chimpnsee.py	/^def register_dataset(datasets_root: Optional[str] = None) -> None:$/;"	f
register_dataset	projects/DensePose/densepose/data/datasets/coco.py	/^def register_dataset(dataset_data: CocoDatasetInfo, datasets_root: Optional[str] = None):$/;"	f
register_dataset	projects/DensePose/densepose/data/datasets/lvis.py	/^def register_dataset(dataset_data: CocoDatasetInfo, datasets_root: Optional[str] = None) -> None:$/;"	f
register_datasets	projects/DensePose/densepose/data/datasets/coco.py	/^def register_datasets($/;"	f
register_datasets	projects/DensePose/densepose/data/datasets/lvis.py	/^def register_datasets($/;"	f
register_hooks	detectron2/engine/train_loop.py	/^    def register_hooks(self, hooks: List[Optional[HookBase]]) -> None:$/;"	m	class:TrainerBase
register_lvis_instances	detectron2/data/datasets/lvis.py	/^def register_lvis_instances(name, metadata, json_file, image_root):$/;"	f
register_mesh	projects/DensePose/densepose/data/meshes/catalog.py	/^def register_mesh(mesh_info: MeshInfo, base_path: Optional[str]) -> None:$/;"	f
register_meshes	projects/DensePose/densepose/data/meshes/catalog.py	/^def register_meshes(mesh_infos: Iterable[MeshInfo], base_path: Optional[str]) -> None:$/;"	f
register_pascal_voc	detectron2/data/datasets/pascal_voc.py	/^def register_pascal_voc(name, dirname, split, year, class_names=CLASS_NAMES):$/;"	f
register_sampler	projects/DensePose/densepose/data/samplers/prediction_to_gt.py	/^    def register_sampler($/;"	m	class:PredictionToGroundTruthSampler
registry	projects/DensePose/densepose/converters/hflip.py	/^    registry = {}$/;"	v	class:HFlipConverter
registry	projects/DensePose/densepose/converters/to_chart_result.py	/^    registry = {}$/;"	v	class:ToChartResultConverter
registry	projects/DensePose/densepose/converters/to_chart_result.py	/^    registry = {}$/;"	v	class:ToChartResultConverterWithConfidences
registry	projects/DensePose/densepose/converters/to_mask.py	/^    registry = {}$/;"	v	class:ToMaskConverter
release	docs/conf.py	/^release = version$/;"	v
reload_lazy_config	detectron2/utils/testing.py	/^def reload_lazy_config(cfg):$/;"	f
reload_script_model	detectron2/utils/testing.py	/^def reload_script_model(module):$/;"	f
remove	detectron2/data/catalog.py	/^    def remove(self, name):$/;"	m	class:_DatasetCatalog
remove	detectron2/data/catalog.py	/^    def remove(self, name):$/;"	m	class:_MetadataCatalog
remove	detectron2/structures/instances.py	/^    def remove(self, name: str) -> None:$/;"	m	class:Instances
remove_dead_end_ops	detectron2/export/shared.py	/^def remove_dead_end_ops(net_def: caffe2_pb2.NetDef):$/;"	f
remove_reshape_for_fc	detectron2/export/shared.py	/^def remove_reshape_for_fc(predict_net, params):$/;"	f
remove_sampler	projects/DensePose/densepose/data/samplers/prediction_to_gt.py	/^    def remove_sampler($/;"	m	class:PredictionToGroundTruthSampler
rename_op_input	detectron2/export/shared.py	/^def rename_op_input($/;"	f
rename_op_output	detectron2/export/shared.py	/^def rename_op_output(predict_net: caffe2_pb2.NetDef, op_id: int, output_id: int, new_name: str):$/;"	f
repeat	projects/PointSup/tools/prepare_coco_point_annotations_without_masks.py	/^        repeat = 1$/;"	v
repeat	projects/PointSup/tools/prepare_coco_point_annotations_without_masks.py	/^        repeat = int(sys.argv[2])$/;"	v
repeat_factors	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    repeat_factors=L(RepeatFactorTrainingSampler.repeat_factors_from_category_frequency)($/;"	v
repeat_factors	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^    repeat_factors=L(RepeatFactorTrainingSampler.repeat_factors_from_category_frequency)($/;"	v
repeat_factors	projects/ViTDet/configs/LVIS/mask_rcnn_vitdet_b_100ep.py	/^    repeat_factors=L(RepeatFactorTrainingSampler.repeat_factors_from_category_frequency)($/;"	v
repeat_factors_from_category_frequency	detectron2/data/samplers/distributed_sampler.py	/^    def repeat_factors_from_category_frequency(dataset_dicts, repeat_thresh, sqrt=True):$/;"	m	class:RepeatFactorTrainingSampler
required	tools/analyze_model.py	/^        required=True,$/;"	v
res	tools/convert-torchvision-to-d2.py	/^    res = {"model": newmodel, "__author__": "torchvision", "matching_heuristics": True}$/;"	v
res5	configs/common/models/mask_rcnn_c4.py	/^        res5=L(ResNet.make_stage)($/;"	v
resample_coarse_segm_tensor_to_bbox	projects/DensePose/densepose/converters/segm_to_mask.py	/^def resample_coarse_segm_tensor_to_bbox(coarse_segm: torch.Tensor, box_xywh_abs: IntTupleBox):$/;"	f
resample_confidences_to_bbox	projects/DensePose/densepose/converters/chart_output_to_chart_result.py	/^def resample_confidences_to_bbox($/;"	f
resample_data	projects/DensePose/densepose/modeling/losses/utils.py	/^def resample_data($/;"	f
resample_fine_and_coarse_segm_tensors_to_bbox	projects/DensePose/densepose/converters/segm_to_mask.py	/^def resample_fine_and_coarse_segm_tensors_to_bbox($/;"	f
resample_fine_and_coarse_segm_to_bbox	projects/DensePose/densepose/converters/segm_to_mask.py	/^def resample_fine_and_coarse_segm_to_bbox(predictor_output: Any, box_xywh_abs: IntTupleBox):$/;"	f
resample_uv_tensors_to_bbox	projects/DensePose/densepose/converters/chart_output_to_chart_result.py	/^def resample_uv_tensors_to_bbox($/;"	f
resample_uv_to_bbox	projects/DensePose/densepose/converters/chart_output_to_chart_result.py	/^def resample_uv_to_bbox($/;"	f
reset	configs/Misc/torchvision_imagenet_R_50.py	/^    def reset(self):$/;"	m	class:ClassificationAcc
reset	detectron2/evaluation/cityscapes_evaluation.py	/^    def reset(self):$/;"	m	class:CityscapesEvaluator
reset	detectron2/evaluation/coco_evaluation.py	/^    def reset(self):$/;"	m	class:COCOEvaluator
reset	detectron2/evaluation/evaluator.py	/^    def reset(self):$/;"	m	class:DatasetEvaluator
reset	detectron2/evaluation/evaluator.py	/^    def reset(self):$/;"	m	class:DatasetEvaluators
reset	detectron2/evaluation/lvis_evaluation.py	/^    def reset(self):$/;"	m	class:LVISEvaluator
reset	detectron2/evaluation/panoptic_evaluation.py	/^    def reset(self):$/;"	m	class:COCOPanopticEvaluator
reset	detectron2/evaluation/pascal_voc_evaluation.py	/^    def reset(self):$/;"	m	class:PascalVOCDetectionEvaluator
reset	detectron2/evaluation/sem_seg_evaluation.py	/^    def reset(self):$/;"	m	class:SemSegEvaluator
reset	projects/DensePose/densepose/evaluation/evaluator.py	/^    def reset(self):$/;"	m	class:DensePoseCOCOEvaluator
reset_data_loader	detectron2/engine/train_loop.py	/^    def reset_data_loader(self, data_loader_builder):$/;"	m	class:SimpleTrainer
reset_image	detectron2/utils/visualizer.py	/^    def reset_image(self, img):$/;"	m	class:VisImage
reset_parameters	projects/DensePose/densepose/modeling/cse/vertex_direct_embedder.py	/^    def reset_parameters(self):$/;"	m	class:VertexDirectEmbedder
reset_parameters	projects/DensePose/densepose/modeling/cse/vertex_feature_embedder.py	/^    def reset_parameters(self):$/;"	m	class:VertexFeatureEmbedder
residual_block_indexes	configs/common/models/mask_rcnn_vitdet.py	/^        residual_block_indexes=[],$/;"	v
residual_pooling	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    residual_pooling=True,$/;"	v
residual_pooling	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    residual_pooling=True,$/;"	v
resolve_any_xref	docs/conf.py	/^    def resolve_any_xref(self, env, fromdocname, builder, target, node, contnode):$/;"	m	class:GithubURLDomain
result	projects/DensePose/densepose/evaluation/evaluator.py	/^        result = _derive_results_from_coco_eval($/;"	v
results	detectron2/evaluation/evaluator.py	/^        results = {}$/;"	v
results	detectron2/evaluation/evaluator.py	/^    results = evaluator.evaluate()$/;"	v
results	projects/DensePose/densepose/evaluation/evaluator.py	/^    results = []$/;"	v
results_gps	projects/DensePose/densepose/evaluation/evaluator.py	/^        results_gps = {metric: -1 for metric in densepose_metrics}$/;"	v
results_gpsm	projects/DensePose/densepose/evaluation/evaluator.py	/^        results_gpsm = {metric: -1 for metric in densepose_metrics}$/;"	v
results_segm	projects/DensePose/densepose/evaluation/evaluator.py	/^        results_segm = {metric: -1 for metric in densepose_metrics}$/;"	v
resume_or_load	detectron2/engine/defaults.py	/^    def resume_or_load(self, resume=True):$/;"	m	class:DefaultTrainer
retry_if_cuda_oom	detectron2/utils/memory.py	/^def retry_if_cuda_oom(func):$/;"	f
roi_align_rotated	detectron2/layers/roi_align_rotated.py	/^roi_align_rotated = _ROIAlignRotated.apply$/;"	v
roi_feat_size	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                roi_feat_size=7,$/;"	v
roi_head	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^        roi_head=dict($/;"	v
roi_heads	configs/common/models/mask_rcnn_c4.py	/^    roi_heads=L(Res5ROIHeads)($/;"	v
roi_heads	configs/common/models/mask_rcnn_fpn.py	/^    roi_heads=L(StandardROIHeads)($/;"	v
roi_layer	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                roi_layer=dict(type="RoIAlign", output_size=14, sampling_ratio=0),$/;"	v
roi_layer	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                roi_layer=dict(type="RoIAlign", output_size=7, sampling_ratio=0),$/;"	v
roi_mask_point_loss	projects/PointRend/point_rend/point_head.py	/^def roi_mask_point_loss(mask_logits, instances, point_labels):$/;"	f
root_name	detectron2/utils/logger.py	/^                root_name=name,$/;"	v
rotate_box_inverse	projects/DensePose/densepose/modeling/test_time_augmentation.py	/^def rotate_box_inverse(rot_tfm, rotated_box):$/;"	f
rpn	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            rpn=dict($/;"	v
rpn_head	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^        rpn_head=dict($/;"	v
rpn_proposal	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            rpn_proposal=dict($/;"	v
run	demo/predictor.py	/^        def run(self):$/;"	m	class:AsyncPredictor._PredictWorker
run_and_save_graph	detectron2/export/caffe2_export.py	/^def run_and_save_graph(predict_net, init_net, tensor_inputs, graph_save_path):$/;"	f
run_on_image	demo/predictor.py	/^    def run_on_image(self, image):$/;"	m	class:VisualizationDemo
run_on_video	demo/predictor.py	/^    def run_on_video(self, video):$/;"	m	class:VisualizationDemo
run_step	detectron2/engine/defaults.py	/^    def run_step(self):$/;"	m	class:DefaultTrainer
run_step	detectron2/engine/train_loop.py	/^    def run_step(self):$/;"	m	class:AMPTrainer
run_step	detectron2/engine/train_loop.py	/^    def run_step(self):$/;"	m	class:SimpleTrainer
run_step	detectron2/engine/train_loop.py	/^    def run_step(self):$/;"	m	class:TrainerBase
s	projects/PointSup/tools/prepare_coco_point_annotations_without_masks.py	/^    s = "instances_train2017"$/;"	v
safe_update	detectron2/config/lazy.py	/^        def safe_update(cfg, key, value):$/;"	f	function:LazyConfig.apply_overrides
sample_point_labels	projects/PointRend/point_rend/point_features.py	/^def sample_point_labels(instances, point_coords):$/;"	f
sample_random_indices	projects/DensePose/densepose/modeling/losses/utils.py	/^def sample_random_indices($/;"	f
sample_style	configs/common/data/coco.py	/^                sample_style="choice",$/;"	v
sample_style	projects/MViTv2/configs/common/coco_loader.py	/^                sample_style="choice",$/;"	v
sampler	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                sampler=dict($/;"	v
sampler	detectron2/data/build.py	/^            sampler = TrainingSampler(len(dataset))$/;"	v
sampling_ratio	configs/common/models/keypoint_rcnn_fpn.py	/^        sampling_ratio=0,$/;"	v
sampling_ratio	configs/common/models/mask_rcnn_c4.py	/^            sampling_ratio=0,$/;"	v
sampling_ratio	configs/common/models/mask_rcnn_fpn.py	/^            sampling_ratio=0,$/;"	v
saturation	projects/PointRend/point_rend/color_augmentation.py	/^    def saturation(self, img):$/;"	m	class:ColorAugSSDTransform
save	detectron2/config/lazy.py	/^    def save(cfg, filename: str):$/;"	m	class:LazyConfig
save	detectron2/utils/visualizer.py	/^    def save(self, filepath):$/;"	m	class:VisImage
save_graph	detectron2/export/api.py	/^    def save_graph(self, output_file, inputs=None):$/;"	m	class:Caffe2Model
save_graph	detectron2/export/shared.py	/^def save_graph(net, file_name, graph_name="net", op_only=True, blob_sizes=None, blob_ranges=None):$/;"	f
save_graph_base	detectron2/export/shared.py	/^def save_graph_base(net, file_name, graph_name="net", op_only=True, blob_rename_func=None):$/;"	f
save_protobuf	detectron2/export/api.py	/^    def save_protobuf(self, output_dir):$/;"	m	class:Caffe2Model
scale	detectron2/structures/boxes.py	/^    def scale(self, scale_x: float, scale_y: float) -> None:$/;"	m	class:Boxes
scale	detectron2/structures/rotated_boxes.py	/^    def scale(self, scale_x: float, scale_y: float) -> None:$/;"	m	class:RotatedBoxes
scale_boxes	detectron2/layers/mask_ops.py	/^def scale_boxes(boxes, scale):$/;"	f
scale_factors	configs/common/models/mask_rcnn_vitdet.py	/^    scale_factors=(4.0, 2.0, 1.0, 0.5),$/;"	v
scales	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                scales=[8],$/;"	v
scales	configs/common/models/keypoint_rcnn_fpn.py	/^        scales=(1.0 \/ 4, 1.0 \/ 8, 1.0 \/ 16, 1.0 \/ 32),$/;"	v
scales	configs/common/models/mask_rcnn_c4.py	/^            scales=(1.0 \/ 16,),$/;"	v
scales	configs/common/models/mask_rcnn_fpn.py	/^            scales=(1.0 \/ 4, 1.0 \/ 8, 1.0 \/ 16, 1.0 \/ 32),$/;"	v
scheduler	configs/Misc/torchvision_imagenet_R_50.py	/^    scheduler=L(MultiStepParamScheduler)($/;"	v
scheduler	configs/new_baselines/mask_rcnn_R_50_FPN_100ep_LSJ.py	/^    scheduler=L(MultiStepParamScheduler)($/;"	v
scheduler	detectron2/engine/hooks.py	/^    def scheduler(self):$/;"	m	class:LRScheduler
scheduler	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_l_in21k_lsj_50ep.py	/^    scheduler=L(MultiStepParamScheduler)($/;"	v
scheduler	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    scheduler=L(MultiStepParamScheduler)($/;"	v
scheduler	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    scheduler=L(MultiStepParamScheduler)($/;"	v
scheduler	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_h_in21k_36ep.py	/^    scheduler=L(MultiStepParamScheduler)($/;"	v
scheduler	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^    scheduler=L(MultiStepParamScheduler)($/;"	v
scheduler	projects/ViTDet/configs/COCO/mask_rcnn_vitdet_b_100ep.py	/^    scheduler=L(MultiStepParamScheduler)($/;"	v
score_thr	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                score_thr=0.05,$/;"	v
script_module	tests/structures/test_instances.py	/^            script_module = torch.jit.script(f())$/;"	v	class:TestInstances.test_script_getitem.f
script_module	tests/structures/test_instances.py	/^            script_module = torch.jit.script(f())$/;"	v	class:TestInstances.test_script_has.f
script_module	tests/structures/test_instances.py	/^            script_module = torch.jit.script(f())$/;"	v	class:TestInstances.test_script_len.g
script_module	tests/structures/test_instances.py	/^            script_module = torch.jit.script(f())$/;"	v	class:TestInstances.test_script_to.f
script_module	tests/structures/test_instances.py	/^            script_module = torch.jit.script(g())$/;"	v	class:TestInstances.test_script_len.g
scripted_g2	tests/structures/test_instances.py	/^            scripted_g2 = torch.jit.script(g2())$/;"	v	class:TestInstances.test_script_new_fields.g2
scripting_with_instances	detectron2/export/torchscript.py	/^def scripting_with_instances(model, fields):$/;"	f
se_ratio	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    se_ratio=0.25,$/;"	v
se_ratio	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    se_ratio=0.25,$/;"	v
seed_all_rng	detectron2/utils/env.py	/^def seed_all_rng(seed=None):$/;"	f
segm	detectron2/data/datasets/coco.py	/^                        segm = mask_util.frPyObjects(segm, *segm["size"])$/;"	v
segm	detectron2/data/datasets/coco.py	/^                    segm = [$/;"	v
segm	detectron2/data/datasets/coco.py	/^            segm = anno.get("segmentation", None)$/;"	v
select_foreground_proposals	detectron2/modeling/roi_heads/roi_heads.py	/^def select_foreground_proposals($/;"	f
select_proposals_with_visible_keypoints	detectron2/modeling/roi_heads/roi_heads.py	/^def select_proposals_with_visible_keypoints(proposals: List[Instances]) -> List[Instances]:$/;"	f
sem_seg_postprocess	detectron2/modeling/postprocessing.py	/^def sem_seg_postprocess(result, img_size, output_height, output_width):$/;"	f
semantic_masks	detectron2/utils/visualizer.py	/^    def semantic_masks(self):$/;"	m	class:_PanopticPrediction
separate_coco_semantic_from_panoptic	datasets/prepare_panoptic_fpn.py	/^def separate_coco_semantic_from_panoptic(panoptic_json, panoptic_root, sem_seg_root, categories):$/;"	f
set	detectron2/data/catalog.py	/^    def set(self, **kwargs):$/;"	m	class:Metadata
set	detectron2/export/c10.py	/^    def set(self, name, value):$/;"	m	class:InstancesList
set	detectron2/structures/instances.py	/^    def set(self, name: str, value: Any) -> None:$/;"	m	class:Instances
setDetParams	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def setDetParams(self):$/;"	m	class:Params
setKpParams	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def setKpParams(self):$/;"	m	class:Params
setUp	projects/DensePose/tests/test_model_e2e.py	/^    def setUp(self):$/;"	m	class:ModelE2ETest
setUp	tests/config/test_lazy_config.py	/^    def setUp(self):$/;"	m	class:TestLazyPythonConfig
setUp	tests/data/test_transforms.py	/^    def setUp(self):$/;"	m	class:TestTransforms
setUp	tests/layers/test_mask_ops.py	/^    def setUp(self):$/;"	m	class:TestMaskCropPaste
setUp	tests/layers/test_nms_rotated.py	/^    def setUp(self):$/;"	m	class:TestScriptable
setUp	tests/modeling/test_model_e2e.py	/^    def setUp(self):$/;"	m	class:InstanceModelE2ETest
setUp	tests/modeling/test_model_e2e.py	/^    def setUp(self):$/;"	m	class:SemSegE2ETest
setUp	tests/test_checkpoint.py	/^    def setUp(self):$/;"	m	class:TestCheckpointer
setUp	tests/test_export_caffe2.py	/^    def setUp(self):$/;"	m	class:TestCaffe2Export
setUp	tests/test_export_onnx.py	/^    def setUp(self):$/;"	m	class:TestONNXTracingExport
setUp	tests/test_model_analysis.py	/^    def setUp(self):$/;"	m	class:FasterRCNNTest
setUp	tests/test_model_analysis.py	/^    def setUp(self):$/;"	m	class:MaskRCNNTest
setUp	tests/test_model_analysis.py	/^    def setUp(self):$/;"	m	class:RetinaNetTest
setUp	tests/tracking/test_bbox_iou_tracker.py	/^    def setUp(self):$/;"	m	class:TestBBoxIOUTracker
setUp	tests/tracking/test_hungarian_tracker.py	/^    def setUp(self):$/;"	m	class:TestBaseHungarianTracker
setUp	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^    def setUp(self):$/;"	m	class:TestIOUWeightedHungarianBBoxIOUTracker
setUp	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^    def setUp(self):$/;"	m	class:TestVanillaHungarianBBoxIOUTracker
setUvParams	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def setUvParams(self):$/;"	m	class:Params
set_caffe2_compatible_tensor_mode	detectron2/export/caffe2_modeling.py	/^def set_caffe2_compatible_tensor_mode(model, enable=True):$/;"	f
set_default_dataset_from_list_serialize_method	detectron2/data/common.py	/^def set_default_dataset_from_list_serialize_method(new):$/;"	f
set_global_cfg	detectron2/config/config.py	/^def set_global_cfg(cfg: CfgNode) -> None:$/;"	f
set_low_quality_matches_	detectron2/modeling/matcher.py	/^    def set_low_quality_matches_(self, match_labels, match_quality_matrix):$/;"	m	class:Matcher
setup	docs/conf.py	/^def setup(app):$/;"	f
setup	projects/DeepLab/train_net.py	/^def setup(args):$/;"	f
setup	projects/DensePose/tests/common.py	/^def setup(config_file):$/;"	f
setup	projects/DensePose/train_net.py	/^def setup(args):$/;"	f
setup	projects/Panoptic-DeepLab/train_net.py	/^def setup(args):$/;"	f
setup	projects/PointRend/train_net.py	/^def setup(args):$/;"	f
setup	projects/PointSup/train_net.py	/^def setup(args):$/;"	f
setup	projects/TensorMask/train_net.py	/^def setup(args):$/;"	f
setup	projects/TridentNet/train_net.py	/^def setup(args):$/;"	f
setup	tools/analyze_model.py	/^def setup(args):$/;"	f
setup	tools/benchmark.py	/^def setup(args):$/;"	f
setup	tools/lightning_train_net.py	/^    def setup(self, stage: str):$/;"	m	class:TrainingModule
setup	tools/lightning_train_net.py	/^def setup(args):$/;"	f
setup	tools/plain_train_net.py	/^def setup(args):$/;"	f
setup	tools/train_net.py	/^def setup(args):$/;"	f
setup	tools/visualize_data.py	/^def setup(args):$/;"	f
setup_cfg	demo/demo.py	/^def setup_cfg(args):$/;"	f
setup_cfg	tools/deploy/export_model.py	/^def setup_cfg(args):$/;"	f
setup_config	projects/DensePose/apply_net.py	/^    def setup_config($/;"	m	class:InferenceAction
setup_config	projects/DensePose/apply_net.py	/^    def setup_config($/;"	m	class:ShowAction
setup_custom_environment	detectron2/utils/env.py	/^def setup_custom_environment(custom_module):$/;"	f
setup_dataset	projects/DensePose/query_db.py	/^def setup_dataset(dataset_name):$/;"	f
setup_environment	detectron2/utils/env.py	/^def setup_environment():$/;"	f
setup_logger	detectron2/utils/logger.py	/^def setup_logger($/;"	f
shapes_to_tensor	detectron2/layers/wrappers.py	/^def shapes_to_tensor(x: List[int], device: Optional[torch.device] = None) -> torch.Tensor:$/;"	f
shared_random_seed	detectron2/utils/comm.py	/^def shared_random_seed():$/;"	f
short_edge_length	configs/common/data/coco.py	/^                short_edge_length=(640, 672, 704, 736, 768, 800),$/;"	v
short_edge_length	projects/MViTv2/configs/common/coco_loader.py	/^                short_edge_length=(480, 512, 544, 576, 608, 640, 672, 704, 736, 768, 800),$/;"	v
short_name	detectron2/data/build.py	/^    def short_name(x):$/;"	f	function:print_instances_class_histogram
shutdown	demo/predictor.py	/^    def shutdown(self):$/;"	m	class:AsyncPredictor
sigmoid_cross_entropy_loss	detectron2/modeling/roi_heads/fast_rcnn.py	/^    def sigmoid_cross_entropy_loss(self, pred_class_logits, gt_classes):$/;"	m	class:FastRCNNOutputLayers
size	detectron2/utils/colormap.py	/^    size = 100$/;"	v
size_diff_upper	projects/TensorMask/tensormask/arch.py	/^    size_diff_upper = gt_size_upper[:, None] - anchor_size  # [N,M]$/;"	v
size_divisibility	detectron2/modeling/backbone/backbone.py	/^    def size_divisibility(self) -> int:$/;"	m	class:Backbone
size_divisibility	detectron2/modeling/backbone/fpn.py	/^    def size_divisibility(self):$/;"	m	class:FPN
size_divisibility	detectron2/modeling/backbone/swin.py	/^    def size_divisibility(self):$/;"	m	class:SwinTransformer
sizes	configs/common/models/mask_rcnn_c4.py	/^            sizes=[[32, 64, 128, 256, 512]],$/;"	v
sizes	configs/common/models/mask_rcnn_fpn.py	/^            sizes=[[32], [64], [128], [256], [512]],$/;"	v
sizes	configs/common/models/retinanet.py	/^        sizes=[[x, x * 2 ** (1.0 \/ 3), x * 2 ** (2.0 \/ 3)] for x in [32, 64, 128, 256, 512]],$/;"	v
skipIfOnCPUCI	detectron2/utils/testing.py	/^skipIfOnCPUCI = unittest.skipIf($/;"	v
skipIfUnsupportedMinOpsetVersion	detectron2/utils/testing.py	/^def skipIfUnsupportedMinOpsetVersion(min_opset_version, current_opset_version=None):$/;"	f
skipIfUnsupportedMinTorchVersion	detectron2/utils/testing.py	/^def skipIfUnsupportedMinTorchVersion(min_version):$/;"	f
skip_dec	detectron2/utils/testing.py	/^    def skip_dec(func):$/;"	f	function:skipIfUnsupportedMinOpsetVersion
slice_if_not_none	projects/DensePose/densepose/structures/chart_confidence.py	/^    def slice_if_not_none(data, item):$/;"	f	function:decorate_predictor_output_class_with_confidences
slice_if_not_none	projects/DensePose/densepose/structures/cse_confidence.py	/^    def slice_if_not_none(data, item):$/;"	f	function:decorate_cse_predictor_output_class_with_confidences
smoothing_hints	detectron2/utils/events.py	/^    def smoothing_hints(self):$/;"	m	class:EventStorage
source_suffix	docs/conf.py	/^source_suffix = [".rst", ".md"]$/;"	v
spatial_matrix	projects/TensorMask/tensormask/arch.py	/^    spatial_matrix = torch.sum(offset_center * offset_center, dim=2) <= spatial_square$/;"	v
spatial_square	projects/TensorMask/tensormask/arch.py	/^    spatial_square = spatial_thresh * spatial_thresh$/;"	v
square_pad	configs/common/models/mask_rcnn_vitdet.py	/^    square_pad=1024,$/;"	v
squared_euclidean_distance_matrix	projects/DensePose/densepose/modeling/cse/utils.py	/^def squared_euclidean_distance_matrix(pts1: torch.Tensor, pts2: torch.Tensor) -> torch.Tensor:$/;"	f
stages	configs/common/models/mask_rcnn_c4.py	/^        stages=L(ResNet.make_default_stages)($/;"	v
stages	configs/common/models/mask_rcnn_fpn.py	/^            stages=L(ResNet.make_default_stages)($/;"	v
stages	configs/common/models/retinanet.py	/^            stages=L(ResNet.make_default_stages)($/;"	v
start_compute_time	detectron2/evaluation/evaluator.py	/^            start_compute_time = time.perf_counter()$/;"	v
start_data_time	detectron2/evaluation/evaluator.py	/^            start_data_time = time.perf_counter()$/;"	v
start_data_time	detectron2/evaluation/evaluator.py	/^        start_data_time = time.perf_counter()$/;"	v
start_eval_time	detectron2/evaluation/evaluator.py	/^            start_eval_time = time.perf_counter()$/;"	v
start_time	detectron2/evaluation/evaluator.py	/^                start_time = time.perf_counter()$/;"	v
start_time	detectron2/evaluation/evaluator.py	/^    start_time = time.perf_counter()$/;"	v
state_dict	detectron2/engine/defaults.py	/^    def state_dict(self):$/;"	m	class:DefaultTrainer
state_dict	detectron2/engine/hooks.py	/^    def state_dict(self):$/;"	m	class:LRScheduler
state_dict	detectron2/engine/train_loop.py	/^    def state_dict(self):$/;"	m	class:AMPTrainer
state_dict	detectron2/engine/train_loop.py	/^    def state_dict(self):$/;"	m	class:HookBase
state_dict	detectron2/engine/train_loop.py	/^    def state_dict(self):$/;"	m	class:SimpleTrainer
state_dict	detectron2/engine/train_loop.py	/^    def state_dict(self):$/;"	m	class:TrainerBase
state_dict	detectron2/solver/lr_scheduler.py	/^    def state_dict(self):$/;"	m	class:LRMultiplier
stats_mode	configs/new_baselines/mask_rcnn_R_50_FPN_100ep_LSJ.py	/^                                                                       stats_mode="N")$/;"	v
stem	configs/common/models/mask_rcnn_c4.py	/^        stem=L(BasicStem)(in_channels=3, out_channels=64, norm="FrozenBN"),$/;"	v
stem	configs/common/models/mask_rcnn_fpn.py	/^            stem=L(BasicStem)(in_channels=3, out_channels=64, norm="FrozenBN"),$/;"	v
stem	configs/common/models/retinanet.py	/^            stem=L(BasicStem)(in_channels=3, out_channels=64, norm="FrozenBN"),$/;"	v
stem_class	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    stem_class=SimpleStem,$/;"	v
stem_class	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    stem_class=SimpleStem,$/;"	v
stem_class	configs/new_baselines/mask_rcnn_regnetx_4gf_dds_FPN_100ep_LSJ.py	/^    stem_class=SimpleStem,$/;"	v
stem_class	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    stem_class=SimpleStem,$/;"	v
stem_width	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    stem_width=32,$/;"	v
stem_width	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    stem_width=32,$/;"	v
stem_width	configs/new_baselines/mask_rcnn_regnetx_4gf_dds_FPN_100ep_LSJ.py	/^    stem_width=32,$/;"	v
stem_width	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    stem_width=32,$/;"	v
step	detectron2/utils/events.py	/^    def step(self):$/;"	m	class:EventStorage
storage_gather	projects/DensePose/densepose/evaluation/tensor_storage.py	/^def storage_gather($/;"	f
stride_in_1x1	configs/common/models/mask_rcnn_c4.py	/^            stride_in_1x1=True,$/;"	v
stride_in_1x1	configs/common/models/mask_rcnn_fpn.py	/^                stride_in_1x1=True,$/;"	v
stride_in_1x1	configs/common/models/retinanet.py	/^                stride_in_1x1=True,$/;"	v
stride_per_block	configs/common/models/mask_rcnn_c4.py	/^            stride_per_block=[2, 1, 1],$/;"	v
strides	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                strides=[4, 8, 16, 32, 64],$/;"	v
strides	configs/common/models/mask_rcnn_c4.py	/^            strides=[16],$/;"	v
strides	configs/common/models/mask_rcnn_fpn.py	/^            strides=[4, 8, 16, 32, 64],$/;"	v
strides	configs/common/models/retinanet.py	/^        strides=[8, 16, 32, 64, 128],$/;"	v
style	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            style="pytorch",$/;"	v
subsample_labels	detectron2/modeling/sampling.py	/^def subsample_labels($/;"	f
summarize	detectron2/evaluation/coco_evaluation.py	/^    def summarize(self):$/;"	m	class:COCOevalMaxDets
summarize	projects/DensePose/densepose/evaluation/densepose_coco_evaluation.py	/^    def summarize(self):$/;"	m	class:DensePoseCocoEval
swap_align2nat	projects/TensorMask/tensormask/layers/swap_align2nat.py	/^swap_align2nat = _SwapAlign2Nat.apply$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_bear_4936.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_cat_5001.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_cat_7466.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_chimp_5029.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_cow_5002.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_dog_5002.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_dog_7466.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_elephant_5002.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_giraffe_5002.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_horse_5004.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_sheep_5004.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_smpl_27554.pkl",$/;"	v
symmetry	projects/DensePose/densepose/data/meshes/builtin.py	/^        symmetry="symmetry\/symmetry_zebra_5002.pkl",$/;"	v
symmetry	projects/DensePose/densepose/structures/mesh.py	/^    def symmetry(self):$/;"	m	class:Mesh
synchronize	detectron2/utils/comm.py	/^def synchronize():$/;"	f
target_means	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    target_means=[0.0, 0.0, 0.0, 0.0],$/;"	v
target_means	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                target_means=[0.0, 0.0, 0.0, 0.0],$/;"	v
target_stds	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    target_stds=[0.1, 0.1, 0.2, 0.2],$/;"	v
target_stds	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                target_stds=[1.0, 1.0, 1.0, 1.0],$/;"	v
tearDown	tests/test_export_onnx.py	/^    def tearDown(self):$/;"	m	class:TestONNXTracingExport
temp_image	projects/DensePose/tests/test_image_list_dataset.py	/^def temp_image(height, width):$/;"	f
temp_video	projects/DensePose/tests/test_video_keyframe_dataset.py	/^def temp_video(num_frames, height, width, fps, lossless=False, video_codec=None, options=None):$/;"	f
templates_path	docs/conf.py	/^templates_path = ["_templates"]$/;"	v
tensor_mode	detectron2/export/c10.py	/^    tensor_mode = property(_get_tensor_mode, _set_tensor_mode)$/;"	v	class:Caffe2Compatible
test	detectron2/engine/defaults.py	/^    def test(cls, cfg, model, evaluators=None):$/;"	f
test	projects/DensePose/densepose/engine/trainer.py	/^    def test($/;"	m	class:Trainer
test	tests/data/test_coco.py	/^    def test(self):$/;"	m	class:TestRLEToJson
test	tests/test_packaging.py	/^    def test(self):$/;"	m	class:TestCollectEnv
test180	tests/data/test_rotation_transform.py	/^    def test180(self):$/;"	m	class:TestRotationTransform
test45_coords	tests/data/test_rotation_transform.py	/^    def test45_coords(self):$/;"	m	class:TestRotationTransform
test90	tests/data/test_rotation_transform.py	/^    def test90(self):$/;"	m	class:TestRotationTransform
test90_expand	tests/data/test_rotation_transform.py	/^    def test90_expand(self):  # non-square image$/;"	m	class:TestRotationTransform
testBadClass	tests/config/test_yacs_config.py	/^    def testBadClass(self):$/;"	m	class:TestConfigurable
testCascadeRCNN	tests/test_export_onnx.py	/^    def testCascadeRCNN(self):$/;"	m	class:TestONNXTracingExport
testCascadeRCNN	tests/test_export_torchscript.py	/^    def testCascadeRCNN(self):$/;"	m	class:TestTracing
testEventStorage	tests/test_events.py	/^    def testEventStorage(self):$/;"	m	class:TestEventWriter
testExpandParamsGroups	tests/test_solver.py	/^    def testExpandParamsGroups(self):$/;"	m	class:TestOptimizer
testFuncWithCfg	tests/config/test_yacs_config.py	/^    def testFuncWithCfg(self):$/;"	m	class:TestConfigurable
testInitWithArgs	tests/config/test_yacs_config.py	/^    def testInitWithArgs(self):$/;"	m	class:TestConfigurable
testInitWithCfg	tests/config/test_yacs_config.py	/^    def testInitWithCfg(self):$/;"	m	class:TestConfigurable
testInitWithCfgOverwrite	tests/config/test_yacs_config.py	/^    def testInitWithCfgOverwrite(self):$/;"	m	class:TestConfigurable
testInitWithCfgWrongArgs	tests/config/test_yacs_config.py	/^    def testInitWithCfgWrongArgs(self):$/;"	m	class:TestConfigurable
testKeypointHead	tests/test_export_onnx.py	/^    def testKeypointHead(self):$/;"	m	class:TestONNXTracingExport
testKeypointHead	tests/test_export_torchscript.py	/^    def testKeypointHead(self):$/;"	m	class:TestTracing
testMaskRCNN	tests/test_export_caffe2.py	/^    def testMaskRCNN(self):$/;"	m	class:TestCaffe2Export
testMaskRCNNC4	tests/test_export_onnx.py	/^    def testMaskRCNNC4(self):$/;"	m	class:TestONNXTracingExport
testMaskRCNNC4	tests/test_export_torchscript.py	/^    def testMaskRCNNC4(self):$/;"	m	class:TestScripting
testMaskRCNNC4	tests/test_export_torchscript.py	/^    def testMaskRCNNC4(self):$/;"	m	class:TestTracing
testMaskRCNNFPN	tests/test_export_onnx.py	/^    def testMaskRCNNFPN(self):$/;"	m	class:TestONNXTracingExport
testMaskRCNNFPN	tests/test_export_torchscript.py	/^    def testMaskRCNNFPN(self):$/;"	m	class:TestScripting
testMaskRCNNFPN	tests/test_export_torchscript.py	/^    def testMaskRCNNFPN(self):$/;"	m	class:TestTracing
testMaskRCNNFPN_batched	tests/test_export_onnx.py	/^    def testMaskRCNNFPN_batched(self):$/;"	m	class:TestONNXTracingExport
testMaskRCNNFPN_batched	tests/test_export_torchscript.py	/^    def testMaskRCNNFPN_batched(self):$/;"	m	class:TestTracing
testMaskRCNNFPN_with_postproc	tests/test_export_onnx.py	/^    def testMaskRCNNFPN_with_postproc(self):$/;"	m	class:TestONNXTracingExport
testMaskRCNNFPN_with_postproc	tests/test_export_torchscript.py	/^    def testMaskRCNNFPN_with_postproc(self):$/;"	m	class:TestTracing
testMaskRCNNGPU	tests/test_export_caffe2.py	/^    def testMaskRCNNGPU(self):$/;"	m	class:TestCaffe2Export
testOmegaConf	tests/config/test_yacs_config.py	/^    def testOmegaConf(self):$/;"	m	class:TestConfigurable
testPatchedAttr	tests/config/test_yacs_config.py	/^    def testPatchedAttr(self):$/;"	m	class:TestConfigurable
testPrintETA	tests/test_events.py	/^    def testPrintETA(self):$/;"	m	class:TestEventWriter
testPrintNonLosses	tests/test_events.py	/^    def testPrintNonLosses(self):$/;"	m	class:TestEventWriter
testReduceParamGroups	tests/test_solver.py	/^    def testReduceParamGroups(self):$/;"	m	class:TestOptimizer
testRetinaNet	tests/test_export_caffe2.py	/^    def testRetinaNet(self):$/;"	m	class:TestCaffe2Export
testRetinaNet	tests/test_export_onnx.py	/^    def testRetinaNet(self):$/;"	m	class:TestONNXTracingExport
testRetinaNet	tests/test_export_torchscript.py	/^    def testRetinaNet(self):$/;"	m	class:TestScripting
testRetinaNet	tests/test_export_torchscript.py	/^    def testRetinaNet(self):$/;"	m	class:TestTracing
testScalar	tests/test_events.py	/^    def testScalar(self):$/;"	m	class:TestEventWriter
testScalarMismatchedPeriod	tests/test_events.py	/^    def testScalarMismatchedPeriod(self):$/;"	m	class:TestEventWriter
testSmoothingWithWindowSize	tests/test_events.py	/^    def testSmoothingWithWindowSize(self):$/;"	m	class:TestEventWriter
test_BWmode_nomask	tests/test_visualizer.py	/^    def test_BWmode_nomask(self):$/;"	m	class:TestVisualizer
test_PointRend_mask_head_tracing	tests/modeling/test_roi_heads.py	/^    def test_PointRend_mask_head_tracing(self):$/;"	m	class:ROIHeadsTest
test_StandardROIHeads_scriptability	tests/modeling/test_roi_heads.py	/^    def test_StandardROIHeads_scriptability(self):$/;"	m	class:ROIHeadsTest
test_albumentations_transform	tests/data/test_transforms.py	/^    def test_albumentations_transform(self):$/;"	m	class:TestTransforms
test_allow_non_tensor	tests/test_export_torchscript.py	/^    def test_allow_non_tensor(self):$/;"	m	class:TestTorchscriptUtils
test_alternative_serialize_method	tests/data/test_dataset.py	/^    def test_alternative_serialize_method(self):$/;"	m	class:TestDatasetFromList
test_and_save_results	detectron2/engine/defaults.py	/^        def test_and_save_results():$/;"	f	function:DefaultTrainer.build_hooks
test_append_gt_to_proposal	tests/modeling/test_rpn.py	/^    def test_append_gt_to_proposal(self):$/;"	m	class:RPNTest
test_apply_deltas_tracing	tests/modeling/test_box2box_transform.py	/^    def test_apply_deltas_tracing(self):$/;"	m	class:TestBox2BoxTransform
test_apply_rotated_boxes	tests/data/test_transforms.py	/^    def test_apply_rotated_boxes(self):$/;"	m	class:TestTransforms
test_apply_rotated_boxes_unequal_scaling_factor	tests/data/test_transforms.py	/^    def test_apply_rotated_boxes_unequal_scaling_factor(self):$/;"	m	class:TestTransforms
test_aspp	tests/layers/test_blocks.py	/^    def test_aspp(self):$/;"	m	class:TestBlocks
test_assign_cost_matrix_values	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^    def test_assign_cost_matrix_values(self):$/;"	m	class:TestIOUWeightedHungarianBBoxIOUTracker
test_assign_cost_matrix_values	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^    def test_assign_cost_matrix_values(self):$/;"	m	class:TestVanillaHungarianBBoxIOUTracker
test_assign_new_id	tests/tracking/test_bbox_iou_tracker.py	/^    def test_assign_new_id(self):$/;"	m	class:TestBBoxIOUTracker
test_async_write_metrics	tests/test_engine.py	/^    def test_async_write_metrics(self):$/;"	m	class:TestTrainer
test_augmentation_input_args	tests/data/test_transforms.py	/^    def test_augmentation_input_args(self):$/;"	m	class:TestTransforms
test_augmentation_list	tests/data/test_transforms.py	/^    def test_augmentation_list(self):$/;"	m	class:TestTransforms
test_auto_upgrade	tests/config/test_yacs_config.py	/^    def test_auto_upgrade(self):$/;"	m	class:TestConfigVersioning
test_autocast	tests/modeling/test_model_e2e.py	/^    def test_autocast(self):$/;"	m	class:MaskRCNNE2ETest
test_autocast	tests/modeling/test_model_e2e.py	/^    def test_autocast(self):$/;"	m	class:RetinaNetE2ETest
test_backbone	tests/modeling/test_mmdet.py	/^    def test_backbone(self):$/;"	m	class:TestMMDetWrapper
test_bad_import	tests/config/test_lazy_config.py	/^    def test_bad_import(self):$/;"	m	class:TestLazyPythonConfig
test_bad_import2	tests/config/test_lazy_config.py	/^    def test_bad_import2(self):$/;"	m	class:TestLazyPythonConfig
test_bad_lazycall	tests/config/test_instantiate_config.py	/^    def test_bad_lazycall(self):$/;"	m	class:TestConstruction
test_basic	tests/test_registry.py	/^    def test_basic(self):$/;"	m	class:TestLocate
test_basic_construct	tests/config/test_instantiate_config.py	/^    def test_basic_construct(self):$/;"	m	class:TestConstruction
test_batched_nms_rotated_0_degree_cpu	tests/layers/test_nms_rotated.py	/^    def test_batched_nms_rotated_0_degree_cpu(self, device="cpu"):$/;"	m	class:TestNMSRotated
test_batched_nms_rotated_0_degree_cuda	tests/layers/test_nms_rotated.py	/^    def test_batched_nms_rotated_0_degree_cuda(self):$/;"	m	class:TestNMSRotated
test_best_checkpointer	tests/test_engine.py	/^    def test_best_checkpointer(self):$/;"	m	class:TestTrainer
test_border_mask_with_holes	tests/test_visualizer.py	/^    def test_border_mask_with_holes(self):$/;"	m	class:TestVisualizer
test_border_polygons	tests/test_visualizer.py	/^    def test_border_polygons(self):$/;"	m	class:TestVisualizer
test_box_convert_array	tests/structures/test_boxes.py	/^    def test_box_convert_array(self):$/;"	m	class:TestBoxMode
test_box_convert_cpu_tensor	tests/structures/test_boxes.py	/^    def test_box_convert_cpu_tensor(self):$/;"	m	class:TestBoxMode
test_box_convert_cuda_tensor	tests/structures/test_boxes.py	/^    def test_box_convert_cuda_tensor(self):$/;"	m	class:TestBoxMode
test_box_convert_list	tests/structures/test_boxes.py	/^    def test_box_convert_list(self):$/;"	m	class:TestBoxMode
test_box_convert_xywh_to_xywha_array	tests/structures/test_boxes.py	/^    def test_box_convert_xywh_to_xywha_array(self):$/;"	m	class:TestBoxMode
test_box_convert_xywh_to_xywha_list	tests/structures/test_boxes.py	/^    def test_box_convert_xywh_to_xywha_list(self):$/;"	m	class:TestBoxMode
test_box_convert_xywh_to_xywha_tensor	tests/structures/test_boxes.py	/^    def test_box_convert_xywh_to_xywha_tensor(self):$/;"	m	class:TestBoxMode
test_box_convert_xywha_to_xyxy_array	tests/structures/test_boxes.py	/^    def test_box_convert_xywha_to_xyxy_array(self):$/;"	m	class:TestBoxMode
test_box_convert_xywha_to_xyxy_list	tests/structures/test_boxes.py	/^    def test_box_convert_xywha_to_xyxy_list(self):$/;"	m	class:TestBoxMode
test_box_convert_xywha_to_xyxy_tensor	tests/structures/test_boxes.py	/^    def test_box_convert_xywha_to_xyxy_tensor(self):$/;"	m	class:TestBoxMode
test_box_head_scriptability	tests/modeling/test_roi_heads.py	/^    def test_box_head_scriptability(self):$/;"	m	class:ROIHeadsTest
test_build_batch_dataloader_inference	tests/data/test_dataset.py	/^    def test_build_batch_dataloader_inference(self):$/;"	m	class:TestDataLoader
test_build_batch_dataloader_inference_incomplete_batch	tests/data/test_dataset.py	/^    def test_build_batch_dataloader_inference_incomplete_batch(self):$/;"	m	class:TestDataLoader
test_build_dataloader_inference	tests/data/test_dataset.py	/^    def test_build_dataloader_inference(self):$/;"	m	class:TestDataLoader
test_build_dataloader_train	tests/data/test_dataset.py	/^    def test_build_dataloader_train(self):$/;"	m	class:TestDataLoader
test_build_iterable_dataloader_from_cfg	tests/data/test_dataset.py	/^    def test_build_iterable_dataloader_from_cfg(self):$/;"	m	class:TestDataLoader
test_build_iterable_dataloader_inference	tests/data/test_dataset.py	/^    def test_build_iterable_dataloader_inference(self):$/;"	m	class:TestDataLoader
test_build_iterable_dataloader_train	tests/data/test_dataset.py	/^    def test_build_iterable_dataloader_train(self):$/;"	m	class:TestDataLoader
test_builtin	tests/test_registry.py	/^    def test_builtin(self):$/;"	m	class:TestLocate
test_cat_keypoints	tests/structures/test_keypoints.py	/^    def test_cat_keypoints(self):$/;"	m	class:TestKeypoints
test_center_expand	tests/data/test_rotation_transform.py	/^    def test_center_expand(self):$/;"	m	class:TestRotationTransform
test_cfg	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^        test_cfg=dict($/;"	v
test_change_default_serialize_method	tests/data/test_dataset.py	/^    def test_change_default_serialize_method(self):$/;"	m	class:TestDatasetFromList
test_chart_based_annotations_accumulator_gt_densepose	projects/DensePose/tests/test_chart_based_annotations_accumulator.py	/^    def test_chart_based_annotations_accumulator_gt_densepose(self):$/;"	m	class:TestChartBasedAnnotationsAccumulator
test_chart_based_annotations_accumulator_gt_densepose_none	projects/DensePose/tests/test_chart_based_annotations_accumulator.py	/^    def test_chart_based_annotations_accumulator_gt_densepose_none(self):$/;"	m	class:TestChartBasedAnnotationsAccumulator
test_chart_based_annotations_accumulator_no_gt_densepose	projects/DensePose/tests/test_chart_based_annotations_accumulator.py	/^    def test_chart_based_annotations_accumulator_no_gt_densepose(self):$/;"	m	class:TestChartBasedAnnotationsAccumulator
test_checkpoint_resume	tests/test_engine.py	/^    def test_checkpoint_resume(self):$/;"	m	class:TestTrainer
test_ciou_loss	tests/layers/test_losses.py	/^    def test_ciou_loss(self):$/;"	m	class:TestLosses
test_clip_area_0_degree	tests/structures/test_rotated_boxes.py	/^    def test_clip_area_0_degree(self):$/;"	m	class:TestRotatedBoxesStructure
test_clip_area_arbitrary_angle	tests/structures/test_rotated_boxes.py	/^    def test_clip_area_arbitrary_angle(self):$/;"	m	class:TestRotatedBoxesStructure
test_color_transforms	tests/data/test_transforms.py	/^    def test_color_transforms(self):$/;"	m	class:TestTransforms
test_combine_loaders_1	projects/DensePose/tests/test_combine_data_loader.py	/^    def test_combine_loaders_1(self):$/;"	m	class:TestCombinedDataLoader
test_complex_model_loaded	tests/test_checkpoint.py	/^    def test_complex_model_loaded(self):$/;"	m	class:TestCheckpointer
test_compress_target	tests/test_registry.py	/^    def test_compress_target(self):$/;"	m	class:TestLocate
test_convert_int_mode	tests/structures/test_boxes.py	/^    def test_convert_int_mode(self):$/;"	m	class:TestBoxMode
test_convert_to_coco	tests/data/test_coco.py	/^    def test_convert_to_coco(self):$/;"	m	class:TestConvertCOCO
test_correct_output_shape	tests/test_visualizer.py	/^    def test_correct_output_shape(self):$/;"	m	class:TestVisualizer
test_crop	tests/data/test_detection_utils.py	/^    def test_crop(self):$/;"	m	class:TestTransformAnnotations
test_crop_paste_consistency	tests/layers/test_mask_ops.py	/^    def test_crop_paste_consistency(self):$/;"	m	class:TestMaskCropPaste
test_cse_annotations_accumulator_combined	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^    def test_cse_annotations_accumulator_combined(self):$/;"	m	class:TestCseAnnotationsAccumulator
test_cse_annotations_accumulator_fulldp	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^    def test_cse_annotations_accumulator_fulldp(self):$/;"	m	class:TestCseAnnotationsAccumulator
test_cse_annotations_accumulator_nodp	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^    def test_cse_annotations_accumulator_nodp(self):$/;"	m	class:TestCseAnnotationsAccumulator
test_cse_annotations_accumulator_sparsedp	projects/DensePose/tests/test_cse_annotations_accumulator.py	/^    def test_cse_annotations_accumulator_sparsedp(self):$/;"	m	class:TestCseAnnotationsAccumulator
test_custom_path_manager_handler	tests/test_checkpoint.py	/^    def test_custom_path_manager_handler(self):$/;"	m	class:TestCheckpointer
test_default_anchor_generator	tests/modeling/test_anchor_generator.py	/^    def test_default_anchor_generator(self):$/;"	m	class:TestAnchorGenerator
test_default_anchor_generator_centered	tests/modeling/test_anchor_generator.py	/^    def test_default_anchor_generator_centered(self):$/;"	m	class:TestAnchorGenerator
test_default_trainer	tests/test_engine.py	/^    def test_default_trainer(self):$/;"	m	class:TestTrainer
test_detector	tests/modeling/test_mmdet.py	/^    def test_detector(self):$/;"	m	class:TestMMDetWrapper
test_diou_loss	tests/layers/test_losses.py	/^    def test_diou_loss(self):$/;"	m	class:TestLosses
test_draw_binary_mask	tests/test_visualizer.py	/^    def test_draw_binary_mask(self):$/;"	m	class:TestVisualizer
test_draw_dataset_dict	tests/test_visualizer.py	/^    def test_draw_dataset_dict(self):$/;"	m	class:TestVisualizer
test_draw_empty_mask_predictions	tests/test_visualizer.py	/^    def test_draw_empty_mask_predictions(self):$/;"	m	class:TestVisualizer
test_draw_instance_predictions	tests/test_visualizer.py	/^    def test_draw_instance_predictions(self):$/;"	m	class:TestVisualizer
test_draw_no_metadata	tests/test_visualizer.py	/^    def test_draw_no_metadata(self):$/;"	m	class:TestVisualizer
test_draw_rotated_dataset_dict	tests/test_visualizer.py	/^    def test_draw_rotated_dataset_dict(self):$/;"	m	class:TestVisualizer
test_draw_soft_mask	tests/test_visualizer.py	/^    def test_draw_soft_mask(self):$/;"	m	class:TestVisualizer
test_dump_IR_function	tests/test_export_torchscript.py	/^    def test_dump_IR_function(self):$/;"	m	class:TestTorchscriptUtils
test_dump_IR_tracing	tests/test_export_torchscript.py	/^    def test_dump_IR_tracing(self):$/;"	m	class:TestTorchscriptUtils
test_empty_batch	tests/layers/test_roi_align.py	/^    def test_empty_batch(self):$/;"	m	class:ROIAlignTest
test_empty_box	tests/layers/test_roi_align.py	/^    def test_empty_box(self):$/;"	m	class:ROIAlignTest
test_empty_box	tests/layers/test_roi_align_rotated.py	/^    def test_empty_box(self):$/;"	m	class:ROIAlignRotatedTest
test_empty_cat	tests/structures/test_boxes.py	/^    def test_empty_cat(self):$/;"	m	class:TestBoxes
test_empty_cat	tests/structures/test_rotated_boxes.py	/^    def test_empty_cat(self):$/;"	m	class:TestRotatedBoxesStructure
test_empty_data	projects/DensePose/tests/test_model_e2e.py	/^    def test_empty_data(self):$/;"	m	class:DensePoseRCNNE2ETest
test_empty_data	tests/modeling/test_model_e2e.py	/^    def test_empty_data(self):$/;"	m	class:InstanceModelE2ETest
test_eval_hook	tests/test_engine.py	/^    def test_eval_hook(self):$/;"	m	class:TestTrainer
test_eval_tocpu	tests/modeling/test_model_e2e.py	/^    def test_eval_tocpu(self):$/;"	m	class:InstanceModelE2ETest
test_extent_transform	tests/data/test_transforms.py	/^    def test_extent_transform(self):$/;"	m	class:TestTransforms
test_failed_save	tests/config/test_lazy_config.py	/^    def test_failed_save(self):$/;"	m	class:TestLazyPythonConfig
test_failure	tests/test_registry.py	/^    def test_failure(self):$/;"	m	class:TestLocate
test_fast_eval	tests/data/test_coco_evaluation.py	/^    def test_fast_eval(self):$/;"	m	class:TestCOCOeval
test_fast_rcnn	tests/modeling/test_fast_rcnn.py	/^    def test_fast_rcnn(self):$/;"	m	class:FastRCNNTest
test_fast_rcnn_empty_batch	tests/modeling/test_fast_rcnn.py	/^    def test_fast_rcnn_empty_batch(self, device="cpu"):$/;"	m	class:FastRCNNTest
test_fast_rcnn_empty_batch_cuda	tests/modeling/test_fast_rcnn.py	/^    def test_fast_rcnn_empty_batch_cuda(self):$/;"	m	class:FastRCNNTest
test_fast_rcnn_rotated	tests/modeling/test_fast_rcnn.py	/^    def test_fast_rcnn_rotated(self):$/;"	m	class:FastRCNNTest
test_find_rpn_proposals_inf	tests/modeling/test_rpn.py	/^    def test_find_rpn_proposals_inf(self):$/;"	m	class:RPNTest
test_find_rpn_proposals_tracing	tests/modeling/test_rpn.py	/^    def test_find_rpn_proposals_tracing(self):$/;"	m	class:RPNTest
test_flatten_basic	tests/test_export_torchscript.py	/^    def test_flatten_basic(self):$/;"	m	class:TestTorchscriptUtils
test_flatten_instances_boxes	tests/test_export_torchscript.py	/^    def test_flatten_instances_boxes(self):$/;"	m	class:TestTorchscriptUtils
test_flip_keypoints	tests/data/test_detection_utils.py	/^    def test_flip_keypoints(self):$/;"	m	class:TestTransformAnnotations
test_flop	tests/test_model_analysis.py	/^    def test_flop(self):$/;"	m	class:FasterRCNNTest
test_flop	tests/test_model_analysis.py	/^    def test_flop(self):$/;"	m	class:MaskRCNNTest
test_flop	tests/test_model_analysis.py	/^    def test_flop(self):$/;"	m	class:RetinaNetTest
test_flop_with_output_shape	tests/test_model_analysis.py	/^    def test_flop_with_output_shape(self):$/;"	m	class:FasterRCNNTest
test_forward	tests/modeling/test_model_e2e.py	/^    def test_forward(self):$/;"	m	class:SemSegE2ETest
test_forward_output	tests/layers/test_deformable.py	/^    def test_forward_output(self):$/;"	m	class:DeformableTest
test_forward_output	tests/layers/test_roi_align.py	/^    def test_forward_output(self):$/;"	m	class:ROIAlignTest
test_forward_output_0_90_180_270	tests/layers/test_roi_align_rotated.py	/^    def test_forward_output_0_90_180_270(self):$/;"	m	class:ROIAlignRotatedTest
test_forward_output_on_cpu	tests/layers/test_deformable.py	/^    def test_forward_output_on_cpu(self):$/;"	m	class:DeformableTest
test_forward_output_on_cpu_equals_output_on_gpu	tests/layers/test_deformable.py	/^    def test_forward_output_on_cpu_equals_output_on_gpu(self):$/;"	m	class:DeformableTest
test_fpn_scriptability	tests/modeling/test_backbone.py	/^    def test_fpn_scriptability(self):$/;"	m	class:TestBackBone
test_frame_selector_first_k_1	projects/DensePose/tests/test_frame_selector.py	/^    def test_frame_selector_first_k_1(self):$/;"	m	class:TestFrameSelector
test_frame_selector_first_k_2	projects/DensePose/tests/test_frame_selector.py	/^    def test_frame_selector_first_k_2(self):$/;"	m	class:TestFrameSelector
test_frame_selector_last_k_1	projects/DensePose/tests/test_frame_selector.py	/^    def test_frame_selector_last_k_1(self):$/;"	m	class:TestFrameSelector
test_frame_selector_last_k_2	projects/DensePose/tests/test_frame_selector.py	/^    def test_frame_selector_last_k_2(self):$/;"	m	class:TestFrameSelector
test_frame_selector_random_k_1	projects/DensePose/tests/test_frame_selector.py	/^    def test_frame_selector_random_k_1(self):$/;"	m	class:TestFrameSelector
test_frame_selector_random_k_2	projects/DensePose/tests/test_frame_selector.py	/^    def test_frame_selector_random_k_2(self):$/;"	m	class:TestFrameSelector
test_from_config	tests/tracking/test_bbox_iou_tracker.py	/^    def test_from_config(self):$/;"	m	class:TestBBoxIOUTracker
test_from_config	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^    def test_from_config(self):$/;"	m	class:TestIOUWeightedHungarianBBoxIOUTracker
test_from_config	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^    def test_from_config(self):$/;"	m	class:TestVanillaHungarianBBoxIOUTracker
test_from_empty_polygons	tests/structures/test_masks.py	/^    def test_from_empty_polygons(self):$/;"	m	class:TestBitMask
test_from_to_instances	tests/structures/test_instances.py	/^    def test_from_to_instances(self):$/;"	m	class:TestInstances
test_frozen_batchnorm_fp16	tests/layers/test_blocks.py	/^    def test_frozen_batchnorm_fp16(self):$/;"	m	class:TestBlocks
test_gen_crop	tests/data/test_detection_utils.py	/^    def test_gen_crop(self):$/;"	m	class:TestTransformAnnotations
test_gen_crop_outside_boxes	tests/data/test_detection_utils.py	/^    def test_gen_crop_outside_boxes(self):$/;"	m	class:TestTransformAnnotations
test_get_bounding_box	tests/structures/test_masks.py	/^    def test_get_bounding_box(self):$/;"	m	class:TestBitMask
test_get_invalid_model	tests/test_model_zoo.py	/^    def test_get_invalid_model(self):$/;"	m	class:TestModelZoo
test_get_returns_model	tests/test_model_zoo.py	/^    def test_get_returns_model(self):$/;"	m	class:TestModelZoo
test_get_url	tests/test_model_zoo.py	/^    def test_get_url(self):$/;"	m	class:TestModelZoo
test_getitem	tests/structures/test_masks.py	/^    def test_getitem(self):$/;"	m	class:TestBitMask
test_grid_sample_equivalence	tests/layers/test_roi_align.py	/^    def test_grid_sample_equivalence(self):$/;"	m	class:ROIAlignTest
test_groups	tests/data/test_sampler.py	/^    def test_groups(self):$/;"	m	class:TestGroupedBatchSampler
test_guess_v1	tests/config/test_yacs_config.py	/^    def test_guess_v1(self):$/;"	m	class:TestConfigVersioning
test_half_empty_data	tests/modeling/test_model_e2e.py	/^    def test_half_empty_data(self):$/;"	m	class:MaskRCNNE2ETest
test_image_list_dataset	projects/DensePose/tests/test_image_list_dataset.py	/^    def test_image_list_dataset(self):$/;"	m	class:TestImageListDataset
test_image_list_dataset_with_transform	projects/DensePose/tests/test_image_list_dataset.py	/^    def test_image_list_dataset_with_transform(self):$/;"	m	class:TestImageListDataset
test_image_resize_1	projects/DensePose/tests/test_image_resize_transform.py	/^    def test_image_resize_1(self):$/;"	m	class:TestImageResizeTransform
test_imagelist_from_tensors_scriptability	tests/structures/test_imagelist.py	/^    def test_imagelist_from_tensors_scriptability(self):$/;"	m	class:TestImageList
test_imagelist_padding_tracing	tests/structures/test_imagelist.py	/^    def test_imagelist_padding_tracing(self):$/;"	m	class:TestImageList
test_imagelist_scriptability	tests/structures/test_imagelist.py	/^    def test_imagelist_scriptability(self):$/;"	m	class:TestImageList
test_import	tests/test_packaging.py	/^    def test_import(self):$/;"	m	class:TestProjects
test_inf_nan_data	tests/modeling/test_model_e2e.py	/^    def test_inf_nan_data(self):$/;"	m	class:RetinaNetE2ETest
test_init	tests/tracking/test_bbox_iou_tracker.py	/^    def test_init(self):$/;"	m	class:TestBBoxIOUTracker
test_init	tests/tracking/test_hungarian_tracker.py	/^    def test_init(self):$/;"	m	class:TestBaseHungarianTracker
test_init	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^    def test_init(self):$/;"	m	class:TestIOUWeightedHungarianBBoxIOUTracker
test_init	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^    def test_init(self):$/;"	m	class:TestVanillaHungarianBBoxIOUTracker
test_initialize_extra_fields	tests/tracking/test_bbox_iou_tracker.py	/^    def test_initialize_extra_fields(self):$/;"	m	class:TestBBoxIOUTracker
test_initialize_extra_fields	tests/tracking/test_hungarian_tracker.py	/^    def test_initialize_extra_fields(self):$/;"	m	class:TestBaseHungarianTracker
test_initialize_extra_fields	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^    def test_initialize_extra_fields(self):$/;"	m	class:TestIOUWeightedHungarianBBoxIOUTracker
test_initialize_extra_fields	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^    def test_initialize_extra_fields(self):$/;"	m	class:TestVanillaHungarianBBoxIOUTracker
test_inside_class	tests/test_registry.py	/^    def test_inside_class(self):$/;"	m	class:TestLocate
test_instantiate_dataclass	tests/config/test_instantiate_config.py	/^    def test_instantiate_dataclass(self):$/;"	m	class:TestConstruction
test_instantiate_dataclass_as_subconfig	tests/config/test_instantiate_config.py	/^    def test_instantiate_dataclass_as_subconfig(self):$/;"	m	class:TestConstruction
test_instantiate_lazy_target	tests/config/test_instantiate_config.py	/^    def test_instantiate_lazy_target(self):$/;"	m	class:TestConstruction
test_instantiate_list	tests/config/test_instantiate_config.py	/^    def test_instantiate_list(self):$/;"	m	class:TestConstruction
test_instantiate_other_obj	tests/config/test_instantiate_config.py	/^    def test_instantiate_other_obj(self):$/;"	m	class:TestConstruction
test_instantiation	tests/export/test_c10.py	/^    def test_instantiation(self):$/;"	m	class:TestCaffe2RPN
test_int_indexing	tests/structures/test_instances.py	/^    def test_int_indexing(self):$/;"	m	class:TestInstances
test_interpolation	tests/config/test_instantiate_config.py	/^    def test_interpolation(self):$/;"	m	class:TestConstruction
test_invalid_overrides	tests/config/test_lazy_config.py	/^    def test_invalid_overrides(self):$/;"	m	class:TestLazyPythonConfig
test_inverse_transform	tests/data/test_rotation_transform.py	/^    def test_inverse_transform(self):$/;"	m	class:TestRotationTransform
test_iou_0_dim_cpu	tests/structures/test_rotated_boxes.py	/^    def test_iou_0_dim_cpu(self):$/;"	m	class:TestRotatedBoxesLayer
test_iou_0_dim_cuda	tests/structures/test_rotated_boxes.py	/^    def test_iou_0_dim_cuda(self):$/;"	m	class:TestRotatedBoxesLayer
test_iou_extreme	tests/structures/test_rotated_boxes.py	/^    def test_iou_extreme(self):$/;"	m	class:TestRotatedBoxesLayer
test_iou_half_overlap_cpu	tests/structures/test_rotated_boxes.py	/^    def test_iou_half_overlap_cpu(self):$/;"	m	class:TestRotatedBoxesLayer
test_iou_half_overlap_cuda	tests/structures/test_rotated_boxes.py	/^    def test_iou_half_overlap_cuda(self):$/;"	m	class:TestRotatedBoxesLayer
test_iou_issue_2154	tests/structures/test_rotated_boxes.py	/^    def test_iou_issue_2154(self):$/;"	m	class:TestRotatedBoxesLayer
test_iou_issue_2167	tests/structures/test_rotated_boxes.py	/^    def test_iou_issue_2167(self):$/;"	m	class:TestRotatedBoxesLayer
test_iou_precision	tests/structures/test_rotated_boxes.py	/^    def test_iou_precision(self):$/;"	m	class:TestRotatedBoxesLayer
test_iou_too_many_boxes_cuda	tests/structures/test_rotated_boxes.py	/^    def test_iou_too_many_boxes_cuda(self):$/;"	m	class:TestRotatedBoxesLayer
test_iter_style	tests/data/test_dataset.py	/^    def test_iter_style(self):$/;"	m	class:TestMapDataset
test_json_deserializable	tests/structures/test_boxes.py	/^    def test_json_deserializable(self):$/;"	m	class:TestBoxMode
test_json_serializable	tests/structures/test_boxes.py	/^    def test_json_serializable(self):$/;"	m	class:TestBoxMode
test_keypoint_head_scriptability	tests/modeling/test_roi_heads.py	/^    def test_keypoint_head_scriptability(self):$/;"	m	class:ROIHeadsTest
test_lcp	tests/test_checkpoint.py	/^    def test_lcp(self):$/;"	m	class:TestCheckpointer
test_load	tests/config/test_lazy_config.py	/^    def test_load(self):$/;"	m	class:TestLazyPythonConfig
test_load_rel	tests/config/test_lazy_config.py	/^    def test_load_rel(self):$/;"	m	class:TestLazyPythonConfig
test_load_with_matching_heuristics	tests/test_checkpoint.py	/^    def test_load_with_matching_heuristics(self):$/;"	m	class:TestCheckpointer
test_local_indices	tests/data/test_sampler.py	/^    def test_local_indices(self):$/;"	m	class:TestInferenceSampler
test_map_style	tests/data/test_dataset.py	/^    def test_map_style(self):$/;"	m	class:TestMapDataset
test_mask_head_scriptability	tests/modeling/test_roi_heads.py	/^    def test_mask_head_scriptability(self):$/;"	m	class:ROIHeadsTest
test_mask_rcnn_c4	tests/test_model_zoo.py	/^    def test_mask_rcnn_c4(self):$/;"	m	class:TestModelZoo
test_mask_rcnn_fpn	tests/test_model_zoo.py	/^    def test_mask_rcnn_fpn(self):$/;"	m	class:TestModelZoo
test_metric_gather_and_write	tests/test_engine.py	/^    def test_metric_gather_and_write(self):$/;"	m	class:TestTrainer
test_missing_group_id	tests/data/test_sampler.py	/^    def test_missing_group_id(self):$/;"	m	class:TestGroupedBatchSampler
test_nccl_ops	detectron2/utils/collect_env.py	/^def test_nccl_ops():$/;"	f
test_nms_rotated_0_degree_cpu	tests/layers/test_nms_rotated.py	/^    def test_nms_rotated_0_degree_cpu(self, device="cpu"):$/;"	m	class:TestNMSRotated
test_nms_rotated_0_degree_cuda	tests/layers/test_nms_rotated.py	/^    def test_nms_rotated_0_degree_cuda(self):$/;"	m	class:TestNMSRotated
test_nms_rotated_180_degrees_cpu	tests/layers/test_nms_rotated.py	/^    def test_nms_rotated_180_degrees_cpu(self):$/;"	m	class:TestNMSRotated
test_nms_rotated_90_degrees_cpu	tests/layers/test_nms_rotated.py	/^    def test_nms_rotated_90_degrees_cpu(self):$/;"	m	class:TestNMSRotated
test_nms_scriptability	tests/layers/test_nms.py	/^    def test_nms_scriptability(self):$/;"	m	class:TestNMS
test_no_files_created	tests/utils/test_tensorboardx.py	/^    def test_no_files_created(self) -> None:$/;"	m	class:TestTensorboardXWriter
test_no_images	tests/modeling/test_roi_pooler.py	/^    def test_no_images(self):$/;"	m	class:TestROIPooler
test_normalize_angles	tests/structures/test_rotated_boxes.py	/^    def test_normalize_angles(self):$/;"	m	class:TestRotatedBoxesStructure
test_normalized_coords_transform	projects/DensePose/tests/test_structures.py	/^    def test_normalized_coords_transform(self):$/;"	m	class:TestStructures
test_opencv_exif_orientation	tests/data/test_detection_utils.py	/^    def test_opencv_exif_orientation(self):$/;"	m	class:TestTransformAnnotations
test_opencv_video_format	demo/demo.py	/^def test_opencv_video_format(codec, file_ext):$/;"	f
test_overlay_instances	tests/test_visualizer.py	/^    def test_overlay_instances(self):$/;"	m	class:TestVisualizer
test_overlay_instances_no_boxes	tests/test_visualizer.py	/^    def test_overlay_instances_no_boxes(self):$/;"	m	class:TestVisualizer
test_overlay_rotated_instances	tests/test_visualizer.py	/^    def test_overlay_rotated_instances(self):$/;"	m	class:TestVisualizer
test_overrides	tests/config/test_lazy_config.py	/^    def test_overrides(self):$/;"	m	class:TestLazyPythonConfig
test_pairwise_ioa	tests/structures/test_boxes.py	/^    def test_pairwise_ioa(self):$/;"	m	class:TestBoxIOU
test_pairwise_iou	tests/structures/test_boxes.py	/^    def test_pairwise_iou(self):$/;"	m	class:TestBoxIOU
test_pairwise_iou_0_degree	tests/structures/test_rotated_boxes.py	/^    def test_pairwise_iou_0_degree(self):$/;"	m	class:TestRotatedBoxesStructure
test_pairwise_iou_45_degrees	tests/structures/test_rotated_boxes.py	/^    def test_pairwise_iou_45_degrees(self):$/;"	m	class:TestRotatedBoxesStructure
test_pairwise_iou_issue1207	tests/structures/test_rotated_boxes.py	/^    def test_pairwise_iou_issue1207(self):$/;"	m	class:TestRotatedBoxesStructure
test_pairwise_iou_issue1207_simplified	tests/structures/test_rotated_boxes.py	/^    def test_pairwise_iou_issue1207_simplified(self):$/;"	m	class:TestRotatedBoxesStructure
test_pairwise_iou_large_close_boxes	tests/structures/test_rotated_boxes.py	/^    def test_pairwise_iou_large_close_boxes(self):$/;"	m	class:TestRotatedBoxesStructure
test_pairwise_iou_many_boxes	tests/structures/test_rotated_boxes.py	/^    def test_pairwise_iou_many_boxes(self):$/;"	m	class:TestRotatedBoxesStructure
test_pairwise_iou_orthogonal	tests/structures/test_rotated_boxes.py	/^    def test_pairwise_iou_orthogonal(self):$/;"	m	class:TestRotatedBoxesStructure
test_panoptic_fpn	tests/test_model_zoo.py	/^    def test_panoptic_fpn(self):$/;"	m	class:TestModelZoo
test_param_count	tests/test_model_analysis.py	/^    def test_param_count(self):$/;"	m	class:FasterRCNNTest
test_param_count	tests/test_model_analysis.py	/^    def test_param_count(self):$/;"	m	class:RetinaNetTest
test_paste_mask_scriptable	tests/layers/test_mask_ops.py	/^    def test_paste_mask_scriptable(self):$/;"	m	class:TestMaskCropPaste
test_pickleability	tests/data/test_dataset.py	/^    def test_pickleability(self):$/;"	m	class:TestMapDataset
test_polygon_area	tests/layers/test_mask_ops.py	/^    def test_polygon_area(self):$/;"	m	class:TestMaskCropPaste
test_predict_boxes_tracing	tests/modeling/test_fast_rcnn.py	/^    def test_predict_boxes_tracing(self):$/;"	m	class:FastRCNNTest
test_predict_probs_tracing	tests/modeling/test_fast_rcnn.py	/^    def test_predict_probs_tracing(self):$/;"	m	class:FastRCNNTest
test_print_augmentation	tests/data/test_transforms.py	/^    def test_print_augmentation(self):$/;"	m	class:TestTransforms
test_process_matched_idx	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^    def test_process_matched_idx(self):$/;"	m	class:TestIOUWeightedHungarianBBoxIOUTracker
test_process_matched_idx	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^    def test_process_matched_idx(self):$/;"	m	class:TestVanillaHungarianBBoxIOUTracker
test_process_unmatched_idx	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^    def test_process_unmatched_idx(self):$/;"	m	class:TestIOUWeightedHungarianBBoxIOUTracker
test_process_unmatched_idx	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^    def test_process_unmatched_idx(self):$/;"	m	class:TestVanillaHungarianBBoxIOUTracker
test_process_unmatched_prev_idx	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^    def test_process_unmatched_prev_idx(self):$/;"	m	class:TestIOUWeightedHungarianBBoxIOUTracker
test_process_unmatched_prev_idx	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^    def test_process_unmatched_prev_idx(self):$/;"	m	class:TestVanillaHungarianBBoxIOUTracker
test_pytorch_optim	tests/test_registry.py	/^    def test_pytorch_optim(self):$/;"	m	class:TestLocate
test_raise_exception	tests/layers/test_deformable.py	/^    def test_raise_exception(self):$/;"	m	class:DeformableTest
test_random_apply_prob_out_of_range_check	tests/data/test_transforms.py	/^    def test_random_apply_prob_out_of_range_check(self):$/;"	m	class:TestTransforms
test_random_apply_probability_not_occured_evaluation	tests/data/test_transforms.py	/^    def test_random_apply_probability_not_occured_evaluation(self):$/;"	m	class:TestTransforms
test_random_apply_wrapping_aug_probability_occured_evaluation	tests/data/test_transforms.py	/^    def test_random_apply_wrapping_aug_probability_occured_evaluation(self):$/;"	m	class:TestTransforms
test_random_apply_wrapping_std_transform_probability_occured_evaluation	tests/data/test_transforms.py	/^    def test_random_apply_wrapping_std_transform_probability_occured_evaluation(self):$/;"	m	class:TestTransforms
test_read_exif_orientation	tests/data/test_detection_utils.py	/^    def test_read_exif_orientation(self):$/;"	m	class:TestTransformAnnotations
test_read_keyframes_all	projects/DensePose/tests/test_video_keyframe_dataset.py	/^    def test_read_keyframes_all(self):$/;"	m	class:TestVideoKeyframeDataset
test_read_keyframes_with_selector	projects/DensePose/tests/test_video_keyframe_dataset.py	/^    def test_read_keyframes_with_selector(self):$/;"	m	class:TestVideoKeyframeDataset
test_read_keyframes_with_selector_with_transform	projects/DensePose/tests/test_video_keyframe_dataset.py	/^    def test_read_keyframes_with_selector_with_transform(self):$/;"	m	class:TestVideoKeyframeDataset
test_read_sem_seg	tests/data/test_detection_utils.py	/^    def test_read_sem_seg(self):$/;"	m	class:TestTransformAnnotations
test_read_write_1	projects/DensePose/tests/test_tensor_storage.py	/^    def test_read_write_1(self):$/;"	m	class:TestMultiProcessFileTensorStorage
test_read_write_1	projects/DensePose/tests/test_tensor_storage.py	/^    def test_read_write_1(self):$/;"	m	class:TestMultiProcessRamTensorStorage
test_read_write_1	projects/DensePose/tests/test_tensor_storage.py	/^    def test_read_write_1(self):$/;"	m	class:TestSingleProcessFileTensorStorage
test_read_write_1	projects/DensePose/tests/test_tensor_storage.py	/^    def test_read_write_1(self):$/;"	m	class:TestSingleProcessRamTensorStorage
test_reconstruction	tests/modeling/test_box2box_transform.py	/^    def test_reconstruction(self):$/;"	m	class:TestBox2BoxTransform
test_reconstruction	tests/modeling/test_box2box_transform.py	/^    def test_reconstruction(self):$/;"	m	class:TestBox2BoxTransformLinear
test_reconstruction	tests/modeling/test_box2box_transform.py	/^    def test_reconstruction(self):$/;"	m	class:TestBox2BoxTransformRotated
test_reiter_leak	tests/data/test_dataset.py	/^    def test_reiter_leak(self):$/;"	m	class:TestAspectRatioGrouping
test_repeat_factors_from_category_frequency	tests/data/test_sampler.py	/^    def test_repeat_factors_from_category_frequency(self):$/;"	m	class:TestRepeatFactorTrainingSampler
test_repr	tests/layers/test_deformable.py	/^    def test_repr(self):$/;"	m	class:DeformableTest
test_resize	tests/layers/test_roi_align.py	/^    def test_resize(self):$/;"	m	class:ROIAlignTest
test_resize	tests/layers/test_roi_align_rotated.py	/^    def test_resize(self):$/;"	m	class:ROIAlignRotatedTest
test_resize_and_crop	tests/data/test_transforms.py	/^    def test_resize_and_crop(self):$/;"	m	class:TestTransforms
test_resize_shorted_edge_scriptable	tests/data/test_transforms.py	/^    def test_resize_shorted_edge_scriptable(self):$/;"	m	class:TestTransforms
test_resize_transform	tests/data/test_transforms.py	/^    def test_resize_transform(self):$/;"	m	class:TestTransforms
test_resnet_scriptability	tests/modeling/test_backbone.py	/^    def test_resnet_scriptability(self):$/;"	m	class:TestBackBone
test_resnet_unused_stages	tests/layers/test_blocks.py	/^    def test_resnet_unused_stages(self):$/;"	m	class:TestBlocks
test_roi_align_rotated_gradcheck_cpu	tests/layers/test_roi_align_rotated.py	/^    def test_roi_align_rotated_gradcheck_cpu(self):$/;"	m	class:ROIAlignRotatedTest
test_roi_align_rotated_gradient_cuda	tests/layers/test_roi_align_rotated.py	/^    def test_roi_align_rotated_gradient_cuda(self):$/;"	m	class:ROIAlignRotatedTest
test_roi_heads	tests/modeling/test_roi_heads.py	/^    def test_roi_heads(self):$/;"	m	class:ROIHeadsTest
test_roi_pooler_tracing	tests/modeling/test_roi_pooler.py	/^    def test_roi_pooler_tracing(self):$/;"	m	class:TestROIPooler
test_roialignv2_roialignrotated_match_cpu	tests/modeling/test_roi_pooler.py	/^    def test_roialignv2_roialignrotated_match_cpu(self):$/;"	m	class:TestROIPooler
test_roialignv2_roialignrotated_match_cuda	tests/modeling/test_roi_pooler.py	/^    def test_roialignv2_roialignrotated_match_cuda(self):$/;"	m	class:TestROIPooler
test_roiheads_inf_nan_data	tests/modeling/test_model_e2e.py	/^    def test_roiheads_inf_nan_data(self):$/;"	m	class:MaskRCNNE2ETest
test_rpn	tests/modeling/test_rpn.py	/^    def test_rpn(self):$/;"	m	class:RPNTest
test_rpn_conv_dims_not_set	tests/modeling/test_rpn.py	/^    def test_rpn_conv_dims_not_set(self):$/;"	m	class:RPNTest
test_rpn_larger_num_convs	tests/modeling/test_rpn.py	/^    def test_rpn_larger_num_convs(self):$/;"	m	class:RPNTest
test_rpn_scriptability	tests/modeling/test_rpn.py	/^    def test_rpn_scriptability(self):$/;"	m	class:RPNTest
test_rroi_heads	tests/modeling/test_roi_heads.py	/^    def test_rroi_heads(self):$/;"	m	class:ROIHeadsTest
test_rrpn	tests/modeling/test_rpn.py	/^    def test_rrpn(self):$/;"	m	class:RPNTest
test_rrpn_anchor_generator	tests/modeling/test_anchor_generator.py	/^    def test_rrpn_anchor_generator(self):$/;"	m	class:TestAnchorGenerator
test_save_load	tests/config/test_lazy_config.py	/^    def test_save_load(self):$/;"	m	class:TestLazyPythonConfig
test_schedule	tests/test_model_zoo.py	/^    def test_schedule(self):$/;"	m	class:TestModelZoo
test_score_thresh	configs/common/models/cascade_rcnn.py	/^            test_score_thresh=0.05,$/;"	v
test_score_thresh	configs/common/models/mask_rcnn_c4.py	/^            test_score_thresh=0.05,$/;"	v
test_score_thresh	configs/common/models/mask_rcnn_fpn.py	/^            test_score_thresh=0.05,$/;"	v
test_score_thresh	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_t_3x.py	/^            test_score_thresh=0.05,$/;"	v
test_score_thresh	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^            test_score_thresh=0.05,$/;"	v
test_score_thresh	projects/ViTDet/configs/COCO/cascade_mask_rcnn_vitdet_b_100ep.py	/^            test_score_thresh=0.05,$/;"	v
test_score_thresh	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            test_score_thresh=0.02,$/;"	v
test_score_thresh	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            test_score_thresh=0.02,$/;"	v
test_score_thresh	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            test_score_thresh=0.02,$/;"	v
test_script_access_fields	tests/structures/test_instances.py	/^    def test_script_access_fields(self):$/;"	m	class:TestInstances
test_script_cat	tests/structures/test_instances.py	/^    def test_script_cat(self):$/;"	m	class:TestInstances
test_script_getitem	tests/structures/test_instances.py	/^    def test_script_getitem(self):$/;"	m	class:TestInstances
test_script_has	tests/structures/test_instances.py	/^    def test_script_has(self):$/;"	m	class:TestInstances
test_script_init_args	tests/structures/test_instances.py	/^    def test_script_init_args(self):$/;"	m	class:TestInstances
test_script_len	tests/structures/test_instances.py	/^    def test_script_len(self):$/;"	m	class:TestInstances
test_script_new_fields	tests/structures/test_instances.py	/^    def test_script_new_fields(self):$/;"	m	class:TestInstances
test_script_to	tests/structures/test_instances.py	/^    def test_script_to(self):$/;"	m	class:TestInstances
test_scriptability	tests/modeling/test_matcher.py	/^    def test_scriptability(self):$/;"	m	class:TestMatcher
test_scriptability	tests/structures/test_boxes.py	/^    def test_scriptability(self):$/;"	m	class:TestBoxes
test_scriptability	tests/structures/test_rotated_boxes.py	/^    def test_scriptability(self):$/;"	m	class:TestRotatedBoxesStructure
test_scriptability_cpu	tests/modeling/test_roi_pooler.py	/^    def test_scriptability_cpu(self):$/;"	m	class:TestROIPooler
test_scriptability_gpu	tests/modeling/test_roi_pooler.py	/^    def test_scriptability_gpu(self):$/;"	m	class:TestROIPooler
test_scriptable_cpu	tests/layers/test_nms_rotated.py	/^    def test_scriptable_cpu(self):$/;"	m	class:TestScriptable
test_scriptable_cuda	tests/layers/test_nms_rotated.py	/^    def test_scriptable_cuda(self):$/;"	m	class:TestScriptable
test_separable_conv	tests/layers/test_blocks.py	/^    def test_separable_conv(self):$/;"	m	class:TestBlocks
test_setup_config	tests/test_engine.py	/^    def test_setup_config(self):$/;"	m	class:TestTrainer
test_setup_configs	projects/DensePose/tests/test_setup.py	/^    def test_setup_configs(self):$/;"	m	class:TestSetup
test_setup_evolution_configs	projects/DensePose/tests/test_setup.py	/^    def test_setup_evolution_configs(self):$/;"	m	class:TestSetup
test_setup_hrnet_configs	projects/DensePose/tests/test_setup.py	/^    def test_setup_hrnet_configs(self):$/;"	m	class:TestSetup
test_setup_quick_schedules_configs	projects/DensePose/tests/test_setup.py	/^    def test_setup_quick_schedules_configs(self):$/;"	m	class:TestSetup
test_simple_trainer	tests/test_engine.py	/^    def test_simple_trainer(self, device="cpu"):$/;"	m	class:TestTrainer
test_simple_trainer_cuda	tests/test_engine.py	/^    def test_simple_trainer_cuda(self):$/;"	m	class:TestTrainer
test_simple_trainer_reset_dataloader	tests/test_engine.py	/^    def test_simple_trainer_reset_dataloader(self, device="cpu"):$/;"	m	class:TestTrainer
test_single_write	tests/utils/test_tensorboardx.py	/^    def test_single_write(self) -> None:$/;"	m	class:TestTensorboardXWriter
test_small_input	tests/layers/test_deformable.py	/^    def test_small_input(self):$/;"	m	class:DeformableTest
test_swap_align2nat_gradcheck_cuda	projects/TensorMask/tests/test_swap_align2nat.py	/^    def test_swap_align2nat_gradcheck_cuda(self):$/;"	m	class:SwapAlign2NatTest
test_to	tests/structures/test_boxes.py	/^    def test_to(self):$/;"	m	class:TestBoxes
test_to_iterable	tests/data/test_sampler.py	/^    def test_to_iterable(self):$/;"	m	class:TestSamplerDeterministic
test_to_py	tests/config/test_lazy_config.py	/^    def test_to_py(self):$/;"	m	class:TestLazyPythonConfig
test_topk_per_image	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            test_topk_per_image=300,$/;"	v
test_topk_per_image	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            test_topk_per_image=300,$/;"	v
test_topk_per_image	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            test_topk_per_image=300,$/;"	v
test_training_sampler_seed	tests/data/test_sampler.py	/^    def test_training_sampler_seed(self):$/;"	m	class:TestSamplerDeterministic
test_transform_RLE	tests/data/test_detection_utils.py	/^    def test_transform_RLE(self):$/;"	m	class:TestTransformAnnotations
test_transform_RLE_resize	tests/data/test_detection_utils.py	/^    def test_transform_RLE_resize(self):$/;"	m	class:TestTransformAnnotations
test_transform_empty_annotation	tests/data/test_detection_utils.py	/^    def test_transform_empty_annotation(self):$/;"	m	class:TestTransformAnnotations
test_transform_simple_annotation	tests/data/test_detection_utils.py	/^    def test_transform_simple_annotation(self):$/;"	m	class:TestTransformAnnotations
test_uncompressed_RLE	tests/data/test_coco.py	/^    def test_uncompressed_RLE(self):$/;"	m	class:TestRLEToJson
test_unknown_category	tests/data/test_coco_evaluation.py	/^    def test_unknown_category(self):$/;"	m	class:TestCOCOeval
test_unused	tests/test_model_analysis.py	/^    def test_unused(self):$/;"	m	class:UnusedParamTest
test_update	tests/tracking/test_bbox_iou_tracker.py	/^    def test_update(self):$/;"	m	class:TestBBoxIOUTracker
test_update	tests/tracking/test_iou_weighted_hungarian_bbox_iou_tracker.py	/^    def test_update(self):$/;"	m	class:TestIOUWeightedHungarianBBoxIOUTracker
test_update	tests/tracking/test_vanilla_hungarian_bbox_iou_tracker.py	/^    def test_update(self):$/;"	m	class:TestVanillaHungarianBBoxIOUTracker
test_upgrade_downgrade_consistency	tests/config/test_yacs_config.py	/^    def test_upgrade_downgrade_consistency(self):$/;"	m	class:TestConfigVersioning
test_using_lazy_path	tests/data/test_dataset.py	/^    def test_using_lazy_path(self):$/;"	m	class:TestDatasetFromList
test_warmup_cosine	tests/test_scheduler.py	/^    def test_warmup_cosine(self):$/;"	m	class:TestScheduler
test_warmup_cosine_end_value	tests/test_scheduler.py	/^    def test_warmup_cosine_end_value(self):$/;"	m	class:TestScheduler
test_warmup_multistep	tests/test_scheduler.py	/^    def test_warmup_multistep(self):$/;"	m	class:TestScheduler
test_warmup_stepwithfixedgamma	tests/test_scheduler.py	/^    def test_warmup_stepwithfixedgamma(self):$/;"	m	class:TestScheduler
test_with_TTA	projects/DensePose/densepose/engine/trainer.py	/^    def test_with_TTA(cls, cfg: CfgNode, model):$/;"	m	class:Trainer
test_with_TTA	tools/train_net.py	/^    def test_with_TTA(cls, cfg, model):$/;"	m	class:Trainer
test_writer_hooks	tests/test_engine.py	/^    def test_writer_hooks(self):$/;"	m	class:TestTrainer
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_bear_4936.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_cat_5001.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_cat_7466.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_chimp_5029.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_cow_5002.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_dog_5002.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_dog_7466.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_elephant_5002.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_giraffe_5002.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_sheep_5004.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_smpl_27554.pkl",$/;"	v
texcoords	projects/DensePose/densepose/data/meshes/builtin.py	/^        texcoords="texcoords\/texcoords_zebra_5002.pkl",$/;"	v
texcoords	projects/DensePose/densepose/structures/mesh.py	/^    def texcoords(self):$/;"	m	class:Mesh
texinfo_documents	docs/conf.py	/^texinfo_documents = [$/;"	v
tfm_or_aug	projects/MViTv2/configs/common/coco_loader.py	/^                tfm_or_aug=L(T.AugmentationList)($/;"	v
thing_seg	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^        thing_seg = foreground_mask$/;"	v
thing_seg	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^        thing_seg = torch.zeros_like(sem_seg)$/;"	v
threshold	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^        threshold=threshold,$/;"	v
timeout	detectron2/engine/launch.py	/^            timeout=timeout,$/;"	v
to	detectron2/structures/boxes.py	/^    def to(self, device: torch.device):$/;"	m	class:Boxes
to	detectron2/structures/image_list.py	/^    def to(self, *args: Any, **kwargs: Any) -> "ImageList":$/;"	m	class:ImageList
to	detectron2/structures/instances.py	/^    def to(self, *args: Any, **kwargs: Any) -> "Instances":$/;"	m	class:Instances
to	detectron2/structures/keypoints.py	/^    def to(self, *args: Any, **kwargs: Any) -> "Keypoints":$/;"	m	class:Keypoints
to	detectron2/structures/masks.py	/^    def to(self, *args: Any, **kwargs: Any) -> "BitMasks":$/;"	m	class:BitMasks
to	detectron2/structures/masks.py	/^    def to(self, *args: Any, **kwargs: Any) -> "PolygonMasks":$/;"	m	class:PolygonMasks
to	detectron2/structures/masks.py	/^    def to(self, device: torch.device) -> "ROIMasks":$/;"	m	class:ROIMasks
to	detectron2/structures/rotated_boxes.py	/^    def to(self, device: torch.device):$/;"	m	class:RotatedBoxes
to	projects/DensePose/densepose/structures/chart.py	/^    def to(self, device: torch.device):$/;"	m	class:DensePoseChartPredictorOutput
to	projects/DensePose/densepose/structures/chart_result.py	/^    def to(self, device: torch.device):$/;"	m	class:DensePoseChartResult
to	projects/DensePose/densepose/structures/chart_result.py	/^    def to(self, device: torch.device):$/;"	m	class:DensePoseChartResultQuantized
to	projects/DensePose/densepose/structures/chart_result.py	/^    def to(self, device: torch.device):$/;"	m	class:DensePoseChartResultWithConfidences
to	projects/DensePose/densepose/structures/cse.py	/^    def to(self, device: torch.device):$/;"	m	class:DensePoseEmbeddingPredictorOutput
to	projects/DensePose/densepose/structures/data_relative.py	/^    def to(self, device):$/;"	m	class:DensePoseDataRelative
to	projects/DensePose/densepose/structures/list.py	/^    def to(self, device):$/;"	m	class:DensePoseList
to	projects/DensePose/densepose/structures/mesh.py	/^    def to(self, device: torch.device):$/;"	m	class:Mesh
to	projects/DensePose/densepose/structures/transform_data.py	/^    def to(self, device: torch.device, copy: bool = False) -> "DensePoseTransformData":$/;"	m	class:DensePoseTransformData
to_bitmasks	detectron2/structures/masks.py	/^    def to_bitmasks(self, boxes: torch.Tensor, height, width, threshold=0.5):$/;"	m	class:ROIMasks
to_d2_instances_list	detectron2/export/c10.py	/^    def to_d2_instances_list(instances_list):$/;"	m	class:InstancesList
to_device	detectron2/export/shared.py	/^def to_device(t, device_str):$/;"	f
to_device_if_tensor	projects/DensePose/densepose/structures/chart_confidence.py	/^        def to_device_if_tensor(var: Any):$/;"	f	function:decorate_predictor_output_class_with_confidences.PredictorOutput_to
to_device_if_tensor	projects/DensePose/densepose/structures/chart_result.py	/^        def to_device_if_tensor(var: Any):$/;"	f	function:DensePoseChartResultWithConfidences.to
to_device_if_tensor	projects/DensePose/densepose/structures/cse_confidence.py	/^        def to_device_if_tensor(var: Any):$/;"	f	function:decorate_cse_predictor_output_class_with_confidences.PredictorOutput_to
to_heatmap	detectron2/structures/keypoints.py	/^    def to_heatmap(self, boxes: torch.Tensor, heatmap_size: int) -> torch.Tensor:$/;"	m	class:Keypoints
to_imagelist	tests/structures/test_imagelist.py	/^        def to_imagelist(tensors: Sequence[torch.Tensor]):$/;"	f	function:TestImageList.test_imagelist_padding_tracing
to_py	detectron2/config/lazy.py	/^    def to_py(cfg, prefix: str = "cfg."):$/;"	m	class:LazyConfig
todo_include_todos	docs/conf.py	/^todo_include_todos = True$/;"	v
top_block	configs/common/models/mask_rcnn_fpn.py	/^        top_block=L(LastLevelMaxPool)(),$/;"	v
top_block	configs/common/models/mask_rcnn_vitdet.py	/^    top_block=L(LastLevelMaxPool)(),$/;"	v
top_block	configs/common/models/retinanet.py	/^        top_block=L(LastLevelP6P7)(in_channels=2048, out_channels="${..out_channels}"),$/;"	v
top_k	projects/Panoptic-DeepLab/panoptic_deeplab/post_processing.py	/^        top_k=top_k,$/;"	v
torch_ver	setup.py	/^torch_ver = [int(x) for x in torch.__version__.split(".")[:2]]$/;"	v
total	detectron2/evaluation/evaluator.py	/^    total = len(data_loader)  # inference data loader must have a fixed length$/;"	v
total_batch_size	configs/common/data/coco.py	/^    total_batch_size=16,$/;"	v
total_batch_size	projects/MViTv2/configs/common/coco_loader.py	/^    total_batch_size=16,$/;"	v
total_compute_time	detectron2/evaluation/evaluator.py	/^                total_compute_time = 0$/;"	v
total_compute_time	detectron2/evaluation/evaluator.py	/^    total_compute_time = 0$/;"	v
total_compute_time_str	detectron2/evaluation/evaluator.py	/^    total_compute_time_str = str(datetime.timedelta(seconds=int(total_compute_time)))$/;"	v
total_data_time	detectron2/evaluation/evaluator.py	/^                total_data_time = 0$/;"	v
total_data_time	detectron2/evaluation/evaluator.py	/^    total_data_time = 0$/;"	v
total_eval_time	detectron2/evaluation/evaluator.py	/^                total_eval_time = 0$/;"	v
total_eval_time	detectron2/evaluation/evaluator.py	/^    total_eval_time = 0$/;"	v
total_num_anns	detectron2/data/datasets/coco.py	/^    total_num_anns = len(coco_api.anns)$/;"	v
total_num_valid_anns	detectron2/data/datasets/coco.py	/^    total_num_valid_anns = sum([len(x) for x in anns])$/;"	v
total_seconds_per_iter	detectron2/evaluation/evaluator.py	/^            total_seconds_per_iter = (time.perf_counter() - start_time) \/ iters_after_start$/;"	v
total_time	detectron2/evaluation/evaluator.py	/^    total_time = time.perf_counter() - start_time$/;"	v
total_time_str	detectron2/evaluation/evaluator.py	/^    total_time_str = str(datetime.timedelta(seconds=total_time))$/;"	v
traced	tests/modeling/test_roi_heads.py	/^            traced = torch.jit.trace(model, gen_inputs(302, 208, 20))$/;"	v	class:ROIHeadsTest.test_PointRend_mask_head_tracing.Wrap
tracing_current_exists	detectron2/utils/tracing.py	/^    tracing_current_exists = False$/;"	v
tracing_current_exists	detectron2/utils/tracing.py	/^    tracing_current_exists = True$/;"	v
tracing_legacy_exists	detectron2/utils/tracing.py	/^    tracing_legacy_exists = False$/;"	v
tracing_legacy_exists	detectron2/utils/tracing.py	/^    tracing_legacy_exists = True$/;"	v
train	configs/Misc/torchvision_imagenet_R_50.py	/^train = get_config("common\/train.py").train$/;"	v
train	configs/common/train.py	/^train = dict($/;"	v
train	detectron2/engine/defaults.py	/^    def train(self):$/;"	m	class:DefaultTrainer
train	detectron2/engine/train_loop.py	/^    def train(self, start_iter: int, max_iter: int):$/;"	m	class:TrainerBase
train	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^train = model_zoo.get_config("common\/train.py").train$/;"	v
train	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead.py	/^train = get_config("common\/train.py").train$/;"	v
train	projects/Rethinking-BatchNorm/configs/retinanet_SyncBNhead.py	/^train = get_config("common\/train.py").train$/;"	v
train	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^train = model_zoo.get_config("common\/train.py").train$/;"	v
train	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^train = model_zoo.get_config("common\/train.py").train$/;"	v
train	projects/ViTDet/configs/COCO/mask_rcnn_vitdet_b_100ep.py	/^train = model_zoo.get_config("common\/train.py").train$/;"	v
train	tools/lightning_train_net.py	/^def train(cfg, args):$/;"	f
train_cfg	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^        train_cfg=dict($/;"	v
train_dataloader	tools/lightning_train_net.py	/^    def train_dataloader(self):$/;"	m	class:DataModule
training	configs/Misc/torchvision_imagenet_R_50.py	/^    training=False,$/;"	v
training	configs/Misc/torchvision_imagenet_R_50.py	/^    training=True,$/;"	v	class:ClassificationAcc
training_epoch_end	tools/lightning_train_net.py	/^    def training_epoch_end(self, training_step_outputs):$/;"	m	class:TrainingModule
training_step	tools/lightning_train_net.py	/^    def training_step(self, batch, batch_idx):$/;"	m	class:TrainingModule
training_step_end	tools/lightning_train_net.py	/^    def training_step_end(self, training_step_outpus):$/;"	m	class:TrainingModule
transform	detectron2/data/transforms/augmentation.py	/^    def transform(self, tfm: Transform) -> None:$/;"	m	class:AugInput
transform_instance_annotations	detectron2/data/detection_utils.py	/^def transform_instance_annotations($/;"	f
transform_instance_annotations	projects/PointSup/point_sup/detection_utils.py	/^def transform_instance_annotations($/;"	f
transform_keypoint_annotations	detectron2/data/detection_utils.py	/^def transform_keypoint_annotations(keypoints, transforms, image_size, keypoint_hflip_indices=None):$/;"	f
transform_proposals	detectron2/data/detection_utils.py	/^def transform_proposals(dataset_dict, image_shape, transforms, *, proposal_topk, min_box_size=0):$/;"	f
trivial_batch_collator	detectron2/data/build.py	/^def trivial_batch_collator(batch):$/;"	f
ts_model	tests/test_export_torchscript.py	/^            ts_model = torch.jit.trace(model, (torch.rand(2, 3, 224, 224),))$/;"	v	class:TestTorchscriptUtils.test_dump_IR_tracing.Mod
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    type="DeltaXYWHBBoxCoder",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    type="MaxIoUAssigner",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                    type="RandomSampler",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                type="AnchorGenerator",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                type="DeltaXYWHBBoxCoder",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                type="FCNMaskHead",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                type="Shared2FCBBoxHead",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^                type="SingleRoIExtractor",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            type="RPNHead",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            type="ResNet",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^            type="StandardRoIHead",$/;"	v
type	configs/Misc/mmdet_mask_rcnn_R_50_FPN_1x.py	/^        type="MaskRCNN",$/;"	v
type	tools/analyze_model.py	/^        type=int,$/;"	v
typecheck_hook	tests/modeling/test_model_e2e.py	/^def typecheck_hook(model, *, in_dtype=None, out_dtype=None):$/;"	f
uncompressed_rle	tests/data/test_coco.py	/^def uncompressed_rle(mask):$/;"	f
union	projects/TensorMask/tensormask/arch.py	/^    union = cat([lt, rb], dim=2)  # [N,M,4]$/;"	v
unpatch_roi_heads	detectron2/export/caffe2_patch.py	/^    def unpatch_roi_heads(self):$/;"	m	class:ROIHeadsPatcher
unregister_custom_op_onnx_export	detectron2/utils/testing.py	/^def unregister_custom_op_onnx_export(opname: str, opset_version: int, min_version: str) -> None:$/;"	f
update	detectron2/tracking/base_tracker.py	/^    def update(self, predictions: Instances) -> Instances:$/;"	m	class:BaseTracker
update	detectron2/tracking/bbox_iou_tracker.py	/^    def update(self, instances: Instances) -> Instances:$/;"	m	class:BBoxIOUTracker
update	detectron2/tracking/hungarian_tracker.py	/^    def update(self, instances: Instances) -> Instances:$/;"	m	class:BaseHungarianTracker
update_stats	detectron2/engine/hooks.py	/^    def update_stats(self):$/;"	m	class:PreciseBN
update_weight	detectron2/modeling/meta_arch/panoptic_fpn.py	/^            def update_weight(x):$/;"	f	function:PanopticFPN.from_config
upgrade	detectron2/config/compat.py	/^    def upgrade(cls, cfg: CN) -> None:$/;"	m	class:ConverterV2
upgrade	detectron2/config/compat.py	/^    def upgrade(cls, cfg: CN) -> None:$/;"	m	class:_RenameConverter
upgrade_config	detectron2/config/compat.py	/^def upgrade_config(cfg: CN, to_version: Optional[int] = None) -> CN:$/;"	f
upsample_filt	detectron2/export/shared.py	/^    def upsample_filt(size):$/;"	f	function:BilinearInterpolation
url	projects/DensePose/setup.py	/^    url="https:\/\/github.com\/facebookresearch\/detectron2\/tree\/main\/projects\/DensePose",$/;"	v
url	setup.py	/^    url="https:\/\/github.com\/facebookresearch\/detectron2",$/;"	v
use_fed_loss	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            use_fed_loss=True,$/;"	v
use_fed_loss	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            use_fed_loss=True,$/;"	v
use_fed_loss	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            use_fed_loss=True,$/;"	v
use_instance_mask	configs/common/data/coco.py	/^        use_instance_mask=True,$/;"	v
use_instance_mask	configs/common/data/coco_keypoint.py	/^    use_instance_mask=False,$/;"	v
use_instance_mask	projects/MViTv2/configs/common/coco_loader.py	/^        use_instance_mask=True,$/;"	v
use_keypoint	configs/common/data/coco_keypoint.py	/^    use_keypoint=True,$/;"	v
use_rel_pos	configs/common/models/mask_rcnn_vitdet.py	/^        use_rel_pos=True,$/;"	v
use_sigmoid_ce	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_b_100ep.py	/^            use_sigmoid_ce=True,$/;"	v
use_sigmoid_ce	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_h_100ep.py	/^            use_sigmoid_ce=True,$/;"	v
use_sigmoid_ce	projects/ViTDet/configs/LVIS/cascade_mask_rcnn_vitdet_l_100ep.py	/^            use_sigmoid_ce=True,$/;"	v
val_dataloader	tools/lightning_train_net.py	/^    def val_dataloader(self):$/;"	m	class:DataModule
valid	detectron2/data/build.py	/^    def valid(anns):$/;"	f	function:filter_images_with_only_crowd_annotations
validate_annotation	projects/DensePose/densepose/structures/data_relative.py	/^    def validate_annotation(annotation):$/;"	m	class:DensePoseDataRelative
validation_epoch_end	tools/lightning_train_net.py	/^    def validation_epoch_end(self, _outputs):$/;"	m	class:TrainingModule
validation_step	tools/lightning_train_net.py	/^    def validation_step(self, batch, batch_idx: int, dataloader_idx: int = 0) -> None:$/;"	m	class:TrainingModule
values	configs/new_baselines/mask_rcnn_R_50_FPN_100ep_LSJ.py	/^        values=[1.0, 0.1, 0.01],$/;"	v
values	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_l_in21k_lsj_50ep.py	/^        values=[1.0, 0.1, 0.01],$/;"	v
values	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^        values=[1.0, 0.1, 0.01],$/;"	v
values	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^        values=[1.0, 0.1, 0.01],$/;"	v
values	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_h_in21k_36ep.py	/^        values=[1.0, 0.1, 0.01],$/;"	v
values	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^        values=[1.0, 0.1, 0.01],$/;"	v
values	projects/ViTDet/configs/COCO/mask_rcnn_vitdet_b_100ep.py	/^        values=[1.0, 0.1, 0.01],$/;"	v
verbosity_to_level	projects/DensePose/densepose/utils/logger.py	/^def verbosity_to_level(verbosity) -> int:$/;"	f
verify_results	detectron2/evaluation/testing.py	/^def verify_results(cfg, results):$/;"	f
verify_rpn	tests/modeling/test_rpn.py	/^    def verify_rpn(self, conv_dims, expected_conv_dims):$/;"	m	class:RPNTest
version	docs/conf.py	/^version = detectron2.__version__$/;"	v
version	projects/DensePose/setup.py	/^    version=get_detectron2_current_version(),$/;"	v
version	projects/TensorMask/setup.py	/^    version="0.1",$/;"	v
version	setup.py	/^    version=get_version(),$/;"	v
vertices	projects/DensePose/densepose/structures/mesh.py	/^    def vertices(self):$/;"	m	class:Mesh
video_list_from_file	projects/DensePose/densepose/data/video/video_keyframe_dataset.py	/^def video_list_from_file(video_list_fpath: str, base_path: Optional[str] = None):$/;"	f
vis	detectron2/data/datasets/coco_panoptic.py	/^        vis = visualizer.draw_dataset_dict(d)$/;"	v
visible_keypoints_in_image	detectron2/data/build.py	/^    def visible_keypoints_in_image(dic):$/;"	f	function:filter_images_with_few_keypoints
visualize	projects/DensePose/densepose/vis/base.py	/^    def visualize(self, image_bgr, bbox_xywh, color=None, thickness=None):$/;"	m	class:RectangleVisualizer
visualize	projects/DensePose/densepose/vis/base.py	/^    def visualize(self, image_bgr, data):$/;"	m	class:CompoundVisualizer
visualize	projects/DensePose/densepose/vis/base.py	/^    def visualize(self, image_bgr, mask, matrix, bbox_xywh):$/;"	m	class:MatrixVisualizer
visualize	projects/DensePose/densepose/vis/base.py	/^    def visualize(self, image_bgr, pts_xy, colors_bgr=None, rs=None):$/;"	m	class:PointsVisualizer
visualize	projects/DensePose/densepose/vis/base.py	/^    def visualize(self, image_bgr, txt, topleft_xy):$/;"	m	class:TextVisualizer
visualize	projects/DensePose/densepose/vis/bounding_box.py	/^    def visualize(self, image_bgr, boxes_xywh):$/;"	m	class:BoundingBoxVisualizer
visualize	projects/DensePose/densepose/vis/bounding_box.py	/^    def visualize(self, image_bgr, scored_bboxes):$/;"	m	class:ScoredBoundingBoxVisualizer
visualize	projects/DensePose/densepose/vis/densepose_data_points.py	/^    def visualize($/;"	m	class:DensePoseDataCoarseSegmentationVisualizer
visualize	projects/DensePose/densepose/vis/densepose_data_points.py	/^    def visualize($/;"	m	class:DensePoseDataPointsVisualizer
visualize	projects/DensePose/densepose/vis/densepose_outputs_iuv.py	/^    def visualize($/;"	m	class:DensePoseOutputsVisualizer
visualize	projects/DensePose/densepose/vis/densepose_outputs_vertex.py	/^    def visualize($/;"	m	class:DensePoseOutputsTextureVisualizer
visualize	projects/DensePose/densepose/vis/densepose_outputs_vertex.py	/^    def visualize($/;"	m	class:DensePoseOutputsVertexVisualizer
visualize	projects/DensePose/densepose/vis/densepose_results.py	/^    def visualize($/;"	m	class:DensePoseResultsVisualizer
visualize	projects/DensePose/densepose/vis/densepose_results_textures.py	/^    def visualize($/;"	m	class:DensePoseResultsVisualizerWithTexture
visualize_iuv_arr	projects/DensePose/densepose/vis/densepose_results.py	/^    def visualize_iuv_arr(self, context, iuv_arr: np.ndarray, bbox_xywh) -> None:$/;"	m	class:DensePoseMaskedColormapResultsVisualizer
visualize_iuv_arr	projects/DensePose/densepose/vis/densepose_results.py	/^    def visualize_iuv_arr(self, context, iuv_arr: np.ndarray, bbox_xywh) -> None:$/;"	m	class:DensePoseResultsVisualizer
visualize_iuv_arr	projects/DensePose/densepose/vis/densepose_results.py	/^    def visualize_iuv_arr(self, context, iuv_arr: np.ndarray, bbox_xywh: Boxes) -> None:$/;"	m	class:DensePoseResultsCustomContourVisualizer
visualize_iuv_arr	projects/DensePose/densepose/vis/densepose_results.py	/^    def visualize_iuv_arr(self, context, iuv_arr: np.ndarray, bbox_xywh: Boxes) -> None:$/;"	m	class:DensePoseResultsMplContourVisualizer
visualize_training	detectron2/modeling/meta_arch/dense_detector.py	/^    def visualize_training(self, batched_inputs, results):$/;"	m	class:DenseDetector
visualize_training	detectron2/modeling/meta_arch/rcnn.py	/^    def visualize_training(self, batched_inputs, proposals):$/;"	m	class:GeneralizedRCNN
visualizer	detectron2/data/datasets/coco_panoptic.py	/^        visualizer = Visualizer(img, metadata=meta)$/;"	v
voc_ap	detectron2/evaluation/pascal_voc_evaluation.py	/^def voc_ap(rec, prec, use_07_metric=False):$/;"	f
voc_eval	detectron2/evaluation/pascal_voc_evaluation.py	/^def voc_eval(detpath, annopath, imagesetfile, classname, ovthresh=0.5, use_07_metric=False):$/;"	f
w_0	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    w_0=96,$/;"	v
w_0	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    w_0=96,$/;"	v
w_0	configs/new_baselines/mask_rcnn_regnetx_4gf_dds_FPN_100ep_LSJ.py	/^    w_0=96,$/;"	v
w_0	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    w_0=96,$/;"	v
w_a	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    w_a=38.65,$/;"	v
w_a	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    w_a=31.41,$/;"	v
w_a	configs/new_baselines/mask_rcnn_regnetx_4gf_dds_FPN_100ep_LSJ.py	/^    w_a=38.65,$/;"	v
w_a	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    w_a=31.41,$/;"	v
w_m	configs/COCO-InstanceSegmentation/mask_rcnn_regnetx_4gf_dds_fpn_1x.py	/^    w_m=2.43,$/;"	v
w_m	configs/COCO-InstanceSegmentation/mask_rcnn_regnety_4gf_dds_fpn_1x.py	/^    w_m=2.24,$/;"	v
w_m	configs/new_baselines/mask_rcnn_regnetx_4gf_dds_FPN_100ep_LSJ.py	/^    w_m=2.43,$/;"	v
w_m	configs/new_baselines/mask_rcnn_regnety_4gf_dds_FPN_100ep_LSJ.py	/^    w_m=2.24,$/;"	v
warmup_factor	configs/Misc/torchvision_imagenet_R_50.py	/^    warmup_factor=0.1,$/;"	v
warmup_factor	configs/new_baselines/mask_rcnn_R_50_FPN_100ep_LSJ.py	/^    warmup_factor=0.067,$/;"	v
warmup_factor	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_l_in21k_lsj_50ep.py	/^    warmup_factor=0.001,$/;"	v
warmup_factor	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    warmup_factor=0.001,$/;"	v
warmup_factor	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    warmup_factor=0.001,$/;"	v
warmup_factor	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_h_in21k_36ep.py	/^    warmup_factor=0.001,$/;"	v
warmup_factor	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^    warmup_factor=0.001,$/;"	v
warmup_factor	projects/ViTDet/configs/COCO/mask_rcnn_vitdet_b_100ep.py	/^    warmup_factor=0.001,$/;"	v
warmup_length	configs/Misc/torchvision_imagenet_R_50.py	/^    warmup_length=1 \/ 100,$/;"	v
warmup_length	configs/new_baselines/mask_rcnn_R_50_FPN_100ep_LSJ.py	/^    warmup_length=500 \/ train.max_iter,$/;"	v
warmup_length	projects/MViTv2/configs/cascade_mask_rcnn_mvitv2_l_in21k_lsj_50ep.py	/^    warmup_length=250 \/ train.max_iter,$/;"	v
warmup_length	projects/MViTv2/configs/mask_rcnn_mvitv2_t_3x.py	/^    warmup_length=250 \/ train.max_iter,$/;"	v
warmup_length	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_b_in21k_100ep.py	/^    warmup_length=250 \/ train.max_iter,$/;"	v
warmup_length	projects/ViTDet/configs/COCO/cascade_mask_rcnn_mvitv2_h_in21k_36ep.py	/^    warmup_length=250 \/ train.max_iter,$/;"	v
warmup_length	projects/ViTDet/configs/COCO/cascade_mask_rcnn_swin_b_in21k_50ep.py	/^    warmup_length=250 \/ train.max_iter,$/;"	v
warmup_length	projects/ViTDet/configs/COCO/mask_rcnn_vitdet_b_100ep.py	/^    warmup_length=250 \/ train.max_iter,$/;"	v
weight_decay	configs/Misc/torchvision_imagenet_R_50.py	/^    weight_decay=1e-4,$/;"	v
weight_decay	configs/common/optim.py	/^    weight_decay=0.1,$/;"	v
weight_decay	configs/common/optim.py	/^    weight_decay=1e-4,$/;"	v
weight_decay_norm	configs/common/optim.py	/^        weight_decay_norm=0.0$/;"	v
weight_decay_norm	configs/common/optim.py	/^        weight_decay_norm=0.0,$/;"	v
width	configs/common/models/mask_rcnn_c4.py	/^                width="${...pooler.output_size}",$/;"	v
window_block_indexes	configs/common/models/mask_rcnn_vitdet.py	/^        window_block_indexes=[$/;"	v
window_partition	detectron2/modeling/backbone/swin.py	/^def window_partition(x, window_size):$/;"	f
window_partition	detectron2/modeling/backbone/utils.py	/^def window_partition(x, window_size):$/;"	f
window_reverse	detectron2/modeling/backbone/swin.py	/^def window_reverse(windows, window_size, H, W):$/;"	f
window_size	configs/common/models/mask_rcnn_vitdet.py	/^        window_size=14,$/;"	v
window_unpartition	detectron2/modeling/backbone/utils.py	/^def window_unpartition(windows, window_size, pad_hw, hw):$/;"	f
worker_init_fn	detectron2/data/build.py	/^            worker_init_fn=worker_init_reset_seed,$/;"	v
worker_init_reset_seed	detectron2/data/build.py	/^def worker_init_reset_seed(worker_id):$/;"	f
world_size	detectron2/data/build.py	/^        world_size = get_world_size()$/;"	v
world_size	detectron2/engine/launch.py	/^            world_size=world_size,$/;"	v
world_size	detectron2/engine/launch.py	/^    world_size = num_machines * num_gpus_per_machine$/;"	v
wrap_shuffle	projects/Rethinking-BatchNorm/configs/mask_rcnn_BNhead_shuffle.py	/^def wrap_shuffle(module_type, method):$/;"	f
wrapped	detectron2/config/config.py	/^            def wrapped(*args, **kwargs):$/;"	f	function:configurable.wrapper
wrapped	detectron2/config/config.py	/^        def wrapped(self, *args, **kwargs):$/;"	f	function:configurable
wrapped	detectron2/utils/memory.py	/^    def wrapped(*args, **kwargs):$/;"	f	function:retry_if_cuda_oom
wrapped_loss_func	detectron2/layers/wrappers.py	/^    def wrapped_loss_func(input, target, *, reduction="mean", **kwargs):$/;"	f	function:empty_input_loss_func_wrapper
wrapper	detectron2/config/config.py	/^        def wrapper(orig_func):$/;"	f	function:configurable
wrapper	detectron2/utils/testing.py	/^        def wrapper(self):$/;"	f	function:skipIfUnsupportedMinOpsetVersion.skip_dec
wrapper	projects/DensePose/densepose/converters/base.py	/^        def wrapper(converter: Any) -> Any:$/;"	f	function:BaseConverter.register
write	detectron2/utils/events.py	/^    def write(self):$/;"	m	class:CommonMetricPrinter
write	detectron2/utils/events.py	/^    def write(self):$/;"	m	class:EventWriter
write	detectron2/utils/events.py	/^    def write(self):$/;"	m	class:JSONWriter
write	detectron2/utils/events.py	/^    def write(self):$/;"	m	class:TensorboardXWriter
write	projects/DensePose/densepose/engine/trainer.py	/^    def write(self):$/;"	m	class:SampleCountMetricPrinter
write_metrics	detectron2/engine/train_loop.py	/^    def write_metrics($/;"	m	class:SimpleTrainer
x	tests/config/dir1/load_rel.py	/^x = LazyConfig.load_rel("dir1_a.py", "dir1a_dict")$/;"	v
x	tests/structures/test_instances.py	/^            x = NewInstances((3, 4))$/;"	v	class:TestInstances.test_script_new_fields.g2
x	tests/structures/test_instances.py	/^            x = new_instance(image_shape)$/;"	v	class:TestInstances.test_script_has.f
x	tests/structures/test_instances.py	/^            x = new_instance(image_shape)$/;"	v	class:TestInstances.test_script_len.g
x	tests/structures/test_instances.py	/^            x = new_instance(image_shape)$/;"	v	class:TestInstances.test_script_to.f
